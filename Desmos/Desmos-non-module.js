/**
 * this is a desmos that do not use module js.
 * However, the initialize takes time,
 * so that the desmos will not prepared at once
 * Therefore, we use a proxy to ensure that the executing will happen
 * only when the desmos is ready.
 * 
 * And you can access modified des by Desmos, 
 * and the original des by Desmos.desmos 
 */
function main() {
  let global = window || globalThis || this || {};
  var isReady = false;
  var exec_queue = [];
  var desmos_timeout = null;
  var desmos = {};
  function clear_desmos_delay(){
    exec_queue.forEach((h)=>{
      h()
    });
    exec_queue.length = 0;
    desmos_timeout = null;
  }
  function set_desmos_delay(){
    desmos_timeout = setTimeout(()=>{
      if(!isReady){
        return set_desmos_delay();
      }
      clear_desmos_delay();
    },isReady?0:500);
  }
  function desmos_delay(handler){
    exec_queue.push(handler);
    if(!desmos_timeout){
      set_desmos_delay()
    }
  }
  global.Desmos = new Proxy({desmos: desmos, delay: desmos_delay}, {
    get: function(target, prop) {
      if(prop==='delay'){
        return target.delay;
      }else if(prop==='desmos'){
        return desmos;
      }
      if(target.desmos && isReady){
        // prop 是访问的属性名称
        return target.desmos[prop];
      }
      // not ready.
      console.warn('not ready');
      return {};
    }
  });

  fetch('./Desmos-defines.js')
      .then((r) => r.text())
      .then((desmos_script2) => {
        var desmosEnabledFeatures = {
          'GraphingCalculator': true,
          'FourFunctionCalculator': true,
          'ScientificCalculator': true,
          'GeometryCalculator': true
        };
        var desmosVersion = 'v1.5';
        var desmosCommit = 'aab3bcacf3c8435539d682c942dca9719486bcad';


        var elt = document.createElement('style');
        document.getElementsByTagName('head')[0].appendChild(elt);

        var _Desmos = desmos;

        var module = undefined;
        var exports = undefined;
        var Desmos = _Desmos;
        if (!Desmos.config) Desmos.config = {};

        if (typeof desmosEnabledFeatures === 'object')
          Desmos.enabledFeatures = desmosEnabledFeatures;
        if (typeof desmosLocales === 'object') Desmos.locales = desmosLocales;
        if (typeof desmosCommit === 'string') Desmos.commit = desmosCommit;
        {
          var e, t, r;
          (function() {
            var n;
            function i(e, t) {
              return x.call(e, t)
            }
            function o(e, t) {
              var r, n, i, o, s, a, l, c, u, d,
                  p = t && t.split('/'), h = v.map, f = h && h['*'] || {};
              if (e && '.' === e.charAt(0))
                if (t) {
                  for (p = p.slice(0, p.length - 1), e = p.concat(e.split('/')),
                      c = 0;
                       c < e.length; c += 1)
                    if ('.' === (d = e[c]))
                      e.splice(c, 1), c -= 1;
                    else if ('..' === d) {
                      if (1 === c && ('..' === e[2] || '..' === e[0])) break;
                      c > 0 && (e.splice(c - 1, 2), c -= 2)
                    }
                  e = e.join('/')
                } else
                  0 === e.indexOf('./') && (e = e.substring(2));
              if ((p || f) && h) {
                for (r = e.split('/'), c = r.length; c > 0; c -= 1) {
                  if (n = r.slice(0, c).join('/'), p)
                    for (u = p.length; u > 0; u -= 1)
                      if ((i = h[p.slice(0, u).join('/')]) && (i = i[n])) {
                        o = i, s = c;
                        break
                      }
                  if (o) break;
                  !a && f && f[n] && (a = f[n], l = c)
                }
                !o && a && (o = a, s = l),
                    o && (r.splice(0, s, o), e = r.join('/'))
              }
              return e
            }
            function s(e, t) {
              return function() {
                return h.apply(n, w.call(arguments, 0).concat([e, t]))
              }
            }
            function a(e) {
              return function(t) {
                return o(t, e)
              }
            }
            function l(e) {
              return function(t) {
                m[e] = t
              }
            }
            function c(e) {
              if (i(y, e)) {
                var t = y[e];
                delete y[e], b[e] = !0, p.apply(n, t)
              }
              if (!i(m, e) && !i(b, e)) throw new Error('No ' + e);
              return m[e]
            }
            function u(e) {
              var t, r = e ? e.indexOf('!') : -1;
              return r > -1 &&
                         (t = e.substring(0, r),
                          e = e.substring(r + 1, e.length)),
                     [t, e]
            }
            function d(e) {
              return function() {
                return v && v.config && v.config[e] || {}
              }
            }
            var p, h, f, g, m = {}, y = {}, v = {}, b = {};
            var x = Object.prototype.hasOwnProperty, w = [].slice;
            f = function(e, t) {
              var r, n = u(e), i = n[0];
              return e = n[1], i && (i = o(i, t), r = c(i)),
                     i ? e = r && r.normalize ? r.normalize(e, a(t)) : o(e, t) :
                         (e = o(e, t), n = u(e), i = n[0], e = n[1],
                          i && (r = c(i))),
              {
                f: i ? i + '!' + e : e, n: e, pr: i, p: r
              }
            };
            g = {
              require: function(e) {
                return s(e)
              },
              exports: function(e) {
                var t = m[e];
                return void 0 !== t ? t : m[e] = {}
              },
              module: function(e) {
                return {
                  id: e, uri: '', exports: m[e], config: d(e)
                }
              }
            };
            p = function(e, t, r, o) {
              var a, u, d, p, h, v, x = [];
              if (o = o || e, 'function' == typeof r) {
                for (t = !t.length && r.length ?
                         ['require', 'exports', 'module'] :
                         t,
                    h = 0;
                     h < t.length; h += 1)
                  if (p = f(t[h], o), 'require' === (u = p.f))
                    x[h] = g.require(e);
                  else if ('exports' === u)
                    x[h] = g.exports(e), v = !0;
                  else if ('module' === u)
                    a = x[h] = g.module(e);
                  else if (i(m, u) || i(y, u) || i(b, u))
                    x[h] = c(u);
                  else {
                    if (!p.p) throw new Error(e + ' missing ' + u);
                    p.p.load(p.n, s(o, !0), l(u), {}), x[h] = m[u]
                  }
                d = r.apply(m[e], x),
                e &&
                    (a && a.exports !== n && a.exports !== m[e] ?
                         m[e] = a.exports :
                         d === n && v || (m[e] = d))
              } else
                e && (m[e] = r)
            };
            e = t = h = function(e, t, r, i, o) {
              return 'string' == typeof e ?
                  g[e] ? g[e](t) : c(f(e, t).f) :
                  (e.splice ||
                       (v = e, t.splice ? (e = t, t = r, r = null) : e = n),
                   t = t || function() {},
                   'function' == typeof r && (r = i, i = o),
                   i ? p(n, e, t, r) : setTimeout(function() {
                     p(n, e, t, r)
                   }, 4), h)
            };
            h.config = function(e) {
              return v = e, v.deps && h(v.deps, v.callback), h
            };
            r = function(e, t, r) {
              t.splice || (r = t, t = []),
                  i(m, e) || i(y, e) || (y[e] = [e, t, r])
            };
            r.amd = { jQuery: !0 }
          })();
          if ('undefined' != typeof ALMOND_OVERRIDES && ALMOND_OVERRIDES) {
            r = ALMOND_OVERRIDES.define || r;
            t = ALMOND_OVERRIDES.require || t;
            e = ALMOND_OVERRIDES.requirejs || e;
          }
          r('core/vendor/almond', function() {});
          r('ipad.ghostevents', ['require'], function(e) {
            function t(e) {
              n && o.evtInScope(e) &&
                  (e.stopPropagation(), e.stopImmediatePropagation())
            }
            function r(e) {
              n && o.evtInScope(e) &&
                  (e.preventDefault(), e.stopPropagation(),
                   e.stopImmediatePropagation())
            }
            var n = !1, i = null, o = {
              isGhostEvent: function(e) {
                return !1
              },
              evtInScope: function(e) {
                return !1
              }
            };
            return document.addEventListener(
                       'mousedown',
                       function(e) {
                         o.evtInScope(e) &&
                             (i = document.activeElement, n = o.isGhostEvent(e),
                              t(e))
                       },
                       !0),
                   document.addEventListener('mouseup', t, !0),
                   document.addEventListener(
                       'click',
                       function(e) {
                         r(e),
                             n && document.activeElement !== i &&
                             (document.activeElement &&
                                  document.activeElement.blur(),
                              i && i.focus()),
                             n = !1
                       },
                       !0),
                   document.addEventListener('focus', r, !0),
                   document.addEventListener('blur', r, !0), o
          });
          (function(e, t) {
            'object' == typeof module&& 'object' == typeof module.exports ?
                module.exports = e.document ?
                t(e, !0) :
                function(e) {
                  if (!e.document)
                    throw new Error('jQuery requires a window with a document');
                  return t(e)
                } :
                t(e)
          })('undefined' != typeof window ? window : this, function(e, t) {
            function n(e) {
              var t = !!e && 'length' in e && e.length, r = oe.type(e);
              return 'function' !== r && !oe.isWindow(e) &&
                  ('array' === r || 0 === t ||
                   'number' == typeof t && t > 0 && t - 1 in e)
            }
            function i(e, t, r) {
              if (oe.isFunction(t))
                return oe.grep(e, function(e, n) {
                  return !!t.call(e, n, e) !== r
                });
              if (t.nodeType)
                return oe.grep(e, function(e) {
                  return e === t !== r
                });
              if ('string' == typeof t) {
                if (ge.test(t)) return oe.filter(t, e, r);
                t = oe.filter(t, e)
              }
              return oe.grep(e, function(e) {
                return ee.call(t, e) > -1 !== r
              })
            }
            function o(e, t) {
              for (; (e = e[t]) && 1 !== e.nodeType;)
                ;
              return e
            }
            function s(e) {
              var t = {};
              return oe.each(e.match(xe) || [], function(e, r) {
                t[r] = !0
              }), t
            }
            function a() {
              $.removeEventListener('DOMContentLoaded', a),
                  e.removeEventListener('load', a), oe.ready()
            }
            function l() {
              this.expando = oe.expando + l.uid++
            }
            function c(e, t, r) {
              var n;
              if (void 0 === r && 1 === e.nodeType)
                if (n = 'data-' + t.replace(ke, '-$&').toLowerCase(),
                    'string' == typeof (r = e.getAttribute(n))) {
                  try {
                    r = 'true' === r ||
                        'false' !== r &&
                            ('null' === r      ? null :
                                 +r + '' === r ? +r :
                                 Ie.test(r)    ? oe.parseJSON(r) :
                                                 r)
                  } catch (e) {
                  }
                  Me.set(e, t, r)
                } else
                  r = void 0;
              return r
            }
            function u(e, t, r, n) {
              var i, o = 1, s = 20,
                     a = n ?
                  function() {
                    return n.cur()
                  } :
                  function() {
                    return oe.css(e, t, '')
                  },
                     l = a(), c = r && r[3] || (oe.cssNumber[t] ? '' : 'px'),
                     u = (oe.cssNumber[t] || 'px' !== c && +l) &&
                  Te.exec(oe.css(e, t));
              if (u && u[3] !== c) {
                c = c || u[3], r = r || [], u = +l || 1;
                do {
                  o = o || '.5', u /= o, oe.style(e, t, u + c)
                } while (o !== (o = a() / l) && 1 !== o && --s)
              }
              return r &&
                         (u = +u || +l || 0,
                          i = r[1] ? u + (r[1] + 1) * r[2] : +r[2],
                          n && (n.unit = c, n.start = u, n.end = i)),
                     i
            }
            function d(e, t) {
              var r = void 0 !== e.getElementsByTagName ?
                  e.getElementsByTagName(t || '*') :
                  void 0 !== e.querySelectorAll ? e.querySelectorAll(t || '*') :
                                                  [];
              return void 0 === t || t && oe.nodeName(e, t) ? oe.merge([e], r) :
                                                              r
            }
            function p(e, t) {
              for (var r = 0, n = e.length; r < n; r++)
                Se.set(e[r], 'globalEval', !t || Se.get(t[r], 'globalEval'))
            }
            function h(e, t, r, n, i) {
              for (var o, s, a, l, c, u, h = t.createDocumentFragment(), f = [],
                                         g = 0, m = e.length;
                   g < m; g++)
                if ((o = e[g]) || 0 === o)
                  if ('object' === oe.type(o))
                    oe.merge(f, o.nodeType ? [o] : o);
                  else if (qe.test(o)) {
                    for (s = s || h.appendChild(t.createElement('div')),
                        a = (De.exec(o) || ['', ''])[1].toLowerCase(),
                        l = Fe[a] || Fe._default,
                        s.innerHTML = l[1] + oe.htmlPrefilter(o) + l[2],
                        u = l[0];
                         u--;)
                      s = s.lastChild;
                    oe.merge(f, s.childNodes), s = h.firstChild,
                                               s.textContent = ''
                  } else
                    f.push(t.createTextNode(o));
              for (h.textContent = '', g = 0; o = f[g++];)
                if (n && oe.inArray(o, n) > -1)
                  i && i.push(o);
                else if (
                    c = oe.contains(o.ownerDocument, o),
                    s = d(h.appendChild(o), 'script'), c && p(s), r)
                  for (u = 0; o = s[u++];) Oe.test(o.type || '') && r.push(o);
              return h
            }
            function f() {
              return !0
            }
            function g() {
              return !1
            }
            function m() {
              try {
                return $.activeElement
              } catch (e) {
              }
            }
            function y(e, t, r, n, i, o) {
              var s, a;
              if ('object' == typeof t) {
                'string' != typeof r && (n = n || r, r = void 0);
                for (a in t) y(e, a, r, n, t[a], o);
                return e
              }
              if (null == n && null == i ? (i = r, n = r = void 0) :
                                           null == i &&
                          ('string' == typeof r ? (i = n, n = void 0) :
                                                  (i = n, n = r, r = void 0)),
                  !1 === i)
                i = g;
              else if (!i)
                return e;
              return 1 === o &&
                         (s = i,
                          i =
                              function(e) {
                                return oe().off(e), s.apply(this, arguments)
                              },
                          i.guid = s.guid || (s.guid = oe.guid++)),
                     e.each(function() {
                       oe.event.add(this, t, i, n, r)
                     })
            }
            function v(e, t) {
              return oe.nodeName(e, 'table') &&
                      oe.nodeName(11 !== t.nodeType ? t : t.firstChild, 'tr') ?
                  e.getElementsByTagName('tbody')[0] ||
                      e.appendChild(e.ownerDocument.createElement('tbody')) :
                  e
            }
            function b(e) {
              return e.type = (null !== e.getAttribute('type')) + '/' + e.type,
                     e
            }
            function x(e) {
              var t = ze.exec(e.type);
              return t ? e.type = t[1] : e.removeAttribute('type'), e
            }
            function w(e, t) {
              var r, n, i, o, s, a, l, c;
              if (1 === t.nodeType) {
                if (Se.hasData(e) &&
                    (o = Se.access(e), s = Se.set(t, o), c = o.events)) {
                  delete s.handle, s.events = {};
                  for (i in c)
                    for (r = 0, n = c[i].length; r < n; r++)
                      oe.event.add(t, i, c[i][r])
                }
                Me.hasData(e) &&
                    (a = Me.access(e), l = oe.extend({}, a), Me.set(t, l))
              }
            }
            function _(e, t) {
              var r = t.nodeName.toLowerCase();
              'input' === r && Ae.test(e.type) ?
                  t.checked = e.checked :
                  'input' !== r && 'textarea' !== r ||
                      (t.defaultValue = e.defaultValue)
            }
            function E(e, t, r, n) {
              t = Z.apply([], t);
              var i, o, s, a, l, c, u = 0, p = e.length, f = p - 1, g = t[0],
                                    m = oe.isFunction(g);
              if (m ||
                  p > 1 && 'string' == typeof g && !ie.checkClone && Ue.test(g))
                return e.each(function(i) {
                  var o = e.eq(i);
                  m && (t[0] = g.call(this, i, o.html())), E(o, t, r, n)
                });
              if (p &&
                  (i = h(t, e[0].ownerDocument, !1, e, n), o = i.firstChild,
                   1 === i.childNodes.length && (i = o), o || n)) {
                for (s = oe.map(d(i, 'script'), b), a = s.length; u < p; u++)
                  l = i,
                  u !== f &&
                      (l = oe.clone(l, !0, !0),
                       a && oe.merge(s, d(l, 'script'))),
                  r.call(e[u], l, u);
                if (a)
                  for (c = s[s.length - 1].ownerDocument, oe.map(s, x), u = 0;
                       u < a; u++)
                    l = s[u],
                    Oe.test(l.type || '') && !Se.access(l, 'globalEval') &&
                        oe.contains(c, l) &&
                        (l.src ? oe._evalUrl && oe._evalUrl(l.src) :
                                 oe.globalEval(l.textContent.replace(Ge, '')))
              }
              return e
            }
            function S(e, t, r) {
              for (var n, i = t ? oe.filter(t, e) : e, o = 0;
                   null != (n = i[o]); o++)
                r || 1 !== n.nodeType || oe.cleanData(d(n)),
                    n.parentNode &&
                    (r && oe.contains(n.ownerDocument, n) && p(d(n, 'script')),
                     n.parentNode.removeChild(n));
              return e
            }
            function M(e, t) {
              var r = oe(t.createElement(e)).appendTo(t.body),
                  n = oe.css(r[0], 'display');
              return r.detach(), n
            }
            function I(e) {
              var t = $, r = We[e];
              return r ||
                         (r = M(e, t),
                          'none' !== r && r ||
                              (Ke =
                                   (Ke ||
                                    oe('<iframe frameborder=\'0\' width=\'0\' height=\'0\'/>'))
                                       .appendTo(t.documentElement),
                               t = Ke[0].contentDocument, t.write(), t.close(),
                               r = M(e, t), Ke.detach()),
                          We[e] = r),
                     r
            }
            function k(e, t, r) {
              var n, i, o, s, a = e.style;
              return r = r || Xe(e),
                     s = r ? r.getPropertyValue(t) || r[t] : void 0,
                     '' !== s && void 0 !== s ||
                         oe.contains(e.ownerDocument, e) ||
                         (s = oe.style(e, t)),
                     r && !ie.pixelMarginRight() && Ye.test(s) && He.test(t) &&
                         (n = a.width, i = a.minWidth, o = a.maxWidth,
                          a.minWidth = a.maxWidth = a.width = s, s = r.width,
                          a.width = n, a.minWidth = i, a.maxWidth = o),
                     void 0 !== s ? s + '' : s
            }
            function C(e, t) {
              return {
                get: function() {
                  return e() ? void delete this.get :
                               (this.get = t).apply(this, arguments)
                }
              }
            }
            function T(e) {
              if (e in rt) return e;
              for (var t = e[0].toUpperCase() + e.slice(1), r = tt.length; r--;)
                if ((e = tt[r] + t) in rt) return e
            }
            function L(e, t, r) {
              var n = Te.exec(t);
              return n ? Math.max(0, n[2] - (r || 0)) + (n[3] || 'px') : t
            }
            function P(e, t, r, n, i) {
              for (var o = r === (n ? 'border' : 'content') ? 4 :
                       'width' === t                        ? 1 :
                                                              0,
                       s = 0;
                   o < 4; o += 2)
                'margin' === r && (s += oe.css(e, r + Le[o], !0, i)),
                    n ?
                    ('content' === r &&
                         (s -= oe.css(e, 'padding' + Le[o], !0, i)),
                     'margin' !== r &&
                         (s -= oe.css(e, 'border' + Le[o] + 'Width', !0, i))) :
                    (s += oe.css(e, 'padding' + Le[o], !0, i),
                     'padding' !== r &&
                         (s += oe.css(e, 'border' + Le[o] + 'Width', !0, i)));
              return s
            }
            function A(e, t, r) {
              var n = !0, i = 'width' === t ? e.offsetWidth : e.offsetHeight,
                  o = Xe(e), s = 'border-box' === oe.css(e, 'boxSizing', !1, o);
              if (i <= 0 || null == i) {
                if (i = k(e, t, o), (i < 0 || null == i) && (i = e.style[t]),
                    Ye.test(i))
                  return i;
                n = s && (ie.boxSizingReliable() || i === e.style[t]),
                i = parseFloat(i) || 0
              }
              return i + P(e, t, r || (s ? 'border' : 'content'), n, o) + 'px'
            }
            function D(e, t) {
              for (var r, n, i, o = [], s = 0, a = e.length; s < a; s++)
                n = e[s],
                n.style &&
                    (o[s] = Se.get(n, 'olddisplay'), r = n.style.display,
                     t ? (o[s] || 'none' !== r || (n.style.display = ''),
                          '' === n.style.display && Pe(n) &&
                              (o[s] =
                                   Se.access(n, 'olddisplay', I(n.nodeName)))) :
                         (i = Pe(n),
                          'none' === r && i ||
                              Se.set(
                                  n, 'olddisplay',
                                  i ? r : oe.css(n, 'display'))));
              for (s = 0; s < a; s++)
                n = e[s],
                n.style &&
                    (t && 'none' !== n.style.display &&
                         '' !== n.style.display ||
                     (n.style.display = t ? o[s] || '' : 'none'));
              return e
            }
            function O(e, t, r, n, i) {
              return new O.prototype.init(e, t, r, n, i)
            }
            function F() {
              return e.setTimeout(function() {
                nt = void 0
              }),
                     nt = oe.now()
            }
            function q(e, t) {
              var r, n = 0, i = {height: e};
              for (t = t ? 1 : 0; n < 4; n += 2 - t)
                r = Le[n], i['margin' + r] = i['padding' + r] = e;
              return t && (i.opacity = i.width = e), i
            }
            function N(e, t, r) {
              for (var n, i = (j.tweeners[t] || []).concat(j.tweeners['*']),
                          o = 0, s = i.length;
                   o < s; o++)
                if (n = i[o].call(r, t, e)) return n
            }
            function R(e, t, r) {
              var n, i, o, s, a, l, c, u = this, d = {}, p = e.style,
                                       h = e.nodeType && Pe(e),
                                       f = Se.get(e, 'fxshow');
              r.queue ||
                  (a = oe._queueHooks(e, 'fx'),
                   null == a.unqueued &&
                       (a.unqueued = 0, l = a.empty.fire,
                        a.empty.fire =
                            function() {
                              a.unqueued || l()
                            }),
                   a.unqueued++, u.always(function() {
                     u.always(function() {
                       a.unqueued--, oe.queue(e, 'fx').length || a.empty.fire()
                     })
                   })),
                  1 === e.nodeType && ('height' in t || 'width' in t) &&
                  (r.overflow = [p.overflow, p.overflowX, p.overflowY],
                   c = oe.css(e, 'display'),
                   'inline' ===
                           ('none' === c ?
                                Se.get(e, 'olddisplay') || I(e.nodeName) :
                                c) &&
                       'none' === oe.css(e, 'float') &&
                       (p.display = 'inline-block')),
                  r.overflow && (p.overflow = 'hidden', u.always(function() {
                    p.overflow = r.overflow[0], p.overflowX = r.overflow[1],
                    p.overflowY = r.overflow[2]
                  }));
              for (n in t)
                if (i = t[n], ot.exec(i)) {
                  if (delete t[n], o = o || 'toggle' === i,
                      i === (h ? 'hide' : 'show')) {
                    if ('show' !== i || !f || void 0 === f[n]) continue;
                    h = !0
                  }
                  d[n] = f && f[n] || oe.style(e, n)
                } else
                  c = void 0;
              if (oe.isEmptyObject(d))
                'inline' === ('none' === c ? I(e.nodeName) : c) &&
                    (p.display = c);
              else {
                f ? 'hidden' in f && (h = f.hidden) :
                    f = Se.access(e, 'fxshow', {}),
                    o && (f.hidden = !h), h ? oe(e).show() : u.done(function() {
                      oe(e).hide()
                    }),
                    u.done(function() {
                      var t;
                      Se.remove(e, 'fxshow');
                      for (t in d) oe.style(e, t, d[t])
                    });
                for (n in d)
                  s = N(h ? f[n] : 0, n, u),
                  n in f ||
                      (f[n] = s.start,
                       h &&
                           (s.end = s.start,
                            s.start = 'width' === n || 'height' === n ? 1 : 0))
              }
            }
            function B(e, t) {
              var r, n, i, o, s;
              for (r in e)
                if (n = oe.camelCase(r), i = t[n], o = e[r],
                    oe.isArray(o) && (i = o[1], o = e[r] = o[0]),
                    r !== n && (e[n] = o, delete e[r]),
                    (s = oe.cssHooks[n]) && 'expand' in s) {
                  o = s.expand(o), delete e[n];
                  for (r in o) r in e || (e[r] = o[r], t[r] = i)
                } else
                  t[n] = i
            }
            function j(e, t, r) {
              var n, i,
                  o = 0, s = j.prefilters.length,
                  a = oe.Deferred().always(function() {
                    delete l.elem
                  }),
                  l =
                      function() {
                    if (i) return !1;
                    for (var t = nt || F(),
                             r = Math.max(0, c.startTime + c.duration - t),
                             n = r / c.duration || 0, o = 1 - n, s = 0,
                             l = c.tweens.length;
                         s < l; s++)
                      c.tweens[s].run(o);
                    return a.notifyWith(e, [c, o, r]),
                           o < 1 && l ? r : (a.resolveWith(e, [c]), !1)
                  },
                  c = a.promise({
                    elem: e,
                    props: oe.extend({}, t),
                    opts: oe.extend(
                        !0, {specialEasing: {}, easing: oe.easing._default}, r),
                    originalProperties: t,
                    originalOptions: r,
                    startTime: nt || F(),
                    duration: r.duration,
                    tweens: [],
                    createTween: function(t, r) {
                      var n = oe.Tween(
                          e, c.opts, t, r,
                          c.opts.specialEasing[t] || c.opts.easing);
                      return c.tweens.push(n), n
                    },
                    stop: function(t) {
                      var r = 0, n = t ? c.tweens.length : 0;
                      if (i) return this;
                      for (i = !0; r < n; r++) c.tweens[r].run(1);
                      return t ? (a.notifyWith(e, [c, 1, 0]),
                                  a.resolveWith(e, [c, t])) :
                                 a.rejectWith(e, [c, t]),
                             this
                    }
                  }),
                  u = c.props;
              for (B(u, c.opts.specialEasing); o < s; o++)
                if (n = j.prefilters[o].call(c, e, u, c.opts))
                  return oe.isFunction(n.stop) &&
                             (oe._queueHooks(c.elem, c.opts.queue).stop =
                                  oe.proxy(n.stop, n)),
                         n;
              return oe.map(u, N, c),
                     oe.isFunction(c.opts.start) && c.opts.start.call(e, c),
                     oe.fx.timer(
                         oe.extend(l, {elem: e, anim: c, queue: c.opts.queue})),
                     c.progress(c.opts.progress)
                         .done(c.opts.done, c.opts.complete)
                         .fail(c.opts.fail)
                         .always(c.opts.always)
            }
            function V(e) {
              return e.getAttribute && e.getAttribute('class') || ''
            }
            function U(e) {
              return function(t, r) {
                'string' != typeof t && (r = t, t = '*');
                var n, i = 0, o = t.toLowerCase().match(xe) || [];
                if (oe.isFunction(r))
                  for (; n = o[i++];)
                    '+' === n[0] ? (n = n.slice(1) || '*',
                                    (e[n] = e[n] || []).unshift(r)) :
                                   (e[n] = e[n] || []).push(r)
              }
            }
            function z(e, t, r, n) {
              function i(a) {
                var l;
                return o[a] = !0, oe.each(e[a] || [], function(e, a) {
                  var c = a(t, r, n);
                  return 'string' != typeof c || s || o[c] ?
                      s ? !(l = c) : void 0 :
                      (t.dataTypes.unshift(c), i(c), !1)
                }), l
              }
              var o = {}, s = e === Mt;
              return i(t.dataTypes[0]) || !o['*'] && i('*')
            }
            function G(e, t) {
              var r, n, i = oe.ajaxSettings.flatOptions || {};
              for (r in t)
                void 0 !== t[r] && ((i[r] ? e : n || (n = {}))[r] = t[r]);
              return n && oe.extend(!0, e, n), e
            }
            function K(e, t, r) {
              for (var n, i, o, s, a = e.contents, l = e.dataTypes;
                   '*' === l[0];)
                l.shift(),
                    void 0 === n &&
                    (n = e.mimeType || t.getResponseHeader('Content-Type'));
              if (n)
                for (i in a)
                  if (a[i] && a[i].test(n)) {
                    l.unshift(i);
                    break
                  }
              if (l[0] in r)
                o = l[0];
              else {
                for (i in r) {
                  if (!l[0] || e.converters[i + ' ' + l[0]]) {
                    o = i;
                    break
                  }
                  s || (s = i)
                }
                o = o || s
              }
              if (o) return o !== l[0] && l.unshift(o), r[o]
            }
            function W(e, t, r, n) {
              var i, o, s, a, l, c = {}, u = e.dataTypes.slice();
              if (u[1])
                for (s in e.converters) c[s.toLowerCase()] = e.converters[s];
              for (o = u.shift(); o;)
                if (e.responseFields[o] && (r[e.responseFields[o]] = t),
                    !l && n && e.dataFilter &&
                        (t = e.dataFilter(t, e.dataType)),
                    l = o, o = u.shift())
                  if ('*' === o)
                    o = l;
                  else if ('*' !== l && l !== o) {
                    if (!(s = c[l + ' ' + o] || c['* ' + o]))
                      for (i in c)
                        if (a = i.split(' '),
                            a[1] === o &&
                                (s = c[l + ' ' + a[0]] || c['* ' + a[0]])) {
                          !0 === s ? s = c[i] :
                                     !0 !== c[i] && (o = a[0], u.unshift(a[1]));
                          break
                        }
                    if (!0 !== s)
                      if (s && e.throws)
                        t = s(t);
                      else
                        try {
                          t = s(t)
                        } catch (e) {
                          return {
                            state: 'parsererror',
                                error: s ?
                                e :
                                'No conversion from ' + l + ' to ' + o
                          }
                        }
                  }
              return {
                state: 'success', data: t
              }
            }
            function H(e, t, r, n) {
              var i;
              if (oe.isArray(t))
                oe.each(t, function(t, i) {
                  r || Tt.test(e) ?
                      n(e, i) :
                      H(e + '[' + ('object' == typeof i && null != i ? t : '') +
                            ']',
                        i, r, n)
                });
              else if (r || 'object' !== oe.type(t))
                n(e, t);
              else
                for (i in t) H(e + '[' + i + ']', t[i], r, n)
            }
            function Y(e) {
              return oe.isWindow(e) ? e : 9 === e.nodeType && e.defaultView
            }
            var X = [], $ = e.document, Q = X.slice, Z = X.concat, J = X.push,
                ee = X.indexOf, te = {}, re = te.toString,
                ne = te.hasOwnProperty, ie = {},
                oe =
                    function(e, t) {
                  return new oe.fn.init(e, t)
                },
                se = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ae = /^-ms-/,
                le = /-([\da-z])/gi, ce = function(e, t) {
                  return t.toUpperCase()
                };
            oe.fn = oe.prototype = {
              jquery: '2.2.4',
              constructor: oe,
              selector: '',
              length: 0,
              toArray: function() {
                return Q.call(this)
              },
              get: function(e) {
                return null != e ? e < 0 ? this[e + this.length] : this[e] :
                                   Q.call(this)
              },
              pushStack: function(e) {
                var t = oe.merge(this.constructor(), e);
                return t.prevObject = this, t.context = this.context, t
              },
              each: function(e) {
                return oe.each(this, e)
              },
              map: function(e) {
                return this.pushStack(oe.map(this, function(t, r) {
                  return e.call(t, r, t)
                }))
              },
              slice: function() {
                return this.pushStack(Q.apply(this, arguments))
              },
              first: function() {
                return this.eq(0)
              },
              last: function() {
                return this.eq(-1)
              },
              eq: function(e) {
                var t = this.length, r = +e + (e < 0 ? t : 0);
                return this.pushStack(r >= 0 && r < t ? [this[r]] : [])
              },
              end: function() {
                return this.prevObject || this.constructor()
              },
              push: J,
              sort: X.sort,
              splice: X.splice
            },
            oe.extend = oe.fn.extend =
                function() {
              var e, t, r, n, i, o, s = arguments[0] || {}, a = 1,
                                    l = arguments.length, c = !1;
              for ('boolean' == typeof s &&
                       (c = s, s = arguments[a] || {}, a++),
                   'object' == typeof s || oe.isFunction(s) || (s = {}),
                   a === l && (s = this, a--);
                   a < l; a++)
                if (null != (e = arguments[a]))
                  for (t in e)
                    r = s[t], n = e[t],
                    s !== n &&
                        (c && n &&
                                 (oe.isPlainObject(n) || (i = oe.isArray(n))) ?
                             (i ? (i = !1, o = r && oe.isArray(r) ? r : []) :
                                  o = r && oe.isPlainObject(r) ? r : {},
                              s[t] = oe.extend(c, o, n)) :
                             void 0 !== n && (s[t] = n));
              return s
            },
            oe.extend({
              expando: 'jQuery' + ('2.2.4' + Math.random()).replace(/\D/g, ''),
              isReady: !0,
              error: function(e) {
                throw new Error(e)
              },
              noop: function() {},
              isFunction: function(e) {
                return 'function' === oe.type(e)
              },
              isArray: Array.isArray,
              isWindow: function(e) {
                return null != e && e === e.window
              },
              isNumeric: function(e) {
                var t = e && e.toString();
                return !oe.isArray(e) && t - parseFloat(t) + 1 >= 0
              },
              isPlainObject: function(e) {
                var t;
                if ('object' !== oe.type(e) || e.nodeType || oe.isWindow(e))
                  return !1;
                if (e.constructor && !ne.call(e, 'constructor') &&
                    !ne.call(e.constructor.prototype || {}, 'isPrototypeOf'))
                  return !1;
                for (t in e)
                  ;
                return void 0 === t || ne.call(e, t)
              },
              isEmptyObject: function(e) {
                var t;
                for (t in e) return !1;
                return !0
              },
              type: function(e) {
                return null == e ? e + '' :
                    'object' == typeof e || 'function' == typeof e ?
                                   te[re.call(e)] || 'object' :
                                   typeof e
              },
              globalEval: function(e) {
                var t, r = eval;
                (e = oe.trim(e)) &&
                    (1 === e.indexOf('use strict') ?
                         (t = $.createElement('script'), t.text = e,
                          $.head.appendChild(t).parentNode.removeChild(t)) :
                         r(e))
              },
              camelCase: function(e) {
                return e.replace(ae, 'ms-').replace(le, ce)
              },
              nodeName: function(e, t) {
                return e.nodeName &&
                    e.nodeName.toLowerCase() === t.toLowerCase()
              },
              each: function(e, t) {
                var r, i = 0;
                if (n(e))
                  for (r = e.length; i < r && !1 !== t.call(e[i], i, e[i]); i++)
                    ;
                else
                  for (i in e)
                    if (!1 === t.call(e[i], i, e[i])) break;
                return e
              },
              trim: function(e) {
                return null == e ? '' : (e + '').replace(se, '')
              },
              makeArray: function(e, t) {
                var r = t || [];
                return null != e &&
                           (n(Object(e)) ?
                                oe.merge(r, 'string' == typeof e ? [e] : e) :
                                J.call(r, e)),
                       r
              },
              inArray: function(e, t, r) {
                return null == t ? -1 : ee.call(t, e, r)
              },
              merge: function(e, t) {
                for (var r = +t.length, n = 0, i = e.length; n < r; n++)
                  e[i++] = t[n];
                return e.length = i, e
              },
              grep: function(e, t, r) {
                for (var n = [], i = 0, o = e.length, s = !r; i < o; i++)
                  !t(e[i], i) !== s && n.push(e[i]);
                return n
              },
              map: function(e, t, r) {
                var i, o, s = 0, a = [];
                if (n(e))
                  for (i = e.length; s < i; s++)
                    null != (o = t(e[s], s, r)) && a.push(o);
                else
                  for (s in e) null != (o = t(e[s], s, r)) && a.push(o);
                return Z.apply([], a)
              },
              guid: 1,
              proxy: function(e, t) {
                var r, n, i;
                if ('string' == typeof t && (r = e[t], t = e, e = r),
                    oe.isFunction(e))
                  return n = Q.call(arguments, 2), i = function() {
                    return e.apply(t || this, n.concat(Q.call(arguments)))
                  }, i.guid = e.guid = e.guid || oe.guid++, i
              },
              now: Date.now,
              support: ie
            }),
            'function' == typeof Symbol &&
                (oe.fn[Symbol.iterator] = X[Symbol.iterator]),
            oe.each(
                'Boolean Number String Function Array Date RegExp Object Error Symbol'
                    .split(' '),
                function(e, t) {
                  te['[object ' + t + ']'] = t.toLowerCase()
                });
            var ue = function(e) {
              function t(e, t, r, n) {
                var i, o, s, a, c, d, p, h, f = t && t.ownerDocument,
                                            g = t ? t.nodeType : 9;
                if (r = r || [],
                    'string' != typeof e || !e ||
                        1 !== g && 9 !== g && 11 !== g)
                  return r;
                if (!n &&
                    ((t ? t.ownerDocument || t : R) !== L && T(t), t = t || L,
                     A)) {
                  if (11 !== g && (d = ge.exec(e)))
                    if (i = d[1]) {
                      if (9 === g) {
                        if (!(s = t.getElementById(i))) return r;
                        if (s.id === i) return r.push(s), r
                      } else if (
                          f && (s = f.getElementById(i)) && q(t, s) &&
                          s.id === i)
                        return r.push(s), r
                    } else {
                      if (d[2]) return $.apply(r, t.getElementsByTagName(e)), r;
                      if ((i = d[3]) && b.getElementsByClassName &&
                          t.getElementsByClassName)
                        return $.apply(r, t.getElementsByClassName(i)), r
                    }
                  if (b.qsa && !z[e + ' '] && (!D || !D.test(e))) {
                    if (1 !== g)
                      f = t, h = e;
                    else if ('object' !== t.nodeName.toLowerCase()) {
                      for ((a = t.getAttribute('id')) ?
                               a = a.replace(ye, '\\$&') :
                               t.setAttribute('id', a = N),
                               p = E(e), o = p.length,
                               c = ue.test(a) ? '#' + a : '[id=\'' + a + '\']';
                           o--;)
                        p[o] = c + ' ' + u(p[o]);
                      h = p.join(','), f = me.test(e) && l(t.parentNode) || t
                    }
                    if (h) try {
                        return $.apply(r, f.querySelectorAll(h)), r
                      } catch (e) {
                      } finally {
                        a === N && t.removeAttribute('id')
                      }
                  }
                }
                return M(e.replace(oe, '$1'), t, r, n)
              }
              function r() {
                function e(r, n) {
                  return t.push(r + ' ') > x.cacheLength && delete e[t.shift()],
                         e[r + ' '] = n
                }
                var t = [];
                return e
              }
              function n(e) {
                return e[N] = !0, e
              }
              function i(e) {
                var t = L.createElement('div');
                try {
                  return !!e(t)
                } catch (e) {
                  return !1
                } finally {
                  t.parentNode && t.parentNode.removeChild(t), t = null
                }
              }
              function o(e, t) {
                for (var r = e.split('|'), n = r.length; n--;)
                  x.attrHandle[r[n]] = t
              }
              function s(e, t) {
                var r = t && e,
                    n = r && 1 === e.nodeType && 1 === t.nodeType &&
                    (~t.sourceIndex || K) - (~e.sourceIndex || K);
                if (n) return n;
                if (r)
                  for (; r = r.nextSibling;)
                    if (r === t) return -1;
                return e ? 1 : -1
              }
              function a(e) {
                return n(function(t) {
                  return t = +t, n(function(r, n) {
                           for (var i, o = e([], r.length, t), s = o.length;
                                s--;)
                             r[i = o[s]] && (r[i] = !(n[i] = r[i]))
                         })
                })
              }
              function l(e) {
                return e && void 0 !== e.getElementsByTagName && e
              }
              function c() {}
              function u(e) {
                for (var t = 0, r = e.length, n = ''; t < r; t++)
                  n += e[t].value;
                return n
              }
              function d(e, t, r) {
                var n = t.dir, i = r && 'parentNode' === n, o = j++;
                return t.first ? function(t, r, o) {
                  for (; t = t[n];)
                    if (1 === t.nodeType || i) return e(t, r, o)
                } : function(t, r, s) {
                  var a, l, c, u = [B, o];
                  if (s) {
                    for (; t = t[n];)
                      if ((1 === t.nodeType || i) && e(t, r, s)) return !0
                  } else
                    for (; t = t[n];)
                      if (1 === t.nodeType || i) {
                        if (c = t[N] || (t[N] = {}),
                            l = c[t.uniqueID] || (c[t.uniqueID] = {}),
                            (a = l[n]) && a[0] === B && a[1] === o)
                          return u[2] = a[2];
                        if (l[n] = u, u[2] = e(t, r, s)) return !0
                      }
                }
              }
              function p(e) {
                return e.length > 1 ? function(t, r, n) {
                  for (var i = e.length; i--;)
                    if (!e[i](t, r, n)) return !1;
                  return !0
                } : e[0]
              }
              function h(e, r, n) {
                for (var i = 0, o = r.length; i < o; i++) t(e, r[i], n);
                return n
              }
              function f(e, t, r, n, i) {
                for (var o, s = [], a = 0, l = e.length, c = null != t; a < l;
                     a++)
                  (o = e[a]) &&
                      (r && !r(o, n, i) || (s.push(o), c && t.push(a)));
                return s
              }
              function g(e, t, r, i, o, s) {
                return i && !i[N] && (i = g(i)), o && !o[N] && (o = g(o, s)),
                       n(function(n, s, a, l) {
                         var c, u, d,
                             p = [], g = [], m = s.length,
                             y = n || h(t || '*', a.nodeType ? [a] : a, []),
                             v = !e || !n && t ? y : f(y, p, e, a, l),
                             b = r ? o || (n ? e : m || i) ? [] : s : v;
                         if (r && r(v, b, a, l), i)
                           for (c = f(b, g), i(c, [], a, l), u = c.length; u--;)
                             (d = c[u]) && (b[g[u]] = !(v[g[u]] = d));
                         if (n) {
                           if (o || e) {
                             if (o) {
                               for (c = [], u = b.length; u--;)
                                 (d = b[u]) && c.push(v[u] = d);
                               o(null, b = [], c, l)
                             }
                             for (u = b.length; u--;)
                               (d = b[u]) && (c = o ? Z(n, d) : p[u]) > -1 &&
                                   (n[c] = !(s[c] = d))
                           }
                         } else
                           b = f(b === s ? b.splice(m, b.length) : b),
                           o ? o(null, s, b, l) : $.apply(s, b)
                       })
              }
              function m(e) {
                for (var t, r, n,
                     i = e.length, o = x.relative[e[0].type],
                     s = o || x.relative[' '], a = o ? 1 : 0,
                     l = d(
                         function(e) {
                           return e === t
                         },
                         s, !0),
                     c = d(
                         function(e) {
                           return Z(t, e) > -1
                         },
                         s, !0),
                     h = [function(e, r, n) {
                       var i = !o && (n || r !== I) ||
                           ((t = r).nodeType ? l(e, r, n) : c(e, r, n));
                       return t = null, i
                     }];
                     a < i; a++)
                  if (r = x.relative[e[a].type])
                    h = [d(p(h), r)];
                  else {
                    if (r = x.filter[e[a].type].apply(null, e[a].matches),
                        r[N]) {
                      for (n = ++a; n < i && !x.relative[e[n].type]; n++)
                        ;
                      return g(
                          a > 1 && p(h),
                          a > 1 && u(e.slice(0, a - 1).concat({
                                     value: ' ' === e[a - 2].type ? '*' : ''
                                   })).replace(oe, '$1'),
                          r, a < n && m(e.slice(a, n)),
                          n < i && m(e = e.slice(n)), n < i && u(e))
                    }
                    h.push(r)
                  }
                return p(h)
              }
              function y(e, r) {
                var i = r.length > 0, o = e.length > 0,
                    s = function(n, s, a, l, c) {
                      var u, d, p, h = 0, g = '0', m = n && [], y = [], v = I,
                                   b = n || o && x.find.TAG('*', c),
                                   w = B += null == v ? 1 : Math.random() || .1,
                                   _ = b.length;
                      for (c && (I = s === L || s || c);
                           g !== _ && null != (u = b[g]); g++) {
                        if (o && u) {
                          for (d = 0,
                              s || u.ownerDocument === L || (T(u), a = !A);
                               p = e[d++];)
                            if (p(u, s || L, a)) {
                              l.push(u);
                              break
                            }
                          c && (B = w)
                        }
                        i && ((u = !p && u) && h--, n && m.push(u))
                      }
                      if (h += g, i && g !== h) {
                        for (d = 0; p = r[d++];) p(m, y, s, a);
                        if (n) {
                          if (h > 0)
                            for (; g--;) m[g] || y[g] || (y[g] = Y.call(l));
                          y = f(y)
                        }
                        $.apply(l, y),
                            c && !n && y.length > 0 && h + r.length > 1 &&
                            t.uniqueSort(l)
                      }
                      return c && (B = w, I = v), m
                    };
                return i ? n(s) : s
              }
              var v, b, x, w, _, E, S, M, I, k, C, T, L, P, A, D, O, F, q,
                  N = 'sizzle' + 1 * new Date, R = e.document, B = 0, j = 0,
                  V = r(), U = r(), z = r(),
                  G =
                      function(e, t) {
                    return e === t && (C = !0), 0
                  },
                  K = 1 << 31, W = {}.hasOwnProperty, H = [], Y = H.pop,
                  X = H.push, $ = H.push, Q = H.slice,
                  Z =
                      function(e, t) {
                    for (var r = 0, n = e.length; r < n; r++)
                      if (e[r] === t) return r;
                    return -1
                  },
                  J = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped',
                  ee = '[\\x20\\t\\r\\n\\f]',
                  te = '(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+',
                  re = '\\[' + ee + '*(' + te + ')(?:' + ee + '*([*^$|!~]?=)' +
                  ee +
                  '*(?:\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)"|(' +
                  te + '))|)' + ee + '*\\]',
                  ne = ':(' + te +
                  ')(?:\\(((\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|' +
                  re + ')*)|.*)\\)|)',
                  ie = new RegExp(ee + '+', 'g'),
                  oe = new RegExp(
                      '^' + ee + '+|((?:^|[^\\\\])(?:\\\\.)*)' + ee + '+$',
                      'g'),
                  se = new RegExp('^' + ee + '*,' + ee + '*'),
                  ae = new RegExp('^' + ee + '*([>+~]|' + ee + ')' + ee + '*'),
                  le = new RegExp(
                      '=' + ee + '*([^\\]\'"]*?)' + ee + '*\\]', 'g'),
                  ce = new RegExp(ne), ue = new RegExp('^' + te + '$'), de = {
                    ID: new RegExp('^#(' + te + ')'),
                    CLASS: new RegExp('^\\.(' + te + ')'),
                    TAG: new RegExp('^(' + te + '|[*])'),
                    ATTR: new RegExp('^' + re),
                    PSEUDO: new RegExp('^' + ne),
                    CHILD: new RegExp(
                        '^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(' +
                            ee + '*(even|odd|(([+-]|)(\\d*)n|)' + ee +
                            '*(?:([+-]|)' + ee + '*(\\d+)|))' + ee + '*\\)|)',
                        'i'),
                    bool: new RegExp('^(?:' + J + ')$', 'i'),
                    needsContext: new RegExp(
                        '^' + ee +
                            '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(' +
                            ee + '*((?:-\\d)?\\d*)' + ee + '*\\)|)(?=[^-]|$)',
                        'i')
                  },
                  pe = /^(?:input|select|textarea|button)$/i, he = /^h\d$/i,
                  fe = /^[^{]+\{\s*\[native \w/,
                  ge = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, me = /[+~]/,
                  ye = /'|\\/g,
                  ve = new RegExp(
                      '\\\\([\\da-f]{1,6}' + ee + '?|(' + ee + ')|.)', 'ig'),
                  be = function(e, t, r) {
                    var n = '0x' + t - 65536;
                    return n !== n || r ?
                        t :
                        n < 0 ?
                        String.fromCharCode(n + 65536) :
                        String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320)
                  }, xe = function() {
                    T()
                  };
              try {
                $.apply(H = Q.call(R.childNodes), R.childNodes),
                    H[R.childNodes.length].nodeType
              } catch (e) {
                $ = {
                  apply: H.length ?
                      function(e, t) {
                        X.apply(e, Q.call(t))
                      } :
                      function(e, t) {
                        for (var r = e.length, n = 0; e[r++] = t[n++];)
                          ;
                        e.length = r - 1
                      }
                }
              }
              b = t.support = {},
              _ = t.isXML =
                  function(e) {
                var t = e && (e.ownerDocument || e).documentElement;
                return !!t && 'HTML' !== t.nodeName
              },
              T = t.setDocument =
                  function(e) {
                var t, r, n = e ? e.ownerDocument || e : R;
                return n !== L && 9 === n.nodeType && n.documentElement ?
                    (L = n, P = L.documentElement, A = !_(L),
                     (r = L.defaultView) && r.top !== r &&
                         (r.addEventListener ?
                              r.addEventListener('unload', xe, !1) :
                              r.attachEvent && r.attachEvent('onunload', xe)),
                     b.attributes = i(function(e) {
                       return e.className = 'i', !e.getAttribute('className')
                     }),
                     b.getElementsByTagName = i(function(e) {
                       return e.appendChild(L.createComment('')),
                              !e.getElementsByTagName('*').length
                     }),
                     b.getElementsByClassName =
                         fe.test(L.getElementsByClassName),
                     b.getById = i(function(e) {
                       return P.appendChild(e).id = N,
                              !L.getElementsByName ||
                                  !L.getElementsByName(N).length
                     }),
                     b.getById ? (x.find.ID =
                                      function(e, t) {
                                        if (void 0 !== t.getElementById && A) {
                                          var r = t.getElementById(e);
                                          return r ? [r] : []
                                        }
                                      },
                                  x.filter.ID =
                                      function(e) {
                                        var t = e.replace(ve, be);
                                        return function(e) {
                                          return e.getAttribute('id') === t
                                        }
                                      }) :
                                 (delete x.find.ID,
                                  x.filter.ID =
                                      function(e) {
                                        var t = e.replace(ve, be);
                                        return function(e) {
                                          var r =
                                              void 0 !== e.getAttributeNode &&
                                              e.getAttributeNode('id');
                                          return r && r.value === t
                                        }
                                      }),
                     x.find.TAG = b.getElementsByTagName ?
                         function(e, t) {
                           return void 0 !== t.getElementsByTagName ?
                                       t.getElementsByTagName(e) :
                               b.qsa ? t.querySelectorAll(e) :
                                       void 0
                         } :
                         function(e, t) {
                           var r, n = [], i = 0, o = t.getElementsByTagName(e);
                           if ('*' === e) {
                             for (; r = o[i++];) 1 === r.nodeType && n.push(r);
                             return n
                           }
                           return o
                         },
                     x.find.CLASS = b.getElementsByClassName &&
                         function(e, t) {
                           if (void 0 !== t.getElementsByClassName && A)
                             return t.getElementsByClassName(e)
                         },
                     O = [], D = [],
                     (b.qsa = fe.test(L.querySelectorAll)) &&
                         (i(function(e) {
                            P.appendChild(e)
                                .innerHTML = '<a id=\'' + N +
                                '\'></a><select id=\'' + N +
                                '-\r\\\' msallowcapture=\'\'><option selected=\'\'></option></select>',
                e.querySelectorAll('[msallowcapture^=\'\']').length &&
                                D.push('[*^$]=' + ee + '*(?:\'\'|"")'),
                e.querySelectorAll('[selected]').length ||
                                D.push('\\[' + ee + '*(?:value|' + J + ')'),
                e.querySelectorAll('[id~=' + N + '-]').length || D.push('~='),
                e.querySelectorAll(':checked').length || D.push(':checked'),
                e.querySelectorAll('a#' + N + '+*').length || D.push('.#.+[+~]')
                          }),
                          i(function(e) {
                            var t = L.createElement('input');
                            t.setAttribute('type', 'hidden'),
                                e.appendChild(t).setAttribute('name', 'D'),
                                e.querySelectorAll('[name=d]').length &&
                                D.push('name' + ee + '*[*^$|!~]?='),
                                e.querySelectorAll(':enabled').length ||
                                D.push(':enabled', ':disabled'),
                                e.querySelectorAll('*,:x'), D.push(',.*:')
                          })),
                     (b.matchesSelector = fe.test(
                          F = P.matches || P.webkitMatchesSelector ||
                              P.mozMatchesSelector || P.oMatchesSelector ||
                              P.msMatchesSelector)) &&
                         i(function(e) {
                           b.disconnectedMatch = F.call(e, 'div'),
                           F.call(e, '[s!=\'\']:x'), O.push('!=', ne)
                         }),
                     D = D.length && new RegExp(D.join('|')),
                     O = O.length && new RegExp(O.join('|')),
                     t = fe.test(P.compareDocumentPosition),
                     q = t || fe.test(P.contains) ?
                         function(e, t) {
                           var r = 9 === e.nodeType ? e.documentElement : e,
                               n = t && t.parentNode;
                           return e === n ||
                               !(!n || 1 !== n.nodeType ||
                                 !(r.contains ? r.contains(n) :
                                                e.compareDocumentPosition &&
                                           16 & e.compareDocumentPosition(n)))
                         } :
                         function(e, t) {
                           if (t)
                             for (; t = t.parentNode;)
                               if (t === e) return !0;
                           return !1
                         },
                     G = t ?
                         function(e, t) {
                           if (e === t) return C = !0, 0;
                           var r = !e.compareDocumentPosition -
                               !t.compareDocumentPosition;
                           return r ||
                               (r = (e.ownerDocument || e) ===
                                        (t.ownerDocument || t) ?
                                    e.compareDocumentPosition(t) :
                                    1,
                                1 & r ||
                                        !b.sortDetached &&
                                            t.compareDocumentPosition(e) === r ?
                                    e === L ||
                                            e.ownerDocument === R && q(R, e) ?
                                    -1 :
                                        t === L ||
                                            t.ownerDocument === R && q(R, t) ?
                                            1 :
                                        k ? Z(k, e) - Z(k, t) :
                                            0 :
                                    4 & r ? -1 :
                                            1)
                         } :
                         function(e, t) {
                           if (e === t) return C = !0, 0;
                           var r, n = 0, i = e.parentNode, o = t.parentNode,
                                  a = [e], l = [t];
                           if (!i || !o)
                             return e === L ? -1 :
                                 t === L    ? 1 :
                                 i          ? -1 :
                                 o          ? 1 :
                                 k          ? Z(k, e) - Z(k, t) :
                                              0;
                           if (i === o) return s(e, t);
                           for (r = e; r = r.parentNode;) a.unshift(r);
                           for (r = t; r = r.parentNode;) l.unshift(r);
                           for (; a[n] === l[n];) n++;
                           return n       ? s(a[n], l[n]) :
                               a[n] === R ? -1 :
                               l[n] === R ? 1 :
                                            0
                         },
                     L) :
                    L
              },
              t.matches =
                  function(e, r) {
                return t(e, null, null, r)
              },
              t.matchesSelector =
                  function(e, r) {
                if ((e.ownerDocument || e) !== L && T(e),
                    r = r.replace(le, '=\'$1\']'),
                    b.matchesSelector && A && !z[r + ' '] &&
                        (!O || !O.test(r)) && (!D || !D.test(r)))
                  try {
                    var n = F.call(e, r);
                    if (n || b.disconnectedMatch ||
                        e.document && 11 !== e.document.nodeType)
                      return n
                  } catch (e) {
                  }
                return t(r, L, null, [e]).length > 0
              },
              t.contains =
                  function(e, t) {
                return (e.ownerDocument || e) !== L && T(e), q(e, t)
              },
              t.attr =
                  function(e, t) {
                (e.ownerDocument || e) !== L && T(e);
                var r = x.attrHandle[t.toLowerCase()],
                    n = r && W.call(x.attrHandle, t.toLowerCase()) ?
                    r(e, t, !A) :
                    void 0;
                return void 0 !== n    ? n :
                    b.attributes || !A ? e.getAttribute(t) :
                    (n = e.getAttributeNode(t)) && n.specified ? n.value :
                                                                 null
              },
              t.error =
                  function(e) {
                throw new Error('Syntax error, unrecognized expression: ' + e)
              },
              t.uniqueSort =
                  function(e) {
                var t, r = [], n = 0, i = 0;
                if (C = !b.detectDuplicates, k = !b.sortStable && e.slice(0),
                    e.sort(G), C) {
                  for (; t = e[i++];) t === e[i] && (n = r.push(i));
                  for (; n--;) e.splice(r[n], 1)
                }
                return k = null, e
              },
              w = t.getText =
                  function(e) {
                var t, r = '', n = 0, i = e.nodeType;
                if (i) {
                  if (1 === i || 9 === i || 11 === i) {
                    if ('string' == typeof e.textContent) return e.textContent;
                    for (e = e.firstChild; e; e = e.nextSibling) r += w(e)
                  } else if (3 === i || 4 === i)
                    return e.nodeValue
                } else
                  for (; t = e[n++];) r += w(t);
                return r
              },
              x = t.selectors = {
                cacheLength: 50,
                createPseudo: n,
                match: de,
                attrHandle: {},
                find: {},
                relative: {
                  '>': {dir: 'parentNode', first: !0},
                  ' ': {dir: 'parentNode'},
                  '+': {dir: 'previousSibling', first: !0},
                  '~': {dir: 'previousSibling'}
                },
                preFilter: {
                  ATTR: function(e) {
                    return e[1] = e[1].replace(ve, be),
                           e[3] = (e[3] || e[4] || e[5] || '').replace(ve, be),
                           '~=' === e[2] && (e[3] = ' ' + e[3] + ' '),
                           e.slice(0, 4)
                  },
                  CHILD: function(e) {
                    return e[1] = e[1].toLowerCase(),
                           'nth' === e[1].slice(0, 3) ?
                               (e[3] || t.error(e[0]),
                                e[4] =
                                    +(e[4] ? e[5] + (e[6] || 1) :
                                             2 *
                                              ('even' === e[3] ||
                                               'odd' === e[3])),
                                e[5] = +(e[7] + e[8] || 'odd' === e[3])) :
                               e[3] && t.error(e[0]),
                           e
                  },
                  PSEUDO: function(e) {
                    var t, r = !e[6] && e[2];
                    return de.CHILD.test(e[0]) ?
                        null :
                        (e[3] ? e[2] = e[4] || e[5] || '' :
                                r && ce.test(r) && (t = E(r, !0)) &&
                                 (t = r.indexOf(')', r.length - t) -
                                      r.length) &&
                                 (e[0] = e[0].slice(0, t),
                                  e[2] = r.slice(0, t)),
                         e.slice(0, 3))
                  }
                },
                filter: {
                  TAG: function(e) {
                    var t = e.replace(ve, be).toLowerCase();
                    return '*' === e ? function() {
                      return !0
                    } : function(e) {
                      return e.nodeName && e.nodeName.toLowerCase() === t
                    }
                  },
                  CLASS: function(e) {
                    var t = V[e + ' '];
                    return t ||
                        (t = new RegExp(
                             '(^|' + ee + ')' + e + '(' + ee + '|$)')) &&
                        V(e, function(e) {
                          return t.test(
                              'string' == typeof e.className && e.className ||
                              void 0 !== e.getAttribute &&
                                  e.getAttribute('class') ||
                              '')
                        })
                  },
                  ATTR: function(e, r, n) {
                    return function(i) {
                      var o = t.attr(i, e);
                      return null == o ? '!=' === r :
                                         !r ||
                              (o += '',
                               '=' === r      ? o === n :
                                   '!=' === r ? o !== n :
                                   '^=' === r ? n && 0 === o.indexOf(n) :
                                   '*=' === r ? n && o.indexOf(n) > -1 :
                                   '$=' === r ? n && o.slice(-n.length) === n :
                                   '~=' === r ? (' ' + o.replace(ie, ' ') + ' ')
                                                    .indexOf(n) > -1 :
                                                '|=' === r &&
                                       (o === n ||
                                        o.slice(0, n.length + 1) === n + '-'))
                    }
                  },
                  CHILD: function(e, t, r, n, i) {
                    var o = 'nth' !== e.slice(0, 3), s = 'last' !== e.slice(-4),
                        a = 'of-type' === t;
                    return 1 === n && 0 === i ? function(e) {
                      return !!e.parentNode
                    } : function(t, r, l) {
                      var c, u, d, p, h, f,
                          g = o !== s ? 'nextSibling' : 'previousSibling',
                          m = t.parentNode, y = a && t.nodeName.toLowerCase(),
                          v = !l && !a, b = !1;
                      if (m) {
                        if (o) {
                          for (; g;) {
                            for (p = t; p = p[g];)
                              if (a ? p.nodeName.toLowerCase() === y :
                                      1 === p.nodeType)
                                return !1;
                            f = g = 'only' === e && !f && 'nextSibling'
                          }
                          return !0
                        }
                        if (f = [s ? m.firstChild : m.lastChild], s && v) {
                          for (p = m, d = p[N] || (p[N] = {}),
                              u = d[p.uniqueID] || (d[p.uniqueID] = {}),
                              c = u[e] || [], h = c[0] === B && c[1],
                              b = h && c[2], p = h && m.childNodes[h];
                               p = ++h && p && p[g] || (b = h = 0) || f.pop();)
                            if (1 === p.nodeType && ++b && p === t) {
                              u[e] = [B, h, b];
                              break
                            }
                        } else if (
                            v &&
                                (p = t, d = p[N] || (p[N] = {}),
                                 u = d[p.uniqueID] || (d[p.uniqueID] = {}),
                                 c = u[e] || [], h = c[0] === B && c[1], b = h),
                            !1 === b)
                          for (; (p = ++h && p && p[g] || (b = h = 0) ||
                                      f.pop()) &&
                               ((a ? p.nodeName.toLowerCase() !== y :
                                     1 !== p.nodeType) ||
                                !++b ||
                                (v &&
                                     (d = p[N] || (p[N] = {}),
                                     u = d[p.uniqueID] || (d[p.uniqueID] = {}),
                                     u[e] = [B, b]),
                                 p !== t));)
                            ;
                        return (b -= i) === n || b % n == 0 && b / n >= 0
                      }
                    }
                  },
                  PSEUDO: function(e, r) {
                    var i,
                        o = x.pseudos[e] || x.setFilters[e.toLowerCase()] ||
                        t.error('unsupported pseudo: ' + e);
                    return o[N] ?
                        o(r) :
                        o.length > 1 ?
                        (i = [e, e, '', r],
                         x.setFilters.hasOwnProperty(e.toLowerCase()) ?
                             n(function(e, t) {
                               for (var n, i = o(e, r), s = i.length; s--;)
                                 n = Z(e, i[s]), e[n] = !(t[n] = i[s])
                             }) :
                             function(e) {
                               return o(e, 0, i)
                             }) :
                        o
                  }
                },
                pseudos: {
                  not: n(function(e) {
                    var t = [], r = [], i = S(e.replace(oe, '$1'));
                    return i[N] ? n(function(e, t, r, n) {
                      for (var o, s = i(e, null, n, []), a = e.length; a--;)
                        (o = s[a]) && (e[a] = !(t[a] = o))
                    }) :
                                  function(e, n, o) {
                                    return t[0] = e, i(t, null, o, r),
                                           t[0] = null, !r.pop()
                                  }
                  }),
                  has: n(function(e) {
                    return function(r) {
                      return t(e, r).length > 0
                    }
                  }),
                  contains: n(function(e) {
                    return e = e.replace(ve, be), function(t) {
                      return (t.textContent || t.innerText || w(t)).indexOf(e) >
                          -1
                    }
                  }),
                  lang: n(function(e) {
                    return ue.test(e || '') ||
                               t.error('unsupported lang: ' + e),
                           e = e.replace(ve, be).toLowerCase(), function(t) {
                             var r;
                             do {
                               if (r = A ? t.lang :
                                           t.getAttribute('xml:lang') ||
                                           t.getAttribute('lang'))
                                 return (r = r.toLowerCase()) === e ||
                                     0 === r.indexOf(e + '-')
                             } while ((t = t.parentNode) && 1 === t.nodeType);
                             return !1
                           }
                  }),
                  target: function(t) {
                    var r = e.location && e.location.hash;
                    return r && r.slice(1) === t.id
                  },
                  root: function(e) {
                    return e === P
                  },
                  focus: function(e) {
                    return e === L.activeElement &&
                        (!L.hasFocus || L.hasFocus()) &&
                        !!(e.type || e.href || ~e.tabIndex)
                  },
                  enabled: function(e) {
                    return !1 === e.disabled
                  },
                  disabled: function(e) {
                    return !0 === e.disabled
                  },
                  checked: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return 'input' === t && !!e.checked ||
                        'option' === t && !!e.selected
                  },
                  selected: function(e) {
                    return e.parentNode && e.parentNode.selectedIndex,
                           !0 === e.selected
                  },
                  empty: function(e) {
                    for (e = e.firstChild; e; e = e.nextSibling)
                      if (e.nodeType < 6) return !1;
                    return !0
                  },
                  parent: function(e) {
                    return !x.pseudos.empty(e)
                  },
                  header: function(e) {
                    return he.test(e.nodeName)
                  },
                  input: function(e) {
                    return pe.test(e.nodeName)
                  },
                  button: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return 'input' === t && 'button' === e.type ||
                        'button' === t
                  },
                  text: function(e) {
                    var t;
                    return 'input' === e.nodeName.toLowerCase() &&
                        'text' === e.type &&
                        (null == (t = e.getAttribute('type')) ||
                         'text' === t.toLowerCase())
                  },
                  first: a(function() {
                    return [0]
                  }),
                  last: a(function(e, t) {
                    return [t - 1]
                  }),
                  eq: a(function(e, t, r) {
                    return [r < 0 ? r + t : r]
                  }),
                  even: a(function(e, t) {
                    for (var r = 0; r < t; r += 2) e.push(r);
                    return e
                  }),
                  odd: a(function(e, t) {
                    for (var r = 1; r < t; r += 2) e.push(r);
                    return e
                  }),
                  lt: a(function(e, t, r) {
                    for (var n = r < 0 ? r + t : r; --n >= 0;) e.push(n);
                    return e
                  }),
                  gt: a(function(e, t, r) {
                    for (var n = r < 0 ? r + t : r; ++n < t;) e.push(n);
                    return e
                  })
                }
              },
              x.pseudos.nth = x.pseudos.eq;
              for (v in
                   {radio: !0, checkbox: !0, file: !0, password: !0, image: !0})
                x.pseudos[v] = function(e) {
                  return function(t) {
                    return 'input' === t.nodeName.toLowerCase() && t.type === e
                  }
                }(v);
              for (v in {submit: !0, reset: !0})
                x.pseudos[v] = function(e) {
                  return function(t) {
                    var r = t.nodeName.toLowerCase();
                    return ('input' === r || 'button' === r) && t.type === e
                  }
                }(v);
              return c.prototype = x.filters = x.pseudos, x.setFilters = new c,
                     E = t.tokenize =
                         function(e, r) {
                       var n, i, o, s, a, l, c, u = U[e + ' '];
                       if (u) return r ? 0 : u.slice(0);
                       for (a = e, l = [], c = x.preFilter; a;) {
                         n && !(i = se.exec(a)) ||
                             (i && (a = a.slice(i[0].length) || a),
                              l.push(o = [])),
                             n = !1,
                             (i = ae.exec(a)) &&
                             (n = i.shift(),
                              o.push({value: n, type: i[0].replace(oe, ' ')}),
                              a = a.slice(n.length));
                         for (s in x.filter)
                           !(i = de[s].exec(a)) || c[s] && !(i = c[s](i)) ||
                               (n = i.shift(),
                                o.push({value: n, type: s, matches: i}),
                                a = a.slice(n.length));
                         if (!n) break
                       }
                       return r ? a.length : a ? t.error(e) : U(e, l).slice(0)
                     },
                     S = t.compile =
                         function(e, t) {
                       var r, n = [], i = [], o = z[e + ' '];
                       if (!o) {
                         for (t || (t = E(e)), r = t.length; r--;)
                           o = m(t[r]), o[N] ? n.push(o) : i.push(o);
                         o = z(e, y(i, n)), o.selector = e
                       }
                       return o
                     },
                     M = t.select =
                         function(e, t, r, n) {
                       var i, o, s, a, c, d = 'function' == typeof e && e,
                                          p = !n && E(e = d.selector || e);
                       if (r = r || [], 1 === p.length) {
                         if (o = p[0] = p[0].slice(0),
                             o.length > 2 && 'ID' === (s = o[0]).type &&
                                 b.getById && 9 === t.nodeType && A &&
                                 x.relative[o[1].type]) {
                           if (!(t =
                                     (x.find.ID(
                                          s.matches[0].replace(ve, be), t) ||
                                      [])[0]))
                             return r;
                           d && (t = t.parentNode),
                               e = e.slice(o.shift().value.length)
                         }
                         for (i = de.needsContext.test(e) ? 0 : o.length;
                              i-- && (s = o[i], !x.relative[a = s.type]);)
                           if ((c = x.find[a]) &&
                               (n =
                                    c(s.matches[0].replace(ve, be),
                                      me.test(o[0].type) && l(t.parentNode) ||
                                          t))) {
                             if (o.splice(i, 1), !(e = n.length && u(o)))
                               return $.apply(r, n), r;
                             break
                           }
                       }
                       return (d || S(e, p))(
                                  n, t, !A, r,
                                  !t || me.test(e) && l(t.parentNode) || t),
                              r
                     },
                     b.sortStable = N.split('').sort(G).join('') === N,
                     b.detectDuplicates = !!C, T(),
                     b.sortDetached = i(function(e) {
                       return 1 &
                           e.compareDocumentPosition(L.createElement('div'))
                     }),
                     i(function(e) {
                       return e.innerHTML = '<a href=\'#\'></a>',
                              '#' === e.firstChild.getAttribute('href')
                     }) ||
                         o('type|href|height|width',
                           function(e, t, r) {
                             if (!r)
                               return e.getAttribute(
                                   t, 'type' === t.toLowerCase() ? 1 : 2)
                           }),
                     b.attributes && i(function(e) {
                       return e.innerHTML = '<input/>',
                              e.firstChild.setAttribute('value', ''),
                              '' === e.firstChild.getAttribute('value')
                     }) ||
                         o('value',
                           function(e, t, r) {
                             if (!r && 'input' === e.nodeName.toLowerCase())
                               return e.defaultValue
                           }),
                     i(function(e) {
                       return null == e.getAttribute('disabled')
                     }) ||
                         o(J,
                           function(e, t, r) {
                             var n;
                             if (!r)
                               return !0 === e[t] ? t.toLowerCase() :
                                   (n = e.getAttributeNode(t)) && n.specified ?
                                                    n.value :
                                                    null
                           }),
                     t
            }(e);
            oe.find = ue, oe.expr = ue.selectors,
            oe.expr[':'] = oe.expr.pseudos,
            oe.uniqueSort = oe.unique = ue.uniqueSort, oe.text = ue.getText,
            oe.isXMLDoc = ue.isXML, oe.contains = ue.contains;
            var de =
                    function(e, t, r) {
              for (var n = [], i = void 0 !== r;
                   (e = e[t]) && 9 !== e.nodeType;)
                if (1 === e.nodeType) {
                  if (i && oe(e).is(r)) break;
                  n.push(e)
                }
              return n
            },
                pe =
                    function(e, t) {
                  for (var r = []; e; e = e.nextSibling)
                    1 === e.nodeType && e !== t && r.push(e);
                  return r
                },
                he = oe.expr.match.needsContext,
                fe = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/, ge = /^.[^:#\[\.,]*$/;
            oe.filter = function(e, t, r) {
              var n = t[0];
              return r && (e = ':not(' + e + ')'),
                     1 === t.length && 1 === n.nodeType ?
                         oe.find.matchesSelector(n, e) ? [n] : [] :
                         oe.find.matches(e, oe.grep(t, function(e) {
                           return 1 === e.nodeType
                         }))
            }, oe.fn.extend({
              find: function(e) {
                var t, r = this.length, n = [], i = this;
                if ('string' != typeof e)
                  return this.pushStack(oe(e).filter(function() {
                    for (t = 0; t < r; t++)
                      if (oe.contains(i[t], this)) return !0
                  }));
                for (t = 0; t < r; t++) oe.find(e, i[t], n);
                return n = this.pushStack(r > 1 ? oe.unique(n) : n),
                       n.selector = this.selector ? this.selector + ' ' + e : e,
                       n
              },
              filter: function(e) {
                return this.pushStack(i(this, e || [], !1))
              },
              not: function(e) {
                return this.pushStack(i(this, e || [], !0))
              },
              is: function(e) {
                return !!i(this,
                           'string' == typeof e && he.test(e) ? oe(e) : e || [],
                           !1)
                             .length
              }
            });
            var me, ye = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;
            (oe.fn.init = function(e, t, r) {
              var n, i;
              if (!e) return this;
              if (r = r || me, 'string' == typeof e) {
                if (!(n = '<' === e[0] && '>' === e[e.length - 1] &&
                              e.length >= 3 ?
                          [null, e, null] :
                          ye.exec(e)) ||
                    !n[1] && t)
                  return !t || t.jquery ? (t || r).find(e) :
                                          this.constructor(t).find(e);
                if (n[1]) {
                  if (t = t instanceof oe ? t[0] : t,
                      oe.merge(
                          this,
                          oe.parseHTML(
                              n[1], t && t.nodeType ? t.ownerDocument || t : $,
                              !0)),
                      fe.test(n[1]) && oe.isPlainObject(t))
                    for (n in t)
                      oe.isFunction(this[n]) ? this[n](t[n]) :
                                               this.attr(n, t[n]);
                  return this
                }
                return i = $.getElementById(n[2]),
                       i && i.parentNode && (this.length = 1, this[0] = i),
                       this.context = $, this.selector = e, this
              }
              return e.nodeType ?
                  (this.context = this[0] = e, this.length = 1, this) :
                  oe.isFunction(e) ?
                  void 0 !== r.ready ? r.ready(e) : e(oe) :
                  (void 0 !== e.selector &&
                       (this.selector = e.selector, this.context = e.context),
                   oe.makeArray(e, this))
            }).prototype = oe.fn, me = oe($);
            var ve = /^(?:parents|prev(?:Until|All))/,
                be = {children: !0, contents: !0, next: !0, prev: !0};
            oe.fn.extend({
              has: function(e) {
                var t = oe(e, this), r = t.length;
                return this.filter(function() {
                  for (var e = 0; e < r; e++)
                    if (oe.contains(this, t[e])) return !0
                })
              },
              closest: function(e, t) {
                for (var r, n = 0, i = this.length, o = [],
                            s = he.test(e) || 'string' != typeof e ?
                         oe(e, t || this.context) :
                         0;
                     n < i; n++)
                  for (r = this[n]; r && r !== t; r = r.parentNode)
                    if (r.nodeType < 11 &&
                        (s ? s.index(r) > -1 :
                             1 === r.nodeType &&
                                 oe.find.matchesSelector(r, e))) {
                      o.push(r);
                      break
                    }
                return this.pushStack(o.length > 1 ? oe.uniqueSort(o) : o)
              },
              index: function(e) {
                return e ? 'string' == typeof e ?
                           ee.call(oe(e), this[0]) :
                           ee.call(this, e.jquery ? e[0] : e) :
                    this[0] && this[0].parentNode ?
                           this.first().prevAll().length :
                           -1
              },
              add: function(e, t) {
                return this.pushStack(
                    oe.uniqueSort(oe.merge(this.get(), oe(e, t))))
              },
              addBack: function(e) {
                return this.add(
                    null == e ? this.prevObject : this.prevObject.filter(e))
              }
            }),
                oe.each(
                    {
                      parent: function(e) {
                        var t = e.parentNode;
                        return t && 11 !== t.nodeType ? t : null
                      },
                      parents: function(e) {
                        return de(e, 'parentNode')
                      },
                      parentsUntil: function(e, t, r) {
                        return de(e, 'parentNode', r)
                      },
                      next: function(e) {
                        return o(e, 'nextSibling')
                      },
                      prev: function(e) {
                        return o(e, 'previousSibling')
                      },
                      nextAll: function(e) {
                        return de(e, 'nextSibling')
                      },
                      prevAll: function(e) {
                        return de(e, 'previousSibling')
                      },
                      nextUntil: function(e, t, r) {
                        return de(e, 'nextSibling', r)
                      },
                      prevUntil: function(e, t, r) {
                        return de(e, 'previousSibling', r)
                      },
                      siblings: function(e) {
                        return pe((e.parentNode || {}).firstChild, e)
                      },
                      children: function(e) {
                        return pe(e.firstChild)
                      },
                      contents: function(e) {
                        return e.contentDocument || oe.merge([], e.childNodes)
                      }
                    },
                    function(e, t) {
                      oe.fn[e] = function(r, n) {
                        var i = oe.map(this, t, r);
                        return 'Until' !== e.slice(-5) && (n = r),
                               n && 'string' == typeof n &&
                                   (i = oe.filter(n, i)),
                               this.length > 1 &&
                                   (be[e] || oe.uniqueSort(i),
                                    ve.test(e) && i.reverse()),
                               this.pushStack(i)
                      }
                    });
            var xe = /\S+/g;
            oe.Callbacks = function(e) {
              e = 'string' == typeof e ? s(e) : oe.extend({}, e);
              var t, r, n, i, o = [], a = [], l = -1, c = function() {
                for (i = e.once, n = t = !0; a.length; l = -1)
                  for (r = a.shift(); ++l < o.length;)
                    !1 === o[l].apply(r[0], r[1]) && e.stopOnFalse &&
                        (l = o.length, r = !1);
                e.memory || (r = !1), t = !1, i && (o = r ? [] : '')
              }, u = {
                add: function() {
                  return o &&
                             (r && !t && (l = o.length - 1, a.push(r)),
                              function t(r) {
                                oe.each(r, function(r, n) {
                                  oe.isFunction(n) ?
                                      e.unique && u.has(n) || o.push(n) :
                                      n && n.length &&
                                          'string' !== oe.type(n) && t(n)
                                })
                              }(arguments),
                              r && !t && c()),
                         this
                },
                remove: function() {
                  return oe.each(arguments, function(e, t) {
                    for (var r; (r = oe.inArray(t, o, r)) > -1;)
                      o.splice(r, 1), r <= l && l--
                  }), this
                },
                has: function(e) {
                  return e ? oe.inArray(e, o) > -1 : o.length > 0
                },
                empty: function() {
                  return o && (o = []), this
                },
                disable: function() {
                  return i = a = [], o = r = '', this
                },
                disabled: function() {
                  return !o
                },
                lock: function() {
                  return i = a = [], r || (o = r = ''), this
                },
                locked: function() {
                  return !!i
                },
                fireWith: function(e, r) {
                  return i ||
                             (r = r || [], r = [e, r.slice ? r.slice() : r],
                              a.push(r), t || c()),
                         this
                },
                fire: function() {
                  return u.fireWith(this, arguments), this
                },
                fired: function() {
                  return !!n
                }
              };
              return u
            }, oe.extend({
              Deferred: function(e) {
                var t =
                        [
                          [
                            'resolve', 'done', oe.Callbacks('once memory'),
                            'resolved'
                          ],
                          [
                            'reject', 'fail', oe.Callbacks('once memory'),
                            'rejected'
                          ],
                          ['notify', 'progress', oe.Callbacks('memory')]
                        ],
                    r = 'pending', n = {
                      state: function() {
                        return r
                      },
                      always: function() {
                        return i.done(arguments).fail(arguments), this
                      },
                      then: function() {
                        var e = arguments;
                        return oe
                            .Deferred(function(r) {
                              oe.each(t, function(t, o) {
                                var s = oe.isFunction(e[t]) && e[t];
                                i[o[1]](function() {
                                  var e = s && s.apply(this, arguments);
                                  e && oe.isFunction(e.promise) ?
                                      e.promise()
                                          .progress(r.notify)
                                          .done(r.resolve)
                                          .fail(r.reject) :
                                      r[o[0] + 'With'](
                                          this === n ? r.promise() : this,
                                          s ? [e] : arguments)
                                })
                              }), e = null
                            })
                            .promise()
                      },
                      promise: function(e) {
                        return null != e ? oe.extend(e, n) : n
                      }
                    },
                    i = {};
                return n.pipe = n.then, oe.each(t, function(e, o) {
                  var s = o[2], a = o[3];
                  n[o[1]] = s.add, a && s.add(function() {
                    r = a
                  }, t[1 ^ e][2].disable, t[2][2].lock), i[o[0]] = function() {
                    return i[o[0] + 'With'](this === i ? n : this, arguments),
                           this
                  }, i[o[0] + 'With'] = s.fireWith
                }), n.promise(i), e && e.call(i, i), i
              },
              when: function(e) {
                var t, r, n,
                    i = 0, o = Q.call(arguments), s = o.length,
                    a = 1 !== s || e && oe.isFunction(e.promise) ? s : 0,
                    l = 1 === a ? e : oe.Deferred(), c = function(e, r, n) {
                      return function(i) {
                        r[e] = this,
                        n[e] = arguments.length > 1 ? Q.call(arguments) : i,
                        n === t ? l.notifyWith(r, n) :
                                  --a || l.resolveWith(r, n)
                      }
                    };
                if (s > 1)
                  for (t = new Array(s), r = new Array(s), n = new Array(s);
                       i < s; i++)
                    o[i] && oe.isFunction(o[i].promise) ?
                        o[i].promise()
                            .progress(c(i, r, t))
                            .done(c(i, n, o))
                            .fail(l.reject) :
                        --a;
                return a || l.resolveWith(n, o), l.promise()
              }
            });
            var we;
            oe.fn.ready =
                function(e) {
              return oe.ready.promise().done(e), this
            },
            oe.extend({
              isReady: !1,
              readyWait: 1,
              holdReady: function(e) {
                e ? oe.readyWait++ : oe.ready(!0)
              },
              ready: function(e) {
                (!0 === e ? --oe.readyWait : oe.isReady) ||
                    (oe.isReady = !0,
                     !0 !== e && --oe.readyWait > 0 ||
                         (we.resolveWith($, [oe]),
                          oe.fn.triggerHandler &&
                              (oe($).triggerHandler('ready'),
                               oe($).off('ready'))))
              }
            }),
            oe.ready.promise = function(t) {
              return we ||
                         (we = oe.Deferred(),
                          'complete' === $.readyState ||
                                  'loading' !== $.readyState &&
                                      !$.documentElement.doScroll ?
                              e.setTimeout(oe.ready) :
                              ($.addEventListener('DOMContentLoaded', a),
                               e.addEventListener('load', a))),
                     we.promise(t)
            }, oe.ready.promise();
            var _e = function(e, t, r, n, i, o, s) {
              var a = 0, l = e.length, c = null == r;
              if ('object' === oe.type(r)) {
                i = !0;
                for (a in r) _e(e, t, a, r[a], !0, o, s)
              } else if (
                  void 0 !== n &&
                  (i = !0, oe.isFunction(n) || (s = !0),
                   c &&
                       (s ? (t.call(e, n), t = null) :
                            (c = t,
                             t =
                                 function(e, t, r) {
                                   return c.call(oe(e), r)
                                 })),
                   t))
                for (; a < l; a++)
                  t(e[a], r, s ? n : n.call(e[a], a, t(e[a], r)));
              return i ? e : c ? t.call(e) : l ? t(e[0], r) : o
            }, Ee = function(e) {
              return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType
            };
            l.uid = 1, l.prototype = {
              register: function(e, t) {
                var r = t || {};
                return e.nodeType ?
                           e[this.expando] = r :
                           Object.defineProperty(
                               e, this.expando,
                               {value: r, writable: !0, configurable: !0}),
                           e[this.expando]
              },
              cache: function(e) {
                if (!Ee(e)) return {};
                var t = e[this.expando];
                return t ||
                           (t = {},
                            Ee(e) &&
                                (e.nodeType ?
                                     e[this.expando] = t :
                                     Object.defineProperty(
                                         e, this.expando,
                                         {value: t, configurable: !0}))),
                       t
              },
              set: function(e, t, r) {
                var n, i = this.cache(e);
                if ('string' == typeof t)
                  i[t] = r;
                else
                  for (n in t) i[n] = t[n];
                return i
              },
              get: function(e, t) {
                return void 0 === t ? this.cache(e) :
                                      e[this.expando] && e[this.expando][t]
              },
              access: function(e, t, r) {
                var n;
                return void 0 === t ||
                        t && 'string' == typeof t && void 0 === r ?
                    (n = this.get(e, t),
                     void 0 !== n ? n : this.get(e, oe.camelCase(t))) :
                    (this.set(e, t, r), void 0 !== r ? r : t)
              },
              remove: function(e, t) {
                var r, n, i, o = e[this.expando];
                if (void 0 !== o) {
                  if (void 0 === t)
                    this.register(e);
                  else {
                    oe.isArray(t) ?
                        n = t.concat(t.map(oe.camelCase)) :
                        (i = oe.camelCase(t),
                         t in o ?
                             n = [t, i] :
                             (n = i, n = n in o ? [n] : n.match(xe) || [])),
                        r = n.length;
                    for (; r--;) delete o[n[r]]
                  }
                  (void 0 === t || oe.isEmptyObject(o)) &&
                      (e.nodeType ? e[this.expando] = void 0 :
                                    delete e[this.expando])
                }
              },
              hasData: function(e) {
                var t = e[this.expando];
                return void 0 !== t && !oe.isEmptyObject(t)
              }
            };
            var Se = new l, Me = new l, Ie = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                ke = /[A-Z]/g;
            oe.extend({
              hasData: function(e) {
                return Me.hasData(e) || Se.hasData(e)
              },
              data: function(e, t, r) {
                return Me.access(e, t, r)
              },
              removeData: function(e, t) {
                Me.remove(e, t)
              },
              _data: function(e, t, r) {
                return Se.access(e, t, r)
              },
              _removeData: function(e, t) {
                Se.remove(e, t)
              }
            }),
                oe.fn.extend({
                  data: function(e, t) {
                    var r, n, i, o = this[0], s = o && o.attributes;
                    if (void 0 === e) {
                      if (this.length &&
                          (i = Me.get(o),
                           1 === o.nodeType && !Se.get(o, 'hasDataAttrs'))) {
                        for (r = s.length; r--;)
                          s[r] &&
                              (n = s[r].name,
                               0 === n.indexOf('data-') &&
                                   (n = oe.camelCase(n.slice(5)),
                                    c(o, n, i[n])));
                        Se.set(o, 'hasDataAttrs', !0)
                      }
                      return i
                    }
                    return 'object' == typeof e ?
                        this.each(function() {
                          Me.set(this, e)
                        }) :
                        _e(this, function(t) {
                          var r, n;
                          if (o && void 0 === t) {
                            if (void 0 !==
                                (r = Me.get(o, e) ||
                                     Me.get(
                                         o,
                                         e.replace(ke, '-$&').toLowerCase())))
                              return r;
                            if (n = oe.camelCase(e),
                                void 0 !== (r = Me.get(o, n)))
                              return r;
                            if (void 0 !== (r = c(o, n, void 0))) return r
                          } else
                            n = oe.camelCase(e), this.each(function() {
                              var r = Me.get(this, n);
                              Me.set(this, n, t),
                                  e.indexOf('-') > -1 && void 0 !== r &&
                                  Me.set(this, e, t)
                            })
                        }, null, t, arguments.length > 1, null, !0)
                  },
                  removeData: function(e) {
                    return this.each(function() {
                      Me.remove(this, e)
                    })
                  }
                }),
                oe.extend({
                  queue: function(e, t, r) {
                    var n;
                    if (e)
                      return t = (t || 'fx') + 'queue', n = Se.get(e, t),
                             r &&
                                 (!n || oe.isArray(r) ?
                                      n = Se.access(e, t, oe.makeArray(r)) :
                                      n.push(r)),
                             n || []
                  },
                  dequeue: function(e, t) {
                    t = t || 'fx';
                    var r = oe.queue(e, t), n = r.length, i = r.shift(),
                        o = oe._queueHooks(e, t), s = function() {
                          oe.dequeue(e, t)
                        };
                    'inprogress' === i && (i = r.shift(), n--),
                        i &&
                        ('fx' === t && r.unshift('inprogress'), delete o.stop,
                         i.call(e, s, o)),
                        !n && o && o.empty.fire()
                  },
                  _queueHooks: function(e, t) {
                    var r = t + 'queueHooks';
                    return Se.get(e, r) || Se.access(e, r, {
                      empty: oe.Callbacks('once memory').add(function() {
                        Se.remove(e, [t + 'queue', r])
                      })
                    })
                  }
                }),
                oe.fn.extend({
                  queue: function(e, t) {
                    var r = 2;
                    return 'string' != typeof e && (t = e, e = 'fx', r--),
                           arguments.length < r ? oe.queue(this[0], e) :
                               void 0 === t     ? this :
                                                  this.each(function() {
                                                var r = oe.queue(this, e, t);
                                                oe._queueHooks(this, e),
                                                    'fx' === e &&
                                                    'inprogress' !== r[0] &&
                                                    oe.dequeue(this, e)
                                              })
                  },
                  dequeue: function(e) {
                    return this.each(function() {
                      oe.dequeue(this, e)
                    })
                  },
                  clearQueue: function(e) {
                    return this.queue(e || 'fx', [])
                  },
                  promise: function(e, t) {
                    var r, n = 1, i = oe.Deferred(), o = this, s = this.length,
                           a = function() {
                             --n || i.resolveWith(o, [o])
                           };
                    for ('string' != typeof e && (t = e, e = void 0),
                         e = e || 'fx';
                         s--;)
                      (r = Se.get(o[s], e + 'queueHooks')) && r.empty &&
                          (n++, r.empty.add(a));
                    return a(), i.promise(t)
                  }
                });
            var Ce = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
                Te = new RegExp('^(?:([+-])=|)(' + Ce + ')([a-z%]*)$', 'i'),
                Le = ['Top', 'Right', 'Bottom', 'Left'],
                Pe =
                    function(e, t) {
                  return e = t || e,
                         'none' === oe.css(e, 'display') ||
                             !oe.contains(e.ownerDocument, e)
                },
                Ae = /^(?:checkbox|radio)$/i, De = /<([\w:-]+)/,
                Oe = /^$|\/(?:java|ecma)script/i, Fe = {
                  option: [1, '<select multiple=\'multiple\'>', '</select>'],
                  thead: [1, '<table>', '</table>'],
                  col: [2, '<table><colgroup>', '</colgroup></table>'],
                  tr: [2, '<table><tbody>', '</tbody></table>'],
                  td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],
                  _default: [0, '', '']
                };
            Fe.optgroup = Fe.option,
            Fe.tbody = Fe.tfoot = Fe.colgroup = Fe.caption = Fe.thead,
            Fe.th = Fe.td;
            var qe = /<|&#?\w+;/;
            !function() {
              var e = $.createDocumentFragment(),
                  t = e.appendChild($.createElement('div')),
                  r = $.createElement('input');
              r.setAttribute('type', 'radio'),
                  r.setAttribute('checked', 'checked'),
                  r.setAttribute('name', 't'), t.appendChild(r),
                  ie.checkClone =
                      t.cloneNode(!0).cloneNode(!0).lastChild.checked,
                  t.innerHTML = '<textarea>x</textarea>',
                  ie.noCloneChecked = !!t.cloneNode(!0).lastChild.defaultValue
            }();
            var Ne = /^key/,
                Re = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
                Be = /^([^.]*)(?:\.(.+)|)/;
            oe.event = {
              global: {},
              add: function(e, t, r, n, i) {
                var o, s, a, l, c, u, d, p, h, f, g, m = Se.get(e);
                if (m)
                  for (r.handler && (o = r, r = o.handler, i = o.selector),
                       r.guid || (r.guid = oe.guid++),
                       (l = m.events) || (l = m.events = {}),
                       (s = m.handle) ||
                           (s = m.handle =
                                function(t) {
                                  return void 0 !== oe &&
                                          oe.event.triggered !== t.type ?
                                      oe.event.dispatch.apply(e, arguments) :
                                      void 0
                                }),
                       t = (t || '').match(xe) || [''], c = t.length;
                       c--;)
                    a = Be.exec(t[c]) || [], h = g = a[1],
                    f = (a[2] || '').split('.').sort(),
                    h &&
                        (d = oe.event.special[h] || {},
                         h = (i ? d.delegateType : d.bindType) || h,
                         d = oe.event.special[h] || {},
                         u = oe.extend(
                             {
                               type: h,
                               origType: g,
                               data: n,
                               handler: r,
                               guid: r.guid,
                               selector: i,
                               needsContext:
                                   i && oe.expr.match.needsContext.test(i),
                               namespace: f.join('.')
                             },
                             o),
                         (p = l[h]) ||
                             (p = l[h] = [], p.delegateCount = 0,
                              d.setup && !1 !== d.setup.call(e, n, f, s) ||
                                  e.addEventListener &&
                                      e.addEventListener(h, s)),
                         d.add &&
                             (d.add.call(e, u),
                              u.handler.guid || (u.handler.guid = r.guid)),
                         i ? p.splice(p.delegateCount++, 0, u) : p.push(u),
                         oe.event.global[h] = !0)
              },
              remove: function(e, t, r, n, i) {
                var o, s, a, l, c, u, d, p, h, f, g,
                    m = Se.hasData(e) && Se.get(e);
                if (m && (l = m.events)) {
                  for (t = (t || '').match(xe) || [''], c = t.length; c--;)
                    if (a = Be.exec(t[c]) || [], h = g = a[1],
                        f = (a[2] || '').split('.').sort(), h) {
                      for (d = oe.event.special[h] || {},
                          h = (n ? d.delegateType : d.bindType) || h,
                          p = l[h] || [],
                          a = a[2] &&
                               new RegExp(
                                   '(^|\\.)' + f.join('\\.(?:.*\\.|)') +
                                   '(\\.|$)'),
                          s = o = p.length;
                           o--;)
                        u = p[o],
                        !i && g !== u.origType || r && r.guid !== u.guid ||
                            a && !a.test(u.namespace) ||
                            n && n !== u.selector &&
                                ('**' !== n || !u.selector) ||
                            (p.splice(o, 1), u.selector && p.delegateCount--,
                             d.remove && d.remove.call(e, u));
                      s && !p.length &&
                          (d.teardown &&
                                   !1 !== d.teardown.call(e, f, m.handle) ||
                               oe.removeEvent(e, h, m.handle),
                           delete l[h])
                    } else
                      for (h in l) oe.event.remove(e, h + t[c], r, n, !0);
                  oe.isEmptyObject(l) && Se.remove(e, 'handle events')
                }
              },
              dispatch: function(e) {
                e = oe.event.fix(e);
                var t, r, n, i, o,
                    s = [], a = Q.call(arguments),
                    l = (Se.get(this, 'events') || {})[e.type] || [],
                    c = oe.event.special[e.type] || {};
                if (a[0] = e, e.delegateTarget = this,
                    !c.preDispatch || !1 !== c.preDispatch.call(this, e)) {
                  for (s = oe.event.handlers.call(this, e, l), t = 0;
                       (i = s[t++]) && !e.isPropagationStopped();)
                    for (e.currentTarget = i.elem, r = 0;
                         (o = i.handlers[r++]) &&
                         !e.isImmediatePropagationStopped();)
                      e.rnamespace && !e.rnamespace.test(o.namespace) ||
                          (e.handleObj = o, e.data = o.data,
                           void 0 !==
                                   (n = ((oe.event.special[o.origType] ||
                                          {}).handle ||
                                         o.handler)
                                            .apply(i.elem, a)) &&
                               !1 === (e.result = n) &&
                               (e.preventDefault(), e.stopPropagation()));
                  return c.postDispatch && c.postDispatch.call(this, e),
                         e.result
                }
              },
              handlers: function(e, t) {
                var r, n, i, o, s = [], a = t.delegateCount, l = e.target;
                if (a && l.nodeType &&
                    ('click' !== e.type || isNaN(e.button) || e.button < 1))
                  for (; l !== this; l = l.parentNode || this)
                    if (1 === l.nodeType &&
                        (!0 !== l.disabled || 'click' !== e.type)) {
                      for (n = [], r = 0; r < a; r++)
                        o = t[r], i = o.selector + ' ',
                        void 0 === n[i] &&
                            (n[i] = o.needsContext ?
                                 oe(i, this).index(l) > -1 :
                                 oe.find(i, this, null, [l]).length),
                        n[i] && n.push(o);
                      n.length && s.push({elem: l, handlers: n})
                    }
                return a < t.length &&
                           s.push({elem: this, handlers: t.slice(a)}),
                       s
              },
              props:
                  'altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which'
                      .split(' '),
              fixHooks: {},
              keyHooks: {
                props: 'char charCode key keyCode'.split(' '),
                filter: function(e, t) {
                  return null == e.which &&
                             (e.which =
                                  null != t.charCode ? t.charCode : t.keyCode),
                         e
                }
              },
              mouseHooks: {
                props:
                    'button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement'
                        .split(' '),
                filter: function(e, t) {
                  var r, n, i, o = t.button;
                  return null == e.pageX && null != t.clientX &&
                             (r = e.target.ownerDocument || $,
                              n = r.documentElement, i = r.body,
                              e.pageX = t.clientX +
                                  (n && n.scrollLeft || i && i.scrollLeft ||
                                   0) -
                                  (n && n.clientLeft || i && i.clientLeft || 0),
                              e.pageY = t.clientY +
                                  (n && n.scrollTop || i && i.scrollTop || 0) -
                                  (n && n.clientTop || i && i.clientTop || 0)),
                         e.which || void 0 === o ||
                             (e.which = 1 & o ? 1 :
                                  2 & o       ? 3 :
                                  4 & o       ? 2 :
                                                0),
                         e
                }
              },
              fix: function(e) {
                if (e[oe.expando]) return e;
                var t, r, n, i = e.type, o = e, s = this.fixHooks[i];
                for (s ||
                         (this.fixHooks[i] = s = Re.test(i) ? this.mouseHooks :
                              Ne.test(i)                    ? this.keyHooks :
                                                              {}),
                     n = s.props ? this.props.concat(s.props) : this.props,
                     e = new oe.Event(o), t = n.length;
                     t--;)
                  r = n[t], e[r] = o[r];
                return e.target || (e.target = $),
                       3 === e.target.nodeType &&
                           (e.target = e.target.parentNode),
                       s.filter ? s.filter(e, o) : e
              },
              special: {
                load: {noBubble: !0},
                focus: {
                  trigger: function() {
                    if (this !== m() && this.focus) return this.focus(), !1
                  },
                  delegateType: 'focusin'
                },
                blur: {
                  trigger: function() {
                    if (this === m() && this.blur) return this.blur(), !1
                  },
                  delegateType: 'focusout'
                },
                click: {
                  trigger: function() {
                    if ('checkbox' === this.type && this.click &&
                        oe.nodeName(this, 'input'))
                      return this.click(), !1
                  },
                  _default: function(e) {
                    return oe.nodeName(e.target, 'a')
                  }
                },
                beforeunload: {
                  postDispatch: function(e) {
                    void 0 !== e.result && e.originalEvent &&
                        (e.originalEvent.returnValue = e.result)
                  }
                }
              }
            },
            oe.removeEvent =
                function(e, t, r) {
              e.removeEventListener && e.removeEventListener(t, r)
            },
            oe.Event =
                function(e, t) {
              if (!(this instanceof oe.Event)) return new oe.Event(e, t);
              e && e.type ? (this.originalEvent = e, this.type = e.type,
                             this.isDefaultPrevented = e.defaultPrevented ||
                                     void 0 === e.defaultPrevented &&
                                         !1 === e.returnValue ?
                                 f :
                                 g) :
                            this.type = e,
                            t && oe.extend(this, t),
                            this.timeStamp = e && e.timeStamp || oe.now(),
                            this[oe.expando] = !0
            },
            oe.Event.prototype = {
              constructor: oe.Event,
              isDefaultPrevented: g,
              isPropagationStopped: g,
              isImmediatePropagationStopped: g,
              isSimulated: !1,
              preventDefault: function() {
                var e = this.originalEvent;
                this.isDefaultPrevented = f,
                e && !this.isSimulated && e.preventDefault()
              },
              stopPropagation: function() {
                var e = this.originalEvent;
                this.isPropagationStopped = f,
                e && !this.isSimulated && e.stopPropagation()
              },
              stopImmediatePropagation: function() {
                var e = this.originalEvent;
                this.isImmediatePropagationStopped = f,
                e && !this.isSimulated && e.stopImmediatePropagation(),
                this.stopPropagation()
              }
            },
            oe.each(
                {
                  mouseenter: 'mouseover',
                  mouseleave: 'mouseout',
                  pointerenter: 'pointerover',
                  pointerleave: 'pointerout'
                },
                function(e, t) {
                  oe.event.special[e] = {
                    delegateType: t,
                    bindType: t,
                    handle: function(e) {
                      var r, n = this, i = e.relatedTarget, o = e.handleObj;
                      return i && (i === n || oe.contains(n, i)) ||
                                 (e.type = o.origType,
                                  r = o.handler.apply(this, arguments),
                                  e.type = t),
                             r
                    }
                  }
                }),
            oe.fn.extend({
              on: function(e, t, r, n) {
                return y(this, e, t, r, n)
              },
              one: function(e, t, r, n) {
                return y(this, e, t, r, n, 1)
              },
              off: function(e, t, r) {
                var n, i;
                if (e && e.preventDefault && e.handleObj)
                  return n = e.handleObj,
                         oe(e.delegateTarget)
                             .off(
                                 n.namespace ? n.origType + '.' + n.namespace :
                                               n.origType,
                                 n.selector, n.handler),
                         this;
                if ('object' == typeof e) {
                  for (i in e) this.off(i, t, e[i]);
                  return this
                }
                return !1 !== t && 'function' != typeof t ||
                           (r = t, t = void 0),
                       !1 === r && (r = g), this.each(function() {
                         oe.event.remove(this, e, r, t)
                       })
              }
            });
            var je =
                    /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
                Ve = /<script|<style|<link/i,
                Ue = /checked\s*(?:[^=]|=\s*.checked.)/i, ze = /^true\/(.*)/,
                Ge = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
            oe.extend({
              htmlPrefilter: function(e) {
                return e.replace(je, '<$1></$2>')
              },
              clone: function(e, t, r) {
                var n, i, o, s, a = e.cloneNode(!0),
                                l = oe.contains(e.ownerDocument, e);
                if (!(ie.noCloneChecked ||
                      1 !== e.nodeType && 11 !== e.nodeType || oe.isXMLDoc(e)))
                  for (s = d(a), o = d(e), n = 0, i = o.length; n < i; n++)
                    _(o[n], s[n]);
                if (t)
                  if (r)
                    for (o = o || d(e), s = s || d(a), n = 0, i = o.length;
                         n < i; n++)
                      w(o[n], s[n]);
                  else
                    w(e, a);
                return s = d(a, 'script'),
                       s.length > 0 && p(s, !l && d(e, 'script')), a
              },
              cleanData: function(e) {
                for (var t, r, n, i = oe.event.special, o = 0;
                     void 0 !== (r = e[o]); o++)
                  if (Ee(r)) {
                    if (t = r[Se.expando]) {
                      if (t.events)
                        for (n in t.events)
                          i[n] ? oe.event.remove(r, n) :
                                 oe.removeEvent(r, n, t.handle);
                      r[Se.expando] = void 0
                    }
                    r[Me.expando] && (r[Me.expando] = void 0)
                  }
              }
            }),
                oe.fn.extend({
                  domManip: E,
                  detach: function(e) {
                    return S(this, e, !0)
                  },
                  remove: function(e) {
                    return S(this, e)
                  },
                  text: function(e) {
                    return _e(this, function(e) {
                      return void 0 === e ?
                          oe.text(this) :
                          this.empty().each(function() {
                            1 !== this.nodeType && 11 !== this.nodeType &&
                                    9 !== this.nodeType ||
                                (this.textContent = e)
                          })
                    }, null, e, arguments.length)
                  },
                  append: function() {
                    return E(this, arguments, function(e) {
                      if (1 === this.nodeType || 11 === this.nodeType ||
                          9 === this.nodeType) {
                        v(this, e).appendChild(e)
                      }
                    })
                  },
                  prepend: function() {
                    return E(this, arguments, function(e) {
                      if (1 === this.nodeType || 11 === this.nodeType ||
                          9 === this.nodeType) {
                        var t = v(this, e);
                        t.insertBefore(e, t.firstChild)
                      }
                    })
                  },
                  before: function() {
                    return E(this, arguments, function(e) {
                      this.parentNode && this.parentNode.insertBefore(e, this)
                    })
                  },
                  after: function() {
                    return E(this, arguments, function(e) {
                      this.parentNode &&
                          this.parentNode.insertBefore(e, this.nextSibling)
                    })
                  },
                  empty: function() {
                    for (var e, t = 0; null != (e = this[t]); t++)
                      1 === e.nodeType &&
                          (oe.cleanData(d(e, !1)), e.textContent = '');
                    return this
                  },
                  clone: function(e, t) {
                    return e = null != e && e, t = null == t ? e : t,
                           this.map(function() {
                             return oe.clone(this, e, t)
                           })
                  },
                  html: function(e) {
                    return _e(this, function(e) {
                      var t = this[0] || {}, r = 0, n = this.length;
                      if (void 0 === e && 1 === t.nodeType) return t.innerHTML;
                      if ('string' == typeof e && !Ve.test(e) &&
                          !Fe[(De.exec(e) || ['', ''])[1].toLowerCase()]) {
                        e = oe.htmlPrefilter(e);
                        try {
                          for (; r < n; r++)
                            t = this[r] || {},
                            1 === t.nodeType &&
                                (oe.cleanData(d(t, !1)), t.innerHTML = e);
                          t = 0
                        } catch (e) {
                        }
                      }
                      t && this.empty().append(e)
                    }, null, e, arguments.length)
                  },
                  replaceWith: function() {
                    var e = [];
                    return E(this, arguments, function(t) {
                      var r = this.parentNode;
                      oe.inArray(this, e) < 0 &&
                          (oe.cleanData(d(this)), r && r.replaceChild(t, this))
                    }, e)
                  }
                }),
                oe.each(
                    {
                      appendTo: 'append',
                      prependTo: 'prepend',
                      insertBefore: 'before',
                      insertAfter: 'after',
                      replaceAll: 'replaceWith'
                    },
                    function(e, t) {
                      oe.fn[e] = function(e) {
                        for (var r, n = [], i = oe(e), o = i.length - 1, s = 0;
                             s <= o; s++)
                          r = s === o ? this : this.clone(!0), oe(i[s])[t](r),
                          J.apply(n, r.get());
                        return this.pushStack(n)
                      }
                    });
            var Ke, We = {HTML: 'block', BODY: 'block'}, He = /^margin/,
                    Ye = new RegExp('^(' + Ce + ')(?!px)[a-z%]+$', 'i'),
                    Xe = function(t) {
                      var r = t.ownerDocument.defaultView;
                      return r && r.opener || (r = e), r.getComputedStyle(t)
                    }, $e = function(e, t, r, n) {
                      var i, o, s = {};
                      for (o in t) s[o] = e.style[o], e.style[o] = t[o];
                      i = r.apply(e, n || []);
                      for (o in t) e.style[o] = s[o];
                      return i
                    }, Qe = $.documentElement;
            !function() {
              function t() {
                a.style.cssText =
                    '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%',
                a.innerHTML = '', Qe.appendChild(s);
                var t = e.getComputedStyle(a);
                r = '1%' !== t.top, o = '2px' === t.marginLeft,
                n = '4px' === t.width, a.style.marginRight = '50%',
                i = '4px' === t.marginRight, Qe.removeChild(s)
              }
              var r, n, i, o, s = $.createElement('div'),
                              a = $.createElement('div');
              a.style &&
                  (a.style.backgroundClip = 'content-box',
                   a.cloneNode(!0).style.backgroundClip = '',
                   ie.clearCloneStyle =
                       'content-box' === a.style.backgroundClip,
                   s.style.cssText =
                       'border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute',
                   s.appendChild(a), oe.extend(ie, {
                     pixelPosition: function() {
                       return t(), r
                     },
                     boxSizingReliable: function() {
                       return null == n && t(), n
                     },
                     pixelMarginRight: function() {
                       return null == n && t(), i
                     },
                     reliableMarginLeft: function() {
                       return null == n && t(), o
                     },
                     reliableMarginRight: function() {
                       var t, r = a.appendChild($.createElement('div'));
                       return r.style.cssText = a.style.cssText =
                                  '-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0',
                              r.style.marginRight = r.style.width = '0',
                              a.style.width = '1px', Qe.appendChild(s),
                              t = !parseFloat(
                                  e.getComputedStyle(r).marginRight),
                              Qe.removeChild(s), a.removeChild(r), t
                     }
                   }))
            }();
            var Ze = /^(none|table(?!-c[ea]).+)/, Je = {
              position: 'absolute',
              visibility: 'hidden',
              display: 'block'
            },
                et = {letterSpacing: '0', fontWeight: '400'},
                tt = ['Webkit', 'O', 'Moz', 'ms'],
                rt = $.createElement('div').style;
            oe.extend({
              cssHooks: {
                opacity: {
                  get: function(e, t) {
                    if (t) {
                      var r = k(e, 'opacity');
                      return '' === r ? '1' : r
                    }
                  }
                }
              },
              cssNumber: {
                animationIterationCount: !0,
                columnCount: !0,
                fillOpacity: !0,
                flexGrow: !0,
                flexShrink: !0,
                fontWeight: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0
              },
              cssProps: {float: 'cssFloat'},
              style: function(e, t, r, n) {
                if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                  var i, o, s, a = oe.camelCase(t), l = e.style;
                  if (t = oe.cssProps[a] || (oe.cssProps[a] = T(a) || a),
                      s = oe.cssHooks[t] || oe.cssHooks[a], void 0 === r)
                    return s && 'get' in s && void 0 !== (i = s.get(e, !1, n)) ?
                        i :
                        l[t];
                  o = typeof r,
                  'string' === o && (i = Te.exec(r)) && i[1] &&
                      (r = u(e, t, i), o = 'number'),
                  null != r && r === r &&
                      ('number' === o &&
                           (r += i && i[3] || (oe.cssNumber[a] ? '' : 'px')),
                       ie.clearCloneStyle || '' !== r ||
                           0 !== t.indexOf('background') || (l[t] = 'inherit'),
                       s && 'set' in s && void 0 === (r = s.set(e, r, n)) ||
                           (l[t] = r))
                }
              },
              css: function(e, t, r, n) {
                var i, o, s, a = oe.camelCase(t);
                return t = oe.cssProps[a] || (oe.cssProps[a] = T(a) || a),
                       s = oe.cssHooks[t] || oe.cssHooks[a],
                       s && 'get' in s && (i = s.get(e, !0, r)),
                       void 0 === i && (i = k(e, t, n)),
                       'normal' === i && t in et && (i = et[t]),
                       '' === r || r ? (o = parseFloat(i),
                                        !0 === r || isFinite(o) ? o || 0 : i) :
                                       i
              }
            }),
                oe.each(
                    ['height', 'width'],
                    function(e, t) {
                      oe.cssHooks[t] = {
                        get: function(e, r, n) {
                          if (r)
                            return Ze.test(oe.css(e, 'display')) &&
                                    0 === e.offsetWidth ?
                                $e(e, Je,
                                   function() {
                                     return A(e, t, n)
                                   }) :
                                A(e, t, n)
                        },
                        set: function(e, r, n) {
                          var i, o = n && Xe(e),
                                 s = n &&
                              P(e, t, n,
                                'border-box' === oe.css(e, 'boxSizing', !1, o),
                                o);
                          return s && (i = Te.exec(r)) &&
                                     'px' !== (i[3] || 'px') &&
                                     (e.style[t] = r, r = oe.css(e, t)),
                                 L(e, r, s)
                        }
                      }
                    }),
                oe.cssHooks
                    .marginLeft =
                    C(ie.reliableMarginLeft,
                      function(e, t) {
                        if (t)
                          return (parseFloat(k(e, 'marginLeft')) ||
                                  e.getBoundingClientRect().left -
                                      $e(e, {marginLeft: 0},
                                         function() {
                                           return e.getBoundingClientRect().left
                                         })) +
                              'px'
                      }),
         oe.cssHooks.marginRight = C(
             ie.reliableMarginRight,
             function(e, t) {
               if (t)
                 return $e(e, {display: 'inline-block'}, k, [e, 'marginRight'])
             }),
         oe.each(
             {margin: '', padding: '', border: 'Width'},
             function(e, t) {
               oe.cssHooks[e + t] = {
                 expand: function(r) {
                   for (var n = 0, i = {},
                            o = 'string' == typeof r ? r.split(' ') : [r];
                        n < 4; n++)
                     i[e + Le[n] + t] = o[n] || o[n - 2] || o[0];
                   return i
                 }
               },
                               He.test(e) || (oe.cssHooks[e + t].set = L)
             }),
         oe.fn.extend({
           css: function(e, t) {
             return _e(this, function(e, t, r) {
               var n, i, o = {}, s = 0;
               if (oe.isArray(t)) {
                 for (n = Xe(e), i = t.length; s < i; s++)
                   o[t[s]] = oe.css(e, t[s], !1, n);
                 return o
               }
               return void 0 !== r ? oe.style(e, t, r) : oe.css(e, t)
             }, e, t, arguments.length > 1)
           },
           show: function() {
             return D(this, !0)
           },
           hide: function() {
             return D(this)
           },
           toggle: function(e) {
             return 'boolean' == typeof e ?
                 e ? this.show() : this.hide() :
                 this.each(function() {
                   Pe(this) ? oe(this).show() : oe(this).hide()
                 })
           }
         }),
         oe.Tween = O, O.prototype = {
           constructor: O,
           init: function(e, t, r, n, i, o) {
             this.elem = e, this.prop = r,
             this.easing = i || oe.easing._default, this.options = t,
             this.start = this.now = this.cur(), this.end = n,
             this.unit = o || (oe.cssNumber[r] ? '' : 'px')
           },
           cur: function() {
             var e = O.propHooks[this.prop];
             return e && e.get ? e.get(this) : O.propHooks._default.get(this)
           },
           run: function(e) {
             var t, r = O.propHooks[this.prop];
             return this.options.duration ?
                        this.pos = t = oe.easing[this.easing](
                            e, this.options.duration * e, 0, 1,
                            this.options.duration) :
                        this.pos = t = e,
                        this.now = (this.end - this.start) * t + this.start,
                        this.options.step &&
                        this.options.step.call(this.elem, this.now, this),
                        r && r.set ? r.set(this) :
                                     O.propHooks._default.set(this),
                        this
           }
         },
         O.prototype.init.prototype = O.prototype, O.propHooks = {
           _default: {
             get: function(e) {
               var t;
               return 1 !== e.elem.nodeType ||
                       null != e.elem[e.prop] && null == e.elem.style[e.prop] ?
                   e.elem[e.prop] :
                   (t = oe.css(e.elem, e.prop, ''), t && 'auto' !== t ? t : 0)
             },
             set: function(e) {
               oe.fx.step[e.prop] ? oe.fx.step[e.prop](e) :
                   1 !== e.elem.nodeType ||
                       null == e.elem.style[oe.cssProps[e.prop]] &&
                           !oe.cssHooks[e.prop] ?
                                    e.elem[e.prop] = e.now :
                                    oe.style(e.elem, e.prop, e.now + e.unit)
             }
           }
         },
         O.propHooks.scrollTop = O.propHooks.scrollLeft = {
           set: function(e) {
             e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
           }
         },
         oe.easing = {
           linear: function(e) {
             return e
           },
           swing: function(e) {
             return .5 - Math.cos(e * Math.PI) / 2
           },
           _default: 'swing'
         },
         oe.fx = O.prototype.init, oe.fx.step = {};
            var nt, it, ot = /^(?:toggle|show|hide)$/, st = /queueHooks$/;
            oe.Animation = oe.extend(j, {
              tweeners: {
                '*': [function(e, t) {
                  var r = this.createTween(e, t);
                  return u(r.elem, e, Te.exec(t), r), r
                }]
              },
              tweener: function(e, t) {
                oe.isFunction(e) ? (t = e, e = ['*']) : e = e.match(xe);
                for (var r, n = 0, i = e.length; n < i; n++)
                  r = e[n], j.tweeners[r] = j.tweeners[r] || [],
                  j.tweeners[r].unshift(t)
              },
              prefilters: [R],
              prefilter: function(e, t) {
                t ? j.prefilters.unshift(e) : j.prefilters.push(e)
              }
            }),
            oe.speed =
                function(e, t, r) {
              var n = e && 'object' == typeof e ? oe.extend({}, e) : {
                complete: r || !r && t || oe.isFunction(e) && e,
                duration: e,
                easing: r && t || t && !oe.isFunction(t) && t
              };
              return n.duration = oe.fx.off            ? 0 :
                         'number' == typeof n.duration ? n.duration :
                         n.duration in oe.fx.speeds ? oe.fx.speeds[n.duration] :
                                                      oe.fx.speeds._default,
                     null != n.queue && !0 !== n.queue || (n.queue = 'fx'),
                     n.old = n.complete, n.complete = function() {
                       oe.isFunction(n.old) && n.old.call(this),
                           n.queue && oe.dequeue(this, n.queue)
                     }, n
            },
            oe.fn.extend({
              fadeTo: function(e, t, r, n) {
                return this.filter(Pe)
                    .css('opacity', 0)
                    .show()
                    .end()
                    .animate({opacity: t}, e, r, n)
              },
              animate: function(e, t, r, n) {
                var i = oe.isEmptyObject(e), o = oe.speed(t, r, n),
                    s = function() {
                      var t = j(this, oe.extend({}, e), o);
                      (i || Se.get(this, 'finish')) && t.stop(!0)
                    };
                return s.finish = s,
                       i || !1 === o.queue ? this.each(s) :
                                             this.queue(o.queue, s)
              },
              stop: function(e, t, r) {
                var n = function(e) {
                  var t = e.stop;
                  delete e.stop, t(r)
                };
                return 'string' != typeof e && (r = t, t = e, e = void 0),
                       t && !1 !== e && this.queue(e || 'fx', []),
                       this.each(function() {
                         var t = !0, i = null != e && e + 'queueHooks',
                             o = oe.timers, s = Se.get(this);
                         if (i)
                           s[i] && s[i].stop && n(s[i]);
                         else
                           for (i in s)
                             s[i] && s[i].stop && st.test(i) && n(s[i]);
                         for (i = o.length; i--;)
                           o[i].elem !== this ||
                               null != e && o[i].queue !== e ||
                               (o[i].anim.stop(r), t = !1, o.splice(i, 1));
                         !t && r || oe.dequeue(this, e)
                       })
              },
              finish: function(e) {
                return !1 !== e && (e = e || 'fx'), this.each(function() {
                  var t, r = Se.get(this), n = r[e + 'queue'],
                         i = r[e + 'queueHooks'], o = oe.timers,
                         s = n ? n.length : 0;
                  for (r.finish = !0, oe.queue(this, e, []),
                      i && i.stop && i.stop.call(this, !0), t = o.length;
                       t--;)
                    o[t].elem === this && o[t].queue === e &&
                        (o[t].anim.stop(!0), o.splice(t, 1));
                  for (t = 0; t < s; t++)
                    n[t] && n[t].finish && n[t].finish.call(this);
                  delete r.finish
                })
              }
            }),
            oe.each(
                ['toggle', 'show', 'hide'],
                function(e, t) {
                  var r = oe.fn[t];
                  oe.fn[t] = function(e, n, i) {
                    return null == e || 'boolean' == typeof e ?
                        r.apply(this, arguments) :
                        this.animate(q(t, !0), e, n, i)
                  }
                }),
            oe.each(
                {
                  slideDown: q('show'),
                  slideUp: q('hide'),
                  slideToggle: q('toggle'),
                  fadeIn: {opacity: 'show'},
                  fadeOut: {opacity: 'hide'},
                  fadeToggle: {opacity: 'toggle'}
                },
                function(e, t) {
                  oe.fn[e] = function(e, r, n) {
                    return this.animate(t, e, r, n)
                  }
                }),
            oe.timers = [],
            oe.fx.tick =
                function() {
              var e, t = 0, r = oe.timers;
              for (nt = oe.now(); t < r.length; t++)
                (e = r[t])() || r[t] !== e || r.splice(t--, 1);
              r.length || oe.fx.stop(), nt = void 0
            },
            oe.fx.timer =
                function(e) {
              oe.timers.push(e), e() ? oe.fx.start() : oe.timers.pop()
            },
            oe.fx.interval = 13,
            oe.fx.start =
                function() {
              it || (it = e.setInterval(oe.fx.tick, oe.fx.interval))
            },
            oe.fx.stop =
                function() {
              e.clearInterval(it), it = null
            },
            oe.fx.speeds = {slow: 600, fast: 200, _default: 400},
            oe.fn.delay = function(t, r) {
              return t = oe.fx ? oe.fx.speeds[t] || t : t, r = r || 'fx',
                     this.queue(r, function(r, n) {
                       var i = e.setTimeout(r, t);
                       n.stop = function() {
                         e.clearTimeout(i)
                       }
                     })
            }, function() {
              var e = $.createElement('input'), t = $.createElement('select'),
                  r = t.appendChild($.createElement('option'));
              e.type = 'checkbox', ie.checkOn = '' !== e.value,
              ie.optSelected = r.selected, t.disabled = !0,
              ie.optDisabled = !r.disabled, e = $.createElement('input'),
              e.value = 't', e.type = 'radio', ie.radioValue = 't' === e.value
            }();
            var at, lt = oe.expr.attrHandle;
            oe.fn.extend({
              attr: function(e, t) {
                return _e(this, oe.attr, e, t, arguments.length > 1)
              },
              removeAttr: function(e) {
                return this.each(function() {
                  oe.removeAttr(this, e)
                })
              }
            }),
                oe.extend({
                  attr: function(e, t, r) {
                    var n, i, o = e.nodeType;
                    if (3 !== o && 8 !== o && 2 !== o)
                      return void 0 === e.getAttribute ?
                          oe.prop(e, t, r) :
                          (1 === o && oe.isXMLDoc(e) ||
                               (t = t.toLowerCase(),
                                i = oe.attrHooks[t] ||
                                    (oe.expr.match.bool.test(t) ? at : void 0)),
                           void 0 !== r ?
                               null === r ? void oe.removeAttr(e, t) :
                                   i && 'set' in i &&
                                       void 0 !== (n = i.set(e, r, t)) ?
                                            n :
                                            (e.setAttribute(t, r + ''), r) :
                               i && 'get' in i && null !== (n = i.get(e, t)) ?
                               n :
                               (n = oe.find.attr(e, t), null == n ? void 0 : n))
                  },
                  attrHooks: {
                    type: {
                      set: function(e, t) {
                        if (!ie.radioValue && 'radio' === t &&
                            oe.nodeName(e, 'input')) {
                          var r = e.value;
                          return e.setAttribute('type', t), r && (e.value = r),
                                 t
                        }
                      }
                    }
                  },
                  removeAttr: function(e, t) {
                    var r, n, i = 0, o = t && t.match(xe);
                    if (o && 1 === e.nodeType)
                      for (; r = o[i++];)
                        n = oe.propFix[r] || r,
                        oe.expr.match.bool.test(r) && (e[n] = !1),
                        e.removeAttribute(r)
                  }
                }),
                at = {
                  set: function(e, t, r) {
                    return !1 === t ? oe.removeAttr(e, r) :
                                      e.setAttribute(r, r),
                           r
                  }
                },
                oe.each(
                    oe.expr.match.bool.source.match(/\w+/g), function(e, t) {
                      var r = lt[t] || oe.find.attr;
                      lt[t] = function(e, t, n) {
                        var i, o;
                        return n ||
                                   (o = lt[t], lt[t] = i,
                                    i = null != r(e, t, n) ? t.toLowerCase() :
                                                             null,
                                    lt[t] = o),
                               i
                      }
                    });
            var ct = /^(?:input|select|textarea|button)$/i,
                ut = /^(?:a|area)$/i;
            oe.fn.extend({
              prop: function(e, t) {
                return _e(this, oe.prop, e, t, arguments.length > 1)
              },
              removeProp: function(e) {
                return this.each(function() {
                  delete this[oe.propFix[e] || e]
                })
              }
            }),
                oe.extend({
                  prop: function(e, t, r) {
                    var n, i, o = e.nodeType;
                    if (3 !== o && 8 !== o && 2 !== o)
                      return 1 === o && oe.isXMLDoc(e) ||
                                 (t = oe.propFix[t] || t, i = oe.propHooks[t]),
                             void 0 !== r ? i && 'set' in i &&
                                         void 0 !== (n = i.set(e, r, t)) ?
                                            n :
                                            e[t] = r :
                                 i && 'get' in i && null !== (n = i.get(e, t)) ?
                                            n :
                                            e[t]
                  },
                  propHooks: {
                    tabIndex: {
                      get: function(e) {
                        var t = oe.find.attr(e, 'tabindex');
                        return t ? parseInt(t, 10) :
                            ct.test(e.nodeName) ||
                                ut.test(e.nodeName) && e.href ?
                                   0 :
                                   -1
                      }
                    }
                  },
                  propFix: {for: 'htmlFor', class: 'className'}
                }),
                ie.optSelected || (oe.propHooks.selected = {
                  get: function(e) {
                    var t = e.parentNode;
                    return t && t.parentNode && t.parentNode.selectedIndex, null
                  },
                  set: function(e) {
                    var t = e.parentNode;
                    t &&
                        (t.selectedIndex,
                         t.parentNode && t.parentNode.selectedIndex)
                  }
                }),
                oe.each(
                    [
                      'tabIndex', 'readOnly', 'maxLength', 'cellSpacing',
                      'cellPadding', 'rowSpan', 'colSpan', 'useMap',
                      'frameBorder', 'contentEditable'
                    ],
                    function() {
                      oe.propFix[this.toLowerCase()] = this
                    });
            var dt = /[\t\r\n\f]/g;
            oe.fn.extend({
              addClass: function(e) {
                var t, r, n, i, o, s, a, l = 0;
                if (oe.isFunction(e))
                  return this.each(function(t) {
                    oe(this).addClass(e.call(this, t, V(this)))
                  });
                if ('string' == typeof e && e)
                  for (t = e.match(xe) || []; r = this[l++];)
                    if (i = V(r),
                        n = 1 === r.nodeType &&
                            (' ' + i + ' ').replace(dt, ' ')) {
                      for (s = 0; o = t[s++];)
                        n.indexOf(' ' + o + ' ') < 0 && (n += o + ' ');
                      a = oe.trim(n), i !== a && r.setAttribute('class', a)
                    }
                return this
              },
              removeClass: function(e) {
                var t, r, n, i, o, s, a, l = 0;
                if (oe.isFunction(e))
                  return this.each(function(t) {
                    oe(this).removeClass(e.call(this, t, V(this)))
                  });
                if (!arguments.length) return this.attr('class', '');
                if ('string' == typeof e && e)
                  for (t = e.match(xe) || []; r = this[l++];)
                    if (i = V(r),
                        n = 1 === r.nodeType &&
                            (' ' + i + ' ').replace(dt, ' ')) {
                      for (s = 0; o = t[s++];)
                        for (; n.indexOf(' ' + o + ' ') > -1;)
                          n = n.replace(' ' + o + ' ', ' ');
                      a = oe.trim(n), i !== a && r.setAttribute('class', a)
                    }
                return this
              },
              toggleClass: function(e, t) {
                var r = typeof e;
                return 'boolean' == typeof t && 'string' === r ?
                    t ? this.addClass(e) : this.removeClass(e) :
                    oe.isFunction(e) ?
                    this.each(function(r) {
                      oe(this).toggleClass(e.call(this, r, V(this), t), t)
                    }) :
                    this.each(function() {
                      var t, n, i, o;
                      if ('string' === r)
                        for (n = 0, i = oe(this), o = e.match(xe) || [];
                             t = o[n++];)
                          i.hasClass(t) ? i.removeClass(t) : i.addClass(t);
                      else
                        void 0 !== e && 'boolean' !== r ||
                            (t = V(this), t && Se.set(this, '__className__', t),
                             this.setAttribute &&
                                 this.setAttribute(
                                     'class',
                                     t || !1 === e ?
                                         '' :
                                         Se.get(this, '__className__') || ''))
                    })
              },
              hasClass: function(e) {
                var t, r, n = 0;
                for (t = ' ' + e + ' '; r = this[n++];)
                  if (1 === r.nodeType &&
                      (' ' + V(r) + ' ').replace(dt, ' ').indexOf(t) > -1)
                    return !0;
                return !1
              }
            });
            var pt = /\r/g, ht = /[\x20\t\r\n\f]+/g;
            oe.fn.extend({
              val: function(e) {
                var t, r, n, i = this[0];
                {
                  if (arguments.length)
                    return n = oe.isFunction(e), this.each(function(r) {
                      var i;
                      1 === this.nodeType &&
                          (i = n ? e.call(this, r, oe(this).val()) : e,
                           null == i                ? i = '' :
                               'number' == typeof i ? i += '' :
                                                      oe.isArray(i) &&
                                   (i = oe.map(
                                        i,
                                        function(e) {
                                          return null == e ? '' : e + ''
                                        })),
                           (t = oe.valHooks[this.type] ||
                                oe.valHooks[this.nodeName.toLowerCase()]) &&
                                   'set' in t &&
                                   void 0 !== t.set(this, i, 'value') ||
                               (this.value = i))
                    });
                  if (i)
                    return (t = oe.valHooks[i.type] ||
                                oe.valHooks[i.nodeName.toLowerCase()]) &&
                            'get' in t && void 0 !== (r = t.get(i, 'value')) ?
                        r :
                        (r = i.value,
                         'string' == typeof r ? r.replace(pt, '') :
                             null == r        ? '' :
                                                r)
                }
              }
            }),
                oe.extend({
                  valHooks: {
                    option: {
                      get: function(e) {
                        var t = oe.find.attr(e, 'value');
                        return null != t ? t :
                                           oe.trim(oe.text(e)).replace(ht, ' ')
                      }
                    },
                    select: {
                      get: function(e) {
                        for (var t, r, n = e.options, i = e.selectedIndex,
                                       o = 'select-one' === e.type || i < 0,
                                       s = o ? null : [],
                                       a = o ? i + 1 : n.length,
                                       l = i < 0 ? a :
                                 o               ? i :
                                                   0;
                             l < a; l++)
                          if (r = n[l],
                              (r.selected || l === i) &&
                                  (ie.optDisabled ?
                                       !r.disabled :
                                       null === r.getAttribute('disabled')) &&
                                  (!r.parentNode.disabled ||
                                   !oe.nodeName(r.parentNode, 'optgroup'))) {
                            if (t = oe(r).val(), o) return t;
                            s.push(t)
                          }
                        return s
                      },
                      set: function(e, t) {
                        for (var r, n, i = e.options, o = oe.makeArray(t),
                                       s = i.length;
                             s--;)
                          n = i[s],
                          (n.selected =
                               oe.inArray(oe.valHooks.option.get(n), o) > -1) &&
                              (r = !0);
                        return r || (e.selectedIndex = -1), o
                      }
                    }
                  }
                }),
                oe.each(['radio', 'checkbox'], function() {
                  oe.valHooks[this] = {
                    set: function(e, t) {
                      if (oe.isArray(t))
                        return e.checked = oe.inArray(oe(e).val(), t) > -1
                    }
                  },
                  ie.checkOn || (oe.valHooks[this].get = function(e) {
                    return null === e.getAttribute('value') ? 'on' : e.value
                  })
                });
            var ft = /^(?:focusinfocus|focusoutblur)$/;
            oe.extend(oe.event, {
              trigger: function(t, r, n, i) {
                var o, s, a, l, c, u, d,
                    p = [n || $], h = ne.call(t, 'type') ? t.type : t,
                    f = ne.call(t, 'namespace') ? t.namespace.split('.') : [];
                if (s = a = n = n || $,
                    3 !== n.nodeType && 8 !== n.nodeType &&
                        !ft.test(h + oe.event.triggered) &&
                        (h.indexOf('.') > -1 &&
                             (f = h.split('.'), h = f.shift(), f.sort()),
                         c = h.indexOf(':') < 0 && 'on' + h,
                         t = t[oe.expando] ?
                             t :
                             new oe.Event(h, 'object' == typeof t && t),
                         t.isTrigger = i ? 2 : 3, t.namespace = f.join('.'),
                         t.rnamespace = t.namespace ?
                             new RegExp(
                                 '(^|\\.)' + f.join('\\.(?:.*\\.|)') +
                                 '(\\.|$)') :
                             null,
                         t.result = void 0, t.target || (t.target = n),
                         r = null == r ? [t] : oe.makeArray(r, [t]),
                         d = oe.event.special[h] || {},
                         i || !d.trigger || !1 !== d.trigger.apply(n, r))) {
                  if (!i && !d.noBubble && !oe.isWindow(n)) {
                    for (l = d.delegateType || h,
                        ft.test(l + h) || (s = s.parentNode);
                         s; s = s.parentNode)
                      p.push(s), a = s;
                    a === (n.ownerDocument || $) &&
                        p.push(a.defaultView || a.parentWindow || e)
                  }
                  for (o = 0; (s = p[o++]) && !t.isPropagationStopped();)
                    t.type = o > 1 ? l : d.bindType || h,
                    u = (Se.get(s, 'events') || {})[t.type] &&
                        Se.get(s, 'handle'),
                    u && u.apply(s, r),
                    (u = c && s[c]) && u.apply && Ee(s) &&
                        (t.result = u.apply(s, r),
                         !1 === t.result && t.preventDefault());
                  return t.type = h,
                         i || t.isDefaultPrevented() ||
                             d._default &&
                                 !1 !== d._default.apply(p.pop(), r) ||
                             !Ee(n) ||
                             c && oe.isFunction(n[h]) && !oe.isWindow(n) &&
                                 (a = n[c], a && (n[c] = null),
                                  oe.event.triggered = h, n[h](),
                                  oe.event.triggered = void 0, a && (n[c] = a)),
                         t.result
                }
              },
              simulate: function(e, t, r) {
                var n = oe.extend(new oe.Event, r, {type: e, isSimulated: !0});
                oe.event.trigger(n, null, t)
              }
            }),
                oe.fn.extend({
                  trigger: function(e, t) {
                    return this.each(function() {
                      oe.event.trigger(e, t, this)
                    })
                  },
                  triggerHandler: function(e, t) {
                    var r = this[0];
                    if (r) return oe.event.trigger(e, t, r, !0)
                  }
                }),
                oe.each(
                    'blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu'
                        .split(' '),
                    function(e, t) {
                      oe.fn[t] = function(e, r) {
                        return arguments.length > 0 ? this.on(t, null, e, r) :
                                                      this.trigger(t)
                      }
                    }),
                oe.fn.extend({
                  hover: function(e, t) {
                    return this.mouseenter(e).mouseleave(t || e)
                  }
                }),
                ie.focusin = 'onfocusin' in e,
                ie.focusin ||
                oe.each({focus: 'focusin', blur: 'focusout'}, function(e, t) {
                  var r = function(e) {
                    oe.event.simulate(t, e.target, oe.event.fix(e))
                  };
                  oe.event.special[t] = {
                    setup: function() {
                      var n = this.ownerDocument || this, i = Se.access(n, t);
                      i || n.addEventListener(e, r, !0),
                          Se.access(n, t, (i || 0) + 1)
                    },
                    teardown: function() {
                      var n = this.ownerDocument || this,
                          i = Se.access(n, t) - 1;
                      i ? Se.access(n, t, i) :
                          (n.removeEventListener(e, r, !0), Se.remove(n, t))
                    }
                  }
                });
            var gt = e.location, mt = oe.now(), yt = /\?/;
            oe.parseJSON = function(e) {
              return JSON.parse(e + '')
            }, oe.parseXML = function(t) {
              var r;
              if (!t || 'string' != typeof t) return null;
              try {
                r = (new e.DOMParser).parseFromString(t, 'text/xml')
              } catch (e) {
                r = void 0
              }
              return r && !r.getElementsByTagName('parsererror').length ||
                         oe.error('Invalid XML: ' + t),
                     r
            };
            var vt = /#.*$/, bt = /([?&])_=[^&]*/,
                xt = /^(.*?):[ \t]*([^\r\n]*)$/gm,
                wt =
                    /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
                _t = /^(?:GET|HEAD)$/, Et = /^\/\//, St = {}, Mt = {},
                It = '*/'.concat('*'), kt = $.createElement('a');
            kt.href = gt.href, oe.extend({
              active: 0,
              lastModified: {},
              etag: {},
              ajaxSettings: {
                url: gt.href,
                type: 'GET',
                isLocal: wt.test(gt.protocol),
                global: !0,
                processData: !0,
                async: !0,
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                accepts: {
                  '*': It,
                  text: 'text/plain',
                  html: 'text/html',
                  xml: 'application/xml, text/xml',
                  json: 'application/json, text/javascript'
                },
                contents: {xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/},
                responseFields: {
                  xml: 'responseXML',
                  text: 'responseText',
                  json: 'responseJSON'
                },
                converters: {
                  '* text': String,
                  'text html': !0,
                  'text json': oe.parseJSON,
                  'text xml': oe.parseXML
                },
                flatOptions: {url: !0, context: !0}
              },
              ajaxSetup: function(e, t) {
                return t ? G(G(e, oe.ajaxSettings), t) : G(oe.ajaxSettings, e)
              },
              ajaxPrefilter: U(St),
              ajaxTransport: U(Mt),
              ajax: function(t, r) {
                function n(t, r, n, a) {
                  var c, d, v, b, w, E = r;
                  2 !== x &&
                      (x = 2, l && e.clearTimeout(l), i = void 0, s = a || '',
                       _.readyState = t > 0 ? 4 : 0,
                       c = t >= 200 && t < 300 || 304 === t,
                       n && (b = K(p, _, n)), b = W(p, b, _, c),
                       c ? (p.ifModified &&
                                (w = _.getResponseHeader('Last-Modified'),
                                 w && (oe.lastModified[o] = w),
                                 (w = _.getResponseHeader('etag')) &&
                                     (oe.etag[o] = w)),
                            204 === t || 'HEAD' === p.type ? E = 'nocontent' :
                                304 === t                  ? E = 'notmodified' :
                                            (E = b.state, d = b.data,
                                             v = b.error, c = !v)) :
                           (v = E, !t && E || (E = 'error', t < 0 && (t = 0))),
                       _.status = t, _.statusText = (r || E) + '',
                       c ? g.resolveWith(h, [d, E, _]) :
                           g.rejectWith(h, [_, E, v]),
                       _.statusCode(y), y = void 0,
                       u &&
                           f.trigger(
                               c ? 'ajaxSuccess' : 'ajaxError',
                               [_, p, c ? d : v]),
                       m.fireWith(h, [_, E]),
                       u &&
                           (f.trigger('ajaxComplete', [_, p]),
                            --oe.active || oe.event.trigger('ajaxStop')))
                }
                'object' == typeof t && (r = t, t = void 0), r = r || {};
                var i, o, s, a, l, c, u, d,
                    p = oe.ajaxSetup({}, r), h = p.context || p,
                    f = p.context && (h.nodeType || h.jquery) ? oe(h) :
                                                                oe.event,
                    g = oe.Deferred(), m = oe.Callbacks('once memory'),
                    y = p.statusCode || {}, v = {}, b = {}, x = 0,
                    w = 'canceled', _ = {
                      readyState: 0,
                      getResponseHeader: function(e) {
                        var t;
                        if (2 === x) {
                          if (!a)
                            for (a = {}; t = xt.exec(s);)
                              a[t[1].toLowerCase()] = t[2];
                          t = a[e.toLowerCase()]
                        }
                        return null == t ? null : t
                      },
                      getAllResponseHeaders: function() {
                        return 2 === x ? s : null
                      },
                      setRequestHeader: function(e, t) {
                        var r = e.toLowerCase();
                        return x || (e = b[r] = b[r] || e, v[e] = t), this
                      },
                      overrideMimeType: function(e) {
                        return x || (p.mimeType = e), this
                      },
                      statusCode: function(e) {
                        var t;
                        if (e)
                          if (x < 2)
                            for (t in e) y[t] = [y[t], e[t]];
                          else
                            _.always(e[_.status]);
                        return this
                      },
                      abort: function(e) {
                        var t = e || w;
                        return i && i.abort(t), n(0, t), this
                      }
                    };
                if (g.promise(_).complete = m.add, _.success = _.done,
                    _.error = _.fail,
                    p.url = ((t || p.url || gt.href) + '')
                                .replace(vt, '')
                                .replace(Et, gt.protocol + '//'),
                    p.type = r.method || r.type || p.method || p.type,
                    p.dataTypes =
                        oe.trim(p.dataType || '*').toLowerCase().match(xe) ||
                        [''],
                    null == p.crossDomain) {
                  c = $.createElement('a');
                  try {
                    c.href = p.url, c.href = c.href,
                    p.crossDomain = kt.protocol + '//' + kt.host !=
                        c.protocol + '//' + c.host
                  } catch (e) {
                    p.crossDomain = !0
                  }
                }
                if (p.data && p.processData && 'string' != typeof p.data &&
                        (p.data = oe.param(p.data, p.traditional)),
                    z(St, p, r, _), 2 === x)
                  return _;
                u = oe.event && p.global,
                u && 0 == oe.active++ && oe.event.trigger('ajaxStart'),
                p.type = p.type.toUpperCase(), p.hasContent = !_t.test(p.type),
                o = p.url,
                p.hasContent ||
                    (p.data &&
                         (o = p.url += (yt.test(o) ? '&' : '?') + p.data,
                          delete p.data),
                     !1 === p.cache &&
                         (p.url = bt.test(o) ?
                              o.replace(bt, '$1_=' + mt++) :
                              o + (yt.test(o) ? '&' : '?') + '_=' + mt++)),
                p.ifModified &&
                    (oe.lastModified[o] &&
                         _.setRequestHeader(
                             'If-Modified-Since', oe.lastModified[o]),
                     oe.etag[o] &&
                         _.setRequestHeader('If-None-Match', oe.etag[o])),
                (p.data && p.hasContent && !1 !== p.contentType ||
                 r.contentType) &&
                    _.setRequestHeader('Content-Type', p.contentType),
                _.setRequestHeader(
                    'Accept',
                    p.dataTypes[0] && p.accepts[p.dataTypes[0]] ?
                        p.accepts[p.dataTypes[0]] +
                            ('*' !== p.dataTypes[0] ? ', ' + It + '; q=0.01' :
                                                      '') :
                        p.accepts['*']);
                for (d in p.headers) _.setRequestHeader(d, p.headers[d]);
                if (p.beforeSend &&
                    (!1 === p.beforeSend.call(h, _, p) || 2 === x))
                  return _.abort();
                w = 'abort';
                for (d in {success: 1, error: 1, complete: 1}) _[d](p[d]);
                if (i = z(Mt, p, r, _)) {
                  if (_.readyState = 1, u && f.trigger('ajaxSend', [_, p]),
                      2 === x)
                    return _;
                  p.async && p.timeout > 0 && (l = e.setTimeout(function() {
                    _.abort('timeout')
                  }, p.timeout));
                  try {
                    x = 1, i.send(v, n)
                  } catch (e) {
                    if (!(x < 2)) throw e;
                    n(-1, e)
                  }
                } else
                  n(-1, 'No Transport');
                return _
              },
              getJSON: function(e, t, r) {
                return oe.get(e, t, r, 'json')
              },
              getScript: function(e, t) {
                return oe.get(e, void 0, t, 'script')
              }
            }),
            oe.each(
                ['get', 'post'],
                function(e, t) {
                  oe[t] = function(e, r, n, i) {
                    return oe.isFunction(r) && (i = i || n, n = r, r = void 0),
                           oe.ajax(oe.extend(
                               {
                                 url: e,
                                 type: t,
                                 dataType: i,
                                 data: r,
                                 success: n
                               },
                               oe.isPlainObject(e) && e))
                  }
                }),
            oe._evalUrl =
                function(e) {
              return oe.ajax({
                url: e,
                type: 'GET',
                dataType: 'script',
                async: !1,
                global: !1,
                throws: !0
              })
            },
            oe.fn.extend({
              wrapAll: function(e) {
                var t;
                return oe.isFunction(e) ?
                    this.each(function(t) {
                      oe(this).wrapAll(e.call(this, t))
                    }) :
                    (this[0] &&
                         (t = oe(e, this[0].ownerDocument).eq(0).clone(!0),
                          this[0].parentNode && t.insertBefore(this[0]),
                          t.map(function() {
                             for (var e = this; e.firstElementChild;)
                               e = e.firstElementChild;
                             return e
                           }).append(this)),
                     this)
              },
              wrapInner: function(e) {
                return oe.isFunction(e) ?
                    this.each(function(t) {
                      oe(this).wrapInner(e.call(this, t))
                    }) :
                    this.each(function() {
                      var t = oe(this), r = t.contents();
                      r.length ? r.wrapAll(e) : t.append(e)
                    })
              },
              wrap: function(e) {
                var t = oe.isFunction(e);
                return this.each(function(r) {
                  oe(this).wrapAll(t ? e.call(this, r) : e)
                })
              },
              unwrap: function() {
                return this.parent()
                    .each(function() {
                      oe.nodeName(this, 'body') ||
                          oe(this).replaceWith(this.childNodes)
                    })
                    .end()
              }
            }),
            oe.expr.filters.hidden = function(e) {
              return !oe.expr.filters.visible(e)
            }, oe.expr.filters.visible = function(e) {
              return e.offsetWidth > 0 || e.offsetHeight > 0 ||
                  e.getClientRects().length > 0
            };
            var Ct = /%20/g, Tt = /\[\]$/, Lt = /\r?\n/g,
                Pt = /^(?:submit|button|image|reset|file)$/i,
                At = /^(?:input|select|textarea|keygen)/i;
            oe.param =
                function(e, t) {
              var r, n = [], i = function(e, t) {
                t = oe.isFunction(t) ? t() :
                    null == t        ? '' :
                                       t,
                n[n.length] =
                    encodeURIComponent(e) + '=' + encodeURIComponent(t)
              };
              if (void 0 === t &&
                      (t = oe.ajaxSettings && oe.ajaxSettings.traditional),
                  oe.isArray(e) || e.jquery && !oe.isPlainObject(e))
                oe.each(e, function() {
                  i(this.name, this.value)
                });
              else
                for (r in e) H(r, e[r], t, i);
              return n.join('&').replace(Ct, '+')
            },
            oe.fn.extend({
              serialize: function() {
                return oe.param(this.serializeArray())
              },
              serializeArray: function() {
                return this
                    .map(function() {
                      var e = oe.prop(this, 'elements');
                      return e ? oe.makeArray(e) : this
                    })
                    .filter(function() {
                      var e = this.type;
                      return this.name && !oe(this).is(':disabled') &&
                          At.test(this.nodeName) && !Pt.test(e) &&
                          (this.checked || !Ae.test(e))
                    })
                    .map(function(e, t) {
                      var r = oe(this).val();
                      return null == r ?
                          null :
                          oe.isArray(r) ?
                          oe.map(
                              r,
                              function(e) {
                                return {
                                  name: t.name, value: e.replace(Lt, '\r\n')
                                }
                              }) :
                          {name: t.name, value: r.replace(Lt, '\r\n')}
                    })
                    .get()
              }
            }),
            oe.ajaxSettings.xhr = function() {
              try {
                return new e.XMLHttpRequest
              } catch (e) {
              }
            };
            var Dt = {0: 200, 1223: 204}, Ot = oe.ajaxSettings.xhr();
            ie.cors = !!Ot && 'withCredentials' in Ot, ie.ajax = Ot = !!Ot,
            oe.ajaxTransport(function(t) {
              var r, n;
              if (ie.cors || Ot && !t.crossDomain) return {
                  send: function(i, o) {
                    var s, a = t.xhr();
                    if (a.open(t.type, t.url, t.async, t.username, t.password),
                        t.xhrFields)
                      for (s in t.xhrFields) a[s] = t.xhrFields[s];
                    t.mimeType && a.overrideMimeType &&
                        a.overrideMimeType(t.mimeType),
                        t.crossDomain || i['X-Requested-With'] ||
                        (i['X-Requested-With'] = 'XMLHttpRequest');
                    for (s in i) a.setRequestHeader(s, i[s]);
                    r =
                        function(e) {
                      return function() {
                        r &&
                            (r = n = a.onload = a.onerror = a.onabort =
                                 a.onreadystatechange = null,
                             'abort' === e ?
                                 a.abort() :
                                 'error' === e ?
                                 'number' != typeof a.status ?
                                 o(0, 'error') :
                                 o(a.status, a.statusText) :
                                 o(Dt[a.status] || a.status, a.statusText,
                                   'text' !== (a.responseType || 'text') ||
                                           'string' != typeof a.responseText ?
                                       {binary: a.response} :
                                       {text: a.responseText},
                                   a.getAllResponseHeaders()))
                      }
                    },
                    a.onload = r(), n = a.onerror = r('error'),
                    void 0 !== a.onabort ?
                        a.onabort = n :
                        a.onreadystatechange =
                            function() {
                          4 === a.readyState && e.setTimeout(function() {
                            r && n()
                          })
                        },
                    r = r('abort');
                    try {
                      a.send(t.hasContent && t.data || null)
                    } catch (e) {
                      if (r) throw e
                    }
                  }, abort: function() {
                    r && r()
                  }
                }
            }),
            oe.ajaxSetup({
              accepts: {
                script:
                    'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript'
              },
              contents: {script: /\b(?:java|ecma)script\b/},
              converters: {
                'text script': function(e) {
                  return oe.globalEval(e), e
                }
              }
            }),
            oe.ajaxPrefilter('script', function(e) {
              void 0 === e.cache && (e.cache = !1),
                  e.crossDomain && (e.type = 'GET')
            }), oe.ajaxTransport('script', function(e) {
              if (e.crossDomain) {
                var t, r;
                return {
                  send: function(n, i) {
                    t = oe('<script>')
                            .prop({charset: e.scriptCharset, src: e.url})
                            .on('load error',
                                r =
                                    function(e) {
                                      t.remove(), r = null,
                                                  e &&
                                          i('error' === e.type ? 404 : 200,
                                            e.type)
                                    }),
                    $.head.appendChild(t[0])
                  }, abort: function() {
                    r && r()
                  }
                }
              }
            });
            var Ft = [], qt = /(=)\?(?=&|$)|\?\?/;
            oe.ajaxSetup({
              jsonp: 'callback',
              jsonpCallback: function() {
                var e = Ft.pop() || oe.expando + '_' + mt++;
                return this[e] = !0, e
              }
            }),
                oe.ajaxPrefilter('json jsonp', function(t, r, n) {
                  var i, o, s,
                      a = !1 !== t.jsonp &&
                      (qt.test(t.url) ? 'url' :
                                        'string' == typeof t.data &&
                               0 ===
                                   (t.contentType || '')
                                       .indexOf(
                                           'application/x-www-form-urlencoded') &&
                               qt.test(t.data) && 'data');
                  if (a || 'jsonp' === t.dataTypes[0])
                    return i = t.jsonpCallback =
                               oe.isFunction(t.jsonpCallback) ?
                               t.jsonpCallback() :
                               t.jsonpCallback,
                           a ? t[a] = t[a].replace(qt, '$1' + i) :
                               !1 !== t.jsonp &&
                                   (t.url += (yt.test(t.url) ? '&' : '?') +
                                        t.jsonp + '=' + i),
                           t.converters['script json'] =
                               function() {
                             return s || oe.error(i + ' was not called'), s[0]
                           },
                           t.dataTypes[0] = 'json', o = e[i],
                           e[i] =
                               function() {
                             s = arguments
                           },
                           n.always(function() {
                             void 0 === o ? oe(e).removeProp(i) :
                                            e[i] = o,
                                            t[i] &&
                                 (t.jsonpCallback = r.jsonpCallback,
                                  Ft.push(i)),
                                            s && oe.isFunction(o) && o(s[0]),
                                            s = o = void 0
                           }),
                           'script'
                }), oe.parseHTML = function(e, t, r) {
                  if (!e || 'string' != typeof e) return null;
                  'boolean' == typeof t && (r = t, t = !1), t = t || $;
                  var n = fe.exec(e), i = !r && [];
                  return n ? [t.createElement(n[1])] :
                             (n = h([e], t, i), i && i.length && oe(i).remove(),
                              oe.merge([], n.childNodes))
                };
            var Nt = oe.fn.load;
            oe.fn.load =
                function(e, t, r) {
              if ('string' != typeof e && Nt) return Nt.apply(this, arguments);
              var n, i, o, s = this, a = e.indexOf(' ');
              return a > -1 && (n = oe.trim(e.slice(a)), e = e.slice(0, a)),
                     oe.isFunction(t) ?
                         (r = t, t = void 0) :
                         t && 'object' == typeof t && (i = 'POST'),
                     s.length > 0 &&
                         oe.ajax({
                             url: e,
                             type: i || 'GET',
                             dataType: 'html',
                             data: t
                           })
                             .done(function(e) {
                               o = arguments,
                               s.html(
                                   n ? oe('<div>')
                                           .append(oe.parseHTML(e))
                                           .find(n) :
                                       e)
                             })
                             .always(
                                 r &&
                                 function(e, t) {
                                   s.each(function() {
                                     r.apply(this, o || [e.responseText, t, e])
                                   })
                                 }),
                     this
            },
            oe.each(
                [
                  'ajaxStart', 'ajaxStop', 'ajaxComplete', 'ajaxError',
                  'ajaxSuccess', 'ajaxSend'
                ],
                function(e, t) {
                  oe.fn[t] = function(e) {
                    return this.on(t, e)
                  }
                }),
            oe.expr.filters.animated =
                function(e) {
              return oe
                  .grep(
                      oe.timers,
                      function(t) {
                        return e === t.elem
                      })
                  .length
            },
            oe.offset = {
              setOffset: function(e, t, r) {
                var n, i, o, s, a, l, c, u = oe.css(e, 'position'), d = oe(e),
                                         p = {};
                'static' === u && (e.style.position = 'relative'),
                    a = d.offset(), o = oe.css(e, 'top'), l = oe.css(e, 'left'),
                    c = ('absolute' === u || 'fixed' === u) &&
                    (o + l).indexOf('auto') > -1,
                    c ? (n = d.position(), s = n.top, i = n.left) :
                        (s = parseFloat(o) || 0, i = parseFloat(l) || 0),
                    oe.isFunction(t) && (t = t.call(e, r, oe.extend({}, a))),
                    null != t.top && (p.top = t.top - a.top + s),
                    null != t.left && (p.left = t.left - a.left + i),
                    'using' in t ? t.using.call(e, p) : d.css(p)
              }
            },
            oe.fn.extend({
              offset: function(e) {
                if (arguments.length)
                  return void 0 === e ? this : this.each(function(t) {
                    oe.offset.setOffset(this, e, t)
                  });
                var t, r, n = this[0], i = {top: 0, left: 0},
                          o = n && n.ownerDocument;
                if (o)
                  return t = o.documentElement,
                         oe.contains(t, n) ?
                             (i = n.getBoundingClientRect(), r = Y(o), {
                               top: i.top + r.pageYOffset - t.clientTop,
                               left: i.left + r.pageXOffset - t.clientLeft
                             }) :
                             i
              },
              position: function() {
                if (this[0]) {
                  var e, t, r = this[0], n = {top: 0, left: 0};
                  return 'fixed' === oe.css(r, 'position') ?
                             t = r.getBoundingClientRect() :
                             (e = this.offsetParent(), t = this.offset(),
                              oe.nodeName(e[0], 'html') || (n = e.offset()),
                              n.top += oe.css(e[0], 'borderTopWidth', !0),
                              n.left += oe.css(e[0], 'borderLeftWidth', !0)),
                  {
                    top: t.top - n.top - oe.css(r, 'marginTop', !0),
                        left: t.left - n.left - oe.css(r, 'marginLeft', !0)
                  }
                }
              },
              offsetParent: function() {
                return this.map(function() {
                  for (var e = this.offsetParent;
                       e && 'static' === oe.css(e, 'position');)
                    e = e.offsetParent;
                  return e || Qe
                })
              }
            }),
            oe.each(
                {scrollLeft: 'pageXOffset', scrollTop: 'pageYOffset'},
                function(e, t) {
                  var r = 'pageYOffset' === t;
                  oe.fn[e] = function(n) {
                    return _e(this, function(e, n, i) {
                      var o = Y(e);
                      if (void 0 === i) return o ? o[t] : e[n];
                      o ? o.scrollTo(
                              r ? o.pageXOffset : i, r ? i : o.pageYOffset) :
                          e[n] = i
                    }, e, n, arguments.length)
                  }
                }),
            oe.each(
                ['top', 'left'],
                function(e, t) {
                  oe.cssHooks[t] = C(ie.pixelPosition, function(e, r) {
                    if (r)
                      return r = k(e, t),
                             Ye.test(r) ? oe(e).position()[t] + 'px' : r
                  })
                }),
            oe.each(
                {Height: 'height', Width: 'width'},
                function(e, t) {
                  oe.each(
                      {padding: 'inner' + e, content: t, '': 'outer' + e},
                      function(r, n) {
                        oe.fn[n] = function(n, i) {
                          var o = arguments.length &&
                              (r || 'boolean' != typeof n),
                              s = r ||
                              (!0 === n || !0 === i ? 'margin' : 'border');
                          return _e(this, function(t, r, n) {
                            var i;
                            return oe.isWindow(t) ?
                                t.document.documentElement['client' + e] :
                                9 === t.nodeType ?
                                               (i = t.documentElement,
                                 Math.max(
                                     t.body['scroll' + e], i['scroll' + e],
                                     t.body['offset' + e], i['offset' + e],
                                     i['client' + e])) :
                                void 0 === n ? oe.css(t, r, s) :
                                               oe.style(t, r, n, s)
                          }, t, o ? n : void 0, o, null)
                        }
                      })
                }),
            oe.fn.extend({
              bind: function(e, t, r) {
                return this.on(e, null, t, r)
              },
              unbind: function(e, t) {
                return this.off(e, null, t)
              },
              delegate: function(e, t, r, n) {
                return this.on(t, e, r, n)
              },
              undelegate: function(e, t, r) {
                return 1 === arguments.length ? this.off(e, '**') :
                                                this.off(t, e || '**', r)
              },
              size: function() {
                return this.length
              }
            }),
            oe.fn.andSelf = oe.fn.addBack,
            'function' == typeof r && r.amd && r('jquery', [], function() {
              return oe
            });
            var Rt = e.jQuery, Bt = e.$;
            return oe.noConflict = function(t) {
              return e.$ === oe && (e.$ = Bt),
                     t && e.jQuery === oe && (e.jQuery = Rt), oe
            }, t || (e.jQuery = e.$ = oe), oe
          });
          r('browser', ['require', 'jquery'], function(e) {
            var t = e('jquery'), r = {
              IS_IE8: null !== navigator.userAgent.match(/MSIE 8.0/i),
              IS_IE9: null !== navigator.userAgent.match(/MSIE 9.0/i),
              IS_IE: null !== navigator.userAgent.match(/MSIE/i),
              IS_EDGE: null !== navigator.userAgent.match(/Edge/i),
              IS_IPAD: null !== navigator.userAgent.match(/iPad/i),
              IS_MOBILE: null !== navigator.userAgent.match(/Mobile|Android/i),
              IS_ANDROID: null !== navigator.userAgent.match(/Android/i),
              IS_IOS:
                  null !== navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ||
                  'MacIntel' === navigator.platform &&
                      navigator.maxTouchPoints > 1,
              IS_CHROME: null !== navigator.userAgent.match(/Chrome/i),
              IS_FIREFOX: null !== navigator.userAgent.match(/Firefox/i),
              IS_SAFARI: null !==
                  navigator.userAgent.match(/^((?!chrome|android).)*safari/i),
              IS_APPLE:
                  null !== navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i),
              IS_WINDOWS: null !== navigator.platform.match(/(Win32)/i),
              IS_TOUCH: null !== navigator.userAgent.match(/Touch/i),
              IS_KINDLE: null !== navigator.userAgent.match(/Kindle/i) ||
                  null !== navigator.userAgent.match(/Silk/i),
              IS_BRAILLENOTE: null !== navigator.userAgent.match(/KeyWeb/i),
              IS_IN_IFRAME: window.parent !== window
            };
            return r.IS_TABLET = r.IS_IPAD || r.IS_ANDROID || r.IS_KINDLE,
                   r.IS_TOUCH_DEVICE = r.SHOULD_NOT_AUTOFOCUS = r.IS_IOS ||
                       r.IS_ANDROID || navigator.userAgent.match(/webOS/i) ||
                       navigator.userAgent.match(/BlackBerry/i) ||
                       navigator.userAgent.match(/Windows Phone/i),
                   r.IOS_VERSION =
                       function() {
                     var e =
                         navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
                     return e ?
                         [
                           parseInt(e[1], 10), parseInt(e[2], 10),
                           parseInt(e[3] || 0, 10)
                         ] :
                         null
                   }(),
                   r.MAC_VERSION =
                       function() {
                     var e =
                         navigator.appVersion.match(/OS X (\d+)_(\d+)_?(\d+)?/);
                     return e ?
                         [
                           parseInt(e[1], 10), parseInt(e[2], 10),
                           parseInt(e[3] || 0, 10)
                         ] :
                         null
                   }(),
                   r.CHROME_VERSION =
                       function() {
                     var e = navigator.appVersion.match(
                         /Chrom(e|ium)\/([0-9]+)\.([0-9]+)\.?([0-9]+)?/);
                     return e ?
                         [
                           parseInt(e[2], 10), parseInt(e[3], 10),
                           parseInt(e[4] || 0, 10)
                         ] :
                         null
                   }(),
                   r.SUPPORTS_INPUTMODE =
                       function() {
                     var e = r.IOS_VERSION, t = r.MAC_VERSION,
                         n = r.CHROME_VERSION;
                     return e && e[0] >= 13 ||
                         r.IS_IOS && !e && t &&
                         (t[0] > 10 || 10 === t[0] && t[1] >= 15) ||
                         r.IS_ANDROID && n && n[0] >= 76
                   }(),
                   r.SUPPORTS_TRANSLATE3D = !1, t(document).ready(function() {
                     var e, t, n = document.createElement('p'), i = {
                       webkitTransform: '-webkit-transform',
                       OTransform: '-o-transform',
                       msTransform: '-ms-transform',
                       MozTransform: '-moz-transform',
                       transform: 'transform'
                     };
                     document.body.insertBefore(n, null);
                     for (var o in i)
                       if (void 0 !== n.style[o]) {
                         if (n.style[o] = 'translate3d(1px,1px,1px)',
                             !(t = window.getComputedStyle(n)))
                           return;
                         e = t.getPropertyValue(i[o])
                       }
                     document.body.removeChild(n),
                         r.SUPPORTS_TRANSLATE3D =
                             void 0 !== e && e.length > 0 && 'none' !== e
                   }),
                   r.translateRule = function(e, t) {
                     return r.SUPPORTS_TRANSLATE3D ?
                         'translate3d(' + e + (e ? 'px' : '') + ',' + t +
                             (t ? 'px' : '') + ',0)' :
                         'translate(' + e + (e ? 'px' : '') + ',' + t +
                             (t ? 'px' : '') + ')'
                   }, r.SUPPORTS_CANVAS = function() {
                     var e = document.createElement('canvas');
                     return !(!e.getContext || !e.getContext('2d'))
                   }(), r
          });
          r('testbridge', ['require'], function(e) {
            function t() {
              window.consoleOverride = !0;
              var e = window.console.log;
              window.console.log = function() {
                for (var t = [], r = 0; r < arguments.length; r++)
                  t.push(arguments[r]);
                e.apply(window.console, [].concat([t.join(' ')], t))
              }
            }
            var r = {
              ready: function() {
                try {
                  window.TestBridge = r, parent.USING_SELENIUM && t()
                } catch (e) {
                }
              }
            };
            return r
          });
          (function() {
            function e() {}
            function t(e) {
              var t = x.call(arguments, 1);
              return function() {
                return e.apply(this, t)
              }
            }
            function r(e, t) {
              if (!t) throw new Error('prayer failed: ' + e)
            }
            function n(e) {
              r('a direction was passed', e === _ || e === E)
            }
            function i() {
              k || (k = !0, setTimeout(o))
            }
            function o() {
              k = !1, I = {}
            }
            function s(e, t) {
              var r = e[_];
              if (r)
                for (; r !== e[E][E]; r = r[E]) {
                  var n = t(r);
                  if (!1 === n) break
                }
            }
            function a(e, t, r) {
              var n = e[_];
              if (!n) return t;
              for (; n !== e[E][E]; n = n[E]) t = r(t, n);
              return t
            }
            function l(e, t, n) {
              r('a parent is always present', e),
                  r('leftward is properly set up', function() {
                    return t ? t[E] === n && t.parent === e : e.ends[_] === n
                  }()), r('rightward is properly set up', function() {
                    return n ? n[_] === t && n.parent === e : e.ends[E] === t
                  }())
            }
            function c() {
              window.console &&
                  console.warn(
                      'You are using the MathQuill API without specifying an interface version, which will fail in v1.0.0. Easiest fix is to do the following before doing anything else:\n\n    MathQuill = MathQuill.getInterface(1);\n    // now MathQuill.MathField() works like it used to\n\nSee also the "`dev` branch (2014–2015) → v0.10.0 Migration Guide" at\n  https://github.com/mathquill/mathquill/wiki/%60dev%60-branch-(2014%E2%80%932015)-%E2%86%92-v0.10.0-Migration-Guide')
            }
            function u(e) {
              return c(), De(e)
            }
            function d(t) {
              function r(e) {
                if (!e || !e.nodeType) return null;
                var t = C.getNodeOfElement(
                        S(e).children('.dcg-mq-root-block')[0]),
                    r = t && t.controller;
                return r ? i[r.KIND_OF_MQ](r) : null
              }
              function n(e, t) {
                t && t.handlers &&
                    (t.handlers = {fns: t.handlers, APIClasses: i});
                for (var r in t)
                  if (t.hasOwnProperty(r)) {
                    var n = t[r], o = N[r];
                    e[r] = o ? o(n) : n
                  }
              }
              if (!(j <= t && t <= V))
                throw 'Only interface versions between ' + j + ' and ' + V +
                    ' supported. You specified: ' + t;
              var i = {};
              r.L = _, r.R = E, r.saneKeyboardEvents = G,
              r.config = function(e) {
                return n(q.p, e), this
              }, r.registerEmbed = function(e, t) {
                if (!/^[a-z][a-z0-9]*$/i.test(e))
                  throw 'Embed name must start with letter and be only letters and digits';
                B[e] = t
              };
              var o = i.AbstractMathQuill = w(R, function(e) {
                e.init = function(e) {
                  this.__controller = e, this.__options = e.options,
                  this.id = e.id, this.data = e.data
                }, e.__mathquillify = function(e) {
                  var t = this.__controller, r = t.root, n = t.container;
                  t.createTextarea();
                  var i = n.addClass(e).contents().detach();
                  r.jQ = S('<span class="dcg-mq-root-block"/>').appendTo(n),
                  C.linkElementByBlockId(r.jQ[0], r.id), this.latex(i.text()),
                  this.revert = function() {
                    return n.empty()
                        .unbind('.mathquill')
                        .removeClass(
                            'dcg-mq-editable-field dcg-mq-math-mode dcg-mq-text-mode')
                        .append(i)
                  }
                }, e.config = function(e) {
                  return n(this.__options, e), this
                }, e.el = function() {
                  return this.__controller.container[0]
                }, e.text = function() {
                  return this.__controller.exportText()
                }, e.mathspeak = function() {
                  return this.__controller.exportMathSpeak()
                }, e.latex = function(e) {
                  return arguments.length > 0 ?
                      (this.__controller.renderLatexMath(e),
                       this.__controller.blurred &&
                           this.__controller.cursor.hide().parent.blur(),
                       this) :
                      this.__controller.exportLatex()
                }, e.html = function() {
                  return this.__controller.root.jQ.html()
                      .replace(/ mathquill-(?:command|block)-id="?\d+"?/g, '')
                      .replace(
                          /<span class="?dcg-mq-cursor( dcg-mq-blink)?"?>.?<\/span>/i,
                          '')
                      .replace(/ dcg-mq-hasCursor|dcg-mq-hasCursor ?/, '')
                      .replace(/ class=(""|(?= |>))/g, '')
                }, e.reflow = function() {
                  return this.__controller.root.postOrder(function(e) {
                    e.reflow()
                  }),
                         this
                }
              });
              r.prototype = o.prototype,
              i.EditableField = w(o, function(t, r) {
                t.__mathquillify = function() {
                  return r.__mathquillify.apply(this, arguments),
                         this.__controller.editable = !0,
                         this.__controller.delegateMouseEvents(),
                         this.__controller.editablesTextareaEvents(), this
                }, t.focus = function() {
                  return this.__controller.textarea.focus(),
                         this.__controller.scrollHoriz(), this
                }, t.blur = function() {
                  return this.__controller.textarea.blur(), this
                }, t.write = function(e) {
                  return this.__controller.writeLatex(e),
                         this.__controller.scrollHoriz(),
                         this.__controller.blurred &&
                             this.__controller.cursor.hide().parent.blur(),
                         this
                }, t.cmd = function(e) {
                  var t = this.__controller.notify(), r = t.cursor;
                  if (/^\\[a-z]+$/i.test(e)) {
                    e = e.slice(1);
                    var n = L[e];
                    n &&
                        (e = n(e),
                         r.selection && e.replaces(r.replaceSelection()),
                         e.createLeftOf(r.show()))
                  } else
                    r.parent.write(r, e);
                  return t.scrollHoriz(), t.blurred && r.hide().parent.blur(),
                         this
                }, t.select = function() {
                  var e = this.__controller;
                  for (e.notify('move').cursor.insAtRightEnd(e.root);
                       e.cursor[_];)
                    e.selectLeft();
                  return this
                }, t.clearSelection = function() {
                  return this.__controller.cursor.clearSelection(), this
                }, t.moveToDirEnd = function(e) {
                  return this.__controller.notify('move').cursor.insAtDirEnd(
                             e, this.__controller.root),
                         this
                }, t.moveToLeftEnd = function() {
                  return this.moveToDirEnd(_)
                }, t.moveToRightEnd = function() {
                  return this.moveToDirEnd(E)
                }, t.keystroke = function(t, r) {
                  for (var t = t.replace(/^\s+|\s+$/g, '').split(/\s+/), n = 0;
                       n < t.length; n += 1)
                    this.__controller.keystroke(t[n], r || {preventDefault: e});
                  return this
                }, t.typedText = function(e) {
                  for (var t = 0; t < e.length; t += 1)
                    this.__controller.typedText(e.charAt(t));
                  return this
                }, t.dropEmbedded = function(e, t, r) {
                  var n = e - S(window).scrollLeft(),
                      i = t - S(window).scrollTop(),
                      o = document.elementFromPoint(n, i);
                  this.__controller.seek(S(o), e, t),
                      Ae().setOptions(r).createLeftOf(this.__controller.cursor)
                }, t.setAriaLabel = function(e) {
                  return this.__controller.ariaLabel =
                             e && 'string' == typeof e && '' != e ?
                             e :
                             'Math Input',
                         this
                }, t.getAriaLabel = function() {
                  return this.__controller.ariaLabel || 'Math Input'
                }, t.setAriaPostLabel = function(e, t) {
                  var r = this.__controller;
                  return e && 'string' == typeof e && '' != e ?
                             (e !== r.ariaPostLabel && 'number' == typeof t &&
                                  (this.ariaAlertTimeout &&
                                       clearTimeout(this.ariaAlertTimeout),
                                   this.ariaAlertTimeout = setTimeout(
                                       function() {
                                         S(document.activeElement)
                                                 .closest(S(r.container))
                                                 .length &&
                                             W.alert(
                                                 this.mathspeak().trim() + ' ' +
                                                 e.trim())
                                       }.bind(this),
                                       t)),
                              r.ariaPostLabel = e) :
                             (this.ariaAlertTimeout &&
                                  clearTimeout(this.ariaAlertTimeout),
                              r.ariaPostLabel = ''),
                         this
                }, t.getAriaPostLabel = function() {
                  return this.__controller.ariaPostLabel || ''
                }, t.clickAt = function(e, t, r) {
                  r = r || document.elementFromPoint(e, t);
                  var n = this.__controller, i = n.root;
                  return y.contains(i.jQ[0], r) || (r = i.jQ[0]),
                         n.seek(S(r), e + pageXOffset, t + pageYOffset),
                         n.blurred && this.focus(), this
                }, t.ignoreNextMousedown = function(e) {
                  return this.__controller.cursor.options.ignoreNextMousedown =
                             e,
                         this
                }
              }), r.EditableField = function() {
                throw 'wtf don\'t call me, I\'m \'abstract\''
              }, r.EditableField.prototype = i.EditableField.prototype;
              for (var s in F)
                !function(e, n) {
                  var o = i[e] = n(i);
                  r[e] = function(n, i) {
                    var s = r(n);
                    if (s instanceof o || !n || !n.nodeType) return s;
                    var a = O(o.RootBlock(), S(n), q());
                    return a.KIND_OF_MQ = e, o(a).__mathquillify(i, t)
                  }, r[e].prototype = o.prototype
                }(s, F[s]);
              return r
            }
            function p(e) {
              for (var t = 'moveOutOf deleteOutOf selectOutOf upOutOf downOutOf'
                               .split(' '),
                       r = 0;
                   r < t.length; r += 1)
                !function(t) {
                  e[t] = function(e) {
                    this.controller.handle(t, e)
                  }
                }(t[r]);
              e.reflow = function() {
                this.controller.handle('reflow'),
                    this.controller.handle('edited'),
                    this.controller.handle('edit')
              }
            }
            function h(e) {
              var t = this.parent, r = e;
              do {
                if (r[E]) return e.insLeftOf(t);
                r = r.parent.parent
              } while (r !== t);
              e.insRightOf(t)
            }
            function f(e, t) {
              e.jQadd = function() {
                t.jQadd.apply(this, arguments),
                    this.delimjQs = this.jQ.children(':first').add(
                        this.jQ.children(':last')),
                    this.contentjQ = this.jQ.children(':eq(1)')
              }
            }
            function g(e, r, n) {
              var r = r || e, i = Te[e], o = Te[r];
              P[e] = t(Ce, _, e, i, r, o), P[i] = t(Ce, E, e, i, r, o),
              Le[e] = Le[i] = n
            }
            var m, y = window.jQuery, v = Math.min, b = Math.max;
            if (!y) throw 'MathQuill requires jQuery 1.5.2+ to be loaded first';
            var x = [].slice,
                w =
                    function(e, t, r) {
                  function n(e) {
                    return 'object' == typeof e
                  }
                  function i(e) {
                    return 'function' == typeof e
                  }
                  function o() {}
                  return function e(r, s) {
                    function a() {
                      var e = new l;
                      return i(e.init) && e.init.apply(e, arguments), e
                    }
                    function l() {}
                    void 0 === s && (s = r, r = Object), a.Bare = l;
                    var c, u = o.prototype = r.prototype,
                           d = l.prototype = a.prototype = a.p = new o;
                    return d.constructor = a, a.extend = function(t) {
                      return e(a, t)
                    }, (a.open = function(e) {
                             if (c = {},
                                 i(e) ? c = e.call(a, d, u, a, r) :
                                        n(e) && (c = e),
                                 n(c))
                               for (var o in c) t.call(c, o) && (d[o] = c[o]);
                             return i(d.init) || (d.init = r), a
                           })(s)
                  }
                }(0, {}.hasOwnProperty),
                _ = -1, E = 1,
                S =
                    w(y,
                      function(e) {
                        e.insDirOf = function(e, t) {
                          return e === _ ? this.insertBefore(t.first()) :
                                           this.insertAfter(t.last())
                        }, e.insAtDirEnd = function(e, t) {
                          return e === _ ? this.prependTo(t) : this.appendTo(t)
                        }
                      }),
                M = w(function(e) {
                  e.parent = 0, e[_] = 0, e[E] = 0, e.init = function(e, t, r) {
                    this.parent = e, this[_] = t, this[E] = r
                  }, this.copy = function(e) {
                    return M(e.parent, e[_], e[E])
                  }
                }),
                I = {}, k = !1,
                C = w(function(e) {
                  function t() {
                    return r += 1
                  }
                  e[_] = 0, e[E] = 0, e.parent = 0;
                  var r = 0;
                  this.getNodeOfElement = function(e) {
                    if (e) {
                      if (!e.nodeType)
                        throw new Error(
                            'must pass an HTMLElement to Node.getNodeOfElement');
                      return e.mqBlockNode || e.mqCmdNode
                    }
                  }, this.linkElementByBlockId = function(e, t) {
                    C.linkElementByBlockNode(e, I[t])
                  }, this.linkElementByBlockNode = function(e, t) {
                    e.mqBlockNode = t
                  }, this.linkElementByCmdNode = function(e, t) {
                    e.mqCmdNode = t
                  }, e.init = function() {
                    this.id = t(), I[r] = this, i(), this.ends = {},
                    this.ends[_] = 0, this.ends[E] = 0
                  }, e.toString = function() {
                    return '{{ MathQuill Node #' + this.id + ' }}'
                  }, e.jQ = S(), e.jQadd = function(e) {
                    return this.jQ = this.jQ.add(e)
                  }, e.jQize = function(e) {
                    function t(e) {
                      if (e.getAttribute) {
                        var r = e.getAttribute('mathquill-command-id');
                        if (r) {
                          e.removeAttribute('mathquill-command-id');
                          var n = I[r];
                          n.jQadd(e), C.linkElementByCmdNode(e, n)
                        }
                        var i = e.getAttribute('mathquill-block-id');
                        if (i) {
                          e.removeAttribute('mathquill-block-id');
                          var o = I[i];
                          o.jQadd(e), C.linkElementByBlockNode(e, o)
                        }
                      }
                      for (e = e.firstChild; e; e = e.nextSibling) t(e)
                    }
                    for (var e = S(e || this.html()), r = 0; r < e.length;
                         r += 1)
                      t(e[r]);
                    return e
                  }, e.createDir = function(e, t) {
                    n(e);
                    var r = this;
                    return r.jQize(), r.jQ.insDirOf(e, t.jQ),
                           t[e] = r.adopt(t.parent, t[_], t[E]), r
                  }, e.createLeftOf = function(e) {
                    return this.createDir(_, e)
                  }, e.selectChildren = function(e, t) {
                    return D(e, t)
                  }, e.bubble = function(e) {
                    for (var t = this; t; t = t.parent) {
                      if (!1 === e(t)) break
                    }
                    return this
                  }, e.postOrder = function(e) {
                    return function t(r) {
                      r.eachChild(t), e(r)
                    }(this),
                           this
                  }, e.isEmpty = function() {
                    return 0 === this.ends[_] && 0 === this.ends[E]
                  }, e.isEmptyParens = function() {
                    return !!this.isEmpty() &&
                        (!!this.parent && '\\left(' === this.parent.ctrlSeq)
                  }, e.isStyleBlock = function() {
                    return !1
                  }, e.children = function() {
                    return T(this.ends[_], this.ends[E])
                  }, e.eachChild = function(e) {
                    return s(this.ends, e), this
                  }, e.foldChildren = function(e, t) {
                    return a(this.ends, e, t)
                  }, e.withDirAdopt = function(e, t, r, n) {
                    return T(this, this).withDirAdopt(e, t, r, n), this
                  }, e.adopt = function(e, t, r) {
                    return T(this, this).adopt(e, t, r), this
                  }, e.disown = function() {
                    return T(this, this).disown(), this
                  }, e.remove = function() {
                    return this.jQ.remove(), this.disown()
                  }, e.isParentSimpleSubscript = function() {
                    return !!this.parent &&
                        (this.parent.parent instanceof we &&
                         !!this.parent.jQ.hasClass('dcg-mq-sub'))
                  }, e.finalizeTree = function() {
                  }, e.contactWeld = function() {}, e.blur = function() {
                  }, e.intentionalBlur = function() {}, e.reflow = function() {
                  }, e.registerInnerField = function() {}
                }),
                T = w(function(e) {
                  e.init = function(e, t, i) {
                    if (i === m && (i = _), n(i),
                        r('no half-empty fragments', !e == !t), this.ends = {},
                        e) {
                      r('withDir is passed to Fragment', e instanceof C),
                          r('oppDir is passed to Fragment', t instanceof C),
                          r('withDir and oppDir have the same parent',
                            e.parent === t.parent),
                          this.ends[i] = e, this.ends[-i] = t;
                      var o = this.fold([], function(e, t) {
                        return e.push.apply(e, t.jQ.get()), e
                      });
                      this.jQ = this.jQ.add(o)
                    }
                  }, e.jQ = S(), e.withDirAdopt = function(e, t, r, n) {
                    return e === _ ? this.adopt(t, r, n) : this.adopt(t, n, r)
                  }, e.adopt = function(e, t, r) {
                    l(e, t, r);
                    var n = this;
                    n.disowned = !1;
                    var i = n.ends[_];
                    if (!i) return this;
                    var o = n.ends[E];
                    return t || (e.ends[_] = i),
                           r ? r[_] = o : e.ends[E] = o, n.ends[E][E] = r,
                               n.each(function(r) {
                                 r[_] = t, r.parent = e, t && (t[E] = r), t = r
                               }),
                               n
                  }, e.disown = function() {
                    var e = this, t = e.ends[_];
                    if (!t || e.disowned) return e;
                    e.disowned = !0;
                    var r = e.ends[E], n = t.parent;
                    return l(n, t[_], t), l(n, r, r[E]),
                           t[_] ? t[_][E] = r[E] : n.ends[_] = r[E],
                                  r[E] ? r[E][_] = t[_] : n.ends[E] = t[_], e
                  }, e.remove = function() {
                    return this.jQ.remove(), this.disown()
                  }, e.each = function(e) {
                    return s(this.ends, e), this
                  }, e.fold = function(e, t) {
                    return a(this.ends, e, t)
                  }
                }),
                L = {}, P = {},
                A = w(
                    M,
                    function(e) {
                      e.init = function(e, t, r) {
                        this.controller = r, this.parent = e, this.options = t;
                        var n = this.jQ = this._jQ =
                            S('<span class="dcg-mq-cursor">&#8203;</span>');
                        this.blink = function() {
                          n.toggleClass('dcg-mq-blink')
                        }, this.upDownCache = {}
                      }, e.show = function() {
                        return this.jQ = this._jQ.removeClass('dcg-mq-blink'),
                               'intervalId' in this ?
                                   clearInterval(this.intervalId) :
                                   (this[E] ? this.selection &&
                                                this.selection.ends[_][_] ===
                                                    this[_] ?
                                              this.jQ.insertBefore(
                                                  this.selection.jQ) :
                                              this.jQ.insertBefore(
                                                  this[E].jQ.first()) :
                                              this.jQ.appendTo(this.parent.jQ),
                                    this.parent.focus()),
                               this.intervalId = setInterval(this.blink, 500),
                               this
                      }, e.hide = function() {
                        return 'intervalId' in this &&
                                   clearInterval(this.intervalId),
                               delete this.intervalId, this.jQ.detach(),
                               this.jQ = S(), this
                      }, e.withDirInsertAt = function(e, t, r, n) {
                        var i = this.parent;
                        this.parent = t, this[e] = r, this[-e] = n,
                        i !== t && i.blur && i.blur(this)
                      }, e.insDirOf = function(e, t) {
                        return n(e), this.jQ.insDirOf(e, t.jQ),
                               this.withDirInsertAt(e, t.parent, t[e], t),
                               this.parent.jQ.addClass('dcg-mq-hasCursor'), this
                      }, e.insLeftOf = function(e) {
                        return this.insDirOf(_, e)
                      }, e.insRightOf = function(e) {
                        return this.insDirOf(E, e)
                      }, e.insAtDirEnd = function(e, t) {
                        return n(e), this.jQ.insAtDirEnd(e, t.jQ),
                               this.withDirInsertAt(e, t, 0, t.ends[e]),
                               t.focus(), this
                      }, e.insAtLeftEnd = function(e) {
                        return this.insAtDirEnd(_, e)
                      }, e.insAtRightEnd = function(e) {
                        return this.insAtDirEnd(E, e)
                      }, e.jumpUpDown = function(e, t) {
                        var r = this;
                        r.upDownCache[e.id] = M.copy(r);
                        var n = r.upDownCache[t.id];
                        if (n)
                          n[E] ? r.insLeftOf(n[E]) : r.insAtRightEnd(n.parent);
                        else {
                          var i = r.offset().left;
                          t.seek(i, r)
                        }
                        W.queue(t, !0)
                      }, e.offset = function() {
                        var e = this,
                            t = e.jQ.removeClass('dcg-mq-cursor').offset();
                        return e.jQ.addClass('dcg-mq-cursor'), t
                      }, e.unwrapGramp = function() {
                        var e = this.parent.parent, t = e.parent, r = e[E],
                            n = this, i = e[_];
                        if (e.disown().eachChild(function(n) {
                              n.isEmpty() ||
                                  (n.children().adopt(t, i, r).each(function(
                                       t) {
                                    t.jQ.insertBefore(e.jQ.first())
                                  }),
                                   i = n.ends[E])
                            }),
                            !this[E])
                          if (this[_])
                            this[E] = this[_][E];
                          else
                            for (; !this[E];) {
                              if (this.parent = this.parent[E], !this.parent) {
                                this[E] = e[E], this.parent = t;
                                break
                              }
                              this[E] = this.parent.ends[_]
                            }
                        this[E] ? this.insLeftOf(this[E]) :
                                  this.insAtRightEnd(t),
                            e.jQ.remove(),
                            e[_].siblingDeleted &&
                            e[_].siblingDeleted(n.options, E),
                            e[E].siblingDeleted &&
                            e[E].siblingDeleted(n.options, _)
                      }, e.startSelection = function() {
                        for (var e = this.anticursor = M.copy(this),
                                 t = e.ancestors = {}, r = e;
                             r.parent; r = r.parent)
                          t[r.parent.id] = r
                      }, e.endSelection = function() {
                        delete this.anticursor
                      }, e.select = function() {
                        var e = this.anticursor;
                        if (this[_] === e[_] && this.parent === e.parent)
                          return !1;
                        for (var t = this; t.parent; t = t.parent)
                          if (t.parent.id in e.ancestors) {
                            var n = t.parent;
                            break
                          }
                        r('cursor and anticursor in the same tree', n);
                        var i, o, s = e.ancestors[n.id], a = E;
                        if (t[_] !== s)
                          for (var l = t; l; l = l[E])
                            if (l[E] === s[E]) {
                              a = _, i = t, o = s;
                              break
                            }
                        return a === E && (i = s, o = t),
                               i instanceof M && (i = i[E]),
                               o instanceof M && (o = o[_]),
                               this.hide().selection = n.selectChildren(i, o),
                               this.insDirOf(a, this.selection.ends[a]),
                               this.selectionChanged(), !0
                      }, e.resetToEnd = function(e) {
                        this.clearSelection();
                        var t = e.root;
                        this[E] = 0, this[_] = t.ends[E], this.parent = t
                      }, e.clearSelection = function() {
                        return this.selection &&
                                   (this.selection.clear(),
                                    delete this.selection,
                                    this.selectionChanged()),
                               this
                      }, e.deleteSelection = function() {
                        this.selection &&
                            (this[_] = this.selection.ends[_][_],
                             this[E] = this.selection.ends[E][E],
                             this.selection.remove(), this.selectionChanged(),
                             delete this.selection)
                      }, e.replaceSelection = function() {
                        var e = this.selection;
                        return e &&
                                   (this[_] = e.ends[_][_],
                                    this[E] = e.ends[E][E],
                                    delete this.selection),
                               e
                      }
                    }),
                D = w(
                    T,
                    function(e, t) {
                      e.init = function() {
                        t.init.apply(this, arguments),
                            this.jQ =
                                this.jQ
                                    .wrapAll(
                                        '<span class="dcg-mq-selection"></span>')
                                    .parent()
                      }, e.adopt = function() {
                        return this.jQ.replaceWith(
                                   this.jQ = this.jQ.children()),
                               t.adopt.apply(this, arguments)
                      }, e.clear = function() {
                        return this.jQ.replaceWith(this.jQ[0].childNodes), this
                      }, e.join = function(e, t) {
                        var r = t || '';
                        return this.fold('', function(t, n) {
                          return t + r + n[e]()
                        })
                      }
                    }),
                O = w(function(e) {
                  e.init = function(e, t, r) {
                    this.id = e.id, this.data = {}, this.root = e,
                    this.container = t, this.options = r,
                    this.ariaLabel = 'Math Input', this.ariaPostLabel = '',
                    e.controller = this, this.cursor = e.cursor = A(e, r, this)
                  }, e.handle = function(e, t) {
                    var r = this.options.handlers;
                    if (r && r.fns[e]) {
                      var n = r.APIClasses[this.KIND_OF_MQ](this);
                      t === _ || t === E ? r.fns[e](t, n) : r.fns[e](n)
                    }
                  };
                  var t = [];
                  this.onNotify = function(e) {
                    t.push(e)
                  }, e.notify = function() {
                    for (var e = 0; e < t.length; e += 1)
                      t[e].apply(this.cursor, arguments);
                    return this
                  }
                }),
                F = {}, q = w(), N = {}, R = w(), B = {};
            u.prototype = R.p, u.VERSION = 'vv1.5',
            u.interfaceVersion = function(e) {
              if (1 !== e)
                throw 'Only interface version 1 supported. You specified: ' + e;
              return c = function() {
                window.console &&
                    console.warn(
                        'You called MathQuill.interfaceVersion(1); to specify the interface version, which will fail in v1.0.0. You can fix this easily by doing this before doing anything else:\n\n    MathQuill = MathQuill.getInterface(1);\n    // now MathQuill.MathField() works like it used to\n\nSee also the "`dev` branch (2014–2015) → v0.10.0 Migration Guide" at\n  https://github.com/mathquill/mathquill/wiki/%60dev%60-branch-(2014%E2%80%932015)-%E2%86%92-v0.10.0-Migration-Guide')
              }, c(), u
            }, u.getInterface = d;
            var j = d.MIN = 1, V = d.MAX = 2;
            u.noConflict = function() {
              return window.MathQuill = U, u
            };
            var U = window.MathQuill;
            window.MathQuill = u;
            var z = w(function(e, t, n) {
              function i(e, t) {
                throw e = e ? '\'' + e + '\'' : 'EOF',
                      'Parse Error: ' + t + ' at ' + e
              }
              e.init = function(e) {
                this._ = e
              }, e.parse = function(e) {
                function t(e, t) {
                  return t
                }
                return this.skip(a)._('' + e, t, i)
              }, e.or = function(e) {
                r('or is passed a parser', e instanceof n);
                var t = this;
                return n(function(r, n, i) {
                  function o(t) {
                    return e._(r, n, i)
                  }
                  return t._(r, n, o)
                })
              }, e.then = function(e) {
                var t = this;
                return n(function(i, o, s) {
                  function a(t, i) {
                    var a = e instanceof n ? e : e(i);
                    return r('a parser is returned', a instanceof n),
                           a._(t, o, s)
                  }
                  return t._(i, a, s)
                })
              }, e.many = function() {
                var e = this;
                return n(function(t, r, n) {
                  function i(e, r) {
                    return t = e, s.push(r), !0
                  }
                  function o() {
                    return !1
                  }
                  for (var s = []; e._(t, i, o);)
                    ;
                  return r(t, s)
                })
              }, e.times = function(e, t) {
                arguments.length < 2 && (t = e);
                var r = this;
                return n(function(n, i, o) {
                  function s(e, t) {
                    return u.push(t), n = e, !0
                  }
                  function a(e, t) {
                    return c = t, n = e, !1
                  }
                  function l(e, t) {
                    return !1
                  }
                  for (var c, u = [], d = !0, p = 0; p < e; p += 1)
                    if (!(d = r._(n, s, a))) return o(n, c);
                  for (; p < t && d; p += 1) d = r._(n, s, l);
                  return i(n, u)
                })
              }, e.result = function(e) {
                return this.then(s(e))
              }, e.atMost = function(e) {
                return this.times(0, e)
              }, e.atLeast = function(e) {
                var t = this;
                return t.times(e).then(function(e) {
                  return t.many().map(function(t) {
                    return e.concat(t)
                  })
                })
              }, e.map = function(e) {
                return this.then(function(t) {
                  return s(e(t))
                })
              }, e.skip = function(e) {
                return this.then(function(t) {
                  return e.result(t)
                })
              };
              var o =
                      (this.string =
                           function(e) {
                             var t = e.length, r = 'expected \'' + e + '\'';
                             return n(function(n, i, o) {
                               var s = n.slice(0, t);
                               return s === e ? i(n.slice(t), s) : o(n, r)
                             })
                           },
                       this.regex =
                           function(e) {
                             r('regexp parser is anchored',
                               '^' === e.toString().charAt(1));
                             var t = 'expected ' + e;
                             return n(function(r, n, i) {
                               var o = e.exec(r);
                               if (o) {
                                 var s = o[0];
                                 return n(r.slice(s.length), s)
                               }
                               return i(r, t)
                             })
                           }),
                  s = n.succeed =
                      function(e) {
                    return n(function(t, r) {
                      return r(t, e)
                    })
                  },
                  a =
                      (n.fail =
                           function(e) {
                             return n(function(t, r, n) {
                               return n(t, e)
                             })
                           },
                       n.letter = o(/^[a-z]/i), n.letters = o(/^[a-z]*/i),
                       n.digit = o(/^[0-9]/), n.digits = o(/^[0-9]*/),
                       n.whitespace = o(/^\s+/), n.optWhitespace = o(/^\s*/),
                       n.any = n(function(e, t, r) {
                         return e ? t(e.slice(1), e.charAt(0)) :
                                    r(e, 'expected any character')
                       }),
                       n.all = n(function(e, t, r) {
                         return t('', e)
                       }),
                       n.eof = n(function(e, t, r) {
                         return e ? r(e, 'expected EOF') : t(e, e)
                       }))
            }),
                G =
                    function() {
                  function t(e) {
                    var t, n = e.which || e.keyCode, i = r[n], o = [];
                    return e.ctrlKey && o.push('Ctrl'),
                           e.originalEvent && e.originalEvent.metaKey &&
                               o.push('Meta'),
                           e.altKey && o.push('Alt'),
                           e.shiftKey && o.push('Shift'),
                           t = i || String.fromCharCode(n),
                           o.length || i ? (o.push(t), o.join('-')) : t
                  }
                  var r = {
                    8: 'Backspace',
                    9: 'Tab',
                    10: 'Enter',
                    13: 'Enter',
                    16: 'Shift',
                    17: 'Control',
                    18: 'Alt',
                    20: 'CapsLock',
                    27: 'Esc',
                    32: 'Spacebar',
                    33: 'PageUp',
                    34: 'PageDown',
                    35: 'End',
                    36: 'Home',
                    37: 'Left',
                    38: 'Up',
                    39: 'Right',
                    40: 'Down',
                    45: 'Insert',
                    46: 'Del',
                    144: 'NumLock'
                  };
                  return function(r, n) {
                    function i(e) {
                      S = e, clearTimeout(b), b = setTimeout(e)
                    }
                    function o(t) {
                      i(function(r) {
                        S = e, clearTimeout(b), t(r)
                      })
                    }
                    function s() {
                      try {
                        _[0].select()
                      } catch (e) {
                      }
                    }
                    function a(t) {
                      S(), S = e, clearTimeout(b), _.val(t), t && s(), M = !!t
                    }
                    function l() {
                      var e = _[0];
                      return 'selectionStart' in e &&
                          e.selectionStart !== e.selectionEnd
                    }
                    function c() {
                      n.options && n.options.overrideKeystroke ?
                          n.options.overrideKeystroke(t(x), x) :
                          n.keystroke(t(x), x)
                    }
                    function u(e) {
                      x = e, w = null, M && o(function(e) {
                                         e && 'focusout' === e.type || s()
                                       }),
                      c()
                    }
                    function d(e) {
                      if (!e || !e.originalEvent) return !1;
                      switch (e.originalEvent.key) {
                        case 'ArrowRight':
                        case 'ArrowLeft':
                        case 'ArrowDown':
                        case 'ArrowUp':
                          return !0
                      }
                      return !1
                    }
                    function p(e) {
                      x && w && c(), w = e, d(e) || i(f)
                    }
                    function h(e) {
                      x && !w && (d(e) || i(f))
                    }
                    function f() {
                      if (!l()) {
                        var e = _.val();
                        1 === e.length ?
                            (_.val(''),
                             n.options && n.options.overrideTypedText ?
                                 n.options.overrideTypedText(e) :
                                 n.typedText(e)) :
                            e && s()
                      }
                    }
                    function g() {
                      x = null, w = null, S = e, clearTimeout(b), _.val('')
                    }
                    function m(e) {
                      _.focus(), i(v)
                    }
                    function v() {
                      var e = _.val();
                      _.val(''), e && n.paste(e)
                    }
                    var b, x = null, w = null, _ = y(r),
                           E = y(n.container || _), S = e;
                    E.bind('keydown keypress input keyup paste', function(e) {
                      S(e)
                    });
                    var M = !1;
                    return n.options && n.options.disableCopyPaste ?
                               E.bind({
                                 keydown: u,
                                 keypress: p,
                                 keyup: h,
                                 focusout: g,
                                 copy: function(e) {
                                   e.preventDefault()
                                 },
                                 cut: function(e) {
                                   e.preventDefault()
                                 },
                                 paste: function(e) {
                                   e.preventDefault()
                                 }
                               }) :
                               E.bind({
                                 keydown: u,
                                 keypress: p,
                                 keyup: h,
                                 focusout: g,
                                 cut: function() {
                                   o(function() {
                                     n.cut()
                                   })
                                 },
                                 copy: function() {
                                   o(function() {
                                     n.copy()
                                   })
                                 },
                                 paste: m
                               }),
                    {
                      select: a
                    }
                  }
                }(),
                K = w(function(e) {
                  e.init = function() {
                    this.jQ = y([]), y(document).ready(function() {
                      var e = '.dcg-mq-aria-alert';
                      y(e).length ||
                          y('body').append(
                              '<p aria-live=\'assertive\' aria-atomic=\'true\' class=\'dcg-mq-aria-alert\'></p>'),
                          this.jQ = y(e)
                    }.bind(this)),
                    this.items = [], this.msg = ''
                  }, e.queue = function(e, t) {
                    return e instanceof C &&
                               (e = t ?
                                    e.parent && e.parent.ariaLabel &&
                                            'block' === e.ariaLabel ?
                                    e.parent.ariaLabel + ' ' + e.mathspeak() :
                                        e.ariaLabel ?
                                    e.ariaLabel + ' ' + e.mathspeak() :
                                    e.mathspeak() :
                                    e.mathspeak()),
                           this.items.push(e), this
                  }, e.queueDirOf = function(e) {
                    return n(e), this.queue(e === _ ? 'before' : 'after')
                  }, e.queueDirEndOf = function(e) {
                    return n(e), this.queue(e === _ ? 'beginning of' : 'end of')
                  }, e.alert = function(e) {
                    return e && this.queue(e),
                           this.items.length &&
                               (this.msg = this.items.join(' ')
                                               .replace(/ +(?= )/g, '')
                                               .trim(),
                                this.jQ.empty().text(this.msg)),
                           this.clear()
                  }, e.clear = function() {
                    return this.items.length = 0, this
                  }
                }),
                W = K();
            O.open(function(e) {
              e.aria = W, e.exportMathSpeak = function() {
                return this.root.mathspeak()
              }
            }),
                O.open(function(e, t) {
                  e.exportText = function() {
                    return this.root.foldChildren('', function(e, t) {
                      return e + t.text()
                    })
                  }
                }),
                O.open(function(e) {
                  this.onNotify(function(e) {
                    if ('edit' === e || 'replace' === e || e === m) {
                      var t = this.controller;
                      if (!t) return;
                      if (!t.options.enableDigitGrouping) return;
                      if (!1 !== t.blurred) return;
                      t.disableGroupingForSeconds(1)
                    }
                  }),
                      e.disableGroupingForSeconds = function(e) {
                        clearTimeout(this.__disableGroupingTimeout);
                        var t = this.root.jQ;
                        0 === e ?
                            t.removeClass('dcg-mq-suppress-grouping') :
                            (t.addClass('dcg-mq-suppress-grouping'),
                             this.__disableGroupingTimeout =
                                 setTimeout(function() {
                                   t.removeClass('dcg-mq-suppress-grouping')
                                 }, 1e3 * e))
                      }, e.focusBlurEvents = function() {
                        function e() {
                          clearTimeout(n),
                              s.selection &&
                              s.selection.jQ.addClass('dcg-mq-blur'),
                              t(), r()
                        }
                        function t() {
                          s.hide().parent.blur(),
                              i.container.removeClass('dcg-mq-focused'),
                              S(window).unbind('blur', e),
                              i.options && i.options.resetCursorOnBlur &&
                              s.resetToEnd(i)
                        }
                        function r() {
                          var e = (i.ariaLabel + ': ' + o.mathspeak() + ' ' +
                                   i.ariaPostLabel)
                                      .trim();
                          W.jQ.empty(), i.textarea.attr('aria-label', e),
                              i.container.attr('aria-label', e)
                        }
                        var n, i = this, o = i.root, s = i.cursor;
                        i.textarea
                            .focus(function() {
                              r(), i.blurred = !1, clearTimeout(n),
                                   i.container.addClass('dcg-mq-focused'),
                                   s.parent || s.insAtRightEnd(o),
                                   s.selection ?
                                  (s.selection.jQ.removeClass('dcg-mq-blur'),
                                   i.selectionChanged()) :
                                  s.show(),
                                   i.setOverflowClasses()
                            })
                            .blur(function() {
                              i.textareaSelectionTimeout &&
                                  (clearTimeout(i.textareaSelectionTimeout),
                                   i.textareaSelectionTimeout = m),
                                  i.disableGroupingForSeconds(0),
                                  i.blurred = !0,
                                  n = setTimeout(function() {
                                    o.postOrder(function(e) {
                                      e.intentionalBlur()
                                    }),
                                        s.clearSelection().endSelection(), t(),
                                        r(), i.scrollHoriz()
                                  }),
                                  S(window).bind('blur', e)
                            }),
                            r(), i.blurred = !0, s.hide().parent.blur()
                      }
                }),
                O.open(function(e) {
                  e.keystroke = function(e, t) {
                    this.cursor.parent.keystroke(e, t, this)
                  }
                }),
                C.open(function(e) {
                  e.keystroke =
                      function(e, t, r) {
                    var n = r.cursor;
                    switch (e) {
                      case 'Ctrl-Shift-Backspace':
                      case 'Ctrl-Backspace':
                        r.ctrlDeleteDir(_);
                        break;
                      case 'Shift-Backspace':
                      case 'Backspace':
                        r.backspace();
                        break;
                      case 'Esc':
                      case 'Tab':
                        return void r.escapeDir(E, e, t);
                      case 'Shift-Tab':
                      case 'Shift-Esc':
                        return void r.escapeDir(_, e, t);
                      case 'End':
                        r.notify('move').cursor.insAtRightEnd(n.parent),
                            W.queue('end of').queue(n.parent, !0);
                        break;
                      case 'Ctrl-End':
                        r.notify('move').cursor.insAtRightEnd(r.root),
                            W.queue('end of')
                                .queue(r.ariaLabel)
                                .queue(r.root)
                                .queue(r.ariaPostLabel);
                        break;
                      case 'Shift-End':
                        for (; n[E];) r.selectRight();
                        break;
                      case 'Ctrl-Shift-End':
                        for (; n[E] || n.parent !== r.root;) r.selectRight();
                        break;
                      case 'Home':
                        r.notify('move').cursor.insAtLeftEnd(n.parent),
                            W.queue('beginning of').queue(n.parent, !0);
                        break;
                      case 'Ctrl-Home':
                        r.notify('move').cursor.insAtLeftEnd(r.root),
                            W.queue('beginning of')
                                .queue(r.ariaLabel)
                                .queue(r.root)
                                .queue(r.ariaPostLabel);
                        break;
                      case 'Shift-Home':
                        for (; n[_];) r.selectLeft();
                        break;
                      case 'Ctrl-Shift-Home':
                        for (; n[_] || n.parent !== r.root;) r.selectLeft();
                        break;
                      case 'Left':
                        r.moveLeft();
                        break;
                      case 'Shift-Left':
                        r.selectLeft();
                        break;
                      case 'Ctrl-Left':
                        break;
                      case 'Right':
                        r.moveRight();
                        break;
                      case 'Shift-Right':
                        r.selectRight();
                        break;
                      case 'Ctrl-Right':
                        break;
                      case 'Up':
                        r.moveUp();
                        break;
                      case 'Down':
                        r.moveDown();
                        break;
                      case 'Shift-Up':
                        if (n[_])
                          for (; n[_];) r.selectLeft();
                        else
                          r.selectLeft();
                      case 'Shift-Down':
                        if (n[E])
                          for (; n[E];) r.selectRight();
                        else
                          r.selectRight();
                      case 'Ctrl-Up':
                      case 'Ctrl-Down':
                        break;
                      case 'Ctrl-Shift-Del':
                      case 'Ctrl-Del':
                        r.ctrlDeleteDir(E);
                        break;
                      case 'Shift-Del':
                      case 'Del':
                        r.deleteForward();
                        break;
                      case 'Meta-A':
                      case 'Ctrl-A':
                        for (r.notify('move').cursor.insAtRightEnd(r.root);
                             n[_];)
                          r.selectLeft();
                        break;
                      case 'Ctrl-Alt-Up':
                        n.parent.parent && n.parent.parent instanceof C ?
                            W.queue(n.parent.parent) :
                            W.queue('nothing above');
                        break;
                      case 'Ctrl-Alt-Down':
                        n.parent && n.parent instanceof C ?
                            W.queue(n.parent) :
                            W.queue('block is empty');
                        break;
                      case 'Ctrl-Alt-Left':
                        n.parent.parent && n.parent.parent.ends &&
                                n.parent.parent.ends[_] &&
                                n.parent.parent.ends[_] instanceof C ?
                            W.queue(n.parent.parent.ends[_]) :
                            W.queue('nothing to the left');
                        break;
                      case 'Ctrl-Alt-Right':
                        n.parent.parent && n.parent.parent.ends &&
                                n.parent.parent.ends[E] &&
                                n.parent.parent.ends[E] instanceof C ?
                            W.queue(n.parent.parent.ends[E]) :
                            W.queue('nothing to the right');
                        break;
                      case 'Ctrl-Alt-Shift-Down':
                        n.selection ?
                            W.queue(
                                n.selection.join('mathspeak', ' ').trim() +
                                ' selected') :
                            W.queue('nothing selected');
                        break;
                      case 'Ctrl-Alt-=':
                      case 'Ctrl-Alt-Shift-Right':
                        r.ariaPostLabel.length ? W.queue(r.ariaPostLabel) :
                                                 W.queue('no answer');
                        break;
                      default:
                        return
                    }
                    W.alert(), t.preventDefault(), r.scrollHoriz()
                  },
                  e.moveOutOf = e.moveTowards = e.deleteOutOf =
                      e.deleteTowards = e.unselectInto = e.selectOutOf =
                          e.selectTowards = function() {
                            r('overridden or never called on this node')
                          }
                }),
                O.open(function(e) {
                  function t(e, t) {
                    var r = e.notify('upDown').cursor, n = t + 'Into',
                        i = t + 'OutOf';
                    return r[E][n] ?
                               r.insAtLeftEnd(r[E][n]) :
                               r[_][n] ?
                               r.insAtRightEnd(r[_][n]) :
                               r.parent.bubble(function(e) {
                                 var t = e[i];
                                 if (t &&
                                     ('function' == typeof t && (t = e[i](r)),
                                      t instanceof C && r.jumpUpDown(e, t),
                                      !0 !== t))
                                   return !1
                               }),
                           e
                  }
                  this.onNotify(function(e) {
                    'move' !== e && 'upDown' !== e ||
                        this.show().clearSelection()
                  }),
                      e.escapeDir =
                          function(e, t, r) {
                        n(e);
                        var i = this.cursor;
                        if (i.parent !== this.root && r.preventDefault(),
                            i.parent !== this.root)
                          return i.parent.moveOutOf(e, i), W.alert(),
                                 this.notify('move')
                      },
                      N.leftRightIntoCmdGoes =
                          function(e) {
                        if (e && 'up' !== e && 'down' !== e)
                          throw '"up" or "down" required for leftRightIntoCmdGoes option, got "' +
                              e + '"';
                        return e
                      },
                      e.moveDir =
                          function(e) {
                        n(e);
                        var t = this.cursor, r = t.options.leftRightIntoCmdGoes;
                        return t.selection ?
                                          t.insDirOf(e, t.selection.ends[e]) :
                                   t[e] ? t[e].moveTowards(e, t, r) :
                                          t.parent.moveOutOf(e, t, r),
                               this.notify('move')
                      },
                      e.moveLeft =
                          function() {
                        return this.moveDir(_)
                      },
                      e.moveRight =
                          function() {
                        return this.moveDir(E)
                      },
                      e.moveUp =
                          function() {
                        return t(this, 'up')
                      },
                      e.moveDown =
                          function() {
                        return t(this, 'down')
                      },
                      this.onNotify(function(e) {
                        'upDown' !== e && (this.upDownCache = {})
                      }),
                      this.onNotify(function(e) {
                        'edit' === e && this.show().deleteSelection()
                      }),
                      e.deleteDir =
                          function(e) {
                        n(e);
                        var t = this.cursor, r = t[e], i = t.parent.parent;
                        if (r && r instanceof C)
                          r.sides ?
                              W.queue(r.parent.chToCmd(r.sides[-e].ch)
                                          .mathspeak({createdLeftOf: t})) :
                              r.blocks || '\\text' === r.parent.ctrlSeq ||
                                  W.queue(r);
                        else if (i && i instanceof C)
                          if (i.sides)
                            W.queue(i.parent.chToCmd(i.sides[e].ch).mathspeak({
                              createdLeftOf: t
                            }));
                          else if (i.blocks && i.mathspeakTemplate)
                            if (i.upInto && i.downInto)
                              W.queue(i.mathspeakTemplate[1]);
                            else {
                              var o = i.mathspeakTemplate,
                                  s = e === _ ? o[0] : o[o.length - 1];
                              W.queue(s)
                            }
                          else
                            W.queue(i);
                        var a = t.selection;
                        return this.notify('edit'),
                               a ||
                                   (t[e] ? t[e].deleteTowards(e, t) :
                                           t.parent.deleteOutOf(e, t)),
                               t[_].siblingDeleted &&
                                   t[_].siblingDeleted(t.options, E),
                               t[E].siblingDeleted &&
                                   t[E].siblingDeleted(t.options, _),
                               t.parent.bubble(function(e) {
                                 e.reflow()
                               }),
                               this
                      },
                      e.ctrlDeleteDir =
                          function(e) {
                        n(e);
                        var t = this.cursor;
                        if (!t[e] || t.selection) return this.deleteDir(e);
                        this.notify('edit');
                        var r;
                        return r = e === _ ? T(t.parent.ends[_], t[_]) :
                                             T(t[E], t.parent.ends[E]),
                               W.queue(r), r.remove(),
                               t.insAtDirEnd(e, t.parent),
                               t[_].siblingDeleted &&
                                   t[_].siblingDeleted(t.options, E),
                               t[E].siblingDeleted &&
                                   t[E].siblingDeleted(t.options, _),
                               t.parent.bubble(function(e) {
                                 e.reflow()
                               }),
                               this
                      },
                      e.backspace =
                          function() {
                        return this.deleteDir(_)
                      },
                      e.deleteForward =
                          function() {
                        return this.deleteDir(E)
                      },
                      this.onNotify(function(e) {
                        'select' !== e && this.endSelection()
                      }),
                      e.selectDir = function(e) {
                        var t = this.notify('select').cursor, r = t.selection;
                        n(e), t.anticursor || t.startSelection();
                        var i = t[e];
                        i ? r && r.ends[e] === i && t.anticursor[-e] !== i ?
                            i.unselectInto(e, t) :
                            i.selectTowards(e, t) :
                            t.parent.selectOutOf(e, t),
                            t.clearSelection(), t.select() || t.show(),
                            t.selection &&
                            W.clear().queue(
                                t.selection.join('mathspeak', ' ').trim() +
                                ' selected')
                      }, e.selectLeft = function() {
                        return this.selectDir(_)
                      }, e.selectRight = function() {
                        return this.selectDir(E)
                      }
                });
            var H = function() {
              function e(e) {
                var t = J();
                return e.adopt(t, 0, 0), t
              }
              function t(e) {
                for (var t = e[0] || J(), r = 1; r < e.length; r += 1)
                  e[r].children().adopt(t, t.ends[E], 0);
                return t
              }
              var r = z.string, n = z.regex, i = z.letter, o = z.digit,
                  s = z.any, a = z.optWhitespace, l = z.succeed, c = z.fail,
                  u = i.map(function(e) {
                    return ie(e)
                  }),
                  d = o.map(function(e) {
                    return re(e)
                  }),
                  p = n(/^[^${}\\_^]/).map(function(e) {
                    return Q(e)
                  }),
                  h = n(/^[^\\a-eg-zA-Z]/)
                          .or(r('\\').then(
                              n(/^[a-z]+/i).or(n(/^\s+/).result(' ')).or(s)))
                          .then(function(e) {
                            var t = L[e];
                            return t ? t(e).parser() :
                                       c('unknown command: \\' + e)
                          }),
                  f = h.or(u).or(d).or(p),
                  g = r('{')
                          .then(function() {
                            return y
                          })
                          .skip(r('}')),
                  m = a.then(g.or(f.map(e))), y = m.many().map(t).skip(a),
                  v = r('[')
                          .then(m.then(function(e) {
                                   return ']' !== e.join('latex') ? l(e) : c()
                                 })
                                    .many()
                                    .map(t)
                                    .skip(a))
                          .skip(r(']')),
                  b = y;
              return b.block = m, b.optBlock = v, b
            }();
            O.open(function(e, t) {
              e.cleanLatex = function(e) {
                return e.replace(/(\\[a-z]+) (?![a-z])/gi, '$1')
              }, e.exportLatex = function() {
                return this.cleanLatex(this.root.latex())
              }, e.writeLatex = function(e) {
                var t = this.notify('edit').cursor, r = z.all, n = z.eof,
                    i = H.skip(n).or(r.result(!1)).parse(e);
                if (i && !i.isEmpty()) {
                  i.children().adopt(t.parent, t[_], t[E]);
                  i.jQize().insertBefore(t.jQ), t[_] = i.ends[E],
                                                i.finalizeInsert(t.options, t),
                                                i.ends[E][E].siblingCreated &&
                      i.ends[E][E].siblingCreated(t.options, _),
                                                i.ends[_][_].siblingCreated &&
                      i.ends[_][_].siblingCreated(t.options, E),
                                                t.parent.bubble(function(e) {
                                                  e.reflow()
                                                })
                }
                return this
              }, e.classifyLatexForEfficientUpdate = function(e) {
                if ('string' == typeof e) {
                  var t = e.match(/-?[0-9.]+$/g);
                  return t && 1 === t.length ? {
                    latex: e,
                    prefix: e.substr(0, e.length - t[0].length),
                    digits: t[0]
                  } :
                                               void 0
                }
              }, e.renderLatexMathEfficiently = function(e) {
                var t, r, n = this.classifyLatexForEfficientUpdate(e);
                if (!n) return !1;
                if (t = this.exportLatex(),
                    !(r = this.classifyLatexForEfficientUpdate(t)) ||
                        r.prefix !== n.prefix)
                  return !1;
                var i = this.root, o = r.digits, s = n.digits, a = !1, l = !1;
                '-' === o[0] && (a = !0, o = o.substr(1)),
                    '-' === s[0] && (l = !0, s = s.substr(1));
                for (var c = this.root.ends[E], u = [], d = o.length - 1;
                     d >= 0; d--) {
                  if (c.ctrlSeq !== o[d]) return !1;
                  if (c.parent !== i) return !1;
                  u.unshift(c), c = c[_]
                }
                if (a && !l) {
                  var p = c;
                  if ('-' !== p.ctrlSeq) return !1;
                  if (p[E] !== u[0]) return !1;
                  if (p.parent !== i) return !1;
                  if (p[_] && p[_].parent !== i) return !1;
                  u[0][_] = p[_], i.ends[_] === p && (i.ends[_] = u[0]),
                  p[_] && (p[_][E] = u[0]), p.jQ.remove()
                }
                if (!a && l) {
                  var h = pe('-'), f = document.createElement('span');
                  f.textContent = '-', h.jQ = S(f), u[0][_] && (u[0][_][E] = h),
                  i.ends[_] === u[0] && (i.ends[_] = h), h.parent = i,
                  h[_] = u[0][_], h[E] = u[0], u[0][_] = h, h.contactWeld(),
                  h.jQ.insertBefore(u[0].jQ)
                }
                var g = Math.min(o.length, s.length);
                for (d = 0; d < g; d++) {
                  var m = s[d];
                  c = u[d],
                  c.ctrlSeq !== m &&
                      (c.ctrlSeq = m, c.jQ[0].textContent = m,
                       c.mathspeakName = m)
                }
                if (o.length > s.length)
                  for (c = u[s.length - 1], i.ends[E] = c, c[E] = 0,
                      d = o.length - 1;
                       d >= g; d--)
                    u[d].jQ.remove();
                if (s.length > o.length) {
                  var y = document.createDocumentFragment();
                  for (d = g; d < s.length; d++) {
                    var v = document.createElement('span');
                    v.className = 'dcg-mq-digit', v.textContent = s[d];
                    var b = re(s[d]);
                    b.parent = i, b.jQ = S(v), y.appendChild(v),
                    b[_] = i.ends[E], b[E] = 0, b[_][E] = b, i.ends[E] = b
                  }
                  i.jQ[0].appendChild(y)
                }
                var x = this.exportLatex();
                if (x !== e)
                  return console.warn(
                             'tried updating latex efficiently but did not work. Attempted: ' +
                             e + ' but wrote: ' + x),
                         !1;
                this.cursor.resetToEnd(this);
                var w = i.ends[E];
                return w.fixDigitGrouping &&
                           w.fixDigitGrouping(this.cursor.options),
                       !0
              }, e.renderLatexMathFromScratch = function(e) {
                var t = this.root, r = this.cursor, n = z.all, i = z.eof,
                    o = H.skip(i).or(n.result(!1)).parse(e);
                t.ends[_] = t.ends[E] = 0, o && o.children().adopt(t, 0, 0);
                var s = t.jQ;
                if (o) {
                  var a = o.join('html');
                  s.html(a), t.jQize(s.children()), t.finalizeInsert(r.options)
                } else
                  s.empty();
                var l = this.ariaLabel && 'Math Input' !== this.ariaLabel ?
                    this.ariaLabel + ': ' :
                    '';
                this.container.attr('aria-label', l + t.mathspeak().trim()),
                    delete r.selection, r.insAtRightEnd(t)
              }, e.renderLatexMath = function(e) {
                this.notify('replace'),
                    this.renderLatexMathEfficiently(e) ||
                    this.renderLatexMathFromScratch(e)
              }, e.renderLatexText = function(e) {
                var t = this.root, r = this.cursor;
                t.jQ.children().slice(1).remove(), t.ends[_] = t.ends[E] = 0,
                                                   delete r.selection,
                                                   r.show().insAtRightEnd(t);
                var n = z.regex, i = z.string, o = z.eof, s = z.all,
                    a = i('$').then(H).skip(i('$').or(o)).map(function(e) {
                      var t = RootMathCommand(r);
                      t.createBlocks();
                      var n = t.ends[_];
                      return e.children().adopt(n, 0, 0), t
                    }),
                    l = i('\\$').result('$'), c = l.or(n(/^[^$]/)).map(Q),
                    u = a.or(c).many(), d = u.skip(o).or(s.result(!1)).parse(e);
                if (d) {
                  for (var p = 0; p < d.length; p += 1)
                    d[p].adopt(t, t.ends[E], 0);
                  t.jQize().appendTo(t.jQ), t.finalizeInsert(r.options)
                }
              }
            }),
                O.open(function(t) {
                  q.p.ignoreNextMousedown = e;
                  var r;
                  this.onNotify(function(e) {
                    'edit' !== e && 'replace' !== e ||
                        r && r.cursor === this && r.cb()
                  }),
                      t.delegateMouseEvents = function() {
                        var t = this.root.jQ;
                        this.container.bind('mousedown.mathquill', function(n) {
                          function i(e) {
                            y = S(e.target)
                          }
                          function o(e) {
                            p.anticursor || p.startSelection(),
                                d.seek(y, e.pageX, e.pageY).cursor.select(),
                                p.selection &&
                                W.clear()
                                    .queue(
                                        p.selection.join('mathspeak') +
                                        ' selected')
                                    .alert(),
                                y = m
                          }
                          function s(e) {
                            c.unbind('mousemove', i),
                                S(e.target.ownerDocument)
                                    .unbind('mousemove', o)
                                    .unbind('mouseup', l),
                                r = m
                          }
                          function a() {
                            d.editable ? (p.show(), W.queue(p.parent).alert()) :
                                         f.detach()
                          }
                          function l(e) {
                            p.blink = h, p.selection || a(), s(e)
                          }
                          var c = S(n.target).closest('.dcg-mq-root-block'),
                              u = C.getNodeOfElement(c[0]) ||
                              C.getNodeOfElement(t[0]),
                              d = u.controller, p = d.cursor, h = p.blink,
                              f = d.textareaSpan, g = d.textarea;
                          if (n.preventDefault(), n.target.unselectable = !0,
                              !p.options.ignoreNextMousedown(n)) {
                            p.options.ignoreNextMousedown = e;
                            var y, v;
                            r = {
                              cursor: p,
                              cb: function() {
                                v = !0, p.blink = h, p.clearSelection(), a(),
                                s(n)
                              }
                            },
                            d.blurred &&
                                    (d.editable || c.prepend(f), g.focus(),
                                     v) ||
                                (p.blink = e,
                                 d.seek(S(n.target), n.pageX, n.pageY)
                                     .cursor.startSelection(),
                                 c.mousemove(i),
                                 S(n.target.ownerDocument)
                                     .mousemove(o)
                                     .mouseup(l))
                          }
                        })
                      }
                }),
                O.open(function(e) {
                  e.seek = function(e, t, r) {
                    for (var n, i = this.notify('select').cursor, o = e && e[0];
                         o && !(n = C.getNodeOfElement(o));)
                      o = o.parentElement;
                    return n || (n = this.root), i.clearSelection().show(),
                           n.seek(t, i), this.scrollHoriz(), this
                  }
                }),
                O.open(function(e) {
                  e.setOverflowClasses = function() {
                    var e = this.root.jQ[0], t = !1, r = !1;
                    if (!this.blurred) {
                      var n = e.getBoundingClientRect().width,
                          i = e.scrollWidth, o = e.scrollLeft;
                      t = i > n + o, r = o > 0
                    }
                    e.classList.contains('dcg-mq-editing-overflow-right') !==
                            t &&
                        e.classList.toggle('dcg-mq-editing-overflow-right'),
                        e.classList.contains('dcg-mq-editing-overflow-left') !==
                            r &&
                        e.classList.toggle('dcg-mq-editing-overflow-left')
                  }, e.scrollHoriz = function() {
                    var e = this.cursor, t = e.selection,
                        r = this.root.jQ[0].getBoundingClientRect();
                    if (!e.jQ[0] && !t)
                      return void this.root.jQ.stop().animate(
                          {scrollLeft: 0}, 100, function() {
                            this.setOverflowClasses()
                          }.bind(this));
                    if (t) {
                      var n = t.jQ[0].getBoundingClientRect(),
                          i = n.left - (r.left + 20),
                          o = n.right - (r.right - 20);
                      if (t.ends[_] === e[E])
                        if (i < 0)
                          var s = i;
                        else {
                          if (!(o > 0)) return;
                          if (n.left - o < r.left + 20)
                            var s = i;
                          else
                            var s = o
                        }
                      else if (o > 0)
                        var s = o;
                      else {
                        if (!(i < 0)) return;
                        if (n.right - i > r.right - 20)
                          var s = o;
                        else
                          var s = i
                      }
                    } else {
                      var a = e.jQ[0].getBoundingClientRect().left;
                      if (a > r.right - 20)
                        var s = a - (r.right - 20);
                      else {
                        if (!(a < r.left + 20)) return;
                        var s = a - (r.left + 20)
                      }
                    }
                    var l = this.root.jQ[0];
                    s<0 && 0 === l.scrollLeft || s>0 &&
                            l.scrollWidth <= l.scrollLeft + r.width ||
                        this.root.jQ.stop().animate(
                            {scrollLeft: '+=' + s}, 100, function() {
                              this.setOverflowClasses()
                            }.bind(this))
                  }
                }),
                O.open(function(e) {
                  q.p.substituteTextarea =
                      function() {
                    return S(
                        '<textarea autocapitalize=off autocomplete=off autocorrect=off spellcheck=false x-palm-disable-ste-all=true/>')[0]
                  },
                  e.createTextarea =
                      function() {
                    var e = this.textareaSpan =
                            S('<span class="dcg-mq-textarea"></span>'),
                        t = this.options.substituteTextarea();
                    if (!t.nodeType)
                      throw 'substituteTextarea() must return a DOM element, got ' +
                          t;
                    t = this.textarea = S(t).appendTo(e);
                    var r = this;
                    r.cursor.selectionChanged = function() {
                      r.selectionChanged()
                    }
                  },
                  e.selectionChanged =
                      function() {
                    var e = this;
                    e.textareaSelectionTimeout === m &&
                        (e.textareaSelectionTimeout = setTimeout(function() {
                           e.setTextareaSelection()
                         }))
                  },
                  e.setTextareaSelection =
                      function() {
                    this.textareaSelectionTimeout = m;
                    var e = '';
                    this.cursor.selection &&
                        (e = this.cleanLatex(
                             this.cursor.selection.join('latex')),
                         this.options.statelessClipboard &&
                             (e = '$' + e + '$')),
                        this.selectFn(e)
                  },
                  e.staticMathTextareaEvents =
                      function() {
                    function e() {
                      o.detach(), t.blurred = !0
                    }
                    var t = this, r = t.root, n = t.cursor, i = t.textarea,
                        o = t.textareaSpan;
                    this.container.prepend(
                        '<span aria-hidden="true" class="dcg-mq-selectable">$' +
                        t.exportLatex() + '$</span>'),
                        t.blurred = !0, i.bind('cut paste', !1),
                        t.options.disableCopyPaste ?
                        i.bind('copy', !1) :
                        i.bind(
                            'copy',
                            function() {
                              t.setTextareaSelection()
                            }),
                        i.focus(function() {
                           t.blurred = !1
                         }).blur(function() {
                          n.selection && n.selection.clear(), setTimeout(e)
                        }),
                        t.selectFn = function(e) {
                          i.val(e), e && i.select()
                        };
                    var s = t && 'Math Input' !== t.ariaLabel ?
                        t.ariaLabel + ': ' :
                        '';
                    t.container.attr('aria-label', s + r.mathspeak().trim());
                    var a = navigator.userAgent || navigator.vendor ||
                        window.opera,
                        l = /iPad|iPhone|iPod/.test(a) && !window.Stream;
                    -1 !== navigator.appVersion.indexOf('Mac') && !l ||
                        t.container.attr('role', 'math')
                  },
                  q.p.substituteKeyboardEvents = G,
                  e.editablesTextareaEvents = function() {
                    var e = this, t = e.textarea, r = e.textareaSpan,
                        n = this.options.substituteKeyboardEvents(t, this);
                    this.selectFn = function(e) {
                      n.select(e)
                    }, this.container.prepend(r), this.focusBlurEvents()
                  }, e.typedText = function(e) {
                    if ('\n' === e) return this.handle('enter');
                    var t = this.notify().cursor;
                    t.parent.write(t, e), this.scrollHoriz()
                  }, e.cut = function() {
                    var e = this, t = e.cursor;
                    t.selection && setTimeout(function() {
                      e.notify('edit'), t.parent.bubble(function(e) {
                        e.reflow()
                      }),
                          e.options && e.options.onCut && e.options.onCut()
                    })
                  }, e.copy = function() {
                    this.setTextareaSelection()
                  }, e.paste = function(e) {
                    this.options.statelessClipboard &&
                        (e = '$' === e.slice(0, 1) && '$' === e.slice(-1) ?
                             e.slice(1, -1) :
                             '\\text{' + e + '}'),
                        this.writeLatex(e).cursor.show(), this.scrollHoriz(),
                        this.options && this.options.onPaste &&
                        this.options.onPaste()
                  }
                });
            var Y =
                    w(C,
                      function(e, t) {
                        e.finalizeInsert = function(e, t) {
                          var r = this;
                          r.postOrder(function(t) {
                            t.finalizeTree(e)
                          }),
                              r.postOrder(function(e) {
                                e.contactWeld(t)
                              }),
                              r.postOrder(function(e) {
                                e.blur()
                              }),
                              r.postOrder(function(e) {
                                e.reflow()
                              }),
                              r[E].siblingCreated && r[E].siblingCreated(e, _),
                              r[_].siblingCreated && r[_].siblingCreated(e, E),
                              r.bubble(function(e) {
                                e.reflow()
                              })
                        }
                      }),
                X = w(
                    Y,
                    function(e, t) {
                      e.init = function(e, r, n) {
                        var i = this;
                        t.init.call(i), i.ctrlSeq || (i.ctrlSeq = e),
                            r && (i.htmlTemplate = r), n && (i.textTemplate = n)
                      }, e.replaces = function(e) {
                        e.disown(), this.replacedFragment = e
                      }, e.isEmpty = function() {
                        return this.foldChildren(!0, function(e, t) {
                          return e && t.isEmpty()
                        })
                      }, e.parser = function() {
                        var e = H.block, t = this;
                        return e.times(t.numBlocks()).map(function(e) {
                          t.blocks = e;
                          for (var r = 0; r < e.length; r += 1)
                            e[r].adopt(t, t.ends[E], 0);
                          return t
                        })
                      }, e.createLeftOf = function(e) {
                        var r = this, n = r.replacedFragment;
                        r.createBlocks(), t.createLeftOf.call(r, e),
                            n &&
                            (n.adopt(r.ends[_], 0, 0),
                             n.jQ.appendTo(r.ends[_].jQ)),
                            r.finalizeInsert(e.options), r.placeCursor(e)
                      }, e.createBlocks = function() {
                        for (var e = this, t = e.numBlocks(),
                                 r = e.blocks = Array(t), n = 0;
                             n < t; n += 1) {
                          (r[n] = J()).adopt(e, e.ends[E], 0)
                        }
                      }, e.placeCursor = function(e) {
                        e.insAtRightEnd(
                            this.foldChildren(this.ends[_], function(e, t) {
                              return e.isEmpty() ? e : t
                            }))
                      }, e.moveTowards = function(e, t, r) {
                        var n = r && this[r + 'Into'];
                        t.insAtDirEnd(-e, n || this.ends[-e]),
                            W.queueDirEndOf(-e).queue(t.parent, !0)
                      }, e.deleteTowards = function(e, t) {
                        this.isEmpty() ? t[e] = this.remove()[e] :
                                         this.moveTowards(e, t, null)
                      }, e.selectTowards = function(e, t) {
                        t[-e] = this, t[e] = this[e]
                      }, e.selectChildren = function() {
                        return D(this, this)
                      }, e.unselectInto = function(e, t) {
                        t.insAtDirEnd(-e, t.anticursor.ancestors[this.id])
                      }, e.seek = function(e, t) {
                        function r(e) {
                          var t = {};
                          return t[_] = e.jQ.offset().left,
                                 t[E] = t[_] + e.jQ.outerWidth(), t
                        }
                        var n = this, i = r(n);
                        if (e < i[_]) return t.insLeftOf(n);
                        if (e > i[E]) return t.insRightOf(n);
                        var o = i[_];
                        n.eachChild(function(s) {
                          var a = r(s);
                          return e < a[_] ?
                              (e - o < a[_] - e ? s[_] ? t.insAtRightEnd(s[_]) :
                                                         t.insLeftOf(n) :
                                                  t.insAtLeftEnd(s),
                               !1) :
                              e > a[E] ? void (
                                             s[E] ? o = a[E] :
                                                 i[E] - e < e - a[E] ?
                                                    t.insRightOf(n) :
                                                    t.insAtRightEnd(s)) :
                                         (s.seek(e, t), !1)
                        })
                      }, e.numBlocks = function() {
                        var e = this.htmlTemplate.match(/&\d+/g);
                        return e ? e.length : 0
                      }, e.html = function() {
                        var e = this, t = e.blocks,
                            n = ' mathquill-command-id=' + e.id,
                            i = e.htmlTemplate.match(/<[^<>]+>|[^<>]+/g);
                        r('no unmatched angle brackets',
                          i.join('') === this.htmlTemplate);
                        for (var o = 0, s = i[0]; s; o += 1, s = i[o])
                          if ('/>' === s.slice(-2))
                            i[o] = s.slice(0, -2) + n + ' aria-hidden="true"/>';
                          else if ('<' === s.charAt(0)) {
                            r('not an unmatched top-level close tag',
                              '/' !== s.charAt(1)),
                                i[o] =
                                    s.slice(0, -1) + n + ' aria-hidden="true">';
                            var a = 1;
                            do {
                              o += 1, s = i[o], r('no missing close tags', s),
                                      '</' === s.slice(0, 2) ?
                                  a -= 1 :
                                  '<' === s.charAt(0) && '/>' !== s.slice(-2) &&
                                      (a += 1)
                            } while (a > 0)
                          }
                        return i.join('').replace(/>&(\d+)/g, function(e, r) {
                          return ' mathquill-block-id=' + t[r].id +
                              ' aria-hidden="true">' + t[r].join('html')
                        })
                      }, e.latex = function() {
                        return this.foldChildren(this.ctrlSeq, function(e, t) {
                          return e + '{' + (t.latex() || ' ') + '}'
                        })
                      }, e.textTemplate = [''], e.text = function() {
                        var e = this, t = 0;
                        return e.foldChildren(
                            e.textTemplate[t], function(r, n) {
                              t += 1;
                              var i = n.text();
                              return r && '(' === e.textTemplate[t] &&
                                      '(' === i[0] && ')' === i.slice(-1) ?
                                  r + i.slice(1, -1) + e.textTemplate[t] :
                                  r + i + (e.textTemplate[t] || '')
                            })
                      }, e.mathspeakTemplate = [], e.mathspeak = function() {
                        var e = this, t = 0;
                        return e.foldChildren(
                            e.mathspeakTemplate[t] || 'Start' + e.ctrlSeq + ' ',
                            function(r, n) {
                              return t += 1,
                                     r + ' ' + n.mathspeak() + ' ' +
                                         (e.mathspeakTemplate[t] + ' ' ||
                                          'End' + e.ctrlSeq + ' ')
                            })
                      }
                    }),
                $ =
                    w(X,
                      function(t, r) {
                        t.init = function(e, t, n, i) {
                          !n && e && (n = e.replace(/^\\/, '')),
                              this.mathspeakName = i || n,
                              r.init.call(this, e, t, [n])
                        }, t.parser = function() {
                          return z.succeed(this)
                        }, t.numBlocks = function() {
                          return 0
                        }, t.replaces = function(e) {
                          e.remove()
                        }, t.createBlocks = e, t.moveTowards = function(e, t) {
                          t.jQ.insDirOf(e, this.jQ),
                              t[-e] = this, t[e] = this[e], W.queue(this)
                        }, t.deleteTowards = function(e, t) {
                          t[e] = this.remove()[e]
                        }, t.seek = function(e, t) {
                          e - this.jQ.offset().left < this.jQ.outerWidth() / 2 ?
                              t.insLeftOf(this) :
                              t.insRightOf(this)
                        }, t.latex = function() {
                          return this.ctrlSeq
                        }, t.text = function() {
                          return this.textTemplate.join('')
                        }, t.mathspeak = function() {
                          return this.mathspeakName
                        }, t.placeCursor = e, t.isEmpty = function() {
                          return !0
                        }
                      }),
                Q =
                    w($,
                      function(e, t) {
                        e.init = function(e, r, n) {
                          t.init.call(
                              this, e, '<span>' + (r || e) + '</span>', m, n)
                        }
                      }),
                Z =
                    w($,
                      function(e, t) {
                        e.init = function(e, r, n, i) {
                          t.init.call(
                              this, e,
                              '<span class="dcg-mq-binary-operator">' + r +
                                  '</span>',
                              n, i)
                        }
                      }),
                J = w(Y, function(e, t) {
                  e.join = function(e) {
                    return this.foldChildren('', function(t, r) {
                      return t + r[e]()
                    })
                  }, e.html = function() {
                    return this.join('html')
                  }, e.latex = function() {
                    return this.join('latex')
                  }, e.text = function() {
                    return this.ends[_] === this.ends[E] && 0 !== this.ends[_] ?
                        this.ends[_].text() :
                        this.join('text')
                  }, e.mathspeak = function() {
                    var e = '', t = {};
                    return this.controller &&
                               (t = this.controller.options.autoOperatorNames),
                           this.foldChildren([], function(r, n) {
                                 if (n.isPartOfOperator)
                                   e += n.mathspeak();
                                 else {
                                   if ('' !== e) {
                                     if (t._maxLength > 0) {
                                       var i = t[e.toLowerCase()];
                                       'string' == typeof i && (e = i)
                                     }
                                     r.push(e + ' '), e = ''
                                   }
                                   var o = n.mathspeak(), s = n.ctrlSeq;
                                   isNaN(s) &&
                                       (o = ' ' + o, '.' !== s && (o += ' ')),
                                       r.push(o)
                                 }
                                 return r
                               }).join('').replace(/ +(?= )/g, '')
                  }, e.ariaLabel = 'block', e.keystroke = function(e, r, n) {
                    return !n.options.spaceBehavesLikeTab ||
                            'Spacebar' !== e && 'Shift-Spacebar' !== e ?
                        t.keystroke.apply(this, arguments) :
                        (r.preventDefault(),
                         void n.escapeDir('Shift-Spacebar' === e ? _ : E, e, r))
                  }, e.moveOutOf = function(e, t, r) {
                    r && this.parent[r + 'Into'] || !this[e] ?
                        (t.insDirOf(e, this.parent),
                         W.queueDirOf(e).queue(this.parent)) :
                        (t.insAtDirEnd(-e, this[e]),
                         W.queueDirEndOf(-e).queue(t.parent, !0))
                  }, e.selectOutOf = function(e, t) {
                    t.insDirOf(e, this.parent)
                  }, e.deleteOutOf = function(e, t) {
                    t.unwrapGramp()
                  }, e.seek = function(e, t) {
                    var r = this.ends[E];
                    if (!r || r.jQ.offset().left + r.jQ.outerWidth() < e)
                      return t.insAtRightEnd(this);
                    if (e < this.ends[_].jQ.offset().left)
                      return t.insAtLeftEnd(this);
                    for (; e < r.jQ.offset().left;) r = r[_];
                    return r.seek(e, t)
                  }, e.chToCmd = function(e, t) {
                    var r;
                    return e.match(/^[a-eg-zA-Z]$/) ? ie(e) :
                        /^\d$/.test(e)              ? re(e) :
                        t && t.typingSlashWritesDivisionSymbol && '/' === e ?
                                         L['÷'](e) :
                        t && t.typingAsteriskWritesTimesSymbol && '*' === e ?
                                         L['×'](e) :
                        t && t.typingPercentWritesPercentOf && '%' === e ?
                                             L.percentof(e) :
                        (r = P[e] || L[e]) ? r(e) :
                                             Q(e)
                  }, e.write = function(e, t) {
                    var r = this.chToCmd(t, e.options);
                    e.selection && r.replaces(e.replaceSelection()),
                        r.createLeftOf(e.show()),
                        '/' === t ? W.alert('over') :
                                    W.alert(r.mathspeak({createdLeftOf: e}))
                  }, e.focus = function() {
                    return this.jQ.addClass('dcg-mq-hasCursor'),
                           this.jQ.removeClass('dcg-mq-empty'), this
                  }, e.blur = function() {
                    return this.jQ.removeClass('dcg-mq-hasCursor'),
                           this.isEmpty() &&
                               (this.jQ.addClass('dcg-mq-empty'),
                                this.isEmptyParens() &&
                                    this.jQ.addClass('dcg-mq-empty-parens')),
                           this
                  }
                });
            F.StaticMath = function(e) {
              return w(e.AbstractMathQuill, function(t, r) {
                this.RootBlock = J, t.__mathquillify = function(e, t) {
                  return this.config(e),
                         r.__mathquillify.call(this, 'dcg-mq-math-mode'),
                         this.__controller.delegateMouseEvents(),
                         this.__controller.staticMathTextareaEvents(), this
                }, t.init = function() {
                  r.init.apply(this, arguments);
                  var t = this.innerFields = [];
                  this.__controller.root.postOrder(function(r) {
                    r.registerInnerField(t, e.MathField)
                  })
                }, t.latex = function() {
                  var t = r.latex.apply(this, arguments);
                  if (arguments.length > 0) {
                    var n = this.innerFields = [];
                    this.__controller.root.postOrder(function(t) {
                      t.registerInnerField(n, e.MathField)
                    })
                  }
                  return t
                }, t.setAriaLabel = function(e) {
                  this.__controller.ariaLabel = 'string' == typeof e ? e : '';
                  var t = 'Math Input' !== this.__controller.ariaLabel ?
                      this.__controller.ariaLabel + ': ' :
                      '';
                  return this.__controller.container.attr(
                             'aria-label',
                             t + this.__controller.root.mathspeak().trim()),
                         this
                }, t.getAriaLabel = function() {
                  return this.__controller.ariaLabel || ''
                }
              })
            };
            var ee = w(J, p);
            F.MathField = function(t) {
              return w(t.EditableField, function(t, r) {
                this.RootBlock = ee, t.__mathquillify = function(t, n) {
                  return this.config(t),
                         n > 1 && (this.__controller.root.reflow = e),
                         r.__mathquillify.call(
                             this, 'dcg-mq-editable-field dcg-mq-math-mode'),
                         delete this.__controller.root.reflow, this
                }
              })
            };
            var te = w($, function(e, t) {
              e.finalizeTree = e.siblingDeleted = e.siblingCreated =
                  function(e, t) {
                t !== _ && this[E] instanceof te || this.fixDigitGrouping(e)
              },
              e.fixDigitGrouping = function(e) {
                if (e.enableDigitGrouping) {
                  var t = this, r = this, n = 0, i = [], o = t;
                  do {
                    if (/^[0-9]$/.test(o.ctrlSeq))
                      t = o;
                    else if ('\\ ' === o.ctrlSeq)
                      t = o, n += 1;
                    else {
                      if ('.' !== o.ctrlSeq) break;
                      t = o, i.push(o)
                    }
                  } while (o = t[_]);
                  for (; o = r[E];)
                    if (/^[0-9]$/.test(o.ctrlSeq))
                      r = o;
                    else if ('\\ ' === o.ctrlSeq)
                      r = o, n += 1;
                    else {
                      if ('.' !== o.ctrlSeq) break;
                      r = o, i.push(o)
                    }
                  for (; r !== t && '\\ ' === t.ctrlSeq;) t = t[E], n -= 1;
                  for (; r !== t && '\\ ' === r.ctrlSeq;) r = r[_], n -= 1;
                  if (t !== r || '\\ ' !== t.ctrlSeq) {
                    n > 0 || i.length > 1 ?
                        this.removeGroupingBetween(t, r) :
                        i[0] ?
                        (i[0] !== t && this.addGroupingBetween(i[0][_], t),
                         i[0] !== r && this.removeGroupingBetween(i[0][E], r)) :
                        this.addGroupingBetween(r, t)
                  }
                }
              }, e.removeGroupingBetween = function(e, t) {
                var r = e;
                do {
                  if (r.setGroupingClass(m), r === t) break
                } while (r = r[E])
              }, e.addGroupingBetween = function(e, t) {
                for (var r = e, n = 0, i = 0, r = e; r && (i += 1, r !== t);)
                  r = r[_];
                var o = i % 3;
                0 === o && (o = 3);
                for (var r = e; r;) {
                  n += 1;
                  var s = m;
                  if (i >= 4 &&
                          (n === i ? s = 'dcg-mq-group-leading-' + o :
                                     n % 3 == 0 && n !== i &&
                                   (s = 'dcg-mq-group-start'),
                           s || (s = 'dcg-mq-group-other')),
                      r.setGroupingClass(s), r === t)
                    break;
                  r = r[_]
                }
              }, e.setGroupingClass = function(e) {
                this._groupingClass !== e &&
                    (this._groupingClass &&
                         this.jQ.removeClass(this._groupingClass),
                     e && this.jQ.addClass(e), this._groupingClass = e)
              }
            }), re = w(te, function(e, t) {
                  e.init = function(e, r, n) {
                    t.init.call(
                        this, e,
                        '<span class="dcg-mq-digit">' + (r || e) + '</span>', m,
                        n)
                  }, e.createLeftOf = function(e) {
                    e.options.autoSubscriptNumerals &&
                            e.parent !== e.parent.parent.sub &&
                            (e[_] instanceof ne && !1 !== e[_].isItalic ||
                             e[_] instanceof we && e[_][_] instanceof ne &&
                                 !1 !== e[_][_].isItalic) ?
                        (L._().createLeftOf(e), t.createLeftOf.call(this, e),
                         e.insRightOf(e.parent.parent)) :
                        t.createLeftOf.call(this, e)
                  }, e.mathspeak = function(e) {
                    if (e && e.createdLeftOf) {
                      var r = e.createdLeftOf;
                      if (r.options.autoSubscriptNumerals &&
                          r.parent !== r.parent.parent.sub &&
                          (r[_] instanceof ne && !1 !== r[_].isItalic ||
                           r[_] instanceof we && r[_][_] instanceof ne &&
                               !1 !== r[_][_].isItalic))
                        return 'Subscript ' + t.mathspeak.call(this) +
                            ' Baseline'
                    }
                    return t.mathspeak.apply(this, arguments)
                  }
                }), ne = w($, function(e, t) {
                      e.init = function(e, r) {
                        t.init.call(this, e, '<var>' + (r || e) + '</var>')
                      }, e.text = function() {
                        var e = this.ctrlSeq;
                        return this.isPartOfOperator ?
                                   '\\' == e[0] ? e = e.slice(1, e.length) :
                                                  ' ' == e[e.length - 1] &&
                                           (e = e.slice(0, -1)) :
                                   (!this[_] || this[_] instanceof ne ||
                                        this[_] instanceof Z ||
                                        '\\ ' === this[_].ctrlSeq ||
                                        (e = '*' + e),
                                    !this[E] || this[E] instanceof Z ||
                                        this[E] instanceof we || (e += '*')),
                                                  e
                      }, e.mathspeak = function() {
                        var e = this.ctrlSeq;
                        return this.isPartOfOperator || 1 !== e.length ?
                            t.mathspeak.call(this) :
                            '"' + e + '"'
                      }
                    });
            q.p.autoCommands = {_maxLength: 0},
            N.autoCommands =
                function(e) {
              if (!/^[a-z]+(?: [a-z]+)*$/i.test(e))
                throw '"' + e + '" not a space-delimited list of only letters';
              for (var t = e.split(' '), r = {}, n = 0, i = 0; i < t.length;
                   i += 1) {
                var o = t[i];
                if (o.length < 2)
                  throw 'autocommand "' + o + '" not minimum length of 2';
                if (L[o] === le)
                  throw '"' + o + '" is a built-in operator name';
                r[o] = 1, n = b(n, o.length)
              }
              return r._maxLength = n, r
            },
            q.p.autoParenthesizedFunctions = {_maxLength: 0},
            N.autoParenthesizedFunctions = function(e) {
              if (!/^[a-z]+(?: [a-z]+)*$/i.test(e))
                throw '"' + e + '" not a space-delimited list of only letters';
              for (var t = e.split(' '), r = {}, n = 0, i = 0; i < t.length;
                   i += 1) {
                var o = t[i];
                if (o.length < 2)
                  throw 'autocommand "' + o + '" not minimum length of 2';
                r[o] = 1, n = b(n, o.length)
              }
              return r._maxLength = n, r
            };
            var ie = w(ne, function(e, t) {
              function r(e) {
                return !e ||
                    ('.' === e.ctrlSeq || (e instanceof Z || e instanceof _e))
              }
              e.init =
                  function(e) {
                return t.init.call(this, this.letter = e)
              },
              e.checkAutoCmds =
                  function(e) {
                var t = e.options.autoCommands, r = t._maxLength;
                if (r > 0) {
                  for (var n = '', i = this, o = 0;
                       i instanceof ie && i.ctrlSeq === i.letter && o < r;)
                    n = i.letter + n, i = i[_], o += 1;
                  for (; n.length;) {
                    if (t.hasOwnProperty(n)) {
                      for (var o = 1, i = this; o < n.length; o += 1, i = i[_])
                        ;
                      return T(i, this).remove(), e[_] = i[_],
                                                  L[n](n).createLeftOf(e)
                    }
                    n = n.slice(1)
                  }
                }
              },
              e.autoParenthesize =
                  function(e) {
                var t = e.parent.ends[E];
                if (!(t && t instanceof Ce && '\\left(' === t.ctrlSeq ||
                      this.isParentSimpleSubscript())) {
                  for (var r = '', n = this, i = 0,
                           o = e.options.autoParenthesizedFunctions,
                           s = o._maxLength, a = e.options.autoOperatorNames;
                       n instanceof ie && i < s;)
                    r = n.letter + r, n = n[_], i += 1;
                  for (; r.length;) {
                    if (o.hasOwnProperty(r) && a.hasOwnProperty(r))
                      return e.parent.write(e, '(');
                    r = r.slice(1)
                  }
                }
              },
              e.createLeftOf =
                  function(e) {
                t.createLeftOf.apply(this, arguments), this.checkAutoCmds(e),
                    this.autoParenthesize(e)
              },
              e.italicize =
                  function(e) {
                return this.isItalic = e, this.isPartOfOperator = !e,
                       this.jQ.toggleClass('dcg-mq-operator-name', !e), this
              },
              e.finalizeTree = e.siblingDeleted = e.siblingCreated =
                  function(e, t) {
                t !== _ && this[E] instanceof ie || this.autoUnItalicize(e)
              },
              e.autoUnItalicize = function(e) {
                var t = e.autoOperatorNames;
                if (0 !== t._maxLength && !this.isParentSimpleSubscript()) {
                  for (var n = this.letter, i = this[_]; i instanceof ie;
                       i = i[_])
                    n = i.letter + n;
                  for (var o = this[E]; o instanceof ie; o = o[E])
                    n += o.letter;
                  T(i[E] || this.parent.ends[_], o[_] || this.parent.ends[E])
                      .each(function(e) {
                        e.italicize(!0).jQ.removeClass(
                            'dcg-mq-first dcg-mq-last dcg-mq-followed-by-supsub'),
                            e.ctrlSeq = e.letter
                      });
                  e: for (var s = 0, a = i[E] || this.parent.ends[_];
                          s < n.length; s += 1, a = a[E])
                  for (var l = v(t._maxLength, n.length - s); l > 0; l -= 1) {
                    var c = n.slice(s, s + l);
                    if (t.hasOwnProperty(c)) {
                      for (var u = 0, d = a; u < l; u += 1, d = d[E]) {
                        d.italicize(!1);
                        var p = d
                      }
                      var h = oe.hasOwnProperty(c);
                      if (a.ctrlSeq =
                              (h ? '\\' : '\\operatorname{') + a.ctrlSeq,
                          p.ctrlSeq += h ? ' ' : '}',
                          ae.hasOwnProperty(c) &&
                              p[_][_][_].jQ.addClass('dcg-mq-last'),
                          r(a[_]) || a.jQ.addClass('dcg-mq-first'), !r(p[E]))
                        if (p[E] instanceof we) {
                          var f = p[E],
                              g = f.siblingCreated =
                                  f.siblingDeleted = function() {
                                    f.jQ.toggleClass(
                                        'dcg-mq-after-operator-name',
                                        !(f[E] instanceof Ce))
                                  };
                          g()
                        } else
                          p.jQ.toggleClass(
                              'dcg-mq-last', !(p[E] instanceof Ce));
                      s += l - 1, a = p;
                      continue e
                    }
                  }
                }
              }
            }), oe = {}, se = q.p.autoOperatorNames = {_maxLength: 9}, ae = {
              limsup: 1,
              liminf: 1,
              projlim: 1,
              injlim: 1
            };
            !function() {
              for (
                  var e = 'arg deg det dim exp gcd hom inf ker lg lim ln log max min sup limsup liminf injlim projlim Pr'
                              .split(' '),
                      t = 0;
                  t < e.length; t += 1)
                oe[e[t]] = se[e[t]] = 1;
              for (
                  var r = 'sin cos tan arcsin arccos arctan sinh cosh tanh sec csc cot coth'
                              .split(' '),
                      t = 0;
                  t < r.length; t += 1)
                oe[r[t]] = 1;
              for (var n = 'sin cos tan sec cosec csc cotan cot ctg'.split(' '),
                       t = 0;
                   t < n.length; t += 1)
                se[n[t]] = se['arc' + n[t]] = se[n[t] + 'h'] =
                    se['ar' + n[t] + 'h'] = se['arc' + n[t] + 'h'] = 1;
              for (var i = 'gcf hcf lcm proj span'.split(' '), t = 0;
                   t < i.length; t += 1)
                se[i[t]] = 1
            }(),
                N.autoOperatorNames = function(e) {
                  if ('string' != typeof e)
                    throw '"' + e + '" not a space-delimited list';
                  if (!/^[a-z\|\-]+(?: [a-z\|\-]+)*$/i.test(e))
                    throw '"' + e +
                        '" not a space-delimited list of letters or "|"';
                  for (var t = e.split(' '), r = {}, n = 0, i = 0; i < t.length;
                       i += 1) {
                    var o = t[i];
                    if (o.length < 2)
                      throw '"' + o + '" not minimum length of 2';
                    if (o.indexOf('|') < 0)
                      r[o] = o, n = b(n, o.length);
                    else {
                      var s = o.split('|');
                      if (s.length > 2)
                        throw '"' + o + '" has more than 1 mathspeak delimiter';
                      if (s[0].length < 2)
                        throw '"' + o[0] + '" not minimum length of 2';
                      r[s[0]] = s[1].replace(/-/g, ' '), n = b(n, s[0].length)
                    }
                  }
                  return r._maxLength = n, r
                };
            var le = w($, function(e, t) {
              e.init = function(e) {
                this.ctrlSeq = e
              }, e.createLeftOf = function(e) {
                for (var t = this.ctrlSeq, r = 0; r < t.length; r += 1)
                  ie(t.charAt(r)).createLeftOf(e)
              }, e.parser = function() {
                for (var e = this.ctrlSeq, t = J(), r = 0; r < e.length; r += 1)
                  ie(e.charAt(r)).adopt(t, t.ends[E], 0);
                return z.succeed(t.children())
              }
            });
            for (var ce in se) se.hasOwnProperty(ce) && (L[ce] = le);
            L.operatorname =
                w(X,
                  function(t) {
                    t.createLeftOf = e, t.numBlocks = function() {
                      return 1
                    }, t.parser = function() {
                      return H.block.map(function(e) {
                        var t = !0, r = '', n = e.children();
                        return n.each(function(e) {
                          e instanceof ie ? r += e.letter : t = !1
                        }),
                               t && 'ans' === r ? L[r](r) : n
                      })
                    }
                  }),
            L.f =
                w(ie,
                  function(e, t) {
                    e.init = function() {
                      $.p.init.call(
                          this, this.letter = 'f',
                          '<var class="dcg-mq-f">f</var>')
                    }, e.italicize = function(e) {
                      return this.jQ.html('f').toggleClass('dcg-mq-f', e),
                             t.italicize.apply(this, arguments)
                    }
                  }),
            L[' '] = L.space =
                w(te,
                  function(e, t) {
                    e.init = function() {
                      t.init.call(this, '\\ ', '<span>&nbsp;</span>', ' ')
                    }
                  }),
            L['.'] =
                w(te,
                  function(e, t) {
                    e.init = function() {
                      t.init.call(
                          this, '.', '<span class="dcg-mq-digit">.</span>', '.')
                    }
                  }),
            L['\''] = L.prime = t(Q, '\'', '&prime;', 'prime'),
            L['″'] = L.dprime = t(Q, '″', '&Prime;', 'double prime'),
            L.backslash = t(Q, '\\backslash ', '\\', 'backslash'),
            P['\\'] || (P['\\'] = L.backslash),
            L.$ = t(Q, '\\$', '$', 'dollar'),
            L.square = t(Q, '\\square ', '□', 'square'),
            L.mid = t(Q, '\\mid ', '∣', 'mid');
            var ue = w($, function(e, t) {
              e.init = function(e, r) {
                t.init.call(
                    this, e,
                    '<span class="dcg-mq-nonSymbola">' + (r || e) + '</span>')
              }
            });
            L['@'] = ue, L['&'] = t(ue, '\\&', '&amp;', 'and'),
            L['%'] =
                w(ue,
                  function(e, t) {
                    e.init = function() {
                      t.init.call(this, '\\%', '%', 'percent')
                    }, e.parser = function() {
                      var e = z.optWhitespace, r = z.string;
                      return e
                          .then(r('\\operatorname{of}').map(function() {
                            return L.percentof()
                          }))
                          .or(t.parser.call(this))
                    }
                  }),
            L['∥'] = L.parallel = t(Q, '\\parallel ', '&#x2225;', 'parallel'),
            L['∦'] = L.nparallel =
                t(Q, '\\nparallel ', '&#x2226;', 'not parallel'),
            L['⟂'] = L.perp = t(Q, '\\perp ', '&#x27C2;', 'perpendicular'),
            L.alpha = L.beta = L.gamma = L.delta = L.zeta = L.eta = L.theta =
                L.iota = L.kappa = L.mu = L.nu = L.xi = L.rho = L.sigma =
                    L.tau = L.chi = L.psi = L.omega =
                        w(ne,
                          function(e, t) {
                            e.init = function(e) {
                              t.init.call(this, '\\' + e + ' ', '&' + e + ';')
                            }
                          }),
            L.phi = t(ne, '\\phi ', '&#981;', 'phi'),
            L.phiv = L.varphi = t(ne, '\\varphi ', '&phi;', 'phi'),
            L.epsilon = t(ne, '\\epsilon ', '&#1013;', 'epsilon'),
            L.epsiv = L.varepsilon =
                t(ne, '\\varepsilon ', '&epsilon;', 'epsilon'),
            L.piv = L.varpi = t(ne, '\\varpi ', '&piv;', 'piv'),
            L.sigmaf = L.sigmav = L.varsigma =
                t(ne, '\\varsigma ', '&sigmaf;', 'sigma'),
            L.thetav = L.vartheta = L.thetasym =
                t(ne, '\\vartheta ', '&thetasym;', 'theta'),
            L.upsilon = L.upsi = t(ne, '\\upsilon ', '&upsilon;', 'upsilon'),
            L.gammad = L.Gammad = L.digamma =
                t(ne, '\\digamma ', '&#989;', 'gamma'),
            L.kappav = L.varkappa = t(ne, '\\varkappa ', '&#1008;', 'kappa'),
            L.rhov = L.varrho = t(ne, '\\varrho ', '&#1009;', 'rho'),
            L.pi = L['π'] = t(ue, '\\pi ', '&pi;', 'pi'),
            L.lambda = t(ue, '\\lambda ', '&lambda;', 'lambda'),
            L.Upsilon = L.Upsi = L.upsih = L.Upsih =
                t($, '\\Upsilon ',
                  '<var style="font-family: serif">&upsih;</var>',
                  'capital upsilon'),
            L.Gamma = L.Delta = L.Theta = L.Lambda = L.Xi = L.Pi = L.Sigma =
                L.Phi = L.Psi = L.Omega = L.forall = w(Q, function(e, t) {
                  e.init = function(e) {
                    t.init.call(this, '\\' + e + ' ', '&' + e + ';')
                  }
                });
            var de = w(X, function(e) {
              e.init = function(e) {
                this.latex = e
              }, e.createLeftOf = function(e) {
                var t = H.parse(this.latex);
                t.children().adopt(e.parent, e[_], e[E]),
                    e[_] = t.ends[E], t.jQize().insertBefore(e.jQ),
                    t.finalizeInsert(e.options, e),
                    t.ends[E][E].siblingCreated &&
                    t.ends[E][E].siblingCreated(e.options, _),
                    t.ends[_][_].siblingCreated &&
                    t.ends[_][_].siblingCreated(e.options, E),
                    e.parent.bubble(function(e) {
                      e.reflow()
                    })
              }, e.mathspeak = function() {
                return H.parse(this.latex).mathspeak()
              }, e.parser = function() {
                var e = H.parse(this.latex).children();
                return z.succeed(e)
              }
            });
            L['⁰'] = t(de, '^0'), L['¹'] = t(de, '^1'), L['²'] = t(de, '^2'),
            L['³'] = t(de, '^3'), L['⁴'] = t(de, '^4'), L['⁵'] = t(de, '^5'),
            L['⁶'] = t(de, '^6'), L['⁷'] = t(de, '^7'), L['⁸'] = t(de, '^8'),
            L['⁹'] = t(de, '^9'), L['¼'] = t(de, '\\frac14'),
            L['½'] = t(de, '\\frac12'), L['¾'] = t(de, '\\frac34'),
            L['√'] = t(de, '\\sqrt{}');
            var pe = w(Z, function(e) {
              e.init = Q.prototype.init,
              e.contactWeld = e.siblingCreated =
                  e.siblingDeleted = function(e, t) {
                    function r(e) {
                      return e[_] ? e[_] instanceof Z ||
                                  /^(\\ )|[,;:\(\[]$/.test(e[_].ctrlSeq) ?
                                    '' :
                                    'dcg-mq-binary-operator' :
                          e.parent && e.parent.parent &&
                              e.parent.parent.isStyleBlock() ?
                                    r(e.parent.parent) :
                                    ''
                    }
                    if (t !== E) return this.jQ[0].className = r(this), this
                  }
            });
            L['+'] = t(pe, '+', '+', 'plus'),
            L['−'] = L['—'] = L['–'] = L['-'] = t(pe, '-', '&minus;', 'minus'),
            L['±'] = L.pm = L.plusmn = L.plusminus =
                t(pe, '\\pm ', '&plusmn;', 'plus-or-minus'),
            L.mp = L.mnplus = L.minusplus =
                t(pe, '\\mp ', '&#8723;', 'minus-or-plus'),
            P['*'] = L.sdot = L.cdot =
                t(Z, '\\cdot ', '&middot;', '*', 'times');
            var he =
                    w(Z,
                      function(e, t) {
                        e.init = function(e, r) {
                          this.data = e, this.strict = r;
                          var n = r ? 'Strict' : '';
                          t.init.call(
                              this, e['ctrlSeq' + n], e['html' + n],
                              e['text' + n], e['mathspeak' + n])
                        }, e.swap = function(e) {
                          this.strict = e;
                          var t = e ? 'Strict' : '';
                          this.ctrlSeq = this.data['ctrlSeq' + t],
                          this.jQ.html(this.data['html' + t]),
                          this.textTemplate = [this.data['text' + t]],
                          this.mathspeakName = this.data['mathspeak' + t]
                        }, e.deleteTowards = function(e, r) {
                          if (e === _ && !this.strict)
                            return this.swap(!0), void this.bubble(function(e) {
                              e.reflow()
                            });
                          t.deleteTowards.apply(this, arguments)
                        }
                      }),
                fe = {
                  ctrlSeq: '\\le ',
                  html: '&le;',
                  text: '≤',
                  mathspeak: 'less than or equal to',
                  ctrlSeqStrict: '<',
                  htmlStrict: '&lt;',
                  textStrict: '<',
                  mathspeakStrict: 'less than'
                },
                ge = {
                  ctrlSeq: '\\ge ',
                  html: '&ge;',
                  text: '≥',
                  mathspeak: 'greater than or equal to',
                  ctrlSeqStrict: '>',
                  htmlStrict: '&gt;',
                  textStrict: '>',
                  mathspeakStrict: 'greater than'
                };
            L['<'] = L.lt = t(he, fe, !0), L['>'] = L.gt = t(he, ge, !0),
            L['≤'] = L.le = L.leq = t(he, fe, !1),
            L['≥'] = L.ge = L.geq = t(he, ge, !1),
            L.infty = L.infin = L.infinity =
                t(Q, '\\infty ', '&infin;', 'infinity'),
            L['≠'] = L.ne = L.neq = t(Z, '\\ne ', '&ne;', 'not equal');
            var me = w(Z, function(e, t) {
              e.init = function() {
                t.init.call(this, '=', '=', '=', 'equals')
              }, e.createLeftOf = function(e) {
                if (e[_] instanceof he && e[_].strict)
                  return e[_].swap(!1), void e[_].bubble(function(e) {
                    e.reflow()
                  });
                t.createLeftOf.apply(this, arguments)
              }
            });
            L['='] = me,
            L['×'] = L.times = t(Z, '\\times ', '&times;', '[x]', 'times'),
            L['÷'] = L.div = L.divide = L.divides =
                t(Z, '\\div ', '&divide;', '[/]', 'over');
            var ye = w(Z, function(e, t) {
              e.init = function() {
                t.init.call(this, '\\sim ', '~', '~', 'tilde')
              }, e.createLeftOf = function(e) {
                if (e[_] instanceof ye) {
                  var r = e[_];
                  return e[_] = r[_], r.remove(), ve().createLeftOf(e),
                         void e[_].bubble(function(e) {
                           e.reflow()
                         })
                }
                t.createLeftOf.apply(this, arguments)
              }
            }), ve = w(Z, function(e, t) {
                  e.init = function() {
                    t.init.call(
                        this, '\\approx ', '&approx;', '≈',
                        'approximately equal')
                  }, e.deleteTowards = function(e, r) {
                    if (e === _) {
                      var n = r[_];
                      return T(n, this).remove(), r[_] = n[_],
                                                  ye().createLeftOf(r),
                                                  void r[_].bubble(function(e) {
                                                    e.reflow()
                                                  })
                    }
                    t.deleteTowards.apply(this, arguments)
                  }
                });
            P['~'] = L.sim = ye, L['≈'] = L.approx = ve;
            var be = {
              sqrt: {
                html:
                    '<svg preserveAspectRatio="none" viewBox="0 0 32 54"><path d="M0 33 L7 27 L12.5 47 L13 47 L30 0 L32 0 L13 54 L11 54 L4.5 31 L0 33" /></svg>'
              },
              '|': {
                width: '.4em',
                html:
                    '<svg preserveAspectRatio="none" viewBox="0 0 10 54"><path d="M4.4 0 L4.4 54 L5.6 54 L5.6 0" /></svg>'
              },
              '[': {
                width: '.55em',
                html:
                    '<svg preserveAspectRatio="none" viewBox="0 0 11 24"><path d="M8 0 L3 0 L3 24 L8 24 L8 23 L4 23 L4 1 L8 1" /></svg>'
              },
              ']': {
                width: '.55em',
                html:
                    '<svg preserveAspectRatio="none" viewBox="0 0 11 24"><path d="M3 0 L8 0 L8 24 L3 24 L3 23 L7 23 L7 1 L3 1" /></svg>'
              },
              '(': {
                width: '.55em',
                html:
                    '<svg preserveAspectRatio="none" viewBox="3 0 106 186"><path d="M85 0 A61 101 0 0 0 85 186 L75 186 A75 101 0 0 1 75 0" /></svg>'
              },
              ')': {
                width: '.55em',
                html:
                    '<svg preserveAspectRatio="none" viewBox="3 0 106 186"><path d="M24 0 A61 101 0 0 1 24 186 L34 186 A75 101 0 0 0 34 0" /></svg>'
              },
              '{': {
                width: '.7em',
                html:
                    '<svg preserveAspectRatio="none" viewBox="10 0 210 350"><path d="M170 0 L170 6 A47 52 0 0 0 123 60 L123 127 A35 48 0 0 1 88 175 A35 48 0 0 1 123 223 L123 290 A47 52 0 0 0 170 344 L170 350 L160 350 A58 49 0 0 1 102 301 L103 220 A45 40 0 0 0 58 180 L58 170 A45 40 0 0 0 103 130 L103 49 A58 49 0 0 1 161 0" /></svg>'
              },
              '}': {
                width: '.7em',
                html:
                    '<svg preserveAspectRatio="none" viewBox="10 0 210 350"><path d="M60 0 L60 6 A47 52 0 0 1 107 60 L107 127 A35 48 0 0 0 142 175 A35 48 0 0 0 107 223 L107 290 A47 52 0 0 1 60 344 L60 350 L70 350 A58 49 0 0 0 128 301 L127 220 A45 40 0 0 1 172 180 L172 170 A45 40 0 0 1 127 130 L127 49 A58 49 0 0 0 70 0" /></svg>'
              },
              '&#8741;': {
                width: '.7em',
                html:
                    '<svg preserveAspectRatio="none" viewBox="0 0 10 54"><path d="M3.2 0 L3.2 54 L4 54 L4 0 M6.8 0 L6.8 54 L6 54 L6 0" /></svg>'
              },
              '&lang;': {
                width: '.55em',
                html:
                    '<svg preserveAspectRatio="none" viewBox="0 0 10 54"><path d="M6.8 0 L3.2 27 L6.8 54 L7.8 54 L4.2 27 L7.8 0" /></svg>'
              },
              '&rang;': {
                width: '.55em',
                html:
                    '<svg preserveAspectRatio="none" viewBox="0 0 10 54"><path d="M3.2 0 L6.8 27 L3.2 54 L2.2 54 L5.8 27 L2.2 0" /></svg>'
              }
            },
                xe = w(X, function(e, t) {
                  e.init = function(r, n, i, o) {
                    t.init.call(this, r, '<' + n + ' ' + i + '>&0</' + n + '>'),
                        e.ariaLabel = o || r.replace(/^\\/, ''),
                        e.mathspeakTemplate =
                            ['Start' + e.ariaLabel + ',', 'End' + e.ariaLabel]
                  }
                });
            L.mathrm =
                t(xe, '\\mathrm', 'span', 'class="dcg-mq-roman dcg-mq-font"',
                  'Roman Font'),
            L.mathit =
                t(xe, '\\mathit', 'i', 'class="dcg-mq-font"', 'Italic Font'),
            L.mathbf =
                t(xe, '\\mathbf', 'b', 'class="dcg-mq-font"', 'Bold Font'),
            L.mathsf =
                t(xe, '\\mathsf', 'span',
                  'class="dcg-mq-sans-serif dcg-mq-font"', 'Serif Font'),
            L.mathtt =
                t(xe, '\\mathtt', 'span',
                  'class="dcg-mq-monospace dcg-mq-font"', 'Math Text'),
            L.underline =
                t(xe, '\\underline', 'span',
                  'class="dcg-mq-non-leaf dcg-mq-underline"', 'Underline'),
            L.overline = L.bar =
                t(xe, '\\overline', 'span',
                  'class="dcg-mq-non-leaf dcg-mq-overline"', 'Overline'),
            L.overrightarrow =
                t(xe, '\\overrightarrow', 'span',
                  'class="dcg-mq-non-leaf dcg-mq-overarrow dcg-mq-arrow-right"',
                  'Over Right Arrow'),
            L.overleftarrow =
                t(xe, '\\overleftarrow', 'span',
                  'class="dcg-mq-non-leaf dcg-mq-overarrow dcg-mq-arrow-left"',
                  'Over Left Arrow'),
            L.overleftrightarrow = t(
                xe, '\\overleftrightarrow ', 'span',
                'class="dcg-mq-non-leaf dcg-mq-overarrow dcg-mq-arrow-leftright"',
                'Over Left and Right Arrow'),
            L.overarc =
                t(xe, '\\overarc', 'span',
                  'class="dcg-mq-non-leaf dcg-mq-overarc"', 'Over Arc');
            var we =
                (L.textcolor = w(X, function(e, t) {
                   e.setColor = function(e) {
                     this.color = e,
                     this.htmlTemplate =
                         '<span class="dcg-mq-textcolor" style="color:' + e +
                         '">&0</span>'
                   }, e.latex = function() {
                     return '\\textcolor{' + this.color + '}{' +
                         this.blocks[0].latex() + '}'
                   }, e.parser = function() {
                     var e = this, r = z.optWhitespace, n = z.string,
                         i = z.regex;
                     return r.then(n('{'))
                         .then(i(/^[#\w\s.,()%-]*/))
                         .skip(n('}'))
                         .then(function(r) {
                           return e.setColor(r), t.parser.call(e)
                         })
                   }, e.isStyleBlock = function() {
                     return !0
                   }
                 }), L.class = w(X, function(e, t) {
                       e.parser = function() {
                         var e = this, r = z.string, n = z.regex;
                         return z.optWhitespace.then(r('{'))
                             .then(n(/^[-\w\s\\\xA0-\xFF]*/))
                             .skip(r('}'))
                             .then(function(r) {
                               return e.cls = r || '',
                                      e.htmlTemplate =
                                          '<span class="dcg-mq-class ' + r +
                                          '">&0</span>',
                                      t.parser.call(e)
                             })
                       }, e.latex = function() {
                         return '\\class{' + this.cls + '}{' +
                             this.blocks[0].latex() + '}'
                       }, e.isStyleBlock = function() {
                         return !0
                       }
                     }), w(X, function(e, t) {
                   e.ctrlSeq = '_{...}^{...}',
                   e.createLeftOf =
                       function(e) {
                     if (this.replacedFragment || e[_] ||
                         !e.options.supSubsRequireOperand)
                       return t.createLeftOf.apply(this, arguments)
                   },
                   e.contactWeld =
                       function(e) {
                     for (var t = _; t; t = t === _ && E)
                       if (this[t] instanceof we) {
                         for (var r = 'sub'; r; r = 'sub' === r && 'sup') {
                           var n = this[r], i = this[t][r];
                           if (n) {
                             if (i)
                               if (n.isEmpty())
                                 var o = M(i, 0, i.ends[_]);
                               else {
                                 n.jQ.children().insAtDirEnd(-t, i.jQ);
                                 var s = n.children().disown(),
                                     o = M(i, s.ends[E], i.ends[_]);
                                 t === _ ? s.adopt(i, i.ends[E], 0) :
                                           s.adopt(i, 0, i.ends[_])
                               }
                             else
                               this[t].addBlock(n.disown());
                             this.placeCursor = function(e, r) {
                               return function(n) {
                                 n.insAtDirEnd(-t, e || r)
                               }
                             }(i, n)
                           }
                         }
                         this.remove(),
                             e && e[_] === this &&
                             (t === E && o ? o[_] ? e.insRightOf(o[_]) :
                                                    e.insAtLeftEnd(o.parent) :
                                             e.insRightOf(this[t]));
                         break
                       }
                   },
                   q.p.charsThatBreakOutOfSupSub = '',
                   e.finalizeTree = function() {
                     this.ends[_].write = function(e, t) {
                       if (e.options.autoSubscriptNumerals &&
                           this === this.parent.sub) {
                         if ('_' === t) return;
                         var r = this.chToCmd(t, e.options);
                         return r instanceof $ ?
                                    e.deleteSelection() :
                                    e.clearSelection().insRightOf(this.parent),
                                r.createLeftOf(e.show()),
                                void W.queue('Baseline').alert(r.mathspeak({
                                  createdLeftOf: e
                                }))
                       }
                       e[_] && !e[E] && !e.selection &&
                           e.options.charsThatBreakOutOfSupSub.indexOf(t) >
                               -1 &&
                           (e.insRightOf(this.parent), W.queue('Baseline')),
                           J.p.write.apply(this, arguments)
                     }
                   }, e.moveTowards = function(e, r, n) {
                     r.options.autoSubscriptNumerals && !this.sup ?
                         r.insDirOf(e, this) :
                         t.moveTowards.apply(this, arguments)
                   }, e.deleteTowards = function(e, r) {
                     if (r.options.autoSubscriptNumerals && this.sub) {
                       var n = this.sub.ends[-e];
                       n instanceof $ ?
                           n.remove() :
                           n && n.deleteTowards(e, r.insAtDirEnd(-e, this.sub)),
                           this.sub.isEmpty() &&
                           (this.sub.deleteOutOf(_, r.insAtLeftEnd(this.sub)),
                            this.sup && r.insDirOf(-e, this))
                     } else
                       t.deleteTowards.apply(this, arguments)
                   }, e.latex = function() {
                     function e(e, t) {
                       var r = t && t.latex();
                       return t ? e + '{' + (r || ' ') + '}' : ''
                     }
                     return e('_', this.sub) + e('^', this.sup)
                   }, e.addBlock = function(e) {
                     'sub' === this.supsub ?
                         (this.sup = this.upInto = this.sub.upOutOf = e,
                          e.adopt(this, this.sub, 0).downOutOf = this.sub,
                          e.jQ = S('<span class="dcg-mq-sup"/>')
                                     .append(e.jQ.children())
                                     .prependTo(this.jQ),
                          C.linkElementByBlockNode(e.jQ[0], e)) :
                         (this.sub = this.downInto = this.sup.downOutOf = e,
                          e.adopt(this, 0, this.sup).upOutOf = this.sup,
                          e.jQ = S('<span class="dcg-mq-sub"></span>')
                                     .append(e.jQ.children())
                                     .appendTo(this.jQ.removeClass(
                                         'dcg-mq-sup-only')),
                          C.linkElementByBlockNode(e.jQ[0], e),
                          this.jQ.append(
                              '<span style="display:inline-block;width:0">&#8203;</span>'));
                     for (var t = 0; t < 2; t += 1)
                       !function(e, t, r, n) {
                         e[t].deleteOutOf = function(i, o) {
                           if (o.insDirOf(this[i] ? -i : i, this.parent),
                               !this.isEmpty()) {
                             var s = this.ends[i];
                             this.children()
                                 .disown()
                                 .withDirAdopt(i, o.parent, o[i], o[-i])
                                 .jQ.insDirOf(-i, o.jQ),
                                 o[-i] = s
                           }
                           e.supsub = r, delete e[t], delete e[n + 'Into'],
                           e[r][n + 'OutOf'] = h, delete e[r].deleteOutOf,
                           'sub' === t &&
                               S(e.jQ.addClass('dcg-mq-sup-only')[0].lastChild)
                                   .remove(),
                           this.remove()
                         }
                       }(this, 'sub sup'.split(' ')[t], 'sup sub'.split(' ')[t],
                         'down up'.split(' ')[t])
                   }
                 }));
            L.subscript = L._ = w(we, function(e, t) {
              e.supsub = 'sub',
              e.htmlTemplate =
                  '<span class="dcg-mq-supsub dcg-mq-non-leaf"><span class="dcg-mq-sub">&0</span><span style="display:inline-block;width:0">&#8203;</span></span>',
              e.textTemplate = ['_'],
              e.mathspeakTemplate = ['Subscript,', ', Baseline'],
              e.ariaLabel = 'subscript', e.finalizeTree = function() {
                this.downInto = this.sub = this.ends[_], this.sub.upOutOf = h,
                t.finalizeTree.call(this)
              }
            }), L.superscript = L.supscript = L['^'] = w(we, function(e, t) {
                  e.supsub = 'sup',
                  e.htmlTemplate =
                      '<span class="dcg-mq-supsub dcg-mq-non-leaf dcg-mq-sup-only"><span class="dcg-mq-sup">&0</span></span>',
                  e.textTemplate = ['^'],
                  e.mathspeakTemplate = ['Superscript,', ', Baseline'],
                  e.ariaLabel = 'superscript', e.finalizeTree = function() {
                    this.upInto = this.sup = this.ends[E],
                    this.sup.downOutOf = h, t.finalizeTree.call(this)
                  }
                });
            var _e = w(X, function(e, t) {
              e.init = function(t, r, n) {
                e.ariaLabel = n || ctrlSeq.replace(/^\\/, '');
                var i =
                    '<span class="dcg-mq-large-operator dcg-mq-non-leaf"><span class="dcg-mq-to"><span>&1</span></span><big>' +
                    r +
                    '</big><span class="dcg-mq-from"><span>&0</span></span></span>';
                $.prototype.init.call(this, t, i)
              }, e.createLeftOf = function(e) {
                t.createLeftOf.apply(this, arguments),
                    e.options.sumStartsWithNEquals &&
                    (ie('n').createLeftOf(e), me().createLeftOf(e))
              }, e.latex = function() {
                function e(e) {
                  return '{' + (e || ' ') + '}'
                }
                return this.ctrlSeq + '_' + e(this.ends[_].latex()) + '^' +
                    e(this.ends[E].latex())
              }, e.mathspeak = function() {
                return 'Start ' + this.ariaLabel + ' from ' +
                    this.ends[_].mathspeak() + ' to ' +
                    this.ends[E].mathspeak() + ', end ' + this.ariaLabel + ', '
              }, e.parser = function() {
                for (var e = z.string, t = z.optWhitespace, r = z.succeed,
                         n = H.block, i = this, o = i.blocks = [J(), J()],
                         s = 0;
                     s < o.length; s += 1)
                  o[s].adopt(i, i.ends[E], 0);
                return t.then(e('_').or(e('^')))
                    .then(function(e) {
                      var t = o['_' === e ? 0 : 1];
                      return n.then(function(e) {
                        return e.children().adopt(t, t.ends[E], 0), r(i)
                      })
                    })
                    .many()
                    .result(i)
              }, e.finalizeTree = function() {
                this.ends[_].ariaLabel = 'lower bound',
                this.ends[E].ariaLabel = 'upper bound',
                this.downInto = this.ends[_], this.upInto = this.ends[E],
                this.ends[_].upOutOf = this.ends[E],
                this.ends[E].downOutOf = this.ends[_]
              }
            });
            L['∑'] = L.sum = L.summation = t(_e, '\\sum ', '&sum;', 'sum'),
            L['∏'] = L.prod = L.product = t(_e, '\\prod ', '&prod;', 'product'),
            L.coprod = L.coproduct =
                t(_e, '\\coprod ', '&#8720;', 'co product'),
            L['∫'] = L.int = L.integral = w(_e, function(e, t) {
              e.init = function() {
                e.ariaLabel = 'integral';
                $.prototype.init.call(
                    this, '\\int ',
                    '<span class="dcg-mq-int dcg-mq-non-leaf"><big>&int;</big><span class="dcg-mq-supsub dcg-mq-non-leaf"><span class="dcg-mq-sup"><span class="dcg-mq-sup-inner">&1</span></span><span class="dcg-mq-sub">&0</span><span style="display:inline-block;width:0">&#8203</span></span></span>',
                    'integral')
              }, e.createLeftOf = X.p.createLeftOf
            });
            var Ee = L.frac = L.dfrac = L.cfrac = L.fraction = w(X, function(e, t) {
              e.ctrlSeq = '\\frac',
              e.htmlTemplate =
                  '<span class="dcg-mq-fraction dcg-mq-non-leaf"><span class="dcg-mq-numerator">&0</span><span class="dcg-mq-denominator">&1</span><span style="display:inline-block;width:0">&#8203;</span></span>',
              e.textTemplate = ['(', ')/(', ')'], e.finalizeTree = function() {
                this.upInto = this.ends[E].upOutOf = this.ends[_],
                this.downInto = this.ends[_].downOutOf = this.ends[E],
                this.ends[_].ariaLabel = 'numerator',
                this.ends[E].ariaLabel = 'denominator',
                this.getFracDepth() > 1 ?
                    this.mathspeakTemplate =
                        [
                          'StartNestedFraction,', 'NestedOver',
                          ', EndNestedFraction'
                        ] :
                    this.mathspeakTemplate =
                        ['StartFraction,', 'Over', ', EndFraction']
              }, e.mathspeak = function(e) {
                if (e && e.createdLeftOf) {
                  return e.createdLeftOf.parent.mathspeak()
                }
                return t.mathspeak.apply(this, arguments)
              }, e.getFracDepth = function() {
                var e = function(t, r) {
                  return t instanceof C && t.ctrlSeq &&
                             t.ctrlSeq.toLowerCase().search('frac') >= 0 &&
                             (r += 1),
                         t.parent ? e(t.parent, r) : r
                };
                return e(this, 0)
              }
            }), Se = L.over = P['/'] = w(Ee, function(t, r) {
                  t.createLeftOf = function(t) {
                    if (!this.replacedFragment) {
                      var n = t[_];
                      if (!t.options.typingSlashCreatesNewFraction)
                        for (; n &&
                             !(n instanceof Z || n instanceof (L.text || e) ||
                               n instanceof _e || '\\ ' === n.ctrlSeq ||
                               /^[,;:]$/.test(n.ctrlSeq));)
                          n = n[_];
                      n instanceof _e && n[E] instanceof we &&
                          (n = n[E],
                           n[E] instanceof we && n[E].ctrlSeq != n.ctrlSeq &&
                               (n = n[E])),
                          n !== t[_] &&
                          (this.replaces(T(n[E] || t.parent.ends[_], t[_])),
                           t[_] = n)
                    }
                    r.createLeftOf.call(this, t)
                  }
                });
            L.ans =
                w($,
                  function(e, t) {
                    e.init = function(e) {
                      t.init.call(
                          this, '\\operatorname{ans}',
                          '<span class="dcg-mq-ans">ans</span>', 'ans')
                    }
                  }),
            L.percent = L.percentof = w($, function(e, t) {
              e.init = function() {
                t.init.call(
                    this, '\\%\\operatorname{of}',
                    '<span class="dcg-mq-nonSymbola dcg-mq-operator-name">% of </span>',
                    'percent of')
              }
            });
            var Me = L.sqrt = w(
                    X,
                    function(e, t) {
                      e.ctrlSeq = '\\sqrt',
                      e.htmlTemplate =
                          '<span class="dcg-mq-non-leaf dcg-mq-sqrt-container"><span class="dcg-mq-scaled dcg-mq-sqrt-prefix">' +
                          be.sqrt.html +
                          '</span><span class="dcg-mq-non-leaf dcg-mq-sqrt-stem">&0</span></span>',
                      e.textTemplate = ['sqrt(', ')'],
                      e.mathspeakTemplate = ['StartRoot,', ', EndRoot'],
                      e.ariaLabel = 'root', e.parser = function() {
                        return H.optBlock
                            .then(function(e) {
                              return H.block.map(function(t) {
                                var r = Ie();
                                return r.blocks = [e, t], e.adopt(r, 0, 0),
                                       t.adopt(r, e, 0), r
                              })
                            })
                            .or(t.parser.call(this))
                      }
                    }),
                Ie =
                    (L.hat = w(
                         X,
                         function(e, t) {
                           e.ctrlSeq = '\\hat',
                           e.htmlTemplate =
                               '<span class="dcg-mq-non-leaf"><span class="dcg-mq-hat-prefix">^</span><span class="dcg-mq-hat-stem">&0</span></span>',
                           e.textTemplate = ['hat(', ')']
                         }),
                     L.nthroot = w(
                         Me,
                         function(e, t) {
                           e.htmlTemplate =
                               '<span class="dcg-mq-nthroot-container dcg-mq-non-leaf"><sup class="dcg-mq-nthroot dcg-mq-non-leaf">&0</sup><span class="dcg-mq-scaled dcg-mq-sqrt-container"><span class="dcg-mq-sqrt-prefix dcg-mq-scaled">' +
                               be.sqrt.html +
                               '</span><span class="dcg-mq-sqrt-stem dcg-mq-non-leaf">&1</span></span></span>',
                           e.textTemplate = ['sqrt[', '](', ')'],
                           e.latex = function() {
                             return '\\sqrt[' + this.ends[_].latex() + ']{' +
                                 this.ends[E].latex() + '}'
                           }, e.mathspeak = function() {
                             var e = this.ends[_].mathspeak(),
                                 t = this.ends[E].mathspeak();
                             return this.ends[_].ariaLabel = 'Index',
                                    this.ends[E].ariaLabel = 'Radicand',
                                    '3' === e ? 'Start Cube Root, ' + t +
                                            ', End Cube Root' :
                                                'Root Index ' + e +
                                            ', Start Root, ' + t + ', End Root'
                           }
                         })),
                ke =
                    (L.cbrt = w(Ie, function(e, t) {
                       e.createLeftOf = function(e) {
                         t.createLeftOf.apply(this, arguments),
                             re('3').createLeftOf(e), e.controller.moveRight()
                       }
                     }), w(X, function(e, t) {
                       e.init = function(e, r, n) {
                         var i =
                             '<span class="dcg-mq-non-leaf"><span class="dcg-mq-diacritic-above">' +
                             r +
                             '</span><span class="dcg-mq-diacritic-stem">&0</span></span>';
                         t.init.call(this, e, i, n)
                       }
                     }));
            L.vec = t(ke, '\\vec', '&rarr;', ['vec(', ')']),
            L.tilde = t(ke, '\\tilde', '~', ['tilde(', ')']);
            var Ce = w(
                    w(X, f),
                    function(t, r) {
                      t.init = function(e, t, n, i, o) {
                        r.init.call(this, '\\left' + i, m, [t, n]),
                            this.side = e, this.sides = {},
                            this.sides[_] = {ch: t, ctrlSeq: i},
                            this.sides[E] = {
                              ch: n,
                              ctrlSeq: o
                            }
                      }, t.numBlocks = function() {
                        return 1
                      }, t.html = function() {
                        var e = this.getSymbol(_), t = this.getSymbol(E);
                        return this.htmlTemplate =
                                   '<span class="dcg-mq-non-leaf dcg-mq-bracket-container"><span style="width:' +
                                   e.width +
                                   '" class="dcg-mq-scaled dcg-mq-bracket-l dcg-mq-paren' +
                                   (this.side === E ? ' dcg-mq-ghost' : '') +
                                   '">' + e.html +
                                   '</span><span style="margin-left:' +
                                   e.width + ';margin-right:' + t.width +
                                   '" class="dcg-mq-bracket-middle dcg-mq-non-leaf">&0</span><span style="width:' +
                                   t.width +
                                   '" class="dcg-mq-scaled dcg-mq-bracket-r dcg-mq-paren' +
                                   (this.side === _ ? ' dcg-mq-ghost' : '') +
                                   '">' + t.html + '</span></span>',
                               r.html.call(this)
                      }, t.getSymbol = function(e) {
                        return be[this.sides[e || E].ch] || {
                          width: '0', html: ''
                        }
                      }, t.latex = function() {
                        return '\\left' + this.sides[_].ctrlSeq +
                            this.ends[_].latex() + '\\right' +
                            this.sides[E].ctrlSeq
                      }, t.mathspeak = function(e) {
                        var t = this.sides[_].ch, n = this.sides[E].ch;
                        if ('|' === t && '|' === n)
                          this.mathspeakTemplate =
                              ['StartAbsoluteValue,', ', EndAbsoluteValue'],
                          this.ariaLabel = 'absolute value';
                        else {
                          if (e && e.createdLeftOf && this.side) {
                            var i = '';
                            return this.side === _ ?
                                       i = this.textTemplate[0] :
                                       this.side === E &&
                                           (i = this.textTemplate[1]),
                                       (this.side === _ ? 'left ' : 'right ') +
                                       Le[i]
                          }
                          this.mathspeakTemplate =
                              ['left ' + Le[t] + ',', ', right ' + Le[n]],
                          this.ariaLabel = Le[t] + ' block'
                        }
                        return r.mathspeak.call(this)
                      }, t.matchBrack = function(e, t, r) {
                        return r instanceof Ce && r.side && r.side !== -t &&
                            (!e.restrictMismatchedBrackets ||
                             Te[this.sides[this.side].ch] ===
                                 r.sides[r.side].ch ||
                             {'(': ']', '[': ')'}[this.sides[_].ch] ===
                                 r.sides[E].ch) &&
                            r
                      }, t.closeOpposing = function(e) {
                        e.side = 0, e.sides[this.side] = this.sides[this.side];
                        var t = e.delimjQs.eq(this.side === _ ? 0 : 1)
                                    .removeClass('dcg-mq-ghost');
                        this.replaceBracket(t, this.side)
                      }, t.createLeftOf = function(e) {
                        if (!this.replacedFragment) {
                          var t = e.options;
                          if ('|' === this.sides[_].ch)
                            var n = this.matchBrack(t, E, e[E]) ||
                                this.matchBrack(t, _, e[_]) ||
                                this.matchBrack(t, 0, e.parent.parent);
                          else
                            var n =
                                this.matchBrack(t, -this.side, e[-this.side]) ||
                                this.matchBrack(t, -this.side, e.parent.parent)
                        }
                        if (n) {
                          var i = this.side = -n.side;
                          this.closeOpposing(n),
                              n === e.parent.parent && e[i] &&
                              T(e[i], e.parent.ends[i], -i)
                                  .disown()
                                  .withDirAdopt(-i, n.parent, n, n[i])
                                  .jQ.insDirOf(i, n.jQ),
                              n.bubble(function(e) {
                                e.reflow()
                              })
                        } else
                          n = this, i = n.side,
                          n.replacedFragment ? n.side = 0 :
                                               e[-i] &&
                                  (n.replaces(T(e[-i], e.parent.ends[-i], i)),
                                   e[-i] = 0),
                          r.createLeftOf.call(n, e);
                        i === _ ? e.insAtLeftEnd(n.ends[_]) : e.insRightOf(n)
                      }, t.placeCursor = e, t.unwrap = function() {
                        this.ends[_]
                            .children()
                            .disown()
                            .adopt(this.parent, this, this[E])
                            .jQ.insertAfter(this.jQ),
                            this.remove()
                      }, t.deleteSide = function(e, t, r) {
                        var n = this.parent, i = this[e], o = n.ends[e];
                        if (e === this.side)
                          return this.unwrap(),
                                 void (
                                     i ? r.insDirOf(-e, i) :
                                         r.insAtDirEnd(e, n));
                        var s = r.options, a = !this.side;
                        if (this.side = -e,
                            this.matchBrack(
                                s, e, this.ends[_].ends[this.side])) {
                          this.closeOpposing(this.ends[_].ends[this.side]);
                          var l = this.ends[_].ends[e];
                          this.unwrap(),
                              l.siblingCreated &&
                              l.siblingCreated(r.options, e),
                              i ? r.insDirOf(-e, i) : r.insAtDirEnd(e, n)
                        } else {
                          if (this.matchBrack(s, e, this.parent.parent))
                            this.parent.parent.closeOpposing(this),
                                this.parent.parent.unwrap();
                          else {
                            if (t && a)
                              return this.unwrap(),
                                     void (
                                         i ? r.insDirOf(-e, i) :
                                             r.insAtDirEnd(e, n));
                            this.sides[e] = {
                              ch: Te[this.sides[this.side].ch],
                              ctrlSeq: Te[this.sides[this.side].ctrlSeq]
                            };
                            var c = this.delimjQs.removeClass('dcg-mq-ghost')
                                        .eq(e === _ ? 0 : 1)
                                        .addClass('dcg-mq-ghost');
                            this.replaceBracket(c, e)
                          }
                          if (i) {
                            var l = this.ends[_].ends[e];
                            T(i, o, -e)
                                .disown()
                                .withDirAdopt(-e, this.ends[_], l, 0)
                                .jQ.insAtDirEnd(
                                    e,
                                    this.ends[_].jQ.removeClass(
                                        'dcg-mq-empty')),
                                l.siblingCreated &&
                                l.siblingCreated(r.options, e),
                                r.insDirOf(-e, i)
                          } else
                            t ? r.insDirOf(e, this) :
                                r.insAtDirEnd(e, this.ends[_])
                        }
                      }, t.replaceBracket = function(e, t) {
                        var r = this.getSymbol(t);
                        e.html(r.html).css('width', r.width),
                            t === _ ? e.next().css('margin-left', r.width) :
                                      e.prev().css('margin-right', r.width)
                      }, t.deleteTowards = function(e, t) {
                        this.deleteSide(-e, !1, t)
                      }, t.finalizeTree = function() {
                        this.ends[_].deleteOutOf =
                            function(e, t) {
                          this.parent.deleteSide(e, !0, t)
                        },
                        this.finalizeTree = this.intentionalBlur = function() {
                          this.delimjQs.eq(this.side === _ ? 1 : 0)
                              .removeClass('dcg-mq-ghost'),
                              this.side = 0
                        }
                      }, t.siblingCreated = function(e, t) {
                        t === -this.side && this.finalizeTree()
                      }
                    }),
                Te = {
                  '(': ')',
                  ')': '(',
                  '[': ']',
                  ']': '[',
                  '{': '}',
                  '}': '{',
                  '\\{': '\\}',
                  '\\}': '\\{',
                  '&lang;': '&rang;',
                  '&rang;': '&lang;',
                  '\\langle ': '\\rangle ',
                  '\\rangle ': '\\langle ',
                  '|': '|',
                  '\\lVert ': '\\rVert ',
                  '\\rVert ': '\\lVert '
                },
                Le = {
                  '&lang;': 'angle-bracket',
                  '&rang;': 'angle-bracket',
                  '|': 'pipe'
                };
            g('(', null, 'parenthesis'), g('[', null, 'bracket'),
                g('{', '\\{', 'brace'),
                L.langle =
                    t(Ce, _, '&lang;', '&rang;', '\\langle ', '\\rangle '),
                L.rangle =
                    t(Ce, E, '&lang;', '&rang;', '\\langle ', '\\rangle '),
                P['|'] = t(Ce, _, '|', '|', '|', '|'),
                L.lVert =
                    t(Ce, _, '&#8741;', '&#8741;', '\\lVert ', '\\rVert '),
                L.rVert =
                    t(Ce, E, '&#8741;', '&#8741;', '\\lVert ', '\\rVert '),
                L.left = w(X, function(e) {
                  e.parser = function() {
                    var e = z.regex, t = z.string,
                        r = (z.succeed, z.optWhitespace);
                    return r.then(e(/^(?:[([|]|\\\{|\\langle\b|\\lVert\b)/))
                        .then(function(n) {
                          var i = n.replace(/^\\/, '');
                          return '\\langle' == n && (i = '&lang;', n += ' '),
                                 '\\lVert' == n && (i = '&#8741;', n += ' '),
                                 H.then(function(o) {
                                   return t('\\right')
                                       .skip(r)
                                       .then(e(
                                           /^(?:[\])|]|\\\}|\\rangle\b|\\rVert\b)/))
                                       .map(function(e) {
                                         var t = e.replace(/^\\/, '');
                                         '\\rangle' == e &&
                                             (t = '&rang;', e += ' '),
                                             '\\rVert' == e &&
                                             (t = '&#8741;', e += ' ');
                                         var r = Ce(0, i, t, n, e);
                                         return r.blocks = [o],
                                                o.adopt(r, 0, 0), r
                                       })
                                 })
                        })
                  }
                }), L.right = w(X, function(e) {
                      e.parser = function() {
                        return z.fail('unmatched \\right')
                      }
                    });
            var Pe = L.binom = L.binomial = w(w(X, f), function(e, t) {
              var r = be['('], n = be[')'];
              e.ctrlSeq = '\\binom',
              e.htmlTemplate =
                  '<span class="dcg-mq-non-leaf dcg-mq-bracket-container"><span style="width:' +
                  r.width +
                  '" class="dcg-mq-paren dcg-mq-bracket-l dcg-mq-scaled">' +
                  r.html + '</span><span style="margin-left:' + r.width +
                  '; margin-right:' + n.width +
                  ';" class="dcg-mq-non-leaf dcg-mq-bracket-middle"><span class="dcg-mq-array dcg-mq-non-leaf"><span>&0</span><span>&1</span></span></span><span style="width:' +
                  n.width +
                  '" class="dcg-mq-paren dcg-mq-bracket-r dcg-mq-scaled">' +
                  n.html + '</span></span>',
              e.textTemplate = ['choose(', ',', ')'],
              e.mathspeakTemplate =
                  ['StartBinomial,', 'Choose', ', EndBinomial'],
              e.ariaLabel = 'binomial'
            });
            L.choose = w(Pe, function(e) {
              e.createLeftOf = Se.prototype.createLeftOf
            });
            L.editable = L.MathQuillMathField = w(X, function(e, t) {
              e.ctrlSeq = '\\MathQuillMathField',
              e.htmlTemplate =
                  '<span class="dcg-mq-editable-field"><span class="dcg-mq-root-block">&0</span></span>',
              e.parser = function() {
                var e = this, r = z.string, n = z.regex, i = z.succeed;
                return r('[')
                    .then(n(/^[a-z][a-z0-9]*/i))
                    .skip(r(']'))
                    .map(function(t) {
                      e.name = t
                    })
                    .or(i())
                    .then(t.parser.call(e))
              }, e.finalizeTree = function(e) {
                var t = O(this.ends[_], this.jQ, e);
                t.KIND_OF_MQ = 'MathField', t.editable = !0, t.createTextarea(),
                t.editablesTextareaEvents(), t.cursor.insAtRightEnd(t.root),
                p(t.root)
              }, e.registerInnerField = function(e, t) {
                e.push(e[this.name] = t(this.ends[_].controller))
              }, e.latex = function() {
                return this.ends[_].latex()
              }, e.text = function() {
                return this.ends[_].text()
              }
            });
            var Ae = L.embed = w($, function(e, t) {
              e.setOptions = function(e) {
                function t() {
                  return ''
                }
                return this.text = e.text || t,
                       this.htmlTemplate = e.htmlString || '',
                       this.latex = e.latex || t, this
              }, e.parser = function() {
                var e = this, t = z.string, r = z.regex, n = z.succeed;
                return t('{')
                    .then(r(/^[a-z][a-z0-9]*/i))
                    .skip(t('}'))
                    .then(function(i) {
                      return t('[')
                          .then(r(/^[-\w\s]*/))
                          .skip(t(']'))
                          .or(n())
                          .map(function(t) {
                            return e.setOptions(B[i](t))
                          })
                    })
              }
            }), De = d(1);
            for (var Oe in De)
              !function(e, t) {
                'function' == typeof t ? (u[e] = function() {
                  return c(), t.apply(this, arguments)
                }, u[e].prototype = t.prototype) : u[e] = t
              }(Oe, De[Oe])
          })();
          r('mathquill_src', ['jquery'], function() {}), r('text', {
            load: function(e) {
              throw new Error('Dynamic load not allowed: ' + e)
            }
          });
          r('lib/inject-css', ['require', 'underscore'], function(e) {
            'use strict';
            function t(e, t) {
              var o = n[e];
              if (!o) {
                o = document.createElement('style'), n[e] = o;
                var s = r.sortedIndex(i, e), a = n[i[s]];
                a ? document.head.insertBefore(o, a) :
                    document.head.appendChild(o),
                    i.splice(s, 0, e)
              }
              o.textContent = t
            }
            var r = e('underscore'), n = {}, i = [];
            return t
          });
          r('vendor/css', {});
          r('lib/prefix-css', ['require', 'vendor/css'], function(e) {
            'use strict';
            function t(e, t) {
              if (t) {
                var i = '.' + t;
                return r(i), n(e, i)
              }
              return e
            }
            function r(e) {
              if (!/\.-?[_a-zA-Z]+[_a-zA-Z0-9-]*/.test(e))
                throw new Error('Illegal css selector prefix ' + e)
            }
            function n(e, t) {
              var r = a.parse(e),
                  n = Object.assign({}, r, {stylesheet: i(r.stylesheet, t)});
              return a.stringify(n)
            }
            function i(e, t) {
              return Object.assign({}, e, {rules: o(e.rules, t)})
            }
            function o(e, t) {
              return e.map(function(e) {
                return e.rules ?
                    Object.assign({}, e, {rules: o(e.rules, t)}) :
                    e.selectors ?
                    Object.assign({}, e, {selectors: s(e.selectors, t)}) :
                    e
              })
            }
            function s(e, t) {
              for (var r = [], n = 0; n < e.length; n++) {
                var i = e[n];
                if ('html' === i)
                  r.push(i);
                else if (/dcg(-mq)?-aria-alert/.test(i))
                  r.push(i);
                else if (/^html body( |$)/.test(i))
                  r.push('html' + t + ' body' + i.slice('html body'.length)),
                      r.push('html body ' + t + i.slice('html body'.length));
                else {
                  if (/^html/.test(i))
                    throw new Error('Cannot correctly prefix selector ' + i);
                  r.push(t + ' ' + i)
                }
              }
              return r
            }
            var a = e('vendor/css');
            return t
          });
          r('loadcss', {
            load: function(e) {
              throw new Error('Dynamic load not allowed: ' + e)
            }
          });
          r('loadcss!Symbola-basic', function() {});
          r('loadcss!vendor_css/mathquill/mathquill-basic', function() {});
          r('toplevel/mathquill',
            [
              'require', 'testbridge', 'mathquill_src', 'loadcss!Symbola-basic',
              'loadcss!vendor_css/mathquill/mathquill-basic'
            ],
            function(e) {
              'use strict';
              return e('testbridge'), e('mathquill_src'),
                     e('loadcss!Symbola-basic'),
                     e('loadcss!vendor_css/mathquill/mathquill-basic'),
                     window.MathQuill.noConflict()
            });
          r('lib/parse-query-params', ['require', 'exports'], function(e, t) {
            'use strict';
            Object.defineProperty(t, '__esModule', {value: !0}),
                t.getQueryParams = function() {
                  var e = '';
                  try {
                    e = location.search, '?' == e[0] && (e = e.slice(1))
                  } catch (e) {
                  }
                  for (var t = e.split('&'), r = {}, n = 0, i = t; n < i.length;
                       n++) {
                    var o = i[n], s = o.split('=');
                    2 == s.length ? r[s[0]] = decodeURIComponent(s[1]) :
                                    r[s[0]] = !0
                  }
                  return r
                }
          });
          r('config',
            [
              'require', 'exports', 'core/lib/deepCopy',
              'lib/parse-query-params'
            ],
            function(e, t, r, n) {
              'use strict';
              function i(e) {
                return s[e]
              }
              function o() {
                return r.default(s)
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var s = {}, a = n.getQueryParams();
              if ('undefined' != typeof Desmos && Desmos.config)
                for (var l in Desmos.config)
                  Desmos.config.hasOwnProperty(l) && (a[l] = Desmos.config[l]);
              var c = function(e) {
                return a.hasOwnProperty(e)
              }, u = function(e) {
                s[e] = c(e)
              }, d = function(e) {
                s[e] = !c('no' + e)
              };
              u('testing'), u('maintenance'), u('disableScrollFix'),
                  u('nativeOnscreenKeypad'), u('hidden'),
                  u('disableMouseInteractions'), u('advancedStyling'),
                  u('authorIDE'), u('clickableObjects'), u('outofdom'),
                  a.lang && (s.lang = a.lang),
                  a.fontSize && (s.fontSize = a.fontSize),
                  a.backgroundColor &&
                  (s.backgroundColor = '#' + a.backgroundColor),
                  a.textColor && (s.textColor = '#' + a.textColor),
                  s.no_navigation_warning = c('noconcat') || c('testing'),
                  s.previewMessage =
                      'You\'re previewing some new accessibility features.',
                  s.previewFeedbackUrl = 'mailto:feedback@desmos.com';
              var p = location && 'preview.desmos.com' === location.hostname;
              s.previewMode = c('previewMode') || p, u('lockViewport'),
              u('administerSecretFolders'), u('clickableObjects'),
              u('degreeMode'), u('clearIntoDegreeMode'), u('plaidMode'),
              u('editOnWeb'), u('crossOriginSaveTest'),
              u('showResetButtonOnGraphpaper'), u('transparentBackground'),
              u('forceLogModeRegressions'), d('links'), d('trace'),
              d('zoomFit'), u('expressionsCollapsed'), u('invertedColors'),
              u('projectorMode'), d('images'), d('folders'), d('settingsMenu'),
              d('expressionsTopbar'), d('zoomButtons'), d('keypad'),
              d('graphpaper'), d('expressions'), d('branding'),
              d('pointsOfInterest'), d('plotSingleVariableImplicitEquations'),
              d('plotImplicits'), d('plotInequalities'), d('notes'),
              d('sliders'), u('pauseWhenOffscreen'), u('worksheetSVG'),
              d('brailleControls'), u('sciKeypad'), u('4fnKeypad'), u('ans'),
              c('braille') && (s.braille = !0), d('qwertyKeyboard'),
              u('restrictedFunctions'), u('forceEnableGeometryFunctions'),
              d('functionDefinition'), u('singleExpression'),
              u('restrictedEditing'), u('replaceCommaWith10Exp'),
              u('replaceRoundWithReciprocal'),
              c('typingAsteriskWritesTimesSymbol') &&
                  (s.typingAsteriskWritesTimesSymbol = !0),
              d('labels'), u('bare-i18n'), d('distributions'),
              s['4fnKeypad'] ? u('decimalToFraction') : d('decimalToFraction'),
              u('3d'),
              c('exponentButtonForSquareRoot') ?
                  s.additionalFunctions = ['exponent'] :
                  a.additionalFunctions &&
                      'string' == typeof a.additionalFunctions &&
                      (s.additionalFunctions =
                           a.additionalFunctions.split(',')),
              t.get = i, t.all = o
            });
          r('main/mathquill-operators', ['require', 'exports', 'config'], function(e, t, r) {
            'use strict';
            function n(e) {
              return e && e.disallowFrac ? l : l + ' frac'
            }
            function i(e) {
              var t = o;
              return e && e.colorMethods && (t += ' ' + a), t
            }
            Object.defineProperty(t, '__esModule', {value: !0});
            var o =
                    [
                      'exp|exponent ln|natural-log log',
                      'total length mean median quantile quartile nCr nPr stats',
                      'stdev|standard-deviation stddev|standard-deviation',
                      'stdDev|standard-deviation stdevp|standard-deviation-population',
                      'stddevp|standard-deviation-population stdDevP|standard-deviation-population mad var|variance',
                      'varp|variance-population variance cov|co-variance corr|correlation spearman',
                      'lcm mcm gcd mcd gcf mod ceil|ceiling floor round abs|absolute-value min max sign|signum signum',
                      'sin|sine cos|cosine tan|tangent csc|co-secant sec|secant cot|co-tangent',
                      'sinh|hyperbolic-sine cosh|hyperbolic-cosine tanh|hyperbolic-tangent csch|hyperbolic-co-secant',
                      'sech|hyperbolic-secant coth|hyperbolic-co-tangent',
                      'arcsin|arc-sine arccos|arc-cosine arctan|arc-tangent arccsc|arc-co-secant arcsec|arc-secant',
                      'arccot|arc-co-tangent',
                      'arcsinh|hyperbolic-arc-sine arccosh|hyperbolic-arc-cosine arctanh|hyperbolic-arc-co-tangent',
                      'arccsch|hyperbolic-arc-co-secant arcsech|hyperbolic-arc-secant',
                      'arccoth|hyperbolic-arc-co-tangent',
                      'arsinh|hyperbolic-ar-sine arcosh|hyperbolic-ar-cosine artanh|hyperbolic-ar-co-tangent',
                      'arcsch|hyperbolic-ar-co-secant arsech|hyperbolic-ar-secant',
                      'arcoth|hyperbolic-ar-co-tangent',
                      'polygon',
                      'distance midpoint',
                      'sort shuffle join',
                      'erf|error-function',
                      'TTest|t-test ttest|t-test TScore|t-score tscore|t-score',
                      'iTTest|independent-t-test ittest|independent-t-test IndependentTTest',
                      'TScore|t-score Tscore|t-score tscore|t-score',
                      'normaldist|normal-distribution tdist|t-distribution poissondist|poisson-distribution',
                      'binomialdist|binomial-distribution',
                      'uniformdist|uniform-distribution',
                      'pdf cdf random inverseCdf inversecdf',
                      'histogram dotplot boxplot',
                      'pdf cdf'
                    ].join(' '),
                s = [
                  'det|determinant', 'inv|inverse', 'transpose',
                  'rref|reduced-row-echelon-form', 'trace'
                ].join(' ');
            o += ' ' + s,
                r.get('3d') &&
                (o += ' cube sphere cone dodecahedron octahedron tetrahedron');
            var a = 'rgb hsv',
                l = 'alpha beta sqrt theta phi pi tau nthroot cbrt sum prod int ans percent infinity infty';
            t.getAutoCommands = n, t.getAutoOperators = i
          });
          r('mathquill',
            [
              'require', 'browser', 'jquery', 'toplevel/mathquill', 'config',
              'main/mathquill-operators'
            ],
            function(e) {
              'use strict';
              var t = e('browser'), r = e('jquery'),
                  n = e('toplevel/mathquill').getInterface(1), i = e('config'),
                  o = e('main/mathquill-operators'),
                  s =
                      [
                        'erf|error-function',
                        'TTest|t-test ttest|t-test TScore|t-score tscore|t-score',
                        'iTTest|independent-t-test ittest|independent-t-test IndependentTTest',
                        'TScore|t-score Tscore|t-score tscore|t-score',
                        'normaldist|normal-distribution tdist|t-distribution poissondist|poisson-distribution',
                        'binomialdist|binomial-distribution',
                        'uniformdist|uniform-distribution',
                        'pdf cdf random inverseCdf inversecdf',
                        'histogram dotplot boxplot', 'pdf cdf',
                        'histogram dotplot boxplot'
                      ].join(' '),
                  a = [
                    'cube sphere cone dodecahedron octahedron tetrahedron'
                  ].join(' ');
              return n.config({
                leftRightIntoCmdGoes: 'up',
                sumStartsWithNEquals: !0,
                supSubsRequireOperand: !0,
                charsThatBreakOutOfSupSub: '+-=<>*',
                autoCommands: o.getAutoCommands({disallowFrac: !0}),
                autoSubscriptNumerals: !0,
                restrictMismatchedBrackets: !0,
                typingPercentWritesPercentOf: !0,
                substituteTextarea: function() {
                  return t.IS_IOS || t.IS_ANDROID ?
                      r('<span class="dcg-mathquill-input-span" tabindex=0 role="textbox" style="display:inline-block;height:1px;width:1px">')[0] :
                      t.IS_WINDOWS && t.IS_TOUCH ?
                      r('<textarea readonly>')
                          .on('keydown',
                              function() {
                                this.readOnly = !1, this.select()
                              })
                          .on('blur',
                              function() {
                                this.readOnly = !0
                              })[0] :
                      r('<textarea>')[0]
                },
                autoOperatorNames: [
                  'exp|exponent ln|natural-log log',
                  'total length mean median quantile quartile nCr nPr stats',
                  'stdev|standard-deviation stddev|standard-deviation',
                  'stdDev|standard-deviation stdevp|standard-deviation-population',
                  'stddevp|standard-deviation-population stdDevP|standard-deviation-population mad var|variance',
                  'varp|variance-population variance cov|co-variance corr|correlation spearman',
                  'lcm mcm gcd mcd gcf mod ceil|ceiling floor round abs|absolute-value min max sign|signum signum',
                  'sin|sine cos|cosine tan|tangent csc|co-secant sec|secant cot|co-tangent',
                  'sinh|hyperbolic-sine cosh|hyperbolic-cosine tanh|hyperbolic-tangent csch|hyperbolic-co-secant',
                  'sech|hyperbolic-secant coth|hyperbolic-co-tangent',
                  'arcsin|arc-sine arccos|arc-cosine arctan|arc-tangent arccsc|arc-co-secant arcsec|arc-secant',
                  'arccot|arc-co-tangent',
                  'arcsinh|hyperbolic-arc-sine arccosh|hyperbolic-arc-cosine arctanh|hyperbolic-arc-co-tangent',
                  'arccsch|hyperbolic-arc-co-secant arcsech|hyperbolic-arc-secant',
                  'arccoth|hyperbolic-arc-co-tangent', 'polygon',
                  'distance midpoint', s, i.get('3d') ? a : ''
                ]
                                       .filter(function(e) {
                                         return !!e
                                       })
                                       .join(' '),
                resetCursorOnBlur: !0,
                enableDigitGrouping: !0
              })
            });
          r('graphing/clipping', ['require', 'exports', 'core/types/graphmode'],
            function(e, t, r) {
              'use strict';
              function n(e, r, n, i) {
                var o = [], s = r.xmin, a = r.ymin, l = r.xmax - r.xmin,
                    c = r.ymax - r.ymin, u = n.width, d = n.height, p = u / l,
                    h = -d / c, f = e.length;
                if (i === t.Y_EQUALS)
                  for (var g = 0; g < f; g += 2) {
                    var m = (e[g] - s) * p - .5,
                        y = (e[g + 1] - a) * h + d - .5;
                    o.push(m, y)
                  }
                else if (i === t.X_EQUALS)
                  for (var g = 0; g < f; g += 2) {
                    var m = (e[g + 1] - s) * p - .5,
                        y = (e[g] - a) * h + d - .5;
                    o.push(m, y)
                  }
                else if (i === t.POLAR_RADIAN_EQUALITY)
                  for (var g = 0; g < e.length; g += 2) {
                    var v = e[g], b = e[g + 1],
                        m = (b * Math.cos(v) - s) * p - .5,
                        y = (b * Math.sin(v) - a) * h + d - .5;
                    o.push(m, y)
                  }
                else if (i === t.POLAR_RADIAN_INEQUALITY)
                  for (var g = 0; g < e.length; g += 2) {
                    var v = e[g], b = e[g + 1];
                    b < 0 && (b = 0);
                    var m = (b * Math.cos(v) - s) * p - .5,
                        y = (b * Math.sin(v) - a) * h + d - .5;
                    o.push(m, y)
                  }
                else if (i === t.POLAR_DEGREE_EQUALITY)
                  for (var g = 0; g < e.length; g += 2) {
                    var v = e[g] * Math.PI / 180, b = e[g + 1],
                        m = (b * Math.cos(v) - s) * p - .5,
                        y = (b * Math.sin(v) - a) * h + d - .5;
                    o.push(m, y)
                  }
                else if (i === t.POLAR_DEGREE_INEQUALITY)
                  for (var g = 0; g < e.length; g += 2) {
                    var v = e[g] * Math.PI / 180, b = e[g + 1];
                    b < 0 && (b = 0);
                    var m = (b * Math.cos(v) - s) * p - .5,
                        y = (b * Math.sin(v) - a) * h + d - .5;
                    o.push(m, y)
                  }
                return o
              }
              function i(e, r) {
                return s(e, r, t.ALL, !0)
              }
              function o(e, t, r, n) {
                var i, o, s, a, l = [];
                n ? (o = e[0], s = e[1], i = 2, (a = t(o, s)) && l.push(o, s)) :
                    (o = e[e.length - 2], s = e[e.length - 1], i = 0,
                     a = t(o, s));
                for (var c = i; c < e.length; c += 2) {
                  var u = o, d = s, p = a;
                  o = e[c], s = e[c + 1], a = t(o, s),
                  (a || p) &&
                      (a && p && l.push(o, s),
                       a && !p &&
                           (Array.prototype.push.apply(l, r(o, s, u, d)),
                            l.push(o, s)),
                       !a && p && Array.prototype.push.apply(l, r(u, d, o, s)))
                }
                return l
              }
              function s(e, r, n, i) {
                var s = r.xmin, a = r.xmax, l = r.ymin, c = r.ymax,
                    u = function(e, t) {
                      return e >= s
                    }, d = function(e, t) {
                      return e <= a
                    }, p = function(e, t) {
                      return t >= l
                    }, h = function(e, t) {
                      return t <= c
                    }, f = function(e, t, r, n) {
                      return e = e, t = t, r = r, n = n,
                             [s, t + (n - t) * (s - e) / (r - e)]
                    }, g = function(e, t, r, n) {
                      return e = e, t = t, r = r, n = n,
                             [a, t + (n - t) * (a - e) / (r - e)]
                    }, m = function(e, t, r, n) {
                      return e = e, t = t, r = r, n = n,
                             [e + (r - e) * (l - t) / (n - t), l]
                    }, y = function(e, t, r, n) {
                      return e = e, t = t, r = r, n = n,
                             [e + (r - e) * (c - t) / (n - t), c]
                    }, v = e;
                return n & t.LEFT && (v = o(e, u, f, i)),
                       n & t.BOTTOM && (v = o(v, p, m, i)),
                       n & t.RIGHT && (v = o(v, d, g, i)),
                       n & t.TOP && (v = o(v, h, y, i)), v
              }
              function a(e, r) {
                return s(e, r, t.ALL, !1)
              }
              function l(e, t, r) {
                var n = [], i = e[0], o = i + r, s = [];
                n.push(s);
                for (var a = 0; a < e.length; a += 2) {
                  var l = e[a], c = e[a + 1];
                  if (c < 0 && (c = 0), l >= o) {
                    for (s = [], n.push(s), i = e[a - 2], o = i; l >= o;)
                      o += r;
                    a -= 4
                  } else
                    s.push(l, c)
                }
                if (0 === t)
                  for (var a = 0; a < n.length; a++) n[a].push(0, 0);
                else
                  for (var u = r / 16, d = t, a = 0; a < n.length; a++) {
                    var p = n[a];
                    i = p[0], o = p[p.length - 2];
                    for (var l = o; l > i; l -= u) p.push(l, d);
                    p.push(i, d)
                  }
                return n
              }
              function c(e, t) {
                return e = e.slice(), e.push(e[e.length - 2], t),
                       e.push(e[0], t), [e]
              }
              function u(e, n, i) {
                switch (e) {
                  case r.X:
                    return t.X_EQUALS;
                  case r.IMPLICIT:
                  case r.PARAMETRIC:
                  case r.Y:
                    return t.Y_EQUALS;
                  case r.POLAR:
                    return i.degreeMode ? n ? t.POLAR_DEGREE_INEQUALITY :
                                              t.POLAR_DEGREE_EQUALITY :
                        n               ? t.POLAR_RADIAN_INEQUALITY :
                                          t.POLAR_RADIAN_EQUALITY
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.TOP = 1, t.BOTTOM = 2, t.LEFT = 4, t.RIGHT = 8, t.ALL = 15,
                  t.X = 12, t.Y = 3, t.POLAR_RADIAN_EQUALITY = 1,
                  t.POLAR_RADIAN_INEQUALITY = 2, t.POLAR_DEGREE_EQUALITY = 3,
                  t.POLAR_DEGREE_INEQUALITY = 4, t.Y_EQUALS = 5, t.X_EQUALS = 6,
                  t.mapSegmentToCanvas = n, t.clipStrokeEdges = i,
                  t.clipFillEdge = o, t.clipFillEdges = s,
                  t.clipAllFillEdges = a, t.computePolarFill = l,
                  t.computeCartesianFill = c, t.getClippingGraphType = u
            });
          r('core/lib/color-helpers', ['require', 'exports'], function(e, t) {
            'use strict';
            function r(e) {
              return n(e) ?
                  (e.match(/^#([A-Fa-f0-9]{3})$/g) &&
                       (e = '#' + e[1] + e[1] + e[2] + e[2] + e[3] + e[3]),
                   e.toLowerCase()) :
                  e
            }
            function n(e) {
              return 'string' == typeof e &&
                  (e.match(/^#([A-Fa-f0-9]{3})$/g) ||
                   e.match(/^#([A-Fa-f0-9]{6})$/g))
            }
            function i(e, t) {
              if (e = r(e), !n(e)) return e;
              t > 1 && (t = 1), t < -1 && (t = -1);
              var i = parseInt(e.slice(1), 16), o = t < 0 ? 0 : 255,
                  s = t < 0 ? -1 * t : t, a = i >> 16, l = i >> 8 & 255,
                  c = 255 & i;
              return '#' +
                  (16777216 + 65536 * (Math.round((o - a) * s) + a) +
                   256 * (Math.round((o - l) * s) + l) +
                   (Math.round((o - c) * s) + c))
                      .toString(16)
                      .slice(1)
            }
            function o(e) {
              if (e = r(e), !n(e)) return e;
              var t = '0123456789abcdef';
              return '#' +
                  e.slice(1)
                      .split('')
                      .map(function(e) {
                        return t[15 - t.indexOf(e)]
                      })
                      .join('')
            }
            function s(e) {
              if (e = e.replace(/#/, ''), 3 === e.length)
                var t = parseInt(e.slice(0, 1) + e.slice(0, 1), 16),
                    r = parseInt(e.slice(1, 2) + e.slice(1, 2), 16),
                    n = parseInt(e.slice(2, 3) + e.slice(2, 3), 16);
              else if (6 === e.length)
                var t = parseInt(e.slice(0, 2), 16),
                    r = parseInt(e.slice(2, 4), 16),
                    n = parseInt(e.slice(4, 6), 16);
              else
                var t = 0, r = 0, n = 0;
              return {
                r: t, g: r, b: n
              }
            }
            function a(e, t) {
              var r = /(rgba\([\d]+\,\ ?[\d]+\,\ ?[\d]+\,\ ?)[\d.]+(\))/;
              return e.match(r) ? e.replace(r, '$1' + t + '$2') : e
            }
            Object.defineProperty(t, '__esModule', {value: !0}),
                t.normalizeColor = r, t.isValidHexColor = n, t.shadeColor = i,
                t.invertColor = o, t.parseHex = s, t.mutateOpacity = a,
                t.colors = {
                  RED: '#c74440',
                  BLUE: '#2d70b3',
                  GREEN: '#388c46',
                  PURPLE: '#6042a6',
                  ORANGE: '#fa7e19',
                  BLACK: '#000000',
                  GRAY: '#aaaaaa'
                }
          });
          r('expressions/colors',
            ['require', 'exports', 'core/lib/color-helpers'],
            function(e, t, r) {
              'use strict';
              function n(e, t) {
                switch (t) {
                  case r.colors.RED:
                    return e.t('red');
                  case r.colors.BLUE:
                    return e.t('blue');
                  case r.colors.GREEN:
                    return e.t('green');
                  case r.colors.PURPLE:
                    return e.t('purple');
                  case r.colors.ORANGE:
                    return e.t('orange');
                  case r.colors.BLACK:
                    return e.t('black');
                  case r.colors.GRAY:
                    return e.t('gray');
                  default:
                    return e.t('color unknown')
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.RED = r.colors.RED, t.BLUE = r.colors.BLUE,
                  t.GREEN = r.colors.GREEN, t.PURPLE = r.colors.PURPLE,
                  t.ORANGE = r.colors.ORANGE, t.BLACK = r.colors.BLACK,
                  t.all = [t.RED, t.BLUE, t.GREEN, t.PURPLE, t.ORANGE, t.BLACK],
                  t.getColorName = n
            });
          r('lib/console', ['require', 'exports', 'console'],
            function(e, t, r) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.log = r.log, t.warn = r.warn
            });
          r('graphing-calc/api/sanitize-expression',
            [
              'require', 'exports', 'core/types/styles', 'core/lib/dragmode',
              'core/types/label-sizes', 'core/types/label-orientations',
              'core/lib/number-to-latex', 'lib/console'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              function l(e, t) {
                for (var r in t)
                  if (t.hasOwnProperty(r) && t[r] === e) return !0;
                return !1
              }
              function c(e) {
                return l(e, t.SanitizedPointStyle)
              }
              function u(e) {
                return l(e, t.SanitizedLineStyle)
              }
              function d(e) {
                return l(e, t.SanitizedDragMode)
              }
              function p(e) {
                return l(e, t.SanitizedColumnMode)
              }
              function h(e) {
                return l(e, t.SanitizedLabelSize)
              }
              function f(e) {
                return l(e, t.SanitizedLabelOrientation)
              }
              function g(e) {
                return {
                  id: e.id, type: e.type, columns: e.columns.map(m)
                }
              }
              function m(e) {
                return {
                  id: e.id, latex: e.latex, color: e.color, hidden: e.hidden,
                      pointStyle: e.pointStyle, lineStyle: e.lineStyle,
                      points: e.points, lines: e.lines, dragMode: e.dragMode,
                      values: e.values.slice()
                }
              }
              function y(e) {
                var t =
                        [
                          'latex', 'color', 'lineStyle', 'pointStyle',
                          'fillOpacity', 'points', 'lines', 'fill', 'hidden',
                          'secret', 'dragMode', 'label', 'showLabel',
                          'labelSize', 'labelOrientation', 'verticalLabel',
                          'interactiveLabel'
                        ],
                    r = {id: e.id, type: e.type};
                return t.forEach(function(t) {
                  e.hasOwnProperty(t) && (r[t] = e[t])
                }),
                       e.hasOwnProperty('parametricDomain') &&
                           (r.parametricDomain = {
                             min: e.parametricDomain.min,
                             max: e.parametricDomain.max
                           }),
                       e.hasOwnProperty('polarDomain') && (r.polarDomain = {
                         min: e.polarDomain.min,
                         max: e.polarDomain.max
                       }),
                       e.hasOwnProperty('domain') &&
                           (r.domain = {min: e.domain.min, max: e.domain.max}),
                       e.slider &&
                           (e.slider.hardMin &&
                                (r.sliderBounds = r.sliderBounds || {},
                                 r.sliderBounds.min = e.slider.min),
                            e.slider.hardMax &&
                                (r.sliderBounds = r.sliderBounds || {},
                                 r.sliderBounds.max = e.slider.max),
                            e.slider.step &&
                                (r.sliderBounds = r.sliderBounds || {},
                                 r.sliderBounds.step = e.slider.step)),
                       r
              }
              function v(e) {
                return {
                  id: e.id, type: e.type, hidden: e.hidden, secret: e.secret
                }
              }
              function b(e) {
                return {
                  id: e.id, type: e.type, hidden: e.hidden, secret: e.secret
                }
              }
              function x(e) {
                return {
                  id: e.id, type: e.type, secret: e.secret
                }
              }
              function w(e) {
                switch (e.type) {
                  case 'expression':
                    return y(e);
                  case 'table':
                    return g(e);
                  case 'folder':
                    return b(e);
                  case 'image':
                    return v(e);
                  case 'text':
                    return x(e);
                  default:
                    return e
                }
              }
              function _(e, t) {
                return e.hasOwnProperty('id') ? e.id + '' : t.generateId()
              }
              function E(e, t) {
                var r = {type: 'expression', id: _(e, t)};
                return r.type = 'expression', r.id = _(e, t),
                       e.hasOwnProperty('latex') && (r.latex = e.latex + ''),
                       e.hasOwnProperty('color') && (r.color = e.color + ''),
                       e.hasOwnProperty('points') && (r.points = !!e.points),
                       e.hasOwnProperty('lines') && (r.lines = !!e.lines),
                       e.hasOwnProperty('style') &&
                           (a.warn(
                                'As of API v1.1 the \'style\' property is deprecated and has been split into \'pointStyle\' and \'lineStyle\'.'),
                            c(e.style) ?
                                r.pointStyle = e.style :
                                u(e.style) ?
                                r.lineStyle = e.style :
                                a.warn('Invalid style: \'' + e.style + '\'.')),
                       e.hasOwnProperty('pointStyle') &&
                           (c(e.pointStyle) ? r.pointStyle = e.pointStyle :
                                              a.warn(
                                                  'Invalid pointStyle: \'' +
                                                  e.pointStyle + '\'.')),
                       e.hasOwnProperty('lineStyle') &&
                           (u(e.lineStyle) ? r.lineStyle = e.lineStyle :
                                             a.warn(
                                                 'Invalid lineStyle: \'' +
                                                 e.lineStyle + '\'.')),
                       e.hasOwnProperty('hidden') && (r.hidden = !!e.hidden),
                       e.hasOwnProperty('secret') && (r.secret = !!e.secret),
                       e.hasOwnProperty('sliderBounds') && e.sliderBounds &&
                           (r.slider = {
                             min: s.default(e.sliderBounds.min),
                             max: s.default(e.sliderBounds.max),
                             step: s.default(e.sliderBounds.step)
                           },
                            r.slider.min && (r.slider.hardMin = !0),
                            r.slider.max && (r.slider.hardMax = !0)),
                       e.hasOwnProperty('parametricDomain') &&
                               e.parametricDomain ?
                           (r.parametricDomain = {
                             min: s.default(e.parametricDomain.min),
                             max: s.default(e.parametricDomain.max)
                           },
                            e.hasOwnProperty('domain') &&
                                a.warn(
                                    'Both \'parametricDomain\' and the deprecated \'domain\' property were specified. Using \'parametricDomain\'.')) :
                           e.hasOwnProperty('domain') &&
                               (a.warn(
                                    'The \'domain\' property is deprecated.Use \'parametricDomain\' to specify the domain for parametric functions'),
                                r.parametricDomain = {
                                  min: s.default(e.domain.min),
                                  max: s.default(e.domain.max)
                                }),
                       e.hasOwnProperty('polarDomain') && e.polarDomain &&
                           (r.polarDomain = {
                             min: s.default(e.polarDomain.min),
                             max: s.default(e.polarDomain.max)
                           }),
                       e.hasOwnProperty('dragMode') &&
                           (d(e.dragMode) ? r.dragMode = e.dragMode :
                                            a.warn(
                                                'Invalid dragMode: \'' +
                                                e.dragMode + '\'.')),
                       e.hasOwnProperty('label') && (r.label = e.label + ''),
                       e.hasOwnProperty('showLabel') &&
                           (r.showLabel = !!e.showLabel),
                       e.hasOwnProperty('labelSize') &&
                           (h(e.labelSize) ?
                                r.labelSize = e.labelSize :
                                a.warn('Invalid labelSize: ' + e.labelSize)),
                       e.hasOwnProperty('labelOrientation') &&
                           (f(e.labelOrientation) ?
                                r.labelOrientation = e.labelOrientation :
                                a.warn(
                                    'Invalid labelOrientation: ' +
                                    e.labelOrientation)),
                       e.hasOwnProperty('fill') && (r.fill = !!e.fill),
                       e.hasOwnProperty('fillOpacity') &&
                           (r.fillOpacity = '' + e.fillOpacity),
                       r
              }
              function S(e, r) {
                var i = {id: _(e, r)};
                return e.hasOwnProperty('latex') && (i.latex = e.latex + ''),
                       e.hasOwnProperty('color') && (i.color = e.color + ''),
                       e.hasOwnProperty('hidden') && (i.hidden = !!e.hidden),
                       e.hasOwnProperty('points') && (i.points = !!e.points),
                       e.hasOwnProperty('lines') && (i.lines = !!e.lines),
                       e.hasOwnProperty('values') && e.values &&
                           (i.values = e.values.map(function(e) {
                             return e + ''
                           })),
                       e.hasOwnProperty('columnMode') &&
                           (a.warn(
                                'As of API v1.1 the \'columnMode\' property is deprecated and has been split into individual \'points\' and \'lines\' properties.'),
                            e.columnMode ===
                                    t.SanitizedColumnMode.POINTS_AND_LINES ?
                                (i.points = !0, i.lines = !0) :
                                e.columnMode === t.SanitizedColumnMode.LINES ?
                                (i.points = !1, i.lines = !0) :
                                (i.points = !0, i.lines = !1),
                            i.lines && !i.points &&
                                e.hasOwnProperty('dragMode') &&
                                e.dragMode !== n.DragMode.NONE &&
                                (a.warn(
                                     'A \'lines\' value of true and \'points\' value of false is only compatible with a dragMode of \'NONE\'. Proceeding by setting \'points\' to true.'),
                                 i.points = !0),
                            p(e.columnMode) &&
                                a.warn(
                                    'Invalid columnMode: \'' + e.columnMode +
                                    '\'.')),
                       e.hasOwnProperty('dragMode') &&
                           (d(e.dragMode) ?
                                i.dragMode = e.dragMode === n.DragMode.AUTO ?
                                n.DragMode.NONE :
                                e.dragMode :
                                a.warn(
                                    'Invalid dragMode: \'' + e.dragMode +
                                    '\'.')),
                       i
              }
              function M(e, t) {
                var r = {type: 'table', id: _(e, t)};
                return e.hasOwnProperty('columns') && e.columns &&
                           (r.columns = e.columns.map(function(e) {
                             return S(e, t)
                           })),
                       r
              }
              function I(e, t) {
                var r = {type: 'folder', id: _(e, t)};
                return e.hasOwnProperty('hidden') && (r.hidden = !!e.hidden), r
              }
              function k(e, t) {
                var r = {type: 'image', id: _(e, t)};
                return e.hasOwnProperty('hidden') && (r.hidden = !!e.hidden), r
              }
              function C(e, t, r) {
                var n = e.type;
                if (t && n && n !== t)
                  return void a.warn(
                      'Cannot change type of expression from \'' + t +
                      '\' to \'' + n + '\'.');
                switch (n) {
                  case void 0:
                  case 'expression':
                    return E(e, r);
                  case 'image':
                    return k(e, r);
                  case 'table':
                    return M(e, r);
                  case 'folder':
                    return I(e, r);
                  default:
                    return t ?
                        void a.warn(
                            'Cannot modify expressions of type: \'' + t +
                            '\' through the API.') :
                        void a.warn('Invalid expression type: \'' + n + '\'.')
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.SanitizedPointStyle = {
                    OPEN: r.PointStyle.OPEN,
                    CROSS: r.PointStyle.CROSS,
                    POINT: r.PointStyle.POINT
                  },
                  t.SanitizedLineStyle = {
                    SOLID: r.LineStyle.SOLID,
                    DASHED: r.LineStyle.DASHED,
                    DOTTED: r.LineStyle.DOTTED
                  },
                  t.SanitizedDragMode = {
                    NONE: n.DragMode.NONE,
                    AUTO: n.DragMode.AUTO,
                    X: n.DragMode.X,
                    Y: n.DragMode.Y,
                    XY: n.DragMode.XY
                  },
                  t.SanitizedColumnMode = {
                    POINTS: 'POINTS',
                    LINES: 'LINES',
                    POINTS_AND_LINES: 'POINTS_AND_LINES'
                  },
                  t.SanitizedLabelSize = {
                    SMALL: i.LabelSize.SMALL,
                    MEDIUM: i.LabelSize.MEDIUM,
                    LARGE: i.LabelSize.LARGE
                  },
                  t.SanitizedLabelOrientation = {
                    ABOVE: o.LabelOrientation.ABOVE,
                    BELOW: o.LabelOrientation.BELOW,
                    DEFAULT: o.LabelOrientation.DEFAULT,
                    LEFT: o.LabelOrientation.LEFT,
                    RIGHT: o.LabelOrientation.RIGHT
                  },
                  t.sanitizeItem = w, t.validateItem = C
            });
          r('core/graphing-calc/json/graph-settings',
            ['require', 'exports', 'tslib'], function(e, t, r) {
              'use strict';
              function n(e) {
                return e in o
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var i;
              !function(e) {
                e.NONE = 'NONE', e.POSITIVE = 'POSITIVE', e.BOTH = 'BOTH'
              }(i = t.AxisArrowModes || (t.AxisArrowModes = {}));
              var o = {
                showGrid: !0,
                showXAxis: !0,
                showYAxis: !0,
                xAxisStep: 0,
                yAxisStep: 0,
                xAxisMinorSubdivisions: 0,
                yAxisMinorSubdivisions: 0,
                xAxisArrowMode: i.NONE,
                yAxisArrowMode: i.NONE,
                xAxisLabel: '',
                yAxisLabel: '',
                xAxisNumbers: !0,
                yAxisNumbers: !0,
                polarMode: !1,
                polarNumbers: !0,
                degreeMode: !1,
                randomSeed: '',
                restrictGridToFirstQuadrant: !1
              },
                  s = {squareAxes: !0};
              t.DefaultGraphSettings = r.__assign(r.__assign({}, o), s),
              t.publicGraphSettings = Object.keys(o), t.isGraphSetting = n
            });
          r('main/font_sizes', ['require', 'exports'], function(e, t) {
            'use strict';
            Object.defineProperty(t, '__esModule', {value: !0}),
                t.VERY_SMALL = 9, t.SMALL = 12, t.MEDIUM = 16, t.LARGE = 20,
                t.VERY_LARGE = 24
          });
          (function(e) {
            'use strict';
            var t =
                    function(e, r, n) {
              var i, o, s = document.createElement('img');
              if (s.onerror = r, s.onload = function() {
                    !o || n && n.noRevoke || t.revokeObjectURL(o),
                        r && r(t.scale(s, n))
                  }, t.isInstanceOf('Blob', e) || t.isInstanceOf('File', e))
                i = o = t.createObjectURL(e), s._type = e.type;
              else {
                if ('string' != typeof e) return !1;
                i = e, n && n.crossOrigin && (s.crossOrigin = n.crossOrigin)
              }
              return i ? (s.src = i, s) : t.readFile(e, function(e) {
                var t = e.target;
                t&& t.result ? s.src = t.result : r && r(e)
              })
            },
                n = window.createObjectURL && window ||
                window.URL && URL.revokeObjectURL && URL ||
                window.webkitURL && webkitURL;
            t.isInstanceOf =
                function(e, t) {
              return Object.prototype.toString.call(t) === '[object ' + e + ']'
            },
            t.transformCoordinates = function() {},
            t.getTransformedOptions =
                function(e) {
              return e
            },
            t.renderImageToCanvas =
                function(e, t, r, n, i, o, s, a, l, c) {
              return e.getContext('2d').drawImage(t, r, n, i, o, s, a, l, c), e
            },
            t.hasCanvasOption =
                function(e) {
              return e.canvas || e.crop
            },
            t.scale =
                function(e, r) {
              r = r || {};
              var n, i, o, s, a, l, c, u, d,
                  p = document.createElement('canvas'),
                  h = e.getContext || t.hasCanvasOption(r) && p.getContext,
                  f = e.naturalWidth || e.width,
                  g = e.naturalHeight || e.height, m = f, y = g,
                  v = function() {
                    var e = Math.max((o || m) / m, (s || y) / y);
                    e > 1 && (m = Math.ceil(m * e), y = Math.ceil(y * e))
                  }, b = function() {
                    var e = Math.min((n || m) / m, (i || y) / y);
                    e < 1 && (m = Math.ceil(m * e), y = Math.ceil(y * e))
                  };
              return h &&
                         (r = t.getTransformedOptions(r), c = r.left || 0,
                          u = r.top || 0,
                          r.sourceWidth ?
                              (a = r.sourceWidth,
                               void 0 !== r.right && void 0 === r.left &&
                                   (c = f - a - r.right)) :
                              a = f - c - (r.right || 0),
                          r.sourceHeight ?
                              (l = r.sourceHeight,
                               void 0 !== r.bottom && void 0 === r.top &&
                                   (u = g - l - r.bottom)) :
                              l = g - u - (r.bottom || 0),
                          m = a, y = l),
                     n = r.maxWidth, i = r.maxHeight, o = r.minWidth,
                     s = r.minHeight,
                     h && n && i && r.crop ?
                         (m = n, y = i, d = a / l - n / i,
                          d < 0 ? (l = i * a / n,
                                   void 0 === r.top && void 0 === r.bottom &&
                                       (u = (g - l) / 2)) :
                                  d > 0 &&
                                  (a = n * l / i,
                                   void 0 === r.left && void 0 === r.right &&
                                       (c = (f - a) / 2))) :
                         ((r.contain || r.cover) &&
                              (o = n = n || o, s = i = i || s),
                          r.cover ? (b(), v()) : (v(), b())),
                     h ? (p.width = m, p.height = y,
                          t.transformCoordinates(p, r),
                          t.renderImageToCanvas(p, e, c, u, a, l, 0, 0, m, y)) :
                         (e.width = m, e.height = y, e)
            },
            t.createObjectURL =
                function(e) {
              return !!n && n.createObjectURL(e)
            },
            t.revokeObjectURL =
                function(e) {
              return !!n && n.revokeObjectURL(e)
            },
            t.readFile =
                function(e, t, r) {
              if (window.FileReader) {
                var n = new FileReader;
                if (n.onload = n.onerror = t, r = r || 'readAsDataURL', n[r])
                  return n[r](e), n
              }
              return !1
            },
            'function' == typeof r && r.amd ?
                r('vendor/load-image/load-image', [],
                  function() {
                    return t
                  }) :
                e.loadImage = t
          })(this);
          (function(e) {
            'use strict';
            'function' == typeof r && r.amd ?
                r('vendor/load-image/load-image-orientation', ['./load-image'],
                  e) :
                e(window.loadImage)
          })(function(e) {
            'use strict';
            var t = e.hasCanvasOption;
            e.hasCanvasOption = function(e) {
              return t(e) || e.orientation
            }, e.transformCoordinates = function(e, t) {
              var r = e.getContext('2d'), n = e.width, i = e.height,
                  o = t.orientation;
              if (o) switch (o > 4 && (e.width = i, e.height = n), o) {
                  case 2:
                    r.translate(n, 0), r.scale(-1, 1);
                    break;
                  case 3:
                    r.translate(n, i), r.rotate(Math.PI);
                    break;
                  case 4:
                    r.translate(0, i), r.scale(1, -1);
                    break;
                  case 5:
                    r.rotate(.5 * Math.PI), r.scale(1, -1);
                    break;
                  case 6:
                    r.rotate(.5 * Math.PI), r.translate(0, -i);
                    break;
                  case 7:
                    r.rotate(.5 * Math.PI), r.translate(n, -i), r.scale(-1, 1);
                    break;
                  case 8:
                    r.rotate(-.5 * Math.PI), r.translate(-n, 0)
                }
            }, e.getTransformedOptions = function(e) {
              if (!e.orientation || 1 === e.orientation) return e;
              var t, r = {};
              for (t in e) e.hasOwnProperty(t) && (r[t] = e[t]);
              switch (e.orientation) {
                case 2:
                  r.left = e.right, r.right = e.left;
                  break;
                case 3:
                  r.left = e.right, r.top = e.bottom, r.right = e.left,
                  r.bottom = e.top;
                  break;
                case 4:
                  r.top = e.bottom, r.bottom = e.top;
                  break;
                case 5:
                  r.left = e.top, r.top = e.left, r.right = e.bottom,
                  r.bottom = e.right;
                  break;
                case 6:
                  r.left = e.top, r.top = e.right, r.right = e.bottom,
                  r.bottom = e.left;
                  break;
                case 7:
                  r.left = e.bottom, r.top = e.right, r.right = e.top,
                  r.bottom = e.left;
                  break;
                case 8:
                  r.left = e.bottom, r.top = e.left, r.right = e.top,
                  r.bottom = e.right
              }
              return e.orientation > 4 &&
                         (r.maxWidth = e.maxHeight, r.maxHeight = e.maxWidth,
                          r.minWidth = e.minHeight, r.minHeight = e.minWidth,
                          r.sourceWidth = e.sourceHeight,
                          r.sourceHeight = e.sourceWidth),
                     r
            }
          });
          (function(e) {
            'use strict';
            'function' == typeof r && r.amd ?
                r('vendor/load-image/load-image-meta', ['./load-image'], e) :
                e(window.loadImage)
          })(function(e) {
            'use strict';
            var t = window.Blob &&
                (Blob.prototype.slice || Blob.prototype.webkitSlice ||
                 Blob.prototype.mozSlice);
            e.blobSlice = t &&
                function() {
                  return (this.slice || this.webkitSlice || this.mozSlice)
                      .apply(this, arguments)
                },
            e.metaDataParsers = {jpeg: {65505: []}},
            e.parseMetaData = function(t, r, n) {
              n = n || {};
              var i = this, o = n.maxMetaDataSize || 262144, s = {};
              !!(window.DataView && t && t.size >= 12 &&
                 'image/jpeg' === t.type && e.blobSlice) &&
                      e.readFile(
                          e.blobSlice.call(t, 0, o),
                          function(t) {
                            var o, a, l, c, u = t.target.result,
                                            d = new DataView(u), p = 2,
                                            h = d.byteLength - 4, f = p;
                            if (65496 === d.getUint16(0)) {
                              for (; p < h &&
                                   ((o = d.getUint16(p)) >= 65504 &&
                                        o <= 65519 ||
                                    65534 === o);) {
                                if (a = d.getUint16(p + 2) + 2,
                                    p + a > d.byteLength) {
                                  console.log(
                                      'Invalid meta data: Invalid segment size.');
                                  break
                                }
                                if (l = e.metaDataParsers.jpeg[o])
                                  for (c = 0; c < l.length; c += 1)
                                    l[c].call(i, d, p, a, s, n);
                                p += a, f = p
                              }
                              !n.disableImageHead && f > 6 &&
                                  (u.slice ?
                                       s.imageHead = u.slice(0, f) :
                                       s.imageHead =
                                           new Uint8Array(u).subarray(0, f))
                            } else
                              console.log(
                                  'Invalid JPEG file: Missing JPEG marker.');
                            r(s)
                          },
                          'readAsArrayBuffer') ||
                  r(s)
            }
          });
          (function(e) {
            'use strict';
            'function' == typeof r && r.amd ?
                r('vendor/load-image/load-image-ios', ['./load-image'], e) :
                e(window.loadImage)
          })(function(e) {
            'use strict';
            if (window.navigator && window.navigator.platform &&
                /iP(hone|od|ad)/.test(window.navigator.platform)) {
              var t = e.renderImageToCanvas;
              e.detectSubsampling =
                  function(e) {
                var t, r;
                return e.width * e.height > 1048576 &&
                    (t = document.createElement('canvas'),
                     t.width = t.height = 1, r = t.getContext('2d'),
                     r.drawImage(e, 1 - e.width, 0),
                     0 === r.getImageData(0, 0, 1, 1).data[3])
              },
              e.detectVerticalSquash =
                  function(e, t) {
                var r, n, i, o, s, a = e.naturalHeight || e.height,
                                   l = document.createElement('canvas'),
                                   c = l.getContext('2d');
                for (t && (a /= 2),
                     l.width = 1, l.height = a, c.drawImage(e, 0, 0),
                     r = c.getImageData(0, 0, 1, a).data, n = 0, i = a, o = a;
                     o > n;)
                  s = r[4 * (o - 1) + 3], 0 === s ? i = o : n = o,
                  o = i + n >> 1;
                return o / a || 1
              },
              e.renderImageToCanvas = function(r, n, i, o, s, a, l, c, u, d) {
                if ('image/jpeg' === n._type) {
                  var p, h, f, g, m = r.getContext('2d'),
                                  y = document.createElement('canvas'),
                                  v = y.getContext('2d');
                  if (y.width = 1024, y.height = 1024, m.save(),
                      p = e.detectSubsampling(n),
                      p && (i /= 2, o /= 2, s /= 2, a /= 2),
                      h = e.detectVerticalSquash(n, p), p || 1 !== h) {
                    for (o *= h, u = Math.ceil(1024 * u / s),
                                 d = Math.ceil(1024 * d / a / h), c = 0, g = 0;
                         g < a;) {
                      for (l = 0, f = 0; f < s;)
                        v.clearRect(0, 0, 1024, 1024),
                            v.drawImage(n, i, o, s, a, -f, -g, s, a),
                            m.drawImage(y, 0, 0, 1024, 1024, l, c, u, d),
                            f += 1024, l += u;
                      g += 1024, c += d
                    }
                    return m.restore(), r
                  }
                }
                return t(r, n, i, o, s, a, l, c, u, d)
              }
            }
          });
          (function(e) {
            'use strict';
            'function' == typeof r && r.amd ?
                r('vendor/load-image/load-image-exif',
                  ['./load-image', './load-image-meta'], e) :
                e(window.loadImage)
          })(function(e) {
            'use strict';
            e.ExifMap =
                function() {
              return this
            },
            e.ExifMap.prototype.map = {Orientation: 274},
            e.ExifMap.prototype.get =
                function(e) {
              return this[e] || this[this.map[e]]
            },
            e.getExifThumbnail =
                function(e, t, r) {
              var n, i, o;
              if (!r || t + r > e.byteLength)
                return void console.log(
                    'Invalid Exif data: Invalid thumbnail data.');
              for (n = [], i = 0; i < r; i += 1)
                o = e.getUint8(t + i),
                n.push((o < 16 ? '0' : '') + o.toString(16));
              return 'data:image/jpeg,%' + n.join('%')
            },
            e.exifTagTypes = {
              1: {
                getValue: function(e, t) {
                  return e.getUint8(t)
                },
                size: 1
              },
              2: {
                getValue: function(e, t) {
                  return String.fromCharCode(e.getUint8(t))
                },
                size: 1,
                ascii: !0
              },
              3: {
                getValue: function(e, t, r) {
                  return e.getUint16(t, r)
                },
                size: 2
              },
              4: {
                getValue: function(e, t, r) {
                  return e.getUint32(t, r)
                },
                size: 4
              },
              5: {
                getValue: function(e, t, r) {
                  return e.getUint32(t, r) / e.getUint32(t + 4, r)
                },
                size: 8
              },
              9: {
                getValue: function(e, t, r) {
                  return e.getInt32(t, r)
                },
                size: 4
              },
              10: {
                getValue: function(e, t, r) {
                  return e.getInt32(t, r) / e.getInt32(t + 4, r)
                },
                size: 8
              }
            },
            e.exifTagTypes[7] = e.exifTagTypes[1],
            e.getExifValue = function(t, r, n, i, o, s) {
              var a, l, c, u, d, p, h = e.exifTagTypes[i];
              if (!h)
                return void console.log('Invalid Exif data: Invalid tag type.');
              if (a = h.size * o,
                  (l = a > 4 ? r + t.getUint32(n + 8, s) : n + 8) + a >
                      t.byteLength)
                return void console.log(
                    'Invalid Exif data: Invalid data offset.');
              if (1 === o) return h.getValue(t, l, s);
              for (c = [], u = 0; u < o; u += 1)
                c[u] = h.getValue(t, l + u * h.size, s);
              if (h.ascii) {
                for (d = '', u = 0; u < c.length && '\0' !== (p = c[u]); u += 1)
                  d += p;
                return d
              }
              return c
            }, e.parseExifTag = function(t, r, n, i, o) {
              var s = t.getUint16(n, i);
              o.exif[s] = e.getExifValue(
                  t, r, n, t.getUint16(n + 2, i), t.getUint32(n + 4, i), i)
            }, e.parseExifTags = function(e, t, r, n, i) {
              var o, s, a;
              if (r + 6 > e.byteLength)
                return void console.log(
                    'Invalid Exif data: Invalid directory offset.');
              if (o = e.getUint16(r, n),
                  (s = r + 2 + 12 * o) + 4 > e.byteLength)
                return void console.log(
                    'Invalid Exif data: Invalid directory size.');
              for (a = 0; a < o; a += 1)
                this.parseExifTag(e, t, r + 2 + 12 * a, n, i);
              return e.getUint32(s, n)
            }, e.parseExifData = function(t, r, n, i, o) {
              if (!o.disableExif) {
                var s, a, l, c = r + 10;
                if (1165519206 === t.getUint32(r + 4)) {
                  if (c + 8 > t.byteLength)
                    return void console.log(
                        'Invalid Exif data: Invalid segment size.');
                  if (0 !== t.getUint16(r + 8))
                    return void console.log(
                        'Invalid Exif data: Missing byte alignment offset.');
                  switch (t.getUint16(c)) {
                    case 18761:
                      s = !0;
                      break;
                    case 19789:
                      s = !1;
                      break;
                    default:
                      return void console.log(
                          'Invalid Exif data: Invalid byte alignment marker.')
                  }
                  if (42 !== t.getUint16(c + 2, s))
                    return void console.log(
                        'Invalid Exif data: Missing TIFF marker.');
                  a = t.getUint32(c + 4, s), i.exif = new e.ExifMap,
                  a = e.parseExifTags(t, c, c + a, s, i),
                  a && !o.disableExifThumbnail &&
                      (l = {exif: {}}, a = e.parseExifTags(t, c, c + a, s, l),
                       l.exif[513] &&
                           (i.exif.Thumbnail = e.getExifThumbnail(
                                t, c + l.exif[513], l.exif[514]))),
                  i.exif[34665] && !o.disableExifSub &&
                      e.parseExifTags(t, c, c + i.exif[34665], s, i),
                  i.exif[34853] && !o.disableExifGps &&
                      e.parseExifTags(t, c, c + i.exif[34853], s, i)
                }
              }
            }, e.metaDataParsers.jpeg[65505].push(e.parseExifData)
          });
          (function(e) {
            'use strict';
            'function' == typeof r && r.amd ?
                r('vendor/load-image/load-image-exif-map',
                  ['./load-image', './load-image-exif'], e) :
                e(window.loadImage)
          })(
              function(e) {
                'use strict';
                e.ExifMap.prototype
                    .tags = {
                  256: 'ImageWidth',
                  257: 'ImageHeight',
                  34665: 'ExifIFDPointer',
                  34853: 'GPSInfoIFDPointer',
                  40965: 'InteroperabilityIFDPointer',
                  258: 'BitsPerSample',
                  259: 'Compression',
                  262: 'PhotometricInterpretation',
                  274: 'Orientation',
                  277: 'SamplesPerPixel',
                  284: 'PlanarConfiguration',
                  530: 'YCbCrSubSampling',
                  531: 'YCbCrPositioning',
                  282: 'XResolution',
                  283: 'YResolution',
                  296: 'ResolutionUnit',
                  273: 'StripOffsets',
                  278: 'RowsPerStrip',
                  279: 'StripByteCounts',
                  513: 'JPEGInterchangeFormat',
                  514: 'JPEGInterchangeFormatLength',
                  301: 'TransferFunction',
                  318: 'WhitePoint',
                  319: 'PrimaryChromaticities',
                  529: 'YCbCrCoefficients',
                  532: 'ReferenceBlackWhite',
                  306: 'DateTime',
                  270: 'ImageDescription',
                  271: 'Make',
                  272: 'Model',
                  305: 'Software',
                  315: 'Artist',
                  33432: 'Copyright',
                  36864: 'ExifVersion',
                  40960: 'FlashpixVersion',
                  40961: 'ColorSpace',
                  40962: 'PixelXDimension',
                  40963: 'PixelYDimension',
                  42240: 'Gamma',
                  37121: 'ComponentsConfiguration',
                  37122: 'CompressedBitsPerPixel',
                  37500: 'MakerNote',
                  37510: 'UserComment',
                  40964: 'RelatedSoundFile',
                  36867: 'DateTimeOriginal',
                  36868: 'DateTimeDigitized',
                  37520: 'SubSecTime',
                  37521: 'SubSecTimeOriginal',
                  37522: 'SubSecTimeDigitized',
                  33434: 'ExposureTime',
                  33437: 'FNumber',
                  34850: 'ExposureProgram',
                  34852: 'SpectralSensitivity',
                  34855: 'PhotographicSensitivity',
                  34856: 'OECF',
                  34864: 'SensitivityType',
                  34865: 'StandardOutputSensitivity',
                  34866: 'RecommendedExposureIndex',
                  34867: 'ISOSpeed',
                  34868: 'ISOSpeedLatitudeyyy',
                  34869: 'ISOSpeedLatitudezzz',
                  37377: 'ShutterSpeedValue',
                  37378: 'ApertureValue',
                  37379: 'BrightnessValue',
                  37380: 'ExposureBias',
                  37381: 'MaxApertureValue',
                  37382: 'SubjectDistance',
                  37383: 'MeteringMode',
                  37384: 'LightSource',
                  37385: 'Flash',
                  37396: 'SubjectArea',
                  37386: 'FocalLength',
                  41483: 'FlashEnergy',
                  41484: 'SpatialFrequencyResponse',
                  41486: 'FocalPlaneXResolution',
                  41487: 'FocalPlaneYResolution',
                  41488: 'FocalPlaneResolutionUnit',
                  41492: 'SubjectLocation',
                  41493: 'ExposureIndex',
                  41495: 'SensingMethod',
                  41728: 'FileSource',
                  41729: 'SceneType',
                  41730: 'CFAPattern',
                  41985: 'CustomRendered',
                  41986: 'ExposureMode',
                  41987: 'WhiteBalance',
                  41988: 'DigitalZoomRatio',
                  41989: 'FocalLengthIn35mmFilm',
                  41990: 'SceneCaptureType',
                  41991: 'GainControl',
                  41992: 'Contrast',
                  41993: 'Saturation',
                  41994: 'Sharpness',
                  41995: 'DeviceSettingDescription',
                  41996: 'SubjectDistanceRange',
                  42016: 'ImageUniqueID',
                  42032: 'CameraOwnerName',
                  42033: 'BodySerialNumber',
                  42034: 'LensSpecification',
                  42035: 'LensMake',
                  42036: 'LensModel',
                  42037: 'LensSerialNumber',
                  0: 'GPSVersionID',
                  1: 'GPSLatitudeRef',
                  2: 'GPSLatitude',
                  3: 'GPSLongitudeRef',
                  4: 'GPSLongitude',
                  5: 'GPSAltitudeRef',
                  6: 'GPSAltitude',
                  7: 'GPSTimeStamp',
                  8: 'GPSSatellites',
                  9: 'GPSStatus',
                  10: 'GPSMeasureMode',
                  11: 'GPSDOP',
                  12: 'GPSSpeedRef',
                  13: 'GPSSpeed',
                  14: 'GPSTrackRef',
                  15: 'GPSTrack',
                  16: 'GPSImgDirectionRef',
                  17: 'GPSImgDirection',
                  18: 'GPSMapDatum',
                  19: 'GPSDestLatitudeRef',
                  20: 'GPSDestLatitude',
                  21: 'GPSDestLongitudeRef',
                  22: 'GPSDestLongitude',
                  23: 'GPSDestBearingRef',
                  24: 'GPSDestBearing',
                  25: 'GPSDestDistanceRef',
                  26: 'GPSDestDistance',
                  27: 'GPSProcessingMethod',
                  28: 'GPSAreaInformation',
                  29: 'GPSDateStamp',
                  30: 'GPSDifferential',
                  31: 'GPSHPositioningError'
                },
 e.ExifMap.prototype.stringValues = {
   ExposureProgram: {
     0: 'Undefined',
     1: 'Manual',
     2: 'Normal program',
     3: 'Aperture priority',
     4: 'Shutter priority',
     5: 'Creative program',
     6: 'Action program',
     7: 'Portrait mode',
     8: 'Landscape mode'
   },
   MeteringMode: {
     0: 'Unknown',
     1: 'Average',
     2: 'CenterWeightedAverage',
     3: 'Spot',
     4: 'MultiSpot',
     5: 'Pattern',
     6: 'Partial',
     255: 'Other'
   },
   LightSource: {
     0: 'Unknown',
     1: 'Daylight',
     2: 'Fluorescent',
     3: 'Tungsten (incandescent light)',
     4: 'Flash',
     9: 'Fine weather',
     10: 'Cloudy weather',
     11: 'Shade',
     12: 'Daylight fluorescent (D 5700 - 7100K)',
     13: 'Day white fluorescent (N 4600 - 5400K)',
     14: 'Cool white fluorescent (W 3900 - 4500K)',
     15: 'White fluorescent (WW 3200 - 3700K)',
     17: 'Standard light A',
     18: 'Standard light B',
     19: 'Standard light C',
     20: 'D55',
     21: 'D65',
     22: 'D75',
     23: 'D50',
     24: 'ISO studio tungsten',
     255: 'Other'
   },
   Flash: {
     0: 'Flash did not fire',
     1: 'Flash fired',
     5: 'Strobe return light not detected',
     7: 'Strobe return light detected',
     9: 'Flash fired, compulsory flash mode',
     13: 'Flash fired, compulsory flash mode, return light not detected',
     15: 'Flash fired, compulsory flash mode, return light detected',
     16: 'Flash did not fire, compulsory flash mode',
     24: 'Flash did not fire, auto mode',
     25: 'Flash fired, auto mode',
     29: 'Flash fired, auto mode, return light not detected',
     31: 'Flash fired, auto mode, return light detected',
     32: 'No flash function',
     65: 'Flash fired, red-eye reduction mode',
     69: 'Flash fired, red-eye reduction mode, return light not detected',
     71: 'Flash fired, red-eye reduction mode, return light detected',
     73: 'Flash fired, compulsory flash mode, red-eye reduction mode',
     77: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',
     79: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',
     89: 'Flash fired, auto mode, red-eye reduction mode',
     93: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',
     95: 'Flash fired, auto mode, return light detected, red-eye reduction mode'
   },
   SensingMethod: {
     1: 'Undefined',
     2: 'One-chip color area sensor',
     3: 'Two-chip color area sensor',
     4: 'Three-chip color area sensor',
     5: 'Color sequential area sensor',
     7: 'Trilinear sensor',
     8: 'Color sequential linear sensor'
   },
   SceneCaptureType:
       {0: 'Standard', 1: 'Landscape', 2: 'Portrait', 3: 'Night scene'},
   SceneType: {1: 'Directly photographed'},
   CustomRendered: {0: 'Normal process', 1: 'Custom process'},
   WhiteBalance: {0: 'Auto white balance', 1: 'Manual white balance'},
   GainControl: {
     0: 'None',
     1: 'Low gain up',
     2: 'High gain up',
     3: 'Low gain down',
     4: 'High gain down'
   },
   Contrast: {0: 'Normal', 1: 'Soft', 2: 'Hard'},
   Saturation: {0: 'Normal', 1: 'Low saturation', 2: 'High saturation'},
   Sharpness: {0: 'Normal', 1: 'Soft', 2: 'Hard'},
   SubjectDistanceRange:
       {0: 'Unknown', 1: 'Macro', 2: 'Close view', 3: 'Distant view'},
   FileSource: {3: 'DSC'},
   ComponentsConfiguration:
       {0: '', 1: 'Y', 2: 'Cb', 3: 'Cr', 4: 'R', 5: 'G', 6: 'B'},
   Orientation: {
     1: 'top-left',
     2: 'top-right',
     3: 'bottom-right',
     4: 'bottom-left',
     5: 'left-top',
     6: 'right-top',
     7: 'right-bottom',
     8: 'left-bottom'
   }
 },
 e.ExifMap.prototype.getText = function(e) {
   var t = this.get(e);
   switch (e) {
     case 'LightSource':
     case 'Flash':
     case 'MeteringMode':
     case 'ExposureProgram':
     case 'SensingMethod':
     case 'SceneCaptureType':
     case 'SceneType':
     case 'CustomRendered':
     case 'WhiteBalance':
     case 'GainControl':
     case 'Contrast':
     case 'Saturation':
     case 'Sharpness':
     case 'SubjectDistanceRange':
     case 'FileSource':
     case 'Orientation':
       return this.stringValues[e][t];
     case 'ExifVersion':
     case 'FlashpixVersion':
       return String.fromCharCode(t[0], t[1], t[2], t[3]);
     case 'ComponentsConfiguration':
       return this.stringValues[e][t[0]] + this.stringValues[e][t[1]] +
           this.stringValues[e][t[2]] + this.stringValues[e][t[3]];
     case 'GPSVersionID':
       return t[0] + '.' + t[1] + '.' + t[2] + '.' + t[3]
   }
   return String(t)
 }, function(e) {
   var t, r = e.tags, n = e.map;
   for (t in r) r.hasOwnProperty(t) && (n[r[t]] = t)
 }(e.ExifMap.prototype), e.ExifMap.prototype.getAll = function() {
   var e, t, r = {};
   for (e in this)
     this.hasOwnProperty(e) && (t = this.tags[e]) && (r[t] = this.getText(t));
   return r
 }
              });
          r('loadImage',
            [
              'require', 'vendor/load-image/load-image-orientation',
              'vendor/load-image/load-image-meta',
              'vendor/load-image/load-image-ios',
              'vendor/load-image/load-image-exif',
              'vendor/load-image/load-image-exif-map',
              'vendor/load-image/load-image'
            ],
            function(e) {
              'use strict';
              return e('vendor/load-image/load-image-orientation'),
                     e('vendor/load-image/load-image-meta'),
                     e('vendor/load-image/load-image-ios'),
                     e('vendor/load-image/load-image-exif'),
                     e('vendor/load-image/load-image-exif-map'),
                     e('vendor/load-image/load-image')
            });
          r('expressions/image_file_to_data_url',
            ['require', 'exports', 'loadImage'], function(e, t, r) {
              'use strict';
              function n(e, t) {
                for (var r, n = [.92, .86, .8, .7, .6, .5, .4, .3, .2, .1],
                            i = 0;
                     i < n.length; i++)
                  if (r = e.toDataURL('image/jpeg', n[i]), r.length < t)
                    return r;
                return r
              }
              function i(e, t) {
                for (var r, n = e.toDataURL().length, i = e.width, o = e.height,
                            s = document.createElement('canvas'), a = 0;
                     a < 2; a++) {
                  var l = Math.sqrt(t / n);
                  i = Math.round(l * i), o = Math.round(l * o), s.height = o,
                  s.width = i;
                  if (s.getContext('2d').drawImage(e, 0, 0, i, o),
                      r = s.toDataURL(), (n = r.length) < t)
                    return r
                }
                return r
              }
              function o(e) {
                for (var t = e.getContext('2d'),
                         r = t.getImageData(0, 0, e.width, e.height).data,
                         n = 3;
                     n < r.length; n += 4)
                  if (255 !== r[n]) return !0;
                return !1
              }
              function s(e, t) {
                var s = {
                  orientation: !0,
                  canvas: !0,
                  maxWidth: 1600,
                  maxHeight: 1600
                };
                r(e, function(r) {
                  if (!r.toDataURL) return void t(!0);
                  var s;
                  if ('image/jpeg' === e.type)
                    s = n(r, 2e5);
                  else if (s = r.toDataURL(), s.length > 2e5) {
                    var a = s.length > .75 * r.width * r.height, l = a && !o(r);
                    s = l ? n(r, 2e5) : i(r, 2e5)
                  }
                  t(null, s)
                }, s)
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.imageFileToDataURL = s
            });
          r('lib/i18n',
            [
              'require', 'exports', 'config', 'jquery', 'underscore',
              'lib/console'
            ],
            function(e, t, r, n, i, o) {
              'use strict';
              function s(e, t) {
                m = e || '', y = t || {}, v = {}
              }
              function a(e) {
                for (var t, r = /(__[^_]+__)/g, n = [];
                     null !== (t = r.exec(e));)
                  n.push({index: t.index, text: t[0]});
                e = e.replace(/[a-z]/gi, '♦');
                for (var i = e.split(''), o = 0; o < n.length; o++)
                  for (var s = n[o].index, a = n[o].text, l = 0; l < a.length;
                       l++)
                    i[s + l] = a[l];
                return i.join('')
              }
              function l(e, t, n) {
                var i, o = void 0 !== n ? n : m;
                v[o] || (v[o] = u([o]));
                for (var s = 0, l = v[o]; s < l.length; s++) {
                  var c = l[s];
                  if (y.hasOwnProperty(c) && y[c][e]) {
                    i = y[c][e];
                    break
                  }
                }
                if (i || (i = void 0 !== e ? e : ''),
                    r.get('bare-i18n') && (i = a(i)), t)
                  for (var d in t)
                    t.hasOwnProperty(d) &&
                        (i = i.split('__' + d + '__').join(t[d]));
                return i
              }
              function c(e, t) {
                return l(e, t)
              }
              function u(e) {
                var r = [];
                return i.each(e, function(e) {
                  if (e && 'string' == typeof e) {
                    var n = e.split('-')[0];
                    r.push(e), r.push(n),
                        i.each(t.enabled_languages, function(e, t) {
                          t.split('-')[0] === n && e.useAsRoot && r.push(t)
                        })
                  }
                }), r
              }
              function d() {
                for (var e = u([
                       r.get('lang'), navigator.userLanguage, navigator.language
                     ]),
                         t = 0;
                     t < e.length; t++) {
                  var n = e[t];
                  if (h(n)) return n
                }
                return 'en'
              }
              function p() {
                return m
              }
              function h(e) {
                return t.enabled_languages.hasOwnProperty(e) || i.contains(b, e)
              }
              function f(e) {
                var r = n.Deferred();
                if ('undefined' == typeof Desmos)
                  return r.reject(), r.promise();
                if (Desmos.supportedLanguages.indexOf(e) >= 0 || 'en' === e)
                  return s(e, Desmos.locales), r.resolve(!0), r.promise();
                if (!h(e)) {
                  var i = -1 !== e.indexOf('-') ? e.split('-')[0] : e;
                  for (var a in t.enabled_languages)
                    if (-1 !== a.indexOf('-')) {
                      var l = a.split('-')[0];
                      if (i === l && t.enabled_languages[a].useAsRoot) {
                        e = a;
                        break
                      }
                    }
                }
                return n.get(
                            '/api/v1/calculator/language/' + e,
                            function(t) {
                              Desmos.locales || (Desmos.locales = {}),
                                  Desmos.supportedLanguages ||
                                  (Desmos.supportedLanguages = []),
                                  Desmos.locales[e] = t[e],
                                  Desmos.supportedLanguages.push(e),
                                  s(e, Desmos.locales), r.resolve(!0)
                            })
                           .fail(function(t) {
                             404 === t.status &&
                                 o.warn(e + ' is not an available language.'),
                                 r.reject()
                           }),
                       r.promise()
              }
              function g(e, t) {
                if (null === e || void 0 === e) return '';
                if ('string' == typeof e) return e;
                if ('number' == typeof e) return '' + e;
                var r, n = e.vars;
                if (n) {
                  r = {};
                  for (var i in n) n.hasOwnProperty(i) && (r[i] = g(n[i], t))
                }
                return l(e.msg, r, t)
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.locales = function() {
                    return 'undefined' != typeof Desmos && Desmos.locales ?
                        Desmos.locales :
                        {}
                  }();
              var m = '', y = {}, v = {};
              t.enabled_languages = {
                en: {
                  displayName: 'English (US)',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                'en-GB': {
                  displayName: 'English (GB)',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                'es-ES': {
                  displayName: 'Español (España)',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_ES-ES.pdf',
                  useAsRoot: !0
                },
                ru: {
                  displayName: 'Русский',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_RU.pdf',
                  useAsRoot: !1
                },
                da: {
                  displayName: 'Dansk',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                de: {
                  displayName: 'Deutsch',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_DE.pdf',
                  useAsRoot: !1
                },
                'pt-BR': {
                  displayName: 'Português (Brasil)',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                'pt-PT': {
                  displayName: 'Português (Portugal)',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                ca: {
                  displayName: 'Català',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                fr: {
                  displayName: 'Français',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_FR.pdf',
                  useAsRoot: !1
                },
                it: {
                  displayName: 'Italiano',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_IT.pdf',
                  useAsRoot: !1
                },
                is: {
                  displayName: 'Íslenska',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                nl: {
                  displayName: 'Nederlands',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                no: {
                  displayName: 'Norsk',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                'sv-SE': {
                  displayName: 'Svenska',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                hr: {
                  displayName: 'Hrvatski',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                hu: {
                  displayName: 'Magyar',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                cs: {
                  displayName: 'Čeština',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                tr: {
                  displayName: 'Türkçe',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_TR.pdf',
                  useAsRoot: !1
                },
                sl: {
                  displayName: 'Slovenščina',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_SL.pdf',
                  useAsRoot: !1
                },
                lt: {
                  displayName: 'Lietuvių',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                pl: {
                  displayName: 'Polski',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_PL.pdf',
                  useAsRoot: !1
                },
                ro: {
                  displayName: 'Română',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                id: {
                  displayName: 'Bahasa Indonesia',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                vi: {
                  displayName: 'Tiếng Việt',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_VI.pdf',
                  useAsRoot: !1
                },
                el: {
                  displayName: 'Ελληνικά',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_EL.pdf',
                  useAsRoot: !1
                },
                'sr-CS': {
                  displayName: 'SRPSKI',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                bg: {
                  displayName: 'Български',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_BG.pdf',
                  useAsRoot: !1
                },
                mk: {
                  displayName: 'Македонски',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                uk: {
                  displayName: 'Українська',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                ka: {
                  displayName: 'ქართული',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                th: {
                  displayName: 'ภาษาไทย',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                'zh-CN': {
                  displayName: '简体中文',
                  useAsRoot: !0,
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_ZH-CN.pdf'
                },
                'zh-TW': {
                  displayName: '繁體中文',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_ZH-TW.pdf',
                  useAsRoot: !1
                },
                ko: {
                  displayName: '한국어',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide.pdf',
                  useAsRoot: !1
                },
                ja: {
                  displayName: '日本語',
                  userGuideURL:
                      'https://desmos.s3.amazonaws.com/Desmos_User_Guide_JA.pdf',
                  useAsRoot: !1
                }
              };
              var b = [
                'sr', 'hy-AM', 'bn', 'eu', 'he', 'hi', 'ar', 'fi', 'kk',
                'ml-IN', 'tr', 'fa'
              ];
              t.init = s, t.t = l, t.raw = c, t.detectLanguage = d,
              t.currentLanguage = p, t.fetchLanguage = f, t.unpack = g,
              s(d(), t.locales)
            });
          r('underscore_model', ['require', 'underscore', 'pjs'], function(e) {
            var t = e('underscore');
            return {
              UnderscoreModel: e('pjs')(function(e) {
                var r = 0,
                    n = 'guid_' + Math.round(1e6 * Math.random()) + '_' +
                    (new Date).getTime() + '_';
                e.init = function() {
                  this.__observers = {}, this.__eventObservers = {},
                  this.__oldProperties = {}, this.__propertyComparators = {},
                  this.guid = n + ++r
                }, e.unobserveAll = function() {
                  this.__observers = {}, this.__eventObservers = {}
                }, e.getProperty = function(e) {
                  return this[e]
                }, e.getOldProperty = function(e) {
                  return this.__oldProperties[e]
                }, e.setProperty = function(e, r) {
                  var n = this[e];
                  this[e] = r;
                  var i = this.__propertyComparators[e];
                  if (i) {
                    if (i(n, r)) return
                  } else if (t.isEqual(n, r))
                    return;
                  this.__oldProperties[e] = n, this.notifyPropertyChange(e)
                }, e.setProperties = function(e) {
                  for (var t in e)
                    e.hasOwnProperty(t) && this.setProperty(t, e[t])
                }, e.setPropertyComparator = function(e, t) {
                  this.__propertyComparators[e] = t
                }, e.notifyPropertyChange = function(e) {
                  this.__callObservers(this.__observers, e, this)
                }, e.observe = function(e, t) {
                  this.__addObservers(this.__observers, e, t)
                }, e.unobserve = function(e) {
                  this.__removeObservers(this.__observers, e)
                }, e.observeAndSync = function(e, t) {
                  this.observe(e, t);
                  for (var r = e.split(' '), n = 0; n < r.length; n++) {
                    var i = r[n].split('.'), o = i[0];
                    this.hasOwnProperty(o) && t(o, this)
                  }
                }, e.triggerEvent = function(e, t) {
                  this.__callObservers(this.__eventObservers, e, t)
                }, e.observeEvent = function(e, t) {
                  this.__addObservers(this.__eventObservers, e, t)
                }, e.unobserveEvent = function(e) {
                  this.__removeObservers(this.__eventObservers, e)
                }, e.__callObservers = function(e, t, r) {
                  var n = e[t];
                  if (n)
                    for (var i = 0; i < n.length; i++) n[i].callback(t, r)
                }, e.__removeObservers = function(e, t) {
                  for (var r = t.split(' '), n = 0; n < r.length; n++) {
                    var i = r[n].split('.'), o = i[0], s = i[1];
                    if (o && s) {
                      var a = e[o], l = [];
                      if (!a) continue;
                      for (var c = 0; c < a.length; c++) {
                        var u = a[c];
                        u.namespace !== s && l.push(u)
                      }
                      e[o] = l
                    } else if (o)
                      delete e[o];
                    else if (s)
                      for (o in e)
                        e.hasOwnProperty(o) &&
                            this.__removeObservers(e, o + '.' + s)
                  }
                }, e.__addObservers = function(e, t, r) {
                  for (var n = t.split(' '), i = 0; i < n.length; i++) {
                    var o = n[i].split('.'), s = o[0];
                    if (!s) throw 'Must supply a property to observe';
                    var a = o[1], l = {namespace: a, callback: r}, c = e[s];
                    c ? c.push(l) : e[s] = [l]
                  }
                }
              })
            }
          });
          r('main/graph_settings',
            [
              'require', 'pjs', 'underscore', 'underscore_model',
              'core/graphing-calc/json/graph-settings', 'console',
              'core/graphing-calc/json/graph-settings', 'core/lib/color-helpers'
            ],
            function(e) {
              'use strict';
              var t = e('pjs'), r = e('underscore'),
                  n = e('underscore_model').UnderscoreModel,
                  i = e('core/graphing-calc/json/graph-settings')
                          .AxisArrowModes,
                  o = e('console'),
                  s = e('core/graphing-calc/json/graph-settings')
                          .DefaultGraphSettings,
                  a = e('core/lib/color-helpers'),
                  l = t(n, function(e, t, c) {
                    e.init = function() {
                      function e(e, t, r) {
                        function n() {
                          o.setProperty(e, o.config.projectorMode ? r : t)
                        }
                        o.cloneProperties.push(e),
                            o.config.observe('projectorMode', n), n()
                      }
                      function r(e, t, r, n, i) {
                        function s() {
                          var s;
                          s = o.config.projectorMode ? o.highlight ? i : n :
                              o.highlight            ? r :
                                                       t,
                          o.setProperty(e, s)
                        }
                        o.cloneProperties.push(e), o.observe('highlight', s),
                            o.config.observe('projectorMode', s), s()
                      }
                      t.init.call(this), this.stateProperties = [],
                                         this.cloneProperties = [],
                                         this.config = new n;
                      for (var i in s)
                        s.hasOwnProperty(i) && this.addStateProperty(i, s[i]);
                      this.labelHangingColor = 'rgba(150,150,150,1)',
                      this.lastChangedAxis = 'x';
                      var o = this;
                      e('labelSize', 14, 19), e('majorAxisOpacity', .4, 1),
                          e('minorAxisOpacity', .12, .25),
                          e('axisOpacity', .9, .9), e('axisLineWidth', 1.5, 2),
                          e('axisLineOffset', .25, 0),
                          e('pixelsPerLabel', 80, 120),
                          r('curveOpacity', .7, 1, .7, 1),
                          e('globalCurveColor', void 0, void 0),
                          e('disableFill', !1, !1),
                          r('graphLineWidth', 2.5, 3.5, 5, 7),
                          r('pointLineWidth', 9, 11, 15, 17)
                    }, e.addStateProperty = function(e, t) {
                      this[e] = t, this.stateProperties.push(e),
                      this.cloneProperties.push(e)
                    }, c.fromObject = function(e) {
                      var t = l();
                      return t.cloneProperties.forEach(function(r) {
                        e.hasOwnProperty(r) && t.setProperty(r, e[r])
                      }),
                             t
                    }, e.registerCallbacks = function(e, t) {
                      var r = this, n = function() {
                        e.redrawAllLayers()
                      };
                      this.stateProperties.forEach(function(e) {
                        r.observe(e, n)
                      }),
                          this.config.observe('backgroundColor', n),
                          this.config.observe('textColor', n),
                          this.config.observe('invertedColors', n),
                          this.observe(
                              'squareAxes',
                              function() {
                                e.viewportController.enforceSquareAxes()
                              }),
                          this.observe(
                              'backgroundColor',
                              function() {
                                e.redrawAllLayers()
                              }),
                          this.observe(
                              'textColor',
                              function() {
                                e.redrawAllLayers()
                              }),
                          this.config.observe(
                              'enableTabindex',
                              function() {
                                e.redrawAllLayers()
                              }),
                          this.config.observeAndSync(
                              'projectorMode', function() {
                                e.redrawAllLayers()
                              })
                    };
                    var u = function(e, t) {
                      var n;
                      switch (e) {
                        case 'xAxisMinorSubdivisions':
                        case 'yAxisMinorSubdivisions':
                          n = Math.round(Math.min(Math.max(0, t), 5)),
                          t !== n &&
                              o.warn(
                                  'minorSubdivisions must be an integer between 0 and 5. You provided ' +
                                  t + ', which we changed to ' + n + '.');
                          break;
                        case 'degreeMode':
                        case 'projectorMode':
                        case 'showGrid':
                        case 'showXAxis':
                        case 'showYAxis':
                        case 'xAxisNumbers':
                        case 'yAxisNumbers':
                        case 'polarNumbers':
                        case 'enableTabindex':
                        case 'invertedColors':
                          n = 'false' !== t && !!t,
                          t !== n &&
                              o.warn(
                                  e + ' must be a Boolean. You provided ' + t +
                                  ' (' + typeof t + '), which we changed to ' +
                                  n + ' (' + typeof n + ').');
                          break;
                        case 'xAxisStep':
                        case 'yAxisStep':
                          n = parseFloat(t),
                          isFinite(t) ||
                              (n = 0,
                               o.warn(
                                   e + ' must be a number. You provided ' + t +
                                   ', which we changed to ' + n + '.'));
                          break;
                        case 'yAxisMinorSubdivisions':
                          n = Math.round(Math.min(Math.max(0, t), 5)),
                          t !== n &&
                              o.warn(
                                  'minorSubdivisions must be an integer between 0 and 5. You provided ' +
                                  t + ', which we changed to ' + n + '.');
                          break;
                        case 'xAxisArrowMode':
                        case 'yAxisArrowMode':
                          n = i[t],
                          n !== t &&
                              (n = i.NONE,
                               o.warn(
                                   'unknown AxisArrowMode. Allowed values are: \n' +
                                   r.keys(i).join('\n')));
                          break;
                        case 'xAxisLabel':
                        case 'yAxisLabel':
                          n = t,
                          'string' != typeof t &&
                              (n = '',
                               o.warn(
                                   e + ' must be a string. you provided a ' +
                                   typeof t + '.'));
                          break;
                        case 'randomSeed':
                          n = t,
                          'string' != typeof t &&
                              (n = '' + t,
                               o.warn(
                                   'randomSeed must be a string. you provided a ' +
                                   typeof t + '.'));
                          break;
                        case 'backgroundColor':
                          n = t,
                          'string' != typeof t &&
                              (n = '',
                               o.warn(
                                   e + ' must be a string. you provided a ' +
                                   typeof t + '.')),
                          n || (n = '#fff'), '#' !== n[0] && (n = '#' + n);
                          break;
                        case 'textColor':
                          n = t,
                          'string' != typeof t &&
                              (n = '',
                               o.warn(
                                   e + ' must be a string. you provided a ' +
                                   typeof t + '.')),
                          n || (n = '#000'), '#' !== n[0] && (n = '#' + n);
                          break;
                        case 'fontSize':
                          n = t,
                          'number' != typeof t &&
                              (n = parseInt(n, 10),
                               o.warn(
                                   'fontSize must be a number. Attempted to convert ' +
                                   t + ' to ' + n + '.'));
                          break;
                        case 'language':
                          n = t,
                          'string' != typeof t &&
                              (n = '',
                               o.warn(
                                   e + ' must be a string. you provided a ' +
                                   typeof t + '.')),
                          'undefined' != typeof Desmos &&
                              Desmos.supportedLanguages.indexOf(t) < 0 &&
                              'en' !== t &&
                              (n = 'en',
                               o.warn(
                                   t +
                                   ' is not currently an available language.'));
                          break;
                        default:
                          n = t
                      }
                      return n
                    };
                    e._validateSettings = function(e) {
                      var t = {}, r = !1;
                      for (var n in e)
                        this.stateProperties.indexOf(n) >= 0 ?
                            t[n] = u(n, e[n]) :
                            (o.warn('Invalid graph setting "' + n + '".'),
                             r = !0);
                      return r &&
                                 o.warn(
                                     'Available graph settings are: \n' +
                                     this.stateProperties.join('\n')),
                             t
                    }, e.getBackgroundColor = function() {
                      var e = a.normalizeColor(
                          this.config.backgroundColor || '#fff');
                      return this.config.invertedColors && '#ffffff' !== e ?
                          a.invertColor(e) :
                          e
                    }, e.getTextColor = function() {
                      var e = a.normalizeColor(this.config.textColor || '#000');
                      return this.config.invertedColors && '#000000' !== e ?
                          a.invertColor(e) :
                          e
                    }, e.setGraphSettings = function(e) {
                      var t = this._validateSettings(e);
                      for (var r in t)
                        t.hasOwnProperty(r) &&
                            ('projectorMode' === r || 'invertedColors' === r ||
                                     'fontSize' === r || 'language' === r ||
                                     'backgroundColor' === r ||
                                     'textColor' === r ?
                                 this.config.setProperty(r, t[r]) :
                                 this.setProperty(r, t[r]))
                    }
                  });
              return l
            });
          r('scroll_helpers', ['require'], function(e) {
            return {
              scrollVisible: function(e, t, r) {
                var n, i = t.height(), o = e.height(), s = e.offset(),
                       a = t.offset();
                if (!s || !a) return !1;
                var l = t[0].scrollTop, c = s.top + l - a.top, u = c - r,
                    d = o + c + r - i;
                return (n = u >= d ? Math.min(Math.max(l, d), u) :
                                     .5 * (u + d)) !== l &&
                    (t[0].scrollTop = n, t[0].scrollTop != l)
              }
            }
          });
          r('bugsnag', ['require', 'exports', 'tslib'], function(e, t, r) {
            'use strict';
            function n() {
              return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(
                  /[xy]/g, function(e) {
                    var t = 16 * Math.random() | 0;
                    return ('x' == e ? t : 3 & t | 8).toString(16)
                  })
            }
            function i() {
              return Desmos && Desmos.commit
            }
            function o() {
              var e = 'production';
              if (location && location.hostname) {
                var t = location.hostname, r = t.split('.'),
                    n = r.slice(0, r.length - 2).join('.');
                'desmos.com' === r.slice(r.length - 2).join('.') &&
                    (e = n && 'www' !== n ? n : 'production')
              }
              return e
            }
            function s(e) {
              if (!u) {
                var t = 0, r = n();
                u = e({
                  apiKey: '7f7807097671acbc4557e64bbf5eb529',
                  maxBreadcrumbs: 40,
                  appVersion: i(),
                  releaseStage: o(),
                  consoleBreadcrumbsEnabled: !1,
                  beforeSend: function(e) {
                    if (e.errorClass)
                      for (var n = 0, i = p; n < i.length; n++) {
                        var o = i[n];
                        if (-1 !== e.errorClass.indexOf(o))
                          return void e.ignore()
                      }
                    if (e.errorMessage)
                      for (var s = 0, a = p; s < a.length; s++) {
                        var o = a[s];
                        if (-1 !== e.errorMessage.indexOf(o))
                          return void e.ignore()
                      }
                    d && d(e),
                        e.isIgnored() ||
                        (t += 1, e.metaData.errorNumber = t,
                         e.metaData.pageLoadId = r)
                  }
                })
              }
            }
            function a(e, t) {
              u && u.notify(e, t)
            }
            function l(e, t, n, i) {
              if (t) {
                t = r.__assign({}, t);
                for (var o in t) try {
                    t[o] = JSON.stringify(t[o], null, 2)
                  } catch (e) {
                    t[o] = '[[could not stringify]]'
                  }
              }
              u && u.leaveBreadcrumb(e, t, n, i)
            }
            function c(e) {
              d = e
            }
            Object.defineProperty(t, '__esModule', {value: !0});
            var u, d, p = [
              'UnhandledRejection', 'lnrAppboy', 'socratic', 'MyAppGet',
              'SymBrowser_', 'mobincube_', '_avast_submit',
              'Cannot redefine property: googletag', 'jcarousel',
              'SyntaxError: Unexpected identifier \'script\'',
              '__gCrWeb.autofill.extractForms', 'BrowseITEXT',
              'Can\'t find variable: removeAllHighlights',
              'aAttribruteValue.parentNode.getAttribute', 'vid_mate_check',
              'GetImageTagSrcFromPoint',
              'Can\'t find variable: didEnterViewPort', 'tinyMCE is not defined'
            ];
            t.init = s, t.notify = a, t.leaveBreadcrumb = l,
            t.setBeforeSendCB = c
          });
          r('tours/trip',
            [
              'require', 'jquery', 'pjs', 'mathquill', 'scroll_helpers',
              'bugsnag'
            ],
            function(e) {
              'use strict';
              var t = e('jquery'), r = e('pjs'), n = e('mathquill'),
                  i = e('scroll_helpers'), o = e('bugsnag');
              return r({
                init: function(e) {
                  this.settings = e, this.__cachedStepName = null
                },
                ensureTripBlock: function() {
                  if (!this.$tripBlock) {
                    var e =
                            [
                              '<div class="trip-block">',
                              '<div class="trip-interior">',
                              '<a class="trip-close">&times;</a>',
                              '<div class="trip-content"></div>', '</div>',
                              '<div class="trip-arrow"></div>', '</div>'
                            ].join(''),
                        r = this, n = this.$tripBlock = t(e);
                    n.css({top: '-100px'}), t('body').append(n),
                        n.find('.trip-close').on('dcg-tap', function(e) {
                          e.preventDefault(), r.stop()
                        }), this.bindKeyEvents()
                  }
                },
                cleanup: function() {
                  return this.unbindKeyEvents(), this.hideTripBlock(), !1
                },
                bindKeyEvents: function() {
                  var e = this;
                  t(document).on({
                    'keydown.Trip': function(t) {
                      e.keyEvent.call(e, t)
                    }
                  })
                },
                unbindKeyEvents: function() {
                  t(document).off('keydown.Trip')
                },
                keyEvent: function(e) {
                  27 === e.which && this.stop()
                },
                stop: function() {
                  this.hideTripBlock(), this.settings.onTripStop()
                },
                exitTourBecauseOfError: function(e, t) {
                  var r = '', n = t;
                  do {
                    r = n.selector + r
                  } while (n = n.prevObject);
                  this.stop(),
                      o.notify(
                          'TourError: could not find $sel.offset()',
                          {metaData: {message: e, selector: r}})
                },
                showTripBlock: function(e) {
                  this.ensureTripBlock(),
                      'string' == typeof e.sel && (e.sel = t(e.sel)),
                      e.sel = e.sel.filter(':visible'),
                      e.scrollContainer &&
                      i.scrollVisible(e.sel, e.scrollContainer, 0);
                  var r = this.$tripBlock;
                  r.find('.trip-content').html(e.content),
                      r.toggleClass('trip-hidden', !!e.hidden);
                  var o = e.sel, s = o.outerWidth(), a = o.outerHeight(),
                      l = r.outerWidth(), c = r.outerHeight();
                  if (!o.offset())
                    return void (
                        this.__cachedMissingSelTime ?
                            Date.now() - this.__cachedMissingSelTime > 1e3 &&
                                (e.final ? this.stop() :
                                           this.exitTourBecauseOfError(
                                               e.content, o)) :
                            this.__cachedMissingSelTime = Date.now());
                  this.__cachedMissingSelTime = void 0,
                  r.removeClass('trip-e trip-s trip-w trip-n');
                  var u = 0;
                  switch (e.position) {
                    case 'e':
                      r.addClass('trip-e'), r.css({
                        left: o.offset().left + s + 10,
                        top: o.offset().top - (c - a) / 2
                      });
                      break;
                    case 's':
                      r.addClass('trip-s');
                      var d = o.offset().left + (s - l) / 2;
                      r.css({left: d, top: o.offset().top + a + 10}),
                          d + l > t(window).width() - 1 &&
                          (u = t(window).width() - 1 - d - l),
                          d < 1 && (u = 1 - d);
                      break;
                    case 'w':
                      r.addClass('trip-w'), r.css({
                        left: o.offset().left - (10 + l),
                        top: o.offset().top - (c - a) / 2
                      });
                      break;
                    default:
                      r.addClass('trip-n'), r.css({
                        left: o.offset().left + (s - l) / 2,
                        top: o.offset().top - 10 - c
                      })
                  }
                  r.find('.trip-interior')
                      .css('transform', 'translate(' + u + 'px, 0)'),
                      r.css({display: 'inline-block'}),
                      r.find('.trip-math:not(.dcg-mq-math-mode)')
                          .each(function() {
                            n.StaticMath(this)
                          })
                },
                fadeInTripBlock: function() {
                  this.ensureTripBlock();
                  var e = this.$tripBlock;
                  setTimeout(function() {
                    e.addClass('trip-is-loaded')
                  }, 0)
                },
                hideTripBlock: function() {
                  this.$tripBlock &&
                      this.$tripBlock.removeClass('trip-is-loaded')
                }
              })
            });
          r('tours/tour_manager', ['require', 'pjs', './trip'], function(e) {
            'use strict';
            var t = e('pjs'), r = e('./trip');
            return t(function(e, t) {
              e.init =
                  function() {
                this.tripManager =
                    new r({onTripStop: this.stopTour.bind(this)}),
                this.currentStep = void 0, this.currentTour = void 0
              },
              e._tripLoop =
                  function() {
                if (clearTimeout(this.__tripLoopTimeout), this.running) {
                  var e = this;
                  e._advanceTrip(),
                      e.__tripLoopTimeout = setTimeout(e._tripLoop.bind(e), 200)
                }
              },
              e._advanceTrip =
                  function() {
                var e = this.currentTour.update(), t = (new Date).getTime();
                if (e && this.currentStep &&
                    e.content !== this.currentStep.content) {
                  if (this.currentStep.delayBeforeExit) {
                    if (this.throttleTimer &&
                        t - this.throttleTimer <
                            this.currentStep.delayBeforeExit)
                      return;
                    if (!this.throttleTimer)
                      return void (this.throttleTimer = t)
                  }
                  e.delayBeforeEnter &&
                      (this.currentStep = e, this.throttleTimer = t)
                }
                if (!(e && this.currentStep &&
                      e.content === this.currentStep.content &&
                      this.throttleTimer &&
                      t - this.throttleTimer <
                          this.currentStep.delayBeforeEnter) &&
                    (this.throttleTimer = null, e && !e.doNotUpdate)) {
                  if (this.currentStep = e, e.final)
                    return void this.finishTour(e, 5);
                  this.tripManager.showTripBlock(e)
                }
              },
              e.updateNow = e._advanceTrip,
              e.startTour =
                  function(e) {
                this.running ||
                    (this.currentTour = e, this.running = !0, this._tripLoop(),
                     this.tripManager.fadeInTripBlock())
              },
              e.closingMsg =
                  '<b>__endingMessage__</b><br>This message will self-destruct in __seconds__...',
              e.finishTour = function(e, t) {
                clearTimeout(this.__tripLoopTimeout), this.running = !1;
                var r = this;
                if (t < 0) return void r.tripManager.stop();
                e.endingMsg &&
                    (e.content =
                         r.closingMsg.replace('__endingMessage__', e.endingMsg)
                             .replace('__seconds__', t)),
                    r.tripManager.showTripBlock(e), setTimeout(function() {
                      r.finishTour(e, t - 1)
                    }, 1e3)
              }, e.stopTour = function() {
                this.running = !1, this.currentStep = void 0,
                this.currentTour = void 0
              }
            })
          });
          r('lib/named-colors', ['require'], function(e) {
            'use strict';
            return {
              aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215],
                  aqua: [0, 255, 255], aquamarine: [127, 255, 212],
                  azure: [240, 255, 255], beige: [245, 245, 220],
                  bisque: [255, 228, 196], black: [0, 0, 0],
                  blanchedalmond: [255, 235, 205], blue: [0, 0, 255],
                  blueviolet: [138, 43, 226], brown: [165, 42, 42],
                  burlywood: [222, 184, 135], cadetblue: [95, 158, 160],
                  chartreuse: [127, 255, 0], chocolate: [210, 105, 30],
                  coral: [255, 127, 80], cornflowerblue: [100, 149, 237],
                  cornsilk: [255, 248, 220], crimson: [220, 20, 60],
                  cyan: [0, 255, 255], darkblue: [0, 0, 139],
                  darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11],
                  darkgray: [169, 169, 169], darkgreen: [0, 100, 0],
                  darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107],
                  darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47],
                  darkorange: [255, 140, 0], darkorchid: [153, 50, 204],
                  darkred: [139, 0, 0], darksalmon: [233, 150, 122],
                  darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139],
                  darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79],
                  darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211],
                  deeppink: [255, 20, 147], deepskyblue: [0, 191, 255],
                  dimgray: [105, 105, 105], dimgrey: [105, 105, 105],
                  dodgerblue: [30, 144, 255], firebrick: [178, 34, 34],
                  floralwhite: [255, 250, 240], forestgreen: [34, 139, 34],
                  fuchsia: [255, 0, 255], gainsboro: [220, 220, 220],
                  ghostwhite: [248, 248, 255], gold: [255, 215, 0],
                  goldenrod: [218, 165, 32], gray: [128, 128, 128],
                  green: [0, 128, 0], greenyellow: [173, 255, 47],
                  grey: [128, 128, 128], honeydew: [240, 255, 240],
                  hotpink: [255, 105, 180], indianred: [205, 92, 92],
                  indigo: [75, 0, 130], ivory: [255, 255, 240],
                  khaki: [240, 230, 140], lavender: [230, 230, 250],
                  lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0],
                  lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230],
                  lightcoral: [240, 128, 128], lightcyan: [224, 255, 255],
                  lightgoldenrodyellow: [250, 250, 210],
                  lightgray: [211, 211, 211], lightgreen: [144, 238, 144],
                  lightgrey: [211, 211, 211], lightpink: [255, 182, 193],
                  lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170],
                  lightskyblue: [135, 206, 250],
                  lightslategray: [119, 136, 153],
                  lightslategrey: [119, 136, 153],
                  lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224],
                  lime: [0, 255, 0], limegreen: [50, 205, 50],
                  linen: [250, 240, 230], magenta: [255, 0, 255],
                  maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170],
                  mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211],
                  mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113],
                  mediumslateblue: [123, 104, 238],
                  mediumspringgreen: [0, 250, 154],
                  mediumturquoise: [72, 209, 204],
                  mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112],
                  mintcream: [245, 255, 250], mistyrose: [255, 228, 225],
                  moccasin: [255, 228, 181], navajowhite: [255, 222, 173],
                  navy: [0, 0, 128], oldlace: [253, 245, 230],
                  olive: [128, 128, 0], olivedrab: [107, 142, 35],
                  orange: [255, 165, 0], orangered: [255, 69, 0],
                  orchid: [218, 112, 214], palegoldenrod: [238, 232, 170],
                  palegreen: [152, 251, 152], paleturquoise: [175, 238, 238],
                  palevioletred: [219, 112, 147], papayawhip: [255, 239, 213],
                  peachpuff: [255, 218, 185], peru: [205, 133, 63],
                  pink: [255, 192, 203], plum: [221, 160, 221],
                  powderblue: [176, 224, 230], purple: [128, 0, 128],
                  rebeccapurple: [102, 51, 153], red: [255, 0, 0],
                  rosybrown: [188, 143, 143], royalblue: [65, 105, 225],
                  saddlebrown: [139, 69, 19], salmon: [250, 128, 114],
                  sandybrown: [244, 164, 96], seagreen: [46, 139, 87],
                  seashell: [255, 245, 238], sienna: [160, 82, 45],
                  silver: [192, 192, 192], skyblue: [135, 206, 235],
                  slateblue: [106, 90, 205], slategray: [112, 128, 144],
                  slategrey: [112, 128, 144], snow: [255, 250, 250],
                  springgreen: [0, 255, 127], steelblue: [70, 130, 180],
                  tan: [210, 180, 140], teal: [0, 128, 128],
                  thistle: [216, 191, 216], tomato: [255, 99, 71],
                  turquoise: [64, 224, 208], violet: [238, 130, 238],
                  wheat: [245, 222, 179], white: [255, 255, 255],
                  whitesmoke: [245, 245, 245], yellow: [255, 255, 0],
                  yellowgreen: [154, 205, 50]
            }
          });
          r('lib/color-distance', ['require', 'underscore', 'lib/named-colors'],
            function(e) {
              'use strict';
              function t(e) {
                var t = [], i = e.toLowerCase();
                if ('rgb' === i.slice(0, 3)) try {
                    t = i.replace(/[^\d,]/g, '').split(',').slice(0, 3),
                    t = u.map(t, function(e) {
                      return parseInt(e, 10)
                    })
                  } catch (t) {
                    n(e)
                  }
                else if ('#' === i[0]) {
                  var o = /^#?([a-f\d])([a-f\d])([a-f\d])$/;
                  i = i.replace(o, function(e, t, r, n) {
                    return t + t + r + r + n + n
                  });
                  try {
                    t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/.exec(i)
                            .slice(1),
                    t = u.map(t, function(e) {
                      return parseInt(e, 16)
                    })
                  } catch (t) {
                    n(e)
                  }
                } else
                  t = d[i];
                return r(t) || n(e), {
                  R: t[0], G: t[1], B: t[2]
                }
              }
              function r(e) {
                return !!u.isArray(e) &&
                    (3 === e.length && u.every(e, function(e) {
                      return Number.isInteger(e) && e >= 0 && e <= 255
                    }))
              }
              function n(e) {
                throw new Error('Invalid color string: ' + e)
              }
              function i(e) {
                var t = e.R, r = e.G, n = e.B, i = [];
                return i[0] = .49 * t + .31 * r + .2 * n,
                       i[1] = .17697 * t + .8124 * r + .01063 * n,
                       i[2] = .01 * r + .99 * n, i = u.map(i, function(e) {
                         return e / .17697
                       }), {
                  X: i[0], Y: i[1], Z: i[2]
                }
              }
              function o(e) {
                var t = e.X, r = e.Y, n = e.Z, i = [];
                return i[0] = 116 * s(r / 100) - 16,
                       i[1] = 500 * (s(t / 95.047) - s(r / 100)),
                       i[2] = 200 * (s(r / 100) - s(n / 108.883)), {
                  L: i[0], a: i[1], b: i[2]
                }
              }
              function s(e) {
                var t = 6 / 29;
                return e > Math.pow(t, 3) ? Math.pow(e, 1 / 3) :
                                            e / (3 * t * t) + 4 / 29
              }
              function a(e, t) {
                var r = e.L, n = e.a, i = e.b, o = t.L, s = t.a, a = t.b,
                    l = r - o, c = Math.sqrt(n * n + i * i),
                    u = Math.sqrt(s * s + a * a), d = c - u, p = n - s,
                    h = i - a, f = Math.sqrt(p * p + h * h - d * d),
                    g = 1 + .045 * c, m = 1 + .015 * c, y = l / 1,
                    v = d / (1 * g), b = f / (1 * m);
                return Math.sqrt(y * y + v * v + b * b)
              }
              function l(e, r) {
                return a(o(i(t(e))), o(i(t(r))))
              }
              function c(e, t) {
                var r = u.map(t, function(t) {
                  return l(e, t)
                }), n = u.min(r);
                return t[r.indexOf(n)]
              }
              var u = e('underscore'), d = e('lib/named-colors');
              return {
                str2rgb: t, difference: l, closestColor: c
              }
            });
          r('core/math/evaluate-single-expression',
            [
              'require', 'exports', 'parser', 'core/math/builtinframe',
              'core/math/parsenode/constant', 'core/math/policy'
            ],
            function(e, t, r, n, i, o) {
              'use strict';
              function s(e, t) {
                if (/^\s*(\-|\+)?([0-9]+(\.[0-9]+)?)\s*$/.test(e))
                  return parseFloat(e);
                var s = Object.create(n);
                return s.trigAngleMultiplier = i(t ? Math.PI / 180 : 1),
                       +r.parse(e)
                            .tryGetConcreteTree(o.defaultPolicy, s)
                            .asValue()
              }
              Object.defineProperty(t, '__esModule', {value: !0}), t.default = s
            });
          r('lib/rounding', ['require', 'exports', 'core/math/distance'],
            function(e, t, r) {
              'use strict';
              function n(e, t) {
                if (!isFinite(e)) return e;
                if (!isFinite(t)) return t;
                var n = r.mean(e, t);
                if (e > 0 != t > 0) return 0;
                if (0 === e || 0 === t) return 0;
                var i = e > 0 ? 1 : -1,
                    o = Math.abs(e).toExponential().split('e'),
                    s = Math.abs(t).toExponential().split('e'), a = o[0],
                    l = s[0], c = o[1], u = s[1];
                if (u !== c)
                  return i *
                      Math.pow(10, Math.max(parseFloat(c), parseFloat(u)));
                if (a[0] !== l[0]) return parseFloat(n.toPrecision(1));
                for (var d = 1, p = 2;
                     p < Math.min(a.length, l.length) && (d++, a[p] === l[p]);
                     p++)
                  ;
                return parseFloat(n.toPrecision(d))
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.shortestDecimalBetween = n
            });
          r('lib/copy-properties', ['require', 'exports', 'core/lib/deepCopy'],
            function(e, t, r) {
              'use strict';
              function n(e) {
                var t = e.from, n = e.to, i = e.props;
                for (var o in i)
                  i[o] && t.hasOwnProperty(o) && (n[o] = r.default(t[o]))
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.copyProperties = n
            });
          r('graphing-calc/models/expression',
            [
              'require',
              'exports',
              'parser',
              'core/math/builtinframe',
              'tslib',
              'core/lib/dragmode',
              'core/types/slider-loop-modes',
              'core/types/styles',
              'core/types/label-sizes',
              'core/types/label-orientations',
              'core/math/evaluate-single-expression',
              'lib/rounding',
              'core/lib/deepCopy',
              'lib/copy-properties',
              './abstract-item',
              './list',
              'underscore',
              'core/math/expression-types',
              'core/lib/label',
              'core/lib/number-to-latex',
              'core/math/sliders',
              'core/lib/number-to-latex',
              'core/graphing-calc/json/expression',
              'core/math/distribution-spec',
              'core/math/policyGraphing'
            ],
            function(
                e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g, m, y, v, b, x,
                w, _, E, S) {
              'use strict';
              function M(e) {
                var t = e.formula;
                return !!t &&
                    (e.controller.isDecimalToFractionEnabled() &&
                     t.hasOwnProperty('constant_value') &&
                     v.canDisplayAsFraction(t.constant_value))
              }
              function I(e) {
                return !!e.isGraphable
              }
              function k(e) {
                var t = e.formula;
                if (!t) return !1;
                var r = t.is_evaluable && t.zero_values &&
                    t.zero_values.length > 0 &&
                    'boolean' != typeof t.zero_values[0].val,
                    n = M(e) && Fe(e);
                return r || n
              }
              function C(e) {
                var t = e.formula;
                return k(e) ? t.zero_values && t.zero_values.length ?
                              t.zero_values[0].val :
                              t.constant_value :
                    M(e)    ? e.formula.constant_value :
                              NaN
              }
              function T(e) {
                var t = e.formula.ttest_results;
                if (t && isFinite(t.lessThan)) return {
                    lessThan: t.lessThan, greaterThan: t.greaterThan,
                        notEqual: t.notEqual
                  }
              }
              function L(e) {
                var t = e.formula.stats_results;
                if (t && isFinite(t.min)) return {
                    min: t.min, q1: t.q1, median: t.median, q3: t.q3, max: t.max
                  }
              }
              function P(e, t) {
                if (!isFinite(t)) return e;
                var r = /=(.*?)([-\.0-9]+)/, n = e.match(r);
                if (!n) return e;
                if (parseFloat(n[2]) === t) return e;
                var i = w.numberToDecimalString(t);
                return e.replace(r, '=$1' + i)
              }
              function A(e) {
                return '' ===
                    ((e.latex || '') + (e.label || '')).split(' ').join('')
              }
              function D(e) {
                var t = e.dragMode === o.DragMode.AUTO ?
                    e.formula.default_drag_mode :
                    e.dragMode;
                e.reconciledDragMode =
                    o.reconcileDragMode(t, e.formula.move_strategy),
                e.interactiveLabel &&
                    e.reconciledDragMode !== o.DragMode.NONE && it(e, !1)
              }
              function O(e, t, r) {
                if (!e.sliderExists) return NaN;
                var n = H(e), i = Y(e), o = X(e);
                if (r && void 0 !== r.overwriteStep && (o = r.overwriteStep),
                    t = x.constrainSliderValueLikeEvaluator({
                      target: t,
                      hardMin: e.slider.hardMin ? n : void 0,
                      hardMax: e.slider.hardMax ? i : void 0,
                      step: o
                    }),
                    !r || !r.ignoreSoftLimits) {
                  if (!e.slider.hardMin && t < n) return n;
                  if (!e.slider.hardMax && t > i) return i
                }
                return t
              }
              function F(e, t) {
                if (!e.sliderExists) return NaN;
                var r = $(e), n = H(e), i = Y(e), o = X(e),
                    s = o || (i - n) / 20, a = 0;
                switch (t) {
                  case 'min':
                    return O(e, n);
                  case 'max':
                    return O(e, i);
                  case 'up':
                    a = 1;
                    break;
                  case 'down':
                    a = -1;
                    break;
                  case 'bigup':
                    a = 5;
                    break;
                  case 'bigdown':
                    a = -5;
                    break;
                  default:
                    return t
                }
                for (var l = r, c = 0; c < 20; c++) {
                  var u = c / 3 * s, d = r;
                  if (a > 0)
                    (r = O(e, l + u, {overwriteStep: s})) > d && (a -= 1);
                  else {
                    if (!(a < 0)) break;
                    (r = O(e, l - u, {overwriteStep: s})) < d && (a += 1)
                  }
                }
                return r
              }
              function q(e, t) {
                if (e.sliderExists) {
                  e.slider.isPlaying && ke(e, !1);
                  var r = O(e, t, {ignoreSoftLimits: !0});
                  e.latex = P(e.latex, r)
                }
              }
              function N(e, t) {
                if (e.sliderExists) {
                  e.slider.isPlaying && ke(e, !1), Ce(e);
                  var r = F(e, t);
                  e.latex = P(e.latex, r)
                }
              }
              function R(e, t) {
                if (e.sliderExists) {
                  e.slider.isPlaying && ke(e, !1);
                  var r = O(e, t);
                  e.latex = P(e.latex, r)
                }
              }
              function B(e, t) {
                if (e.sliderExists) {
                  var r = e.sliderLastTickTime;
                  if (e.sliderLastTickTime = t, void 0 !== r) {
                    var n = t - r, i = H(e), o = Y(e), a = X(e),
                        l = e.slider.animationPeriod, c = e.slider.loopMode;
                    if (isNaN(e.sliderAnimationTargetValue)) {
                      var u = $(e);
                      isNaN(u) || (e.sliderAnimationTargetValue = u)
                    }
                    var p = a ? a / 2 : 0;
                    if (c === s.SliderLoopMode.LOOP_FORWARD_REVERSE)
                      e.sliderAnimationTargetValue >= o ?
                          Ie(e, {playDirection: -1}) :
                          e.sliderAnimationTargetValue <= i &&
                              Ie(e, {playDirection: 1});
                    else if (c === s.SliderLoopMode.LOOP_FORWARD)
                      Ie(e, {playDirection: 1}),
                          e.sliderAnimationTargetValue >= o + p &&
                          (e.sliderAnimationTargetValue = i - p);
                    else if (c === s.SliderLoopMode.PLAY_ONCE)
                      Ie(e, {playDirection: 1});
                    else {
                      if (c !== s.SliderLoopMode.PLAY_INDEFINITELY)
                        throw new Error('Unexpected slider loop mode: ' + c);
                      Ie(e, {playDirection: 1})
                    }
                    isFinite(n) || (n = 0);
                    var h, f;
                    c === s.SliderLoopMode.PLAY_INDEFINITELY ?
                        (h = n / (l / 4), a && (h *= a),
                         e.sliderAnimationTargetValue += h,
                         f = e.sliderAnimationTargetValue,
                         a ||
                             (f = d.shortestDecimalBetween(
                                  f - .1 * h, f + .1 * h)),
                         f = O(e, f, {ignoreSoftLimits: !0}),
                         e.latex = P(e.latex, f)) :
                        (n = Math.min(n, l / 10), h = (o - i) * n / l,
                         e.sliderAnimationTargetValue +=
                         h * e.slider.playDirection,
                         e.sliderAnimationTargetValue = Math.max(
                             i - p,
                             Math.min(o + p, e.sliderAnimationTargetValue)),
                         f = e.sliderAnimationTargetValue,
                         a ||
                             (f = d.shortestDecimalBetween(
                                  f - .1 * h, f + .1 * h)),
                         f = O(e, f), e.latex = P(e.latex, f))
                  }
                }
              }
              function j(e, t) {
                e.formula = t, e.loading = !1, e.error = t.error ? t.error : '',
                e.isGraphable = t.is_graphable, e.dependent = t.assignment,
                e.isTableable = t.is_tableable, e.unresolved = !1,
                t.is_single_identifier ? e.missingVariables = [] :
                                         e.missingVariables = t.variables || [],
                e.__workerSliderLatex = t.raw_slider_latex,
                t.is_slider ?
                    (e.__workerSliderValue = t.constant_value,
                     e.__workerSliderMin = t.slider_min_number,
                     e.__workerSliderMax = t.slider_max_number,
                     e.__workerSliderStep = t.slider_step_number,
                     e.__workerSliderMinValid = t.slider_min_valid,
                     e.__workerSliderMaxValid = t.slider_max_valid,
                     e.__workerSliderStepValid = t.slider_step_valid,
                     e.sliderExists ||
                         (e.sliderAnimationTargetValue = $(e),
                          e.sliderDragging = !1, e.sliderExists = !0)) :
                    e.sliderExists = !1,
                e.__workerDomainMin = t.domain_min_number,
                e.__workerDomainMax = t.domain_max_number,
                e.__workerDomainMinValid = t.domain_min_valid,
                e.__workerDomainMaxValid = t.domain_max_valid,
                e.__workerCDFMinValid = t.cdf_min_valid,
                e.__workerCDFMaxValid = t.cdf_max_valid,
                e.__workerFillOpacityValid = t.fill_opacity_valid,
                e.__workerLineWidthValid = t.line_width_valid,
                e.__workerCDFEvaluation = t.cdf_evaluation;
                var r = {};
                t.is_regression &&
                    (r = t.regression.parameters,
                     e.residualVariable = t.regression.residualVariable,
                     e.controller.areLogModeRegressionsForced() &&
                         (e.isLogModeRegression = !0)),
                    m.isEqual(e.regressionParameters, r) ||
                    (e.regressionParameters = r)
              }
              function V(e) {
                var t = g.getParentFolderModel(e);
                t&& t.hidden ? e.shouldGraph = !1 :
                    e.formula.expression_type && ct(e) ?
                               e.shouldGraph = !1 :
                               e.shouldGraph = !e.hidden
              }
              function U(e) {
                if (!e.sliderExists || e.latex !== e.__workerSliderLatex)
                  return void (e.cachedDisplayLatex = {
                    storedLatex: e.latex,
                    valueLatex: e.latex
                  });
                var t = e.latex;
                if (e.cachedDisplayLatex.storedLatex !== t)
                  return void (e.cachedDisplayLatex = {
                    storedLatex: e.latex,
                    valueLatex: e.latex
                  });
                if (isFinite(e.__workerSliderValue)) {
                  var r = e.controller.getFocusLocation();
                  r && 'expression' === r.type && r.id === e.id ||
                      (e.cachedDisplayLatex.valueLatex =
                           P(e.latex, e.__workerSliderValue))
                }
              }
              function z(e) {
                return e.cachedDisplayLatex.valueLatex
              }
              function G(e) {
                var t = v.value(e);
                return t.superscript && t.mantissa ?
                    t.mantissa + '^{' + t.superscript + '}' :
                    t.string
              }
              function K(e) {
                return e.slider.hardMin ? e.slider.min : G(H(e))
              }
              function W(e) {
                return e.slider.hardMax ? e.slider.max : G(Y(e))
              }
              function H(e) {
                if (e.slider.hardMin)
                  return isFinite(e.__workerSliderMin) ? e.__workerSliderMin :
                                                         NaN;
                var t = e.controller.isDegreeMode(),
                    r = u.default(e.slider.min, t), n = $(e), i = X(e),
                    o = e.slider.hardMax ? e.__workerSliderMax : void 0,
                    s = -10;
                if (r < s && (s = r), n < s && (s = n), o < s && (s = o), i) {
                  var a = x.constrainSliderValueLikeEvaluator(
                      {target: s, hardMin: void 0, hardMax: o, step: i});
                  s = a <= s ? a : a - i
                }
                return s
              }
              function Y(e) {
                if (e.slider.hardMax)
                  return isFinite(e.__workerSliderMax) ? e.__workerSliderMax :
                                                         NaN;
                var t = e.controller.isDegreeMode(),
                    r = u.default(e.slider.max, t), n = $(e), i = X(e),
                    o = e.slider.hardMin ? e.__workerSliderMin : void 0, s = 10;
                if (r > s && (s = r), n > s && (s = n), o > s && (s = o), i) {
                  var a = x.constrainSliderValueLikeEvaluator(
                      {target: s, hardMin: o, hardMax: void 0, step: i});
                  s = a >= s ? a : a + i
                }
                return s
              }
              function X(e) {
                return e.__workerSliderStep
              }
              function $(e) {
                return e.latex !== e.__workerSliderLatex ? Te(e.latex) :
                    isFinite(e.__workerSliderValue) ? e.__workerSliderValue :
                                                      NaN
              }
              function Q(e) {
                return !!e.slider.isPlaying &&
                    (e.slider.loopMode === s.SliderLoopMode.PLAY_ONCE &&
                     $(e) >= Y(e))
              }
              function Z(e, t) {
                return !!e.formula.viz_valids && !!e.formula.viz_valids[t]
              }
              function J(e, t) {
                return e.vizProps[t]
              }
              function ee(e, t, r) {
                var n;
                e.vizProps = i.__assign(
                    i.__assign({}, e.vizProps), (n = {}, n[t] = r, n))
              }
              function te(e, t) {
                return e.clickableInfo[t]
              }
              function re(e, t) {
                return 'assignment' === t ?
                    !!e.formula.clickableinfo_identifier_valid :
                    'expression' === t &&
                        !!e.formula.clickableinfo_expression_valid
              }
              function ne(e) {
                return e.formula.clickableinfo_latex
              }
              function ie(e) {
                return e.formula.clickableinfo_identifier
              }
              function oe(e, t, r) {
                var n;
                e.clickableInfo = i.__assign(
                    i.__assign({}, e.clickableInfo), (n = {}, n[t] = r, n))
              }
              function se(e) {
                return e.clickableInfo.enabled && Yt(e)
              }
              function ae(e) {
                return !!e.__workerNeedsDotplotXMode
              }
              function le(e) {
                return !!e.__workerSliderMinValid
              }
              function ce(e) {
                return !!e.__workerSliderMaxValid
              }
              function ue(e) {
                return !!e.__workerSliderStepValid
              }
              function de(e) {
                return isFinite(e.__workerSampledDomainMin) ?
                                                    e.__workerSampledDomainMin :
                    isFinite(e.__workerDomainMin) ? e.__workerDomainMin :
                                                    NaN
              }
              function pe(e) {
                return isFinite(e.__workerSampledDomainMax) ?
                                                    e.__workerSampledDomainMax :
                    isFinite(e.__workerDomainMax) ? e.__workerDomainMax :
                                                    NaN
              }
              function he(e) {
                return !!e.__workerDomainMinValid
              }
              function fe(e) {
                return !!e.__workerDomainMaxValid
              }
              function ge(e, t) {
                var r = e.cachedViewState;
                if (t.stripDefaults && '' === e.parametricDomain.min &&
                            '' === e.parametricDomain.max ||
                        (r = i.__assign(i.__assign({}, r), {
                          domain: {
                            min: '' === e.parametricDomain.min ?
                                '0' :
                                e.parametricDomain.min,
                            max: '' === e.parametricDomain.max ?
                                '1' :
                                e.parametricDomain.max
                          }
                        })),
                    t.stripDefaults)
                  return _.stripDefaults(r);
                if (void 0 === r.points || void 0 === r.lines ||
                    void 0 === r.fill) {
                  var n = p.default(r);
                  return void 0 === n.points && delete n.points,
                         void 0 === n.lines && delete n.lines,
                         void 0 === n.fill && delete n.fill, n
                }
                return r
              }
              function me(e) {
                var t = e.cachedViewState;
                t && t.folderId === e.folderId && t.color === e.color &&
                        t.latex === e.latex &&
                        t.parametricDomain === e.parametricDomain &&
                        t.fillOpacity === e.fillOpacity &&
                        t.lineWidth === e.lineWidth &&
                        t.polarDomain === e.polarDomain &&
                        t.showLabel === e.showLabel && t.cdf === e.cdf &&
                        t.vizProps === e.vizProps &&
                        t.clickableInfo === e.clickableInfo &&
                        t.label === e.label && t.hidden === e.hidden &&
                        t.secret === e.secret && t.fill === e.fill &&
                        t.points === e.points && t.lines === e.lines &&
                        t.lineStyle === e.lineStyle &&
                        t.pointStyle === e.pointStyle &&
                        t.dragMode === e.dragMode &&
                        t.labelSize === e.labelSize &&
                        t.labelOrientation === e.labelOrientation &&
                        t.verticalLabel === e.verticalLabel &&
                        t.suppressTextOutline === e.suppressTextOutline &&
                        t.interactiveLabel === e.interactiveLabel &&
                        t.editableLabelMode === e.editableLabelMode &&
                        t.residualVariable === e.residualVariable &&
                        t.regressionParameters === e.regressionParameters &&
                        t.isLogModeRegression === e.isLogModeRegression &&
                        t.displayEvaluationAsFraction ===
                            e.displayEvaluationAsFraction &&
                        t.slider === e.slider ||
                    (e.cachedViewState = {
                      type: e.type,
                      id: e.id,
                      folderId: e.folderId,
                      color: e.color,
                      latex: e.latex,
                      parametricDomain: e.parametricDomain,
                      fillOpacity: e.fillOpacity,
                      lineWidth: e.lineWidth,
                      polarDomain: e.polarDomain,
                      showLabel: e.showLabel,
                      cdf: e.cdf,
                      vizProps: e.vizProps,
                      clickableInfo: e.clickableInfo,
                      label: e.label,
                      hidden: e.hidden,
                      secret: e.secret,
                      points: e.points,
                      lines: e.lines,
                      lineStyle: e.lineStyle,
                      pointStyle: e.pointStyle,
                      fill: e.fill,
                      dragMode: e.dragMode,
                      labelSize: e.labelSize,
                      labelOrientation: e.labelOrientation,
                      verticalLabel: e.verticalLabel,
                      suppressTextOutline: e.suppressTextOutline,
                      interactiveLabel: e.interactiveLabel,
                      editableLabelMode: e.editableLabelMode,
                      residualVariable: e.residualVariable,
                      regressionParameters: e.regressionParameters,
                      isLogModeRegression: e.isLogModeRegression,
                      displayEvaluationAsFraction:
                          e.displayEvaluationAsFraction,
                      slider: e.slider
                    })
              }
              function ye(e, t) {
                t && Ce(e), e.draggingOnGraphpaper = t
              }
              function ve(e) {
                var t = e.memoizedUndoRedoStateParams, r = e.cachedViewState,
                    n = e.preTransientState;
                if (!t || t.viewState !== r || t.preTransientState !== n) {
                  e.memoizedUndoRedoStateParams = {
                    viewState: r,
                    preTransientState: n
                  };
                  var o;
                  o = n ? i.__assign(i.__assign({}, r), {
                    latex: n.latex,
                    slider: i.__assign(i.__assign({}, r.slider), n.slider)
                  }) :
                          i.__assign({}, r),
                  delete o.regressionParameters, delete o.residualVariable,
                  e.cachedUndoRedoState = o
                }
              }
              function be(e, t) {
                var r = p.default(_.inflateDefaults(e));
                return i.__assign(
                    i.__assign(i.__assign({}, r), f.DEFAULTS(t)), {
                      loading: !0,
                      labelDropdownOpen: !1,
                      formula: {error: void 0},
                      missingVariables: [],
                      error: void 0,
                      unresolved: !1,
                      color: r.color || t.getNextColor(),
                      fill: r.fill,
                      points: r.points,
                      lines: r.lines,
                      pointStyle: r.pointStyle,
                      lineStyle: r.lineStyle,
                      displayEvaluationAsFraction:
                          r.displayEvaluationAsFraction,
                      shouldGraph: void 0,
                      sliderDragging: void 0,
                      sliderAnimationTargetValue: void 0,
                      sliderLastTickTime: void 0,
                      draggingOnGraphpaper: !1,
                      cachedUndoRedoState: void 0,
                      cachedParsableState: void 0,
                      cachedViewState: void 0,
                      cachedDisplayLatex: {storedLatex: '', valueLatex: ''}
                    })
              }
              function xe(e) {
                var t = g.getParentFolderModel(e), r = !(!t || !t.hidden),
                    n = e.cachedViewState, i = e.index, o = e.showLabel && !r,
                    s = e.shouldGraph, a = e.slider.hardMin ? e.slider.min : '',
                    l = e.slider.hardMax ? e.slider.max : '', c = e.slider.step,
                    u = e.memoizedParsableStateParams;
                if (!u || u.viewState !== n || u.index !== i ||
                    u.showLabel !== o || u.shouldGraph !== s ||
                    u.polarDomainMin !== e.polarDomain.min ||
                    u.polarDomainMax !== e.polarDomain.max ||
                    u.fillOpacity !== e.fillOpacity ||
                    u.lineWidth !== e.lineWidth ||
                    u.parametricDomainMin !== e.parametricDomain.min ||
                    u.parametricDomainMax !== e.parametricDomain.max ||
                    u.sliderMin !== a || u.sliderMax !== l ||
                    u.sliderStep !== c) {
                  e.memoizedParsableStateParams = {
                    viewState: n,
                    index: i,
                    polarDomainMin: e.polarDomain.min,
                    polarDomainMax: e.polarDomain.max,
                    fillOpacity: e.fillOpacity,
                    lineWidth: e.lineWidth,
                    parametricDomainMin: e.parametricDomain.min,
                    parametricDomainMax: e.parametricDomain.max,
                    sliderMin: a,
                    sliderMax: l,
                    sliderStep: c,
                    showLabel: o,
                    shouldGraph: s
                  };
                  var d = _.computeParsableState(n);
                  d.index = i, d.showLabel = o, d.shouldGraph = s,
                  e.cachedParsableState = d
                }
              }
              function we(e, t) {
                t(e.latex), e.residualVariable && t(e.residualVariable)
              }
              function _e(e) {
                var t =
                    e.sliderExists && (e.slider.isPlaying || e.sliderDragging);
                e.draggingOnGraphpaper || t ?
                    e.preTransientState || (e.preTransientState = {
                      latex: e.latex,
                      slider: {
                        min: e.slider.min,
                        max: e.slider.max,
                        playDirection: e.slider.playDirection
                      }
                    }) :
                    delete e.preTransientState,
                    e.sliderExists && e.slider.isPlaying ||
                    (e.sliderLastTickTime = void 0),
                    f.updateIsHiddenFromUI(e), V(e), D(e), me(e), ve(e), xe(e),
                    U(e)
              }
              function Ee(e, t) {
                h.copyProperties({
                  from: t,
                  to: e,
                  props: {
                    id: !1,
                    type: !1,
                    color: !0,
                    folderId: !0,
                    latex: !0,
                    polarDomain: !0,
                    parametricDomain: !0,
                    showLabel: !0,
                    label: !0,
                    cdf: !0,
                    vizProps: !0,
                    clickableInfo: !0,
                    hidden: !0,
                    secret: !0,
                    points: !0,
                    lines: !0,
                    lineStyle: !0,
                    pointStyle: !0,
                    fill: !0,
                    fillOpacity: !0,
                    lineWidth: !0,
                    dragMode: !0,
                    labelSize: !0,
                    labelOrientation: !0,
                    verticalLabel: !0,
                    suppressTextOutline: !0,
                    interactiveLabel: !0,
                    editableLabelMode: !0,
                    residualVariable: !0,
                    regressionParameters: !0,
                    isLogModeRegression: !0,
                    displayEvaluationAsFraction: !0,
                    slider: !0
                  }
                })
              }
              function Se(e, t) {
                t ? Ie(e, {hardMin: !0, min: t}) :
                    Ie(e, {hardMin: !1, min: '-10'})
              }
              function Me(e, t) {
                t ? Ie(e, {hardMax: !0, max: t}) :
                    Ie(e, {hardMax: !1, max: '10'})
              }
              function Ie(e, t) {
                e.slider = i.__assign(i.__assign({}, e.slider), t)
              }
              function ke(e, t) {
                if (e && e.sliderExists) {
                  e.slider.isPlaying !== t &&
                      (Ie(e, {isPlaying: t}),
                       t && (Ce(e), e.sliderAnimationTargetValue = $(e)))
                }
              }
              function Ce(e) {
                if (!e.slider.hardMin) {
                  var t = b.default(H(e));
                  t !== e.slider.min && Ie(e, {min: t})
                }
                if (!e.slider.hardMax) {
                  var r = b.default(Y(e));
                  r !== e.slider.max && Ie(e, {max: r})
                }
              }
              function Te(e) {
                var t = r.parse(e);
                if ('Assignment' !== t.type) return NaN;
                if ('Constant' !== t._expression.type) return NaN;
                if (!S.PolicyGraphing.validLHS(t._symbol)) return NaN;
                if (n[t._symbol]) return NaN;
                var i = t._expression.asValue();
                return 'number' == typeof i ? i : NaN
              }
              function Le(e, t) {
                var r = Te(t);
                if (isFinite(r)) {
                  var n = x.determineWhichLimitsAreCompatibleWithValue({
                    target: r,
                    step: X(e),
                    hardMin: e.slider.hardMin ? H(e) : void 0,
                    hardMax: e.slider.hardMax ? Y(e) : void 0
                  });
                  n.min || Ie(e, {hardMin: !1, min: '-10'}),
                      n.max || Ie(e, {hardMax: !1, max: '10'}),
                      n.step || Ie(e, {step: ''})
                }
                e.latex = t
              }
              function Pe(e, t) {
                Ie(e, {loopMode: t, playDirection: 1}),
                    t === s.SliderLoopMode.PLAY_INDEFINITELY &&
                    Ie(e, {hardMin: !1, hardMax: !1, min: '', max: ''}),
                    e.sliderAnimationTargetValue = H(e)
              }
              function Ae(e, t) {
                t && Ce(e), e.sliderDragging = t
              }
              function De(e, t) {
                Ie(e, {step: t})
              }
              function Oe(e, t) {
                Ie(e, {animationPeriod: t})
              }
              function Fe(e) {
                return e.displayEvaluationAsFraction
              }
              function qe(e, t) {
                e.displayEvaluationAsFraction = t
              }
              function Ne(e, t) {
                e.label = t
              }
              function Re(e, t) {
                e.showLabel = t
              }
              function Be(e, t) {
                e.polarDomain =
                    i.__assign(i.__assign({}, e.polarDomain), {min: t})
              }
              function je(e, t) {
                e.parametricDomain =
                    i.__assign(i.__assign({}, e.parametricDomain), {min: t})
              }
              function Ve(e, t) {
                e.polarDomain =
                    i.__assign(i.__assign({}, e.polarDomain), {max: t})
              }
              function Ue(e, t) {
                e.parametricDomain =
                    i.__assign(i.__assign({}, e.parametricDomain), {max: t})
              }
              function ze(e, t) {
                e.isLogModeRegression = t
              }
              function Ge(e, t) {
                e.color = t
              }
              function Ke(e, t) {
                e.fill = t
              }
              function We(e, t) {
                e.fillOpacity !== t && (e.fillOpacity = t)
              }
              function He(e, t) {
                e.lineWidth !== t && (e.lineWidth = t)
              }
              function Ye(e, t) {
                e.labelDropdownOpen = t
              }
              function Xe(e, t) {
                e.dragMode !== t &&
                    (e.dragMode = t,
                     t !== o.DragMode.NONE &&
                         (e.pointStyle = a.PointStyle.POINT))
              }
              function $e(e, t) {
                e.points = t
              }
              function Qe(e, t) {
                e.pointStyle !== t &&
                    (e.pointStyle = t,
                     t !== a.PointStyle.POINT && (e.dragMode = o.DragMode.NONE))
              }
              function Ze(e, t) {
                e.lines = t
              }
              function Je(e, t) {
                e.lineStyle !== t && (e.lineStyle = t)
              }
              function et(e, t) {
                e.labelSize = t
              }
              function tt(e, t) {
                e.labelOrientation = t
              }
              function rt(e, t) {
                e.verticalLabel = t
              }
              function nt(e, t) {
                e.suppressTextOutline = t
              }
              function it(e, t) {
                e.interactiveLabel = t
              }
              function ot(e, t) {
                e.editableLabelMode = t
              }
              function st(e) {
                return e.editableLabelMode
              }
              function at(e) {
                var t = e.editableLabelMode;
                return t === _.EditableLabelMode.Math ||
                    t === _.EditableLabelMode.Text
              }
              function lt(e, t) {
                e.hidden = t,
                !t && ct(e) && (e.lines = e.points = e.fill = void 0)
              }
              function ct(e) {
                var t = e.points, r = e.lines, n = e.fill,
                    i = y.getReconciledExpressionProps(
                        e.formula.expression_type,
                        {points: t, lines: r, fill: n});
                return !i.points && !i.lines && !i.fill
              }
              function ut(e) {
                return yt(e) || vt(e)
              }
              function dt(e) {
                return e.polarDomain.min
              }
              function pt(e) {
                return e.polarDomain.max
              }
              function ht(e) {
                return e.parametricDomain.min
              }
              function ft(e) {
                return e.parametricDomain.max
              }
              function gt(e) {
                return !!e.sliderExists
              }
              function mt(e) {
                return e.formula.expression_type === y.ExpressionType.POLYGON
              }
              function yt(e) {
                return e.formula.expression_type === y.ExpressionType.PARAMETRIC
              }
              function vt(e) {
                return e.formula.expression_type === y.ExpressionType.POLAR
              }
              function bt(e) {
                return e.formula.expression_type ===
                    y.ExpressionType.SINGLE_POINT
              }
              function xt(e) {
                return e.formula.expression_type === y.ExpressionType.POINT_LIST
              }
              function wt(e) {
                return e.formula.expression_type ===
                    y.ExpressionType.POINT_LIST ||
                    e.formula.expression_type === y.ExpressionType.SINGLE_POINT
              }
              function _t(e) {
                var t = Pt(e);
                return !(
                    !t || 'visualization' !== t.type || 'boxplot' !== t.symbol)
              }
              function Et(e) {
                var t = Pt(e);
                return !(
                    !t || 'visualization' !== t.type || 'dotplot' !== t.symbol)
              }
              function St(e) {
                var t = Pt(e);
                return !(
                    !t || 'visualization' !== t.type ||
                    'histogram' !== t.symbol)
              }
              function Mt(e) {
                return _t(e) || Et(e) || St(e)
              }
              function It(e) {
                return e.formula.expression_type === y.ExpressionType.TTEST
              }
              function kt(e) {
                return e.formula.expression_type === y.ExpressionType.STATS
              }
              function Ct(e) {
                return !!Pt(e)
              }
              function Tt(e) {
                var t = Pt(e);
                return !(!t || 'distribution' !== t.type)
              }
              function Lt(e) {
                var t = e.formula;
                return !!t && !!t.is_discrete_distribution
              }
              function Pt(e) {
                if (e.controller.areDistributionsEnabled() && e.latex)
                  return e.cachedParseToplevelFunction &&
                                 e.cachedParseToplevelFunction.latex ===
                                     e.latex ||
                             (e.cachedParseToplevelFunction = {
                               latex: e.latex,
                               spec: E.parseToplevelFunction(e.latex)
                             }),
                         e.cachedParseToplevelFunction.spec
              }
              function At(e) {
                return Dt(e) && Tt(e)
              }
              function Dt(e) {
                return !!e.formula.expression_type
              }
              function Ot(e) {
                return !!e.formula.is_concrete_list
              }
              function Ft(e) {
                return !!At(e) && (!Ot(e) && e.cdf.show)
              }
              function qt(e) {
                return e.cdf.min
              }
              function Nt(e) {
                return e.cdf.max
              }
              function Rt(e) {
                var t = e.formula.cdf_min_default;
                return t === -1 / 0 ? '-\\infty' :
                    isFinite(t)     ? t + '' :
                                      '-\\infty'
              }
              function Bt(e) {
                var t = e.formula.cdf_max_default;
                return t === 1 / 0 ? '\\infty' :
                    isFinite(t)    ? t + '' :
                                     '\\infty'
              }
              function jt(e, t) {
                e.cdf = i.__assign(i.__assign({}, e.cdf), {show: t})
              }
              function Vt(e, t) {
                e.cdf = i.__assign(i.__assign({}, e.cdf), {min: t})
              }
              function Ut(e, t) {
                e.cdf = i.__assign(i.__assign({}, e.cdf), {max: t})
              }
              function zt(e) {
                return !1 !== e.__workerCDFMinValid
              }
              function Gt(e) {
                return !1 !== e.__workerCDFMaxValid
              }
              function Kt(e) {
                return !1 !== e.__workerFillOpacityValid
              }
              function Wt(e) {
                return !1 !== e.__workerLineWidthValid
              }
              function Ht(e) {
                return isFinite(e.__workerCDFEvaluation) ?
                    e.__workerCDFEvaluation :
                    0
              }
              function Yt(e) {
                return !!y.isClickableExpressionType(
                           e.formula.expression_type) &&
                    (!e.reconciledDragMode ||
                     e.reconciledDragMode === o.DragMode.NONE)
              }
              function Xt(e) {
                e.showLabel = _.DEFAULTS.showLabel, e.label = _.DEFAULTS.label,
                e.hidden = _.DEFAULTS.hidden, e.dragMode = _.DEFAULTS.dragMode,
                e.fill = _.DEFAULTS.fill,
                e.fillOpacity = _.DEFAULTS.fillOpacity,
                e.lineWidth = _.DEFAULTS.lineWidth,
                e.points = _.DEFAULTS.points,
                e.pointStyle = _.DEFAULTS.pointStyle,
                e.lines = _.DEFAULTS.lines, e.lineStyle = _.DEFAULTS.lineStyle,
                e.polarDomain = _.DEFAULTS.polarDomain,
                e.parametricDomain = _.DEFAULTS.parametricDomain,
                e.slider = _.SLIDER_DEFAULTS, e.latex = '',
                e.labelSize = l.LabelSize.MEDIUM,
                e.labelOrientation = c.LabelOrientation.DEFAULT,
                e.displayEvaluationAsFraction =
                    _.DEFAULTS.displayEvaluationAsFraction,
                e.verticalLabel = !1, e.suppressTextOutline = !1,
                e.interactiveLabel = !1,
                e.editableLabelMode = _.DEFAULTS.editableLabelMode,
                e.cdf = _.DEFAULTS.cdf, e.vizProps = _.DEFAULTS.vizProps
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.EvaluationLabelOptions = {
                    smallCutoff: 1e-6,
                    bigCutoff: 1e9,
                    digits: 12
                  },
                  t.isRationalizableConstant = M, t.isGraphable = I,
                  t.shouldShowEvaluation = k, t.getEvaluationValue = C,
                  t.getTTestResults = T, t.getStatsResults = L,
                  t.computeNewSliderLatex = P, t.isEmpty = A,
                  t.updateReconciledDragMode = D,
                  t.adjustSliderByMovablePoint = q,
                  t.adjustSliderByKeyboard = N,
                  t.adjustSliderByDraggingThumb = R, t.tickSliderStep = B,
                  t.onFormulaUpdate = j, t.computeShouldGraph = V,
                  t.updateDisplayLatex = U, t.getDisplayLatex = z,
                  t.getDisplaySliderMin = K, t.getDisplaySliderMax = W,
                  t.getSliderMin = H, t.getSliderMax = Y, t.getSliderStep = X,
                  t.getSliderValue = $, t.isSliderAtEndOfPlayOnce = Q,
                  t.isVizPropValid = Z, t.getVizPropLatex = J,
                  t.setVizProp = ee, t.getClickableInfoPropLatex = te,
                  t.isClickableInfoPropValid = re,
                  t.getClickableInfoUpdateLatex = ne,
                  t.getClickableInfoUpdateIdentifier = ie,
                  t.setClickableInfoProp = oe, t.isClickableObject = se,
                  t.needsDotplotXMode = ae, t.isSliderMinValid = le,
                  t.isSliderMaxValid = ce, t.isSliderStepValid = ue,
                  t.getDomainMin = de, t.getDomainMax = pe,
                  t.isDomainMinValid = he, t.isDomainMaxValid = fe,
                  t.getState = ge, t.updateCachedViewState = me,
                  t.setIsDraggingOnGrapher = ye,
                  t.updateCachedUndoRedoState = ve, t.initModel = be,
                  t.updateCachedParsableState = xe, t.eachLatex = we,
                  t.onControllerUpdate = _e, t.restoreState = Ee,
                  t.setSliderMin = Se, t.setSliderMax = Me,
                  t.setSliderIsPlaying = ke, t.commitSliderSoftLimits = Ce,
                  t.extractSliderValueFromLatex = Te, t.setLatex = Le,
                  t.setSliderLoopMode = Pe, t.setSliderDragging = Ae,
                  t.setSliderStep = De, t.setSliderAnimationPeriod = Oe,
                  t.shouldEvaluationDisplayAsFraction = Fe,
                  t.setEvaluationAsFraction = qe, t.setLabel = Ne,
                  t.setShowLabel = Re, t.setPolarDomainMin = Be,
                  t.setParametricDomainMin = je, t.setPolarDomainMax = Ve,
                  t.setParametricDomainMax = Ue, t.setLogMode = ze,
                  t.setColor = Ge, t.setFill = Ke, t.setFillOpacity = We,
                  t.setLineWidth = He, t.setLabelDropdownOpen = Ye,
                  t.setDragMode = Xe, t.setPoints = $e, t.setPointStyle = Qe,
                  t.setLines = Ze, t.setLineStyle = Je, t.setLabelSize = et,
                  t.setLabelOrientation = tt, t.setVerticalLabel = rt,
                  t.setSuppressTextOutline = nt, t.setInteractiveLabel = it,
                  t.setEditableLabelMode = ot, t.getEditableLabelMode = st,
                  t.hasEditableLabel = at, t.setHidden = lt,
                  t.areAllVisibilityPropsOff = ct, t.hasDomain = ut,
                  t.getPolarDomainMin = dt, t.getPolarDomainMax = pt,
                  t.getParametricDomainMin = ht, t.getParametricDomainMax = ft,
                  t.hasSlider = gt, t.isPolygon = mt, t.isParametric = yt,
                  t.isPolar = vt, t.isSinglePoint = bt, t.isPointList = xt,
                  t.isPointOrPointList = wt, t.isBoxPlot = _t, t.isDotPlot = Et,
                  t.isHistogram = St, t.isVisualization = Mt, t.isTTest = It,
                  t.isStats = kt, t.isToplevelFunction = Ct,
                  t.isToplevelDistribution = Tt, t.isDiscreteDistribution = Lt,
                  t.parseToplevelFunction = Pt, t.shouldShowCDFCheckbox = At,
                  t.isPrimaryLatexValid = Dt, t.isListValuedDistribution = Ot,
                  t.shouldShowCDFFooter = Ft, t.getCDFMin = qt,
                  t.getCDFMax = Nt, t.getCDFMinPlaceholder = Rt,
                  t.getCDFMaxPlaceholder = Bt, t.setShowCDF = jt,
                  t.setCDFMin = Vt, t.setCDFMax = Ut, t.isCDFMinValid = zt,
                  t.isCDFMaxValid = Gt, t.isFillOpacityValid = Kt,
                  t.isLineWidthValid = Wt, t.getCDFEvaluation = Ht,
                  t.isClickableAllowed = Yt,
                  t.blankOutExpressionAfterClearingLatex = Xt
            });
          r('core/graphing-calc/json/folder',
            ['require', 'exports', 'tslib', 'core/lib/default-spec'],
            function(e, t, r, n) {
              'use strict';
              function i(e) {
                return r.__assign(r.__assign({}, t.DEFAULTS), e)
              }
              function o(e) {
                return n.stripDefaults(t.DEFAULTS, e)
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.DEFAULTS =
                      {collapsed: !1, hidden: !1, secret: !1, title: ''},
                  t.inflateDefaults = i, t.stripDefaults = o
            });
          r('graphing-calc/models/folder',
            [
              'require', 'exports', 'tslib', 'core/lib/deepCopy',
              'lib/copy-properties', './abstract-item', './list',
              'core/graphing-calc/json/folder'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              function l(e, t) {
                var r = e.cachedViewState;
                return t.stripDefaults ? a.stripDefaults(r) : r
              }
              function c(e) {
                e.cachedViewState = {
                  type: e.type,
                  id: e.id,
                  title: e.title,
                  hidden: e.hidden,
                  collapsed: e.collapsed,
                  secret: e.secret
                }
              }
              function u(e) {
                e.cachedUndoRedoState = e.cachedViewState
              }
              function d(e, t) {
                var i = n.default(a.inflateDefaults(e));
                return r.__assign(
                    r.__assign(r.__assign({}, i), o.DEFAULTS(t)),
                    {cachedUndoRedoState: {}, cachedViewState: {}})
              }
              function p(e) {
                f(e), o.updateIsHiddenFromUI(e), c(e), u(e)
              }
              function h(e, t) {
                i.copyProperties({
                  from: t,
                  to: e,
                  props: {
                    id: !1,
                    type: !1,
                    hidden: !0,
                    secret: !0,
                    collapsed: !0,
                    title: !0
                  }
                })
              }
              function f(e) {
                var t = e.controller, r = t.getSelectedItem();
                e.collapsed ?
                    r && 'folder' !== r.type && r.folderId === e.id ?
                    (e.selectedHiddenChild = r,
                     s.setSelected(t.getListModel(), e)) :
                    r !== e && (e.selectedHiddenChild = void 0) :
                    (r === e && e.selectedHiddenChild &&
                         s.setSelected(t.getListModel(), e.selectedHiddenChild),
                     e.selectedHiddenChild = void 0)
              }
              function g(e, t) {
                e.collapsed = t
              }
              function m(e, t) {
                e.title = t
              }
              function y(e, t) {
                e.hidden = t
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.getState = l, t.updateCachedViewState = c,
                  t.updateCachedUndoRedoState = u, t.initModel = d,
                  t.onControllerUpdate = p, t.restoreState = h,
                  t.updateSelectedHiddenChild = f, t.setCollapsed = g,
                  t.setTitle = m, t.setHidden = y
            });
          r('core/graphing-calc/json/text',
            ['require', 'exports', 'tslib', 'core/lib/default-spec'],
            function(e, t, r, n) {
              'use strict';
              function i(e) {
                return r.__assign(r.__assign({}, t.DEFAULTS), e)
              }
              function o(e) {
                return n.stripDefaults(t.DEFAULTS, e)
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.DEFAULTS = {folderId: '', text: '', secret: !1},
                  t.inflateDefaults = i, t.stripDefaults = o
            });
          r('graphing-calc/models/text',
            [
              'require', 'exports', 'tslib', './abstract-item',
              'core/lib/deepCopy', 'lib/copy-properties',
              'core/graphing-calc/json/text'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              function a(e, t) {
                e.text = t
              }
              function l(e, t) {
                var o = i.default(s.inflateDefaults(e));
                return r.__assign(
                    r.__assign(r.__assign({}, o), n.DEFAULTS(t)),
                    {cachedUndoRedoState: {}, cachedViewState: {}})
              }
              function c(e) {
                n.updateIsHiddenFromUI(e), p(e), h(e)
              }
              function u(e, t) {
                o.copyProperties({
                  from: t,
                  to: e,
                  props: {id: !1, type: !1, folderId: !0, text: !0, secret: !0}
                })
              }
              function d(e, t) {
                var r = e.cachedViewState;
                return t.stripDefaults ? s.stripDefaults(r) : r
              }
              function p(e) {
                e.cachedViewState = {
                  type: e.type,
                  id: e.id,
                  folderId: e.folderId,
                  text: e.text,
                  secret: e.secret
                }
              }
              function h(e) {
                e.cachedUndoRedoState = e.cachedViewState
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.setText = a, t.initModel = l, t.onControllerUpdate = c,
                  t.restoreState = u, t.getState = d,
                  t.updateCachedViewState = p, t.updateCachedUndoRedoState = h
            });
          r('graphing-calc/models/helper-expression',
            [
              'require', 'exports', 'core/math/evaluationstate', 'tslib',
              'underscore'
            ],
            function(e, t, r, n, i) {
              'use strict';
              function o(e) {
                return n.__assign(n.__assign({}, e), {
                  formula: r.default(),
                  cachedParsableState: {
                    type: 'statement',
                    id: e.id,
                    latex: e.latex,
                    shouldGraph: !1
                  }
                })
              }
              function s(e, t, r) {
                t.formula = r;
                var n,
                    o = t.proxy,
                    s = {numericValue: o.numericValue, listValue: o.listValue};
                r.zero_values && 1 === r.zero_values.length &&
                    (n = r.zero_values[0].val),
                    o.numericValue = i.isNumber(n) ? n : NaN,
                    o.listValue = i.isArray(n) ? n.slice(0) : void 0,
                    i.isEqual(o.numericValue, s.numericValue) ||
                    e.runAfterDispatch(function() {
                      o.notifyPropertyChange('numericValue')
                    }),
                    i.isEqual(o.listValue, s.listValue) ||
                    e.runAfterDispatch(function() {
                      o.notifyPropertyChange('listValue')
                    })
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.init = o, t.onFormulaUpdate = s
            });
          r('core/graphing-calc/json/image',
            ['require', 'exports', 'tslib', 'core/lib/default-spec'],
            function(e, t, r, n) {
              'use strict';
              function i(e) {
                return r.__assign(r.__assign(r.__assign({}, t.DEFAULTS), e), {
                  clickableInfo: r.__assign(
                      r.__assign({}, t.CLICKABLEINFO_DEFAULTS), e.clickableInfo)
                })
              }
              function o(e) {
                var r = n.stripDefaults(t.DEFAULTS, e),
                    i = n.stripDefaultsAndMaybeReturnUndefined(
                        t.CLICKABLEINFO_DEFAULTS, e.clickableInfo);
                return void 0 === i ? delete r.clickableInfo :
                                      r.clickableInfo = i,
                                      r
              }
              function s(e) {
                return {
                  type: 'image', id: e.id, center: e.center, angle: e.angle,
                      width: e.width, height: e.height, opacity: e.opacity,
                      clickableInfo: e.clickableInfo, guid: '', index: 0,
                      color: '', shouldGraph: e.hidden, showPoints: !1
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.CLICKABLEINFO_DEFAULTS = {
                    enabled: !1,
                    description: '',
                    assignment: '',
                    expression: '',
                    hoveredImage: '',
                    depressedImage: ''
                  },
                  t.DEFAULTS = {
                    folderId: '',
                    hidden: !1,
                    secret: !1,
                    center: '\\left(0,0\\right)',
                    angle: '0',
                    width: '10',
                    height: '10',
                    opacity: '1',
                    foreground: !1,
                    name: '',
                    clickableInfo: t.CLICKABLEINFO_DEFAULTS
                  },
                  t.inflateDefaults = i, t.stripDefaults = o,
                  t.computeParsableState = s
            });
          r('graphing-calc/models/image',
            [
              'require', 'exports', 'tslib', 'core/lib/color-helpers',
              './abstract-item', 'core/lib/deepCopy', 'lib/copy-properties',
              './list', 'jquery', 'core/graphing-calc/json/image'
            ],
            function(e, t, r, n, i, o, s, a, l, c) {
              'use strict';
              function u(e, t) {
                e.hidden = t
              }
              function d(e, t) {
                e.secret = t
              }
              function p(e, t, r) {
                e[t] = r
              }
              function h(e, t) {
                return e[t]
              }
              function f(e, t) {
                e.name = t
              }
              function g(e, t) {
                e.opacity = t
              }
              function m(e, t) {
                e.foreground = t
              }
              function y(e, t) {
                e.image_url = t
              }
              function v(e) {
                var t = c.computeParsableState(e);
                t.color = e.color, t.index = e.index, t.guid = e.guid,
                t.shouldGraph = e.shouldGraph, t.showPoints = e.showPoints,
                e.cachedParsableState = t
              }
              function b(e) {
                e.draggingOnGraphpaper ?
                    e.preTransientState || (e.preTransientState = {
                      center: e.center,
                      angle: e.angle,
                      width: e.width,
                      height: e.height,
                      opacity: e.opacity
                    }) :
                    delete e.preTransientState,
                    i.updateIsHiddenFromUI(e);
                var t = a.getParentFolderModel(e);
                e.shouldGraph = (!t || !t.hidden) && !e.hidden,
                e.showPoints = e.shouldGraph && a.isItemSelected(e) &&
                    'loaded' === e.loadStatus,
                E(e), M(e), v(e)
              }
              function x(e, t) {
                e.formula = t, e.missingVariables = e.formula.variables || [],
                e.computed_x = e.formula.dimensions.x,
                e.computed_y = e.formula.dimensions.y,
                e.computed_radian_angle = e.formula.dimensions.radianAngle,
                e.computed_height = e.formula.dimensions.height,
                e.computed_width = e.formula.dimensions.width,
                e.computed_opacity = e.formula.dimensions.opacity;
                var r = {
                  center: e.controller.t(
                      'Invalid center. Try, for example, (0,0).'),
                  angle: e.controller.t('Invalid angle. Try using any number.'),
                  width: e.controller.t('Invalid width. Try using any number.'),
                  height:
                      e.controller.t('Invalid height. Try using any number.'),
                  opacity:
                      e.controller.t('Invalid opacity. Try using any number.')
                },
                    n = [];
                for (var i in e.formula.errorMap)
                  e.formula.errorMap[i] && n.push(r[i]);
                e.error = n[0], e.inputErrors = {
                  center: !!e.formula.errorMap.center,
                  width: !!e.formula.errorMap.width,
                  height: !!e.formula.errorMap.height,
                  angle: !!e.formula.errorMap.angle,
                  opacity: !!e.formula.errorMap.opacity
                }
              }
              function w(e, t) {
                return !!e.inputErrors && e.inputErrors[t]
              }
              function _(e, t) {
                var r = e.cachedViewState;
                return t.stripDefaults ? c.stripDefaults(r) : r
              }
              function E(e) {
                var t = e.cachedViewState.clickableInfo, r = !0, n = !0;
                if (t &&
                        (t.depressedImage === e.clickableInfo.depressedImage &&
                             (n = !1),
                         t.hoveredImage === e.clickableInfo.hoveredImage &&
                             (r = !1)),
                    r &&
                        (e.hoveredImageObj &&
                             (l(e.hoveredImageObj).off('load'),
                              delete e.hoveredImageObj),
                         e.clickableInfo.hoveredImage)) {
                  e.hoveredImageObj = new Image;
                  var i = function() {
                    var t = e.controller.getGrapher();
                    t && t.redrawAllLayers()
                  }, o = function() {};
                  I(e.hoveredImageObj, e.clickableInfo.hoveredImage, i, o)
                }
                if (n &&
                    (e.depressedImageObj &&
                         (l(e.depressedImageObj).off('load'),
                          delete e.depressedImageObj),
                     e.clickableInfo.depressedImage)) {
                  e.depressedImageObj = new Image;
                  var i = function() {
                    var t = e.controller.getGrapher();
                    t && t.redrawAllLayers()
                  }, o = function() {};
                  I(e.depressedImageObj, e.clickableInfo.depressedImage, i, o)
                }
                if (e.cachedViewState.image_url !== e.image_url) {
                  l(e.imageObj).off('load'), e.imageObj = new Image;
                  var s = function() {
                    e.controller.dispatch(
                        {type: 'image-load-success', id: e.id})
                  }, a = function() {
                    e.controller.dispatch({type: 'image-load-error', id: e.id})
                  };
                  I(e.imageObj, e.image_url, s, a)
                }
                e.cachedViewState = {
                  type: e.type,
                  id: e.id,
                  folderId: e.folderId,
                  image_url: e.image_url,
                  name: e.name,
                  hidden: e.hidden,
                  height: e.height,
                  width: e.width,
                  center: e.center,
                  angle: e.angle,
                  opacity: e.opacity,
                  foreground: e.foreground,
                  secret: e.secret,
                  clickableInfo: e.clickableInfo
                }
              }
              function S(e, t) {
                e.draggingOnGraphpaper = t
              }
              function M(e) {
                var t = e.cachedViewState;
                e.preTransientState &&
                    (t = r.__assign(r.__assign({}, t), e.preTransientState)),
                    e.cachedUndoRedoState = t
              }
              function I(e, t, r, n) {
                l(e).on('load', r).on('error', n),
                    /^data:/.test(t) || (e.crossOrigin = 'anonymous'), e.src = t
              }
              function k(e, t) {
                var s = o.default(c.inflateDefaults(e));
                return r.__assign(
                    r.__assign(r.__assign({}, s), i.DEFAULTS(t)), {
                      color: n.colors.BLUE,
                      loadStatus: 'loading',
                      failures: 0,
                      imageObj: new Image,
                      hoveredImageObj: void 0,
                      depressedImageObj: void 0,
                      shouldGraph: void 0,
                      showPoints: void 0,
                      error: void 0,
                      formula: void 0,
                      missingVariables: [],
                      computed_x: void 0,
                      computed_y: void 0,
                      computed_width: void 0,
                      computed_height: void 0,
                      computed_radian_angle: void 0,
                      computed_opacity: void 0,
                      draggingOnGraphpaper: !1,
                      cachedViewState: {},
                      cachedParsableState: {},
                      cachedUndoRedoState: {}
                    })
              }
              function C(e, t) {
                s.copyProperties({
                  from: t,
                  to: e,
                  props: {
                    id: !1,
                    type: !1,
                    image_url: !0,
                    name: !0,
                    folderId: !0,
                    hidden: !0,
                    secret: !0,
                    center: !0,
                    opacity: !0,
                    angle: !0,
                    width: !0,
                    height: !0,
                    foreground: !0,
                    clickableInfo: !0
                  }
                })
              }
              function T(e) {
                for (var t = e.controller, r = e.files, n = e.id,
                         i = {errors: [], tokens: []}, o = 0;
                     o < r.length; o++) {
                  var s = r[o];
                  s.type.match('image/*') ?
                      i.tokens.push(L({controller: t, file: s, id: n})) :
                      i.errors.push(
                          t.t('The file "__file__" is not an image',
                              {file: s.name}))
                }
                return i
              }
              function L(e) {
                var t = e.controller, r = e.file, n = e.id, i = '' + B++;
                return t.getGraphSettings().config.imageUploadCallback(
                           r,
                           function(e, o) {
                             setTimeout(function() {
                               if (e)
                                 t.dispatch({
                                   type: 'image-upload-error',
                                   token: i,
                                   error: e
                                 });
                               else {
                                 var s = new Image;
                                 I(s, o,
                                   function() {
                                     var e = s.width, a = s.height,
                                         l = Math.max(e, a) / Math.min(e, a);
                                     e < a ? (a = 10,
                                              e = Math.round(10 * a / l) / 10) :
                                             (e = 10,
                                              a = Math.round(10 * e / l) / 10),
                                         t.dispatch({
                                           type: 'image-upload-success',
                                           token: i,
                                           url: o,
                                           width: e + '',
                                           height: a + '',
                                           name: r.name,
                                           id: n
                                         })
                                   },
                                   function() {
                                     t.dispatch({
                                       type: 'image-upload-error',
                                       token: i,
                                       error: ''
                                     })
                                   })
                               }
                             })
                           }),
                       i
              }
              function P(e, t) {
                e.loadStatus = t, 'loaded' === t && (e.failures = 0),
                'failed' === t && (e.failures += 1)
              }
              function A(e) {
                e.imageObj.src = e.imageObj.src, P(e, 'loading')
              }
              function D(e, t) {
                return e.clickableInfo[t]
              }
              function O(e, t) {
                return !!e.formula &&
                    ('assignment' === t ?
                         !!e.formula.clickableinfo_identifier_valid :
                         'expression' === t &&
                             !!e.formula.clickableinfo_expression_valid)
              }
              function F(e) {
                if (e.formula) return e.formula.clickableinfo_latex
              }
              function q(e) {
                if (e.formula) return e.formula.clickableinfo_identifier
              }
              function N(e, t, n) {
                var i;
                e.clickableInfo = r.__assign(
                    r.__assign({}, e.clickableInfo), (i = {}, i[t] = n, i))
              }
              function R(e) {
                return e.clickableInfo.enabled
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.setHidden = u, t.setSecret = d, t.setMQAttribute = p,
                  t.getMQAttribute = h, t.setName = f, t.setOpacity = g,
                  t.setForeground = m, t.setImageURL = y,
                  t.updateCachedParsableState = v, t.onControllerUpdate = b,
                  t.onFormulaUpdate = x, t.hasInputError = w, t.getState = _,
                  t.updateCachedViewState = E, t.setIsDraggingOnGrapher = S,
                  t.updateCachedUndoRedoState = M, t.initModel = k,
                  t.restoreState = C, t.uploadImages = T;
              var B = 0;
              t.uploadImageAndGenerateToken = L, t.setLoadStatus = P,
              t.retryLoading = A, t.getClickableInfoPropLatex = D,
              t.isClickableInfoPropValid = O, t.getClickableInfoUpdateLatex = F,
              t.getClickableInfoUpdateIdentifier = q,
              t.setClickableInfoProp = N, t.isClickableObject = R
            });
          r('graphing-calc/models/list',
            [
              'require', 'exports', 'lib/color-distance', 'tslib',
              './expression', './folder', './table', './text',
              './helper-expression', './image', 'core/types/graphmode',
              'core/lib/color-helpers', 'underscore', 'core/lib/deepCopy'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d, p, h) {
              'use strict';
              function f(e) {
                return {
                  controller: e, __itemModelArray: [], __itemIdToModel: {},
                      __helperIdToModel: {}, __anyDependsOnRandomSeed: !1,
                      drawOrder: [], colorIdx: 0, expressionAnalysis: {},
                      nextDisplayIndex: 1
                }
              }
              function g(e) {
                for (var t = 0; t < e.__itemModelArray.length; t++) {
                  var r = e.__itemModelArray[t];
                  if ('image' === r.type && 'loading' === r.loadStatus)
                    return !0
                }
                return !1
              }
              function m(e) {
                var t = p.filter(
                        p.values(e.controller.getColors()),
                        function(e) {
                          return e != d.colors.ORANGE
                        }),
                    r = t[e.colorIdx];
                return e.colorIdx = (e.colorIdx + 1) % t.length, r
              }
              function y(e, t) {
                return e.__itemModelArray[t]
              }
              function v(e) {
                for (var t = 0; t < e.__itemModelArray.length; t++) {
                  var r = e.__itemModelArray[t];
                  if (M(r)) return r
                }
              }
              function b(e) {
                for (var t = e.__itemModelArray.length - 1; t >= 0; t--) {
                  var r = e.__itemModelArray[t];
                  if (M(r)) return r
                }
              }
              function x(e, t) {
                var r;
                do {
                  if (-1 === --t) return;
                  r = y(e, t)
                } while (r && !M(r));
                return r
              }
              function w(e, t) {
                var r, n = j(e);
                do {
                  if (++t === n) return;
                  r = y(e, t)
                } while (r && !M(r));
                return r
              }
              function _(e) {
                if ('folder' !== e.type && e.folderId) {
                  var t = e.controller.getListModel(), r = D(t, e.folderId);
                  if (r && 'folder' === r.type) return r
                }
              }
              function E(e, t) {
                var r = D(e, t);
                if (!r || 'folder' !== r.type) return 0;
                for (var n = 0, i = e.__itemModelArray.length, o = r.index + 1;
                     o < i; o++) {
                  var s = e.__itemModelArray[o];
                  if ('folder' === s.type || s.folderId !== t) break;
                  n += 1
                }
                return n
              }
              function S(e) {
                if (!e) return !1;
                if (e.secret) return !0;
                var t = _(e);
                return !(!t || !t.secret)
              }
              function M(e) {
                return !I(e)
              }
              function I(e) {
                if (!e) return !0;
                if (e.filteredBySearch) return !0;
                if (e.controller.isItemBeingDragged(e.id)) return !1;
                if (!e.controller.canAdministerSecretFolders() && S(e))
                  return !0;
                var t = _(e);
                return !(!t || !t.collapsed || e.controller.getIDESearchStr())
              }
              function k(e) {
                return e.__itemModelArray
              }
              function C(e) {
                return p.values(e.__helperIdToModel)
              }
              function T(e, t) {
                for (var r = 0; r < e.__itemModelArray.length; r++) {
                  var n = e.__itemModelArray[r];
                  switch (n.type) {
                    case 'expression':
                      i.eachLatex(n, t);
                      break;
                    case 'table':
                      s.eachLatex(n, t);
                      break;
                    case 'image':
                    case 'folder':
                    case 'text':
                      break;
                    default:
                      return n
                  }
                }
              }
              function L(e, t) {
                for (var r = 0; r < e.__itemModelArray.length; r++)
                  if (t) {
                    var n = e.__itemModelArray[r];
                    switch (n.type) {
                      case 'expression':
                        n.filteredBySearch = !0, i.eachLatex(n, function(r) {
                          r.indexOf(t) >= 0 &&
                              (n.filteredBySearch = !1,
                               n.folderId &&
                                   (e.__itemIdToModel[n.folderId]
                                        .filteredBySearch = !1))
                        });
                        break;
                      case 'table':
                        n.filteredBySearch = !0, s.eachLatex(n, function(r) {
                          r.indexOf(t) >= 0 &&
                              (n.filteredBySearch = !1,
                               n.folderId &&
                                   (e.__itemIdToModel[n.folderId]
                                        .filteredBySearch = !1))
                        });
                        break;
                      case 'image':
                      case 'folder':
                      case 'text':
                        n.filteredBySearch = !0;
                        break;
                      default:
                        var o = n;
                        return o
                    }
                  } else
                    e.__itemModelArray[r].filteredBySearch = !1
              }
              function P(e) {
                var t = [];
                T(e, function(e) {
                  if (-1 === e.indexOf('~') && -1 === e.indexOf('\\sim'))
                    for (var r =
                             /_(\d)|_\{(?:\s|\\space)*(\d+)(?:\s|\\space)*\}/g;
                         ;) {
                      var n = r.exec(e);
                      if (!n) break;
                      t.push(parseInt(n[1] || n[2], 10))
                    }
                }), t.sort(function(e, t) {
                  return e - t
                });
                for (var r = 1, n = 0; n < t.length; n++) t[n] === r && r++;
                return r
              }
              function A(e) {
                var t = [];
                p.each(e.__itemModelArray, function(e) {
                  'table' === e.type ? p.each(e.columnModels, function(e) {
                    t.push(e.id)
                  }) : t.push(e.id)
                }), e.drawOrder = t
              }
              function D(e, t) {
                return e.__itemIdToModel[t]
              }
              function O(e, t) {
                for (var r = [], n = 0; n < e.__itemModelArray.length; n++) {
                  var i = e.__itemModelArray[n];
                  'expression' === i.type && i.dependent === t && r.push(i)
                }
                return r
              }
              function F(e, t) {
                return e.__helperIdToModel[t]
              }
              function q(e, t) {
                var r = l.init(t);
                e.__helperIdToModel[r.id] = r
              }
              function N(e) {
                e.__anyDependsOnRandomSeed = !1;
                for (var t = 0; t < e.__itemModelArray.length; t++) {
                  var r = e.__itemModelArray[t];
                  if (r && 'formula' in r && r.formula &&
                      r.formula.depends_on_random_seed)
                    return void (e.__anyDependsOnRandomSeed = !0)
                }
              }
              function R(e) {
                for (var t = !e.controller.canAdministerSecretFolders(), r = 1,
                         n = 1, i = 0;
                     i < e.__itemModelArray.length; i++) {
                  var o = e.__itemModelArray[i];
                  o.index = i, o.displayIndex = r,
                  S(o) && (o.secretIndex = n, n += 1), t && S(o) || (r += 1)
                }
                e.nextDisplayIndex = r
              }
              function B(e) {
                e.__itemModelArray = [], e.__itemIdToModel = {},
                e.__helperIdToModel = {}, e.__anyDependsOnRandomSeed = !1
              }
              function j(e) {
                return e.__itemModelArray.length
              }
              function V(e) {
                return 1 === e.nextDisplayIndex
              }
              function U(e) {
                for (var t = [], r = 0; r < e.__itemModelArray.length; r++) {
                  var n = e.__itemModelArray[r];
                  'expression' === n.type && n.sliderExists && t.push(n)
                }
                return t
              }
              function z(e) {
                return e.selectedItem
              }
              function G(e) {
                return {
                  list: e.__itemModelArray.map(function(e) {
                    return e.cachedUndoRedoState
                  })
                }
              }
              function K(e, t) {
                return {
                  list: e.__itemModelArray.map(function(e) {
                    switch (e.type) {
                      case 'expression':
                        return i.getState(e, t);
                      case 'image':
                        return c.getState(e, t);
                      case 'table':
                        return s.getState(e, t);
                      case 'folder':
                        return o.getState(e, t);
                      case 'text':
                        return a.getState(e, t);
                      default:
                        return e
                    }
                  })
                }
              }
              function W(e) {
                for (var t = 0, r = /^[0-9]+$/, n = e.list.length - 1; n >= 0;
                     n--) {
                  var i = e.list[n], o = i.id;
                  if (r.test(o)) {
                    var s = parseInt(o, 10);
                    s > t && (t = s)
                  }
                  if ('table' === i.type && i.columns)
                    for (var a = i.columns.length - 1; a >= 0; a--)
                      if (o = i.columns[a].id, r.test(o)) {
                        var s = parseInt(o, 10);
                        s > t && (t = s)
                      }
                }
                return t
              }
              function H(e, t, n) {
                n || (n = {});
                var i, o;
                for (e.colorIdx = 0, B(e), e.expressionAnalysis = {}, i = 0;
                     i < t.list.length; i++) {
                  if (o = Y(e, t.list[i]),
                      n.remapColors && 'color' in o && o.color) {
                    var s = p.values(e.controller.getColors());
                    p.contains(s, o.color) ||
                        (o.color = r.closestColor(o.color, s))
                  }
                  e.__itemModelArray.push(o), e.__itemIdToModel[o.id] = o
                }
                if (R(e), 1 === e.nextDisplayIndex) {
                  ee(e, Y(e, {
                       type: 'expression',
                       id: e.controller.generateId(),
                       color: e.controller.getNextColor()
                     }),
                     e.__itemModelArray.length)
                }
              }
              function Y(e, t) {
                switch (t.type) {
                  case 'expression':
                    return i.initModel(t, e.controller);
                  case 'table':
                    return s.initModel(t, e.controller);
                  case 'image':
                    return c.initModel(t, e.controller);
                  case 'folder':
                    return o.initModel(t, e.controller);
                  case 'text':
                    return a.initModel(t, e.controller);
                  default:
                    return t
                }
              }
              function X(e, t) {
                var r, n, l = e.__itemIdToModel;
                for (e.__itemModelArray = [], e.__itemIdToModel = {}, r = 0;
                     r < t.list.length; r++) {
                  var u = t.list[r];
                  if ((n = l[u.id]) && n.type === u.type) switch (n.type) {
                      case 'expression':
                        if (u.type !== n.type)
                          throw new Error('invalid restoration');
                        i.restoreState(n, u);
                        break;
                      case 'table':
                        if (u.type !== n.type)
                          throw new Error('invalid restoration');
                        s.restoreState(n, u);
                        break;
                      case 'image':
                        if (u.type !== n.type)
                          throw new Error('invalid restoration');
                        c.restoreState(n, u);
                        break;
                      case 'folder':
                        if (u.type !== n.type)
                          throw new Error('invalid restoration');
                        o.restoreState(n, u);
                        break;
                      case 'text':
                        if (u.type !== n.type)
                          throw new Error('invalid restoration');
                        a.restoreState(n, u);
                        break;
                      default:
                        return n
                    }
                  else
                    n = Y(e, u);
                  e.__itemModelArray.push(n), e.__itemIdToModel[n.id] = n
                }
                N(e), R(e)
              }
              function $(e, t, r) {
                var n = r[0] && r[0].tableId, i = D(e, n || t);
                if (i) {
                  var o;
                  switch (i.type) {
                    case 'expression':
                      var a = !1;
                      i.__workerNeedsDotplotXMode = !1;
                      for (var l = 0; l < r.length; l++) {
                        var c = r[l];
                        c.graphMode !== u.Z_3D && c.graphMode !== u.OBJECT3D &&
                            c.graphMode !== u.PARAMETRIC_CURVE_3D &&
                            ('resolved' in c && !c.resolved && (a = !0),
                             c.boundingBox &&
                                 (o || (o = []), o.push(c.boundingBox)),
                             c.needsDotplotXMode &&
                                 (i.__workerNeedsDotplotXMode = !0))
                      }
                      i.unresolved = a, i.boundingBoxes = o;
                      for (var d = 1 / 0, p = -1 / 0, h = 0, f = r;
                           h < f.length; h++) {
                        var c = f[h];
                        if (c.graphMode === u.POLAR) {
                          var g = c.sampledDomain;
                          g && (d = Math.min(d, g.min), p = Math.max(p, g.max))
                        }
                      }
                      return isFinite(d) && (i.__workerSampledDomainMin = d),
                             void (
                                 isFinite(p) &&
                                 (i.__workerSampledDomainMax = p));
                    case 'table':
                      for (var l = 0; l < r.length; l++) {
                        var c = r[l];
                        c.graphMode !== u.Z_3D && c.graphMode !== u.OBJECT3D &&
                            c.graphMode !== u.PARAMETRIC_CURVE_3D &&
                            (c.boundingBox &&
                             (o || (o = []), o.push(c.boundingBox)))
                      }
                      return void (o && s.setColumnBoundingBoxes(i, t, o));
                    default:
                      return
                  }
                }
              }
              function Q(e, t) {
                var r, n, o, a = h.default(e.expressionAnalysis);
                for (r in t)
                  if (t.hasOwnProperty(r)) {
                    o = t[r], n = D(e, r);
                    var u = {
                      isGraphable: !!o.is_graphable,
                      isError: !!o.error,
                      errorMessage: o.error ? e.controller.unpack(o.error) :
                                              void 0
                    };
                    if (n) switch (n.type) {
                        case 'expression':
                          if (i.onFormulaUpdate(n, o),
                              o.zero_values && 1 === o.zero_values.length) {
                            var d = o.zero_values[0].val;
                            p.isNumber(d) &&
                                (u.evaluation = {type: 'Number', value: d},
                                 u.evaluationDisplayed = !0),
                                p.isArray(d) && d.every(p.isNumber) &&
                                (u.evaluation = {
                                  type: 'ListOfNumber',
                                  value: d.slice()
                                },
                                 u.evaluationDisplayed = !0)
                          } else
                            o.hasOwnProperty('constant_value') &&
                                p.isNumber(o.constant_value) &&
                                (u.evaluation = {
                                  type: 'Number',
                                  value: o.constant_value
                                },
                                 u.evaluationDisplayed = !1);
                          break;
                        case 'image':
                          c.onFormulaUpdate(n, o);
                          break;
                        case 'table':
                          s.onFormulaUpdate(n, o);
                          break;
                        case 'folder':
                        case 'text':
                          break;
                        default:
                          var f = n;
                          return f
                      }
                    else {
                      var g = F(e, r);
                      if (!g) continue;
                      l.onFormulaUpdate(e.controller, g, o)
                    }
                    a[r] = u
                  }
                N(e), e.expressionAnalysis = a
              }
              function Z(e, t) {
                e.selectedItem = t
              }
              function J(e, t, r, i) {
                if (t !== r) {
                  var o = e.__itemModelArray.splice(t, i);
                  t < r && (r = r - i + 1),
                      e.__itemModelArray.splice.apply(
                          e.__itemModelArray, n.__spreadArrays([r, 0], o)),
                      R(e)
                }
              }
              function ee(e, t, r) {
                var n = String(t.id);
                if (e.__itemIdToModel.hasOwnProperty(n))
                  throw Error('Item with id \'' + n + '\' is already in list');
                e.__itemIdToModel[n] = t, e.__itemModelArray.splice(r, 0, t),
                R(e)
              }
              function te(e, t) {
                ee(e, t, j(e))
              }
              function re(e, t) {
                var r = e.__itemModelArray[t];
                if ('folder' === r.type) {
                  for (var n = 0, i = r.index + 1;
                       i < e.__itemModelArray.length; i++) {
                    var o = e.__itemModelArray[i];
                    if ('folder' === o.type || o.folderId !== r.id) break;
                    n += 1, ae(o) && Z(e, void 0),
                        delete e.__itemIdToModel[o.id],
                        delete e.expressionAnalysis[r.id]
                  }
                  e.__itemModelArray.splice(t, 1 + n)
                } else
                  e.__itemModelArray.splice(t, 1);
                ae(r) && Z(e, void 0), delete e.__itemIdToModel[r.id],
                    delete e.expressionAnalysis[r.id], N(e), R(e)
              }
              function ne(e) {
                return e.__anyDependsOnRandomSeed
              }
              function ie(e, t) {
                var r = D(e, t);
                r && re(e, r.index)
              }
              function oe(e) {
                var t = z(e);
                if (!t) return !1;
                var r = x(e, t.index);
                return !!r &&
                    (Z(e, r),
                     r.index === j(e) - 1 && 'expression' === t.type &&
                         i.isEmpty(t) && re(e, r.index),
                     !0)
              }
              function se(e) {
                var t = z(e);
                if (!t) return !1;
                var r = w(e, t.index);
                return !!r && (Z(e, r), !0)
              }
              function ae(e) {
                return e.controller.getListModel().selectedItem === e
              }
              function le(e, t) {
                e.dragState = t
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.init = f, t.areAnyImagesLoading = g, t.getNextColor = m,
                  t.getItemByIndex = y, t.getFirstSelectableItem = v,
                  t.getLastSelectableItem = b, t.findPrevSelectableItem = x,
                  t.findNextSelectableItem = w, t.getParentFolderModel = _,
                  t.getNumberOfItemsInFolder = E, t.isItemSecret = S,
                  t.isItemSelectable = M, t.isItemHiddenFromUI = I,
                  t.getAllItemModels = k, t.getAllHelperItemModels = C,
                  t.eachLatex = T, t.filterItemsBySearch = L,
                  t.findAvailableColumnSubscript = P, t.updateDrawOrder = A,
                  t.getItemById = D, t.getItemsByIdentifier = O,
                  t.getHelperExpressionById = F, t.addHelperExpression = q,
                  t.recomputeAnyItemDependsOnRandomSeed = N, t.reindex = R,
                  t.removeAllItems = B, t.getItemCount = j,
                  t.hasNoVisibleExpressions = V, t.getAllModelsWithSliders = U,
                  t.getSelected = z, t.getUndoRedoState = G, t.getState = K,
                  t.getLargestIntegerId = W, t.setListState = H,
                  t.modelFromSpec = Y, t.restoreListState = X,
                  t.onGraphComputed = $, t.onEvaluatorFormulaUpdates = Q,
                  t.setSelected = Z, t.moveItemsTo = J,
                  t.insertItemAtIndex = ee, t.insertItemAtEnd = te,
                  t.removeItemAtIndex = re, t.anyItemDependsOnRandomSeed = ne,
                  t.removeItemById = ie, t.selectPrevItem = oe,
                  t.selectNextItem = se, t.isItemSelected = ae,
                  t.setDragState = le
            });
          r('graphing-calc/models/abstract-item',
            ['require', 'exports', './list'], function(e, t, r) {
              'use strict';
              function n() {
                return 'abstract_item_' + c++
              }
              function i(e) {
                return {
                  guid: n(), controller: e, index: -1, displayIndex: -1,
                      secretIndex: -1, isHiddenFromUI: !0, renderShell: !0
                }
              }
              function o(e, t) {
                e.secret = t
              }
              function s(e, t) {
                'folder' !== e.type && (e.folderId = t)
              }
              function a(e) {
                e.isHiddenFromUI = r.isItemHiddenFromUI(e)
              }
              function l(e) {
                return e.isHiddenFromUI || e.filteredBySearch ? 'none' :
                    e.renderShell                             ? 'shell' :
                                                                'render'
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var c = 0;
              t.getGUID = n, t.DEFAULTS = i, t.setSecret = o, t.setFolderId = s,
              t.updateIsHiddenFromUI = a, t.getDisplayState = l
            });
          r('core/graphing-calc/json/table',
            [
              'require', 'exports', 'tslib', 'core/lib/default-spec',
              'core/types/styles', 'core/lib/dragmode'
            ],
            function(e, t, r, n, i, o) {
              'use strict';
              function s(e) {
                var n = r.__assign(r.__assign({}, t.DEFAULTS), e);
                return n.columns = n.columns.map(function(e) {
                  return r.__assign(r.__assign({}, t.COLUMN_DEFAULTS), e)
                }),
                       n
              }
              function a(e) {
                return e = r.__assign(r.__assign({}, e), {
                  columns: e.columns.map(function(e) {
                    return n.stripDefaults(t.COLUMN_DEFAULTS, e)
                  })
                }),
                       n.stripDefaults(t.DEFAULTS, e)
              }
              function l(e) {
                return {
                  type: 'table', id: e.id, columns: e.columns.map(function(t) {
                    return r.__assign(r.__assign({}, t), {tableId: e.id})
                  })
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.DEFAULTS = {folderId: '', secret: !1, columns: []},
                  t.COLUMN_DEFAULTS = {
                    latex: '',
                    color: '',
                    hidden: !1,
                    values: [],
                    points: !0,
                    lines: !1,
                    dragMode: o.DragMode.NONE,
                    pointStyle: i.PointStyle.POINT,
                    lineStyle: i.LineStyle.SOLID
                  },
                  t.inflateDefaults = s, t.stripDefaults = a,
                  t.computeParsableState = l
            });
          r('graphing-calc/models/table',
            [
              'require', 'exports', 'core/math/rational-arithmetic-sequence',
              'tslib', 'core/types/styles', 'core/lib/dragmode',
              './abstract-item', 'underscore', 'core/lib/label',
              'core/math/evaluate-single-expression', 'core/math/distance',
              'core/lib/deepCopy', 'lib/copy-properties',
              'graphing-calc/models/list', 'core/graphing-calc/json/table',
              'core/graphing-calc/json/table', 'core/graphing-calc/json/table'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g, m) {
              'use strict';
              function y(e, t, r, n) {
                n.row = e.rowModels[t], n.row.cells.splice(r, 0, n)
              }
              function v(e, t, r) {
                e.rowModels[t].cells.splice(r, 1)
              }
              function b(e) {
                return isFinite(e) ?
                    l.truncatedLatexLabel(
                        e, {digits: 8, bigCutoff: 1e6, smallCutoff: .001}) :
                    '\\mathrm{undefined}'
              }
              function x(e, t, r) {
                var n = e.columnModels[t];
                n.error = r.error, n.discrete = r.discrete,
                n.disabled = r.dependent,
                n.draggable = !r.error && !r.dependent, n.packedErrors = [],
                n.computedValues = [];
                for (var i = r.values, o = i.length - 1; o >= 0; o--) {
                  var s = i[o];
                  n.computedValues[o] = 'number' == typeof s ? b(s) : '',
                  n.packedErrors[o] = s && s.msg ? s : void 0
                }
              }
              function w(e) {
                var t = Q(e);
                if (t) {
                  var r = _(e);
                  if (!r) return void (e.isExpanded || oe(e, !0));
                  t.row >= r.min && t.row < r.max && oe(e, !0)
                }
              }
              function _(e) {
                if (!e.isExpanded) {
                  var t = e.rowModels.length;
                  if (!(t < 30)) return {
                      min: 8, max: t - 5
                    }
                }
              }
              function E(e, t) {
                var r = e.columnModels[t];
                return {
                  values: e.columns[t].values.slice(), dragMode: r.dragMode,
                      hidden: r.hidden, id: r.id, color: r.color,
                      points: r.points, lines: r.lines,
                      pointStyle: r.pointStyle, lineStyle: r.lineStyle,
                      latex: r.latex
                }
              }
              function S() {
                return 'table_guid_' + he++
              }
              function M() {
                return {
                  guid: S(), type: 'cell', row: void 0, column: void 0
                }
              }
              function I(e) {
                return {
                  type: 'row', index: e, guid: S(), cells: []
                }
              }
              function k(e, t, r, n) {
                var i = e.columnModels[t];
                i.cells.splice(r, 0, n),
                    n.column = i, e.columns[i.index].values.splice(r, 0, '')
              }
              function C(e, t, r) {
                var n = e.columnModels[t];
                n.cells.splice(r, 1), e.columns[n.index].values.splice(r, 1)
              }
              function T(e, t, r) {
                var i = n.__assign(n.__assign({}, r), {
                  type: 'header',
                  guid: S(),
                  index: t,
                  error: void 0,
                  table: e,
                  color: r.color || e.controller.getNextColor(),
                  packedErrors: [],
                  computedValues: [],
                  cells: void 0,
                  row: void 0,
                  discrete: void 0,
                  shouldGraph: void 0,
                  disabled: void 0,
                  draggable: void 0
                });
                return i.cells = i.values.map(function() {
                  var e = M();
                  return e.column = i, e
                }),
                       delete i.values, 0 === t && (i.hidden = !0), i
              }
              function L(e) {
                e.draggingOnGraphpaper ?
                    e.preTransientState || (e.preTransientState = {
                      columns: V(e, {stripDefaults: !1}).columns
                    }) :
                    delete e.preTransientState,
                    s.updateIsHiddenFromUI(e);
                var t = h.getParentFolderModel(e), r = t && t.hidden;
                a.each(e.columnModels, function(e) {
                  e.shouldGraph = !r && !e.hidden
                }), U(e), G(e), R(e)
              }
              function P(e, t) {
                e.formula = t;
                var r, n = e.formula.column_data,
                       i = e.columnModels[0].cells.length,
                       o = e.columnModels.length, s = 0;
                for (r = 0; r < n.length; r++) {
                  var a = n[r].values.length;
                  a > s && (s = a)
                }
                for (r = s - i; r > 0; r--) A(e, i), i++;
                for (r = 0; r < n.length && r < o; r++) x(e, r, n[r]);
                var l = e.columnModels[e.columnModels.length - 1];
                l.disabled = !0, l.error = void 0
              }
              function A(e, t) {
                var r = I(t + 1);
                e.rowModels.splice(t + 1, 0, r);
                for (var n = t + 1; n < e.rowModels.length; n++)
                  e.rowModels[n].index = n;
                for (n = 0; n < e.columnModels.length; n++) {
                  var i = M();
                  k(e, n, t, i), y(e, t + 1, n, i)
                }
              }
              function D(e, t) {
                var r = _(e);
                r && t === r.max - 1 && oe(e, !0);
                for (var n = 0; n < e.columnModels.length; n++) C(e, n, t);
                for (e.rowModels.splice(t + 1, 1), n = t + 1;
                     n < e.rowModels.length; n++)
                  e.rowModels[n].index = n
              }
              function O(e, t, r) {
                var i = n.__assign(
                        n.__assign(n.__assign({}, f.COLUMN_DEFAULTS), r), {
                          values: e.columns[0].values.map(function() {
                            return ''
                          })
                        }),
                    o = T(e, t, i);
                e.columnModels.splice(t, 0, o), e.columns.splice(t, 0, i);
                for (var s = t + 1; s < e.columnModels.length; s++)
                  e.columnModels[s].index = s;
                for (y(e, 0, t, o), s = 1; s < e.rowModels.length; s++)
                  y(e, s, t, o.cells[s - 1])
              }
              function F(e, t) {
                e.columns.splice(t, 1), e.columnModels.splice(t, 1);
                for (var r = t; r < e.columnModels.length; r++)
                  e.columnModels[r].index = r;
                for (r = 0; r < e.rowModels.length; r++) v(e, r, t)
              }
              function q(e, t) {
                var n, i = e.columnModels.length, o = [];
                for (n = 0; n < i; n++) o.push('');
                var s = e.columns[0].values;
                if (t > 1) {
                  var a = e.controller.isDegreeMode(), l = c.default(s[0], a),
                      d = c.default(s[1], a);
                  if (isFinite(l) && isFinite(d)) {
                    var p = r(l, d);
                    if (p) {
                      var h = p.nstart, f = h / p.lcm;
                      for (n = 0; n < t; n++) {
                        var g = c.default(s[n], a);
                        if (!u.approx(g, f)) return o;
                        h += p.nstep, f = h / p.lcm
                      }
                      o[0] = ('' + l).length < 8 && ('' + d).length < 8 ?
                          '' + f :
                          '\\frac{' + h + '}{' + p.lcm + '}'
                    }
                  }
                }
                return o
              }
              function N(e, t) {
                for (var r = 0; r < e.columnModels.length; r++) {
                  t(e.columnModels[r].latex);
                  for (var n = e.columns[r], i = 0; i < n.values.length; i++)
                    n.values[i] && t(n.values[i])
                }
              }
              function R(e) {
                for (var t = m.computeParsableState({
                       type: 'table',
                       id: e.id,
                       secret: e.secret,
                       folderId: e.folderId,
                       columns: e.columnModels.map(function(t) {
                         return E(e, t.index)
                       })
                     }),
                         r = 0;
                     r < t.columns.length; r++)
                  t.columns[r].hidden = !e.columnModels[r].shouldGraph;
                e.cachedParsableState = t
              }
              function B(e, t) {
                return e = d.default(e),
                       e.push(n.__assign(n.__assign({}, f.COLUMN_DEFAULTS), {
                         id: t,
                         values: e[0].values.map(function() {
                           return ''
                         })
                       })),
                       e.forEach(function(e) {
                         e.values.push('')
                       }),
                       e
              }
              function j(e) {
                return e = d.default(e), e.pop(), e.forEach(function(e) {
                  e.values.pop()
                }),
                       e
              }
              function V(e, t) {
                var r = n.__assign(
                    n.__assign({}, e.cachedViewState),
                    {columns: j(e.cachedViewState.columns)});
                return t.stripDefaults ? g.stripDefaults(r) : r
              }
              function U(e) {
                var t = e.columnModels.map(function(t, r) {
                  return E(e, r)
                });
                e.cachedViewState = {
                  id: e.id,
                  type: e.type,
                  folderId: e.folderId,
                  columns: t,
                  secret: e.secret
                }
              }
              function z(e, t) {
                e.draggingOnGraphpaper = t
              }
              function G(e) {
                var t = n.__assign(
                    n.__assign({}, e.cachedViewState),
                    {columns: j(e.cachedViewState.columns)});
                e.preTransientState &&
                    (t = n.__assign(n.__assign({}, t), e.preTransientState)),
                    e.cachedUndoRedoState = t
              }
              function K(e, t) {
                if (e.columnModels.length - 1 !== t.length)
                  return {type: 'start-fresh'};
                if (e.columnModels[0].cells.length - 1 !== t[0].values.length)
                  return {type: 'start-fresh'};
                for (var r = -1, n = t.length - 1; n >= 0; n--) {
                  var i = e.columns[n], o = t[n];
                  if (i.id !== o.id) return {type: 'start-fresh'};
                  for (var s = i.values, a = o.values, l = a.length - 1; l >= 0;
                       l--)
                    if (s[l] !== a[l] && (-1 === r && (r = l), r !== l))
                      return {
                        type: 'start-fresh'
                      }
                }
                return -1 === r ? {type: 'none'} :
                                  {type: 'edit-row', rowIndex: r}
              }
              function W(e, t) {
                var r = K(e, t.columns);
                if (p.copyProperties({
                      from: t,
                      to: e,
                      props: {
                        id: !1,
                        type: !1,
                        columns: !1,
                        folderId: !0,
                        secret: !0
                      }
                    }),
                    'start-fresh' === r.type)
                  e.columns = B(t.columns, e.controller.generateId()), Y(e);
                else {
                  switch (r.type) {
                    case 'none':
                      break;
                    case 'edit-row':
                      for (var n = t.columns.length - 1; n >= 0; n--) {
                        ue(e, {column: n, row: r.rowIndex + 1},
                           t.columns[n].values[r.rowIndex])
                      }
                      break;
                    default:
                      return r
                  }
                  for (var i = 0; i < t.columns.length; i++)
                    p.copyProperties({
                      from: t.columns[i],
                      to: e.columnModels[i],
                      props: {
                        id: !1,
                        values: !1,
                        color: !0,
                        latex: !0,
                        hidden: !0,
                        points: !0,
                        lines: !0,
                        dragMode: !0,
                        lineStyle: !0,
                        pointStyle: !0
                      }
                    })
                }
              }
              function H(e, t) {
                var r = d.default(g.inflateDefaults(e)),
                    i = n.__assign(
                        n.__assign(n.__assign({}, r), s.DEFAULTS(t)), {
                          columnModels: void 0,
                          rowModels: void 0,
                          formula: void 0,
                          draggingOnGraphpaper: !1,
                          cachedViewState: {},
                          cachedParsableState: {},
                          cachedUndoRedoState: {},
                          isExpanded: !1
                        });
                i.columns = B(i.columns, t.generateId());
                var o, a = 0;
                for (o = 0; o < i.columns.length; o++)
                  i.columns[o].values || (i.columns[o].values = []),
                      i.columns[o].values.length > a &&
                      (a = i.columns[o].values.length);
                for (o = 0; o < i.columns.length; o++)
                  for (var l = a - i.columns[o].values.length; l > 0; l--)
                    i.columns[o].values.push('');
                return Y(i), i
              }
              function Y(e) {
                e.columnModels = e.columns.map(function(t, r) {
                  return T(e, r, t)
                }),
                e.rowModels = [I(0)];
                for (var t = 0; t < e.columnModels.length; t++)
                  y(e, 0, t, e.columnModels[t]);
                for (var t = 0; t < e.columnModels[0].cells.length; t++) {
                  var r = I(t + 1);
                  e.rowModels.push(r);
                  for (var n = 0; n < e.columnModels.length; n++)
                    y(e, t + 1, n, e.columnModels[n].cells[t])
                }
              }
              function X(e, t, r) {
                for (var n = [], s = Math.min(t.length, fe.length), a = 0;
                     a < s; a++)
                  n.push({
                    id: r.generateId(),
                    latex: l.identifierToLatex(fe[a] + '_' + e),
                    values: t[a],
                    color: r.getNextColor(),
                    hidden: !1,
                    points: !0,
                    lines: !1,
                    dragMode: o.DragMode.NONE,
                    pointStyle: i.PointStyle.POINT,
                    lineStyle: i.LineStyle.SOLID
                  });
                return {
                  id: r.generateId(), type: 'table', folderId: '', secret: !1,
                      columns: n
                }
              }
              function $(e, t) {
                var r = V(e, {stripDefaults: !1});
                if (!r.columns || !t.columns) return t;
                for (var n = 0; n < t.columns.length; n++) {
                  var i = r.columns[n], o = t.columns[n];
                  if (i)
                    for (var s in i)
                      i.hasOwnProperty(s) &&
                          (o.hasOwnProperty(s) || (o[s] = i[s]))
                }
                return t
              }
              function Q(e) {
                var t = e.controller.getFocusLocation();
                return t && 'table' === t.type && t.id === e.id ? t.location :
                                                                  void 0
              }
              function Z(e, t) {
                for (var r = 0; r < e.columnModels.length; r++) {
                  var n = e.columnModels[r];
                  if (n.id === t) return n
                }
              }
              function J(e, t, r) {
                var n = Z(e, t);
                n && (n.points = r, r || (n.dragMode = o.DragMode.NONE))
              }
              function ee(e, t, r) {
                var n = Z(e, t);
                n && (n.pointStyle = r)
              }
              function te(e, t, r) {
                var n = Z(e, t);
                n && (n.lines = r)
              }
              function re(e, t, r) {
                var n = Z(e, t);
                n && (n.lineStyle = r)
              }
              function ne(e, t, r) {
                var n = Z(e, t);
                n &&
                    (n.dragMode = r,
                     r === o.DragMode.NONE || n.points || (n.points = !0))
              }
              function ie(e, t, r) {
                var n = Z(e, t);
                n && (n.color = r)
              }
              function oe(e, t) {
                e.isExpanded = t
              }
              function se(e, t, r) {
                var n = Z(e, t);
                n && (n.hidden = r, r && le(e))
              }
              function ae(e, t, r) {
                var n = Z(e, t);
                n && (n.boundingBoxes = r, le(e))
              }
              function le(e) {
                var t = [];
                e.columnModels.forEach(function(e) {
                  e.boundingBoxes && !e.hidden &&
                      (t = t.concat(e.boundingBoxes))
                }),
                    e.boundingBoxes = t
              }
              function ce(e, t) {
                var r = Z(e, t);
                return !r || !r.points && !r.lines
              }
              function ue(e, t, r) {
                if (0 === t.row) {
                  var n = e.columnModels[t.column].id, i = Z(e, n);
                  if (!i) return;
                  return i.latex = r,
                         void (
                             t.column >= e.columnModels.length - 1 &&
                             O(e, t.column + 1, {
                               id: e.controller.generateId(),
                               latex: '',
                               color: e.controller.getNextColor()
                             }))
                }
                var o = e.columnModels[t.column];
                e.columns[o.index].values[t.row - 1] = r,
                                                  '' !== r &&
                    t.row >= e.columnModels[0].cells.length && A(e, t.row)
              }
              function de(e, t) {
                return t.row < e.rowModels.length &&
                    t.column < e.columnModels.length
              }
              function pe(e) {
                if (e.values)
                  for (var t = 0, r = e.values; t < r.length; t++)
                    if ('' !== r[t]) return !1;
                if (e.computedValues)
                  for (var n = 0, i = e.computedValues; n < i.length; n++)
                    if ('' !== i[n]) return !1;
                return !0
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.insertCellToRow = y, t.removeCellFromRow = v,
                  t.formatValueForDisplay = b, t.setColumnComputedValues = x,
                  t.updateIsCollapsedByFocusLocation = w,
                  t.getCollapsedRange = _, t.getColumnState = E;
              var he = 0;
              t.getGUID = S, t.makeCell = M, t.makeRow = I,
              t.insertCellToColumn = k, t.removeCellFromColumn = C,
              t.makeColumn = T, t.onControllerUpdate = L, t.onFormulaUpdate = P,
              t.insertBlankRow = A, t.removeRow = D, t.insertBlankColumn = O,
              t.removeColumn = F, t.getRowAutoFillValues = q, t.eachLatex = N,
              t.updateCachedParsableState = R, t.addBlankRowAndColumn = B,
              t.stripBlankRowAndColumn = j, t.getState = V,
              t.updateCachedViewState = U, t.setIsDraggingOnGrapher = z,
              t.updateCachedUndoRedoState = G,
              t.computeTableStructureMutation = K, t.restoreState = W,
              t.initModel = H, t.buildEntireColumnStructure = Y;
              var fe = ['x', 'y', 'z', 'u', 'v', 'w'];
              t.makeTableState = X, t.cloneTableAndExtendWithProperties = $,
              t.getSelectedCell = Q, t.getColumnModel = Z,
              t.setColumnPoints = J, t.setColumnPointStyle = ee,
              t.setColumnLines = te, t.setColumnLineStyle = re,
              t.setColumnDragMode = ne, t.setColumnColor = ie,
              t.setExpanded = oe, t.setColumnHidden = se,
              t.setColumnBoundingBoxes = ae, t.mergeBoundingBoxes = le,
              t.shouldHideColumn = ce, t.setCellLatex = ue,
              t.doesCellExist = de, t.isColumnEmpty = pe
            });
          r('main/propagate_selection',
            ['require', 'graphing-calc/models/table'], function(e) {
              'use strict';
              function t(e) {
                var t = e && e.id;
                if (e && 'table' === e.type) {
                  var r = n.getSelectedCell(e);
                  if (r) {
                    var i = e.columnModels[r.column];
                    t = i ? i.id : void 0
                  } else
                    t = void 0
                }
                if (e && 'folder' === e.type) {
                  var o = e.selectedHiddenChild;
                  t = o ? o.id : void 0
                }
                return t
              }
              function r(e, r, n, i) {
                var o = e.getSelectedItem(), s = t(o);
                return s !== i && r.select(s), s
              }
              var n = e('graphing-calc/models/table');
              return {
                getSelectedId: t, propagateSelection: r
              }
            });
          (function(e, t) {
            'object' == typeof exports&& 'object' == typeof module ?
                                                  module.exports = t() :
                'function' == typeof r && r.amd ? r('flux', [], t) :
                'object' == typeof exports      ? exports.Flux = t() :
                                                  e.Flux = t()
          })(this, function() {
            return function(e) {
              function t(n) {
                if (r[n]) return r[n].exports;
                var i = r[n] = {exports: {}, id: n, loaded: !1};
                return e[n].call(i.exports, i, i.exports, t), i.loaded = !0,
                                                              i.exports
              }
              var r = {};
              return t.m = e, t.c = r, t.p = '', t(0)
            }([
              function(e, t, r) {
                'use strict';
                e.exports.Dispatcher = r(1)
              },
              function(e, t, r) {
                'use strict';
                function n(e, t) {
                  if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function')
                }
                t.__esModule = !0;
                var i = r(2), o = function() {
                  function e() {
                    n(this, e), this._callbacks = {}, this._isDispatching = !1,
                                this._isHandled = {}, this._isPending = {},
                                this._lastID = 1
                  }
                  return e.prototype.register = function(e) {
                    var t = 'ID_' + this._lastID++;
                    return this._callbacks[t] = e, t
                  }, e.prototype.unregister = function(e) {
                    this._callbacks[e] ||
                        i(!1,
                          'Dispatcher.unregister(...): `%s` does not map to a registered callback.',
                          e),
                        delete this._callbacks[e]
                  }, e.prototype.waitFor = function(e) {
                    this._isDispatching ||
                        i(!1,
                          'Dispatcher.waitFor(...): Must be invoked while dispatching.');
                    for (var t = 0; t < e.length; t++) {
                      var r = e[t];
                      this._isPending[r] ?
                          this._isHandled[r] ||
                              i(!1,
                                'Dispatcher.waitFor(...): Circular dependency detected while waiting for `%s`.',
                                r) :
                          (this._callbacks[r] ||
                               i(!1,
                                 'Dispatcher.waitFor(...): `%s` does not map to a registered callback.',
                                 r),
                           this._invokeCallback(r))
                    }
                  }, e.prototype.dispatch = function(e) {
                    this._isDispatching &&
                        i(!1,
                          'Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch.'),
                        this._startDispatching(e);
                    try {
                      for (var t in this._callbacks)
                        this._isPending[t] || this._invokeCallback(t)
                    } finally {
                      this._stopDispatching()
                    }
                  }, e.prototype.isDispatching = function() {
                    return this._isDispatching
                  }, e.prototype._invokeCallback = function(e) {
                    this._isPending[e] = !0,
                    this._callbacks[e](this._pendingPayload),
                    this._isHandled[e] = !0
                  }, e.prototype._startDispatching = function(e) {
                    for (var t in this._callbacks)
                      this._isPending[t] = !1, this._isHandled[t] = !1;
                    this._pendingPayload = e, this._isDispatching = !0
                  }, e.prototype._stopDispatching = function() {
                    delete this._pendingPayload, this._isDispatching = !1
                  }, e
                }();
                e.exports = o
              },
              function(e, t, r) {
                'use strict';
                function n(e, t, r, n, i, o, s, a) {
                  if (void 0 === t)
                    throw new Error(
                        'invariant requires an error message argument');
                  if (!e) {
                    var l;
                    if (void 0 === t)
                      l = new Error(
                          'Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');
                    else {
                      var c = [r, n, i, o, s, a], u = 0;
                      l = new Error(t.replace(/%s/g, function() {
                        return c[u++]
                      })), l.name = 'Invariant Violation'
                    }
                    throw l.framesToPop = 1, l
                  }
                }
                e.exports = n
              }
            ])
          });
          r('keys', ['require'], function(e) {
            return new function() {
              var e = {
                8: this.BACKSPACE = 'Backspace',
                9: this.TAB = 'Tab',
                13: this.ENTER = 'Enter',
                16: this.SHIFT = 'Shift',
                17: this.CONTROL = 'Control',
                18: this.ALT = 'Alt',
                20: this.CAPSLOCK = 'CapsLock',
                27: this.ESCAPE = 'Esc',
                32: this.SPACEBAR = 'Space',
                33: this.PAGEUP = 'PageUp',
                34: this.PAGEDOWN = 'PageDown',
                35: this.END = 'End',
                36: this.HOME = 'Home',
                37: this.LEFT = 'Left',
                38: this.UP = 'Up',
                39: this.RIGHT = 'Right',
                40: this.DOWN = 'Down',
                46: this.DELETE = 'Del'
              },
                  t = {
                    UIKeyInputUpArrow: this.UP,
                    UIKeyInputDownArrow: this.DOWN,
                    UIKeyInputLeftArrow: this.LEFT,
                    UIKeyInputRightArrow: this.RIGHT,
                    UIKeyInputEscape: this.ESCAPE,
                    UIKeyInputPageUp: this.PAGEUP,
                    UIKeyInputPageDown: this.PAGEDOWN
                  };
              this.isUndo = function(e) {
                return !e.altKey && (e.ctrlKey || e.metaKey) && 90 == e.which &&
                    !e.shiftKey
              }, this.isRedo = function(e) {
                return !e.altKey && (e.ctrlKey || e.metaKey) &&
                    (89 == e.which || 90 == e.which && e.shiftKey)
              }, this.isSelectAll = function(e) {
                return !e.altKey && (e.ctrlKey || e.metaKey) && 65 == e.which
              }, this.isBacktick = function(e) {
                return !(
                    e.altKey || e.ctrlKey || e.metaKey || e.shiftKey ||
                    192 != e.which)
              }, this.isHelp = function(e) {
                return !e.altKey && (e.ctrlKey || e.metaKey) && 191 == e.which
              }, this.lookup = function(r) {
                return e[r.which] || t[r.key]
              }, this.lookupChar = function(e) {
                return String.fromCharCode(e.which)
              }
            }
          });
          r('loadcss!touchtracking', function() {});
          r('touchtracking',
            [
              'require', 'jquery', 'ipad.ghostevents', 'keys',
              'loadcss!./touchtracking'
            ],
            function(e) {
              function t(e, t) {
                var n = q ? {passive: !1} : void 0;
                document.addEventListener(e, function(e) {
                  t(r.event.fix(e))
                }, n)
              }
              var r = e('jquery'), n = e('ipad.ghostevents'), i = e('keys');
              e('loadcss!./touchtracking'),
                  void 0 == window._touchtracking_id_counter &&
                  (window._touchtracking_id_counter = 0),
                  window._touchtracking_id_counter += 1;
              var o = 'touchtracking_id_' + window._touchtracking_id_counter,
                  s = function(e) {
                    r(e).addClass('dcg-tap-container'), r(e).addClass(o)
                  }, a = function(e) {
                    r(e).addClass('dcg-no-touchtracking')
                  };
              n.evtInScope = function(e) {
                return E(e.target)
              }, n.isGhostEvent = function(e) {
                return !window.PointerEvent &&
                    (!(u !== l && u !== c && !I()) &&
                     (e.target !== m &&
                      ((!e.target || !r.contains(e.target, m)) &&
                       (!m || !r.contains(m, e.target)))))
              };
              var l = 1, c = 4, u = 0, d = {}, p = {}, h = [], f = 0, g = null,
                  m = null, y = null, v = [], b = function(e) {
                    for (var t = []; e;) t.push(e), e = e.parentNode;
                    return t
                  }, x = function(e) {
                    for (var t = [], n = 0; n < e.length; n++) {
                      var i = e[n];
                      if (t.push(i),
                          r(i).is('.dcg-tap-container, .dcg-no-touchtracking'))
                        return r(i).is('.dcg-tap-container.' + o) ? t : []
                    }
                    return []
                  }, w = function(e, t) {
                    m = null, u = e,
                    h = b(
                        u === l ? t.originalEvent.touches[0].target : t.target),
                    r(x(h)).addClass('dcg-depressed').each(function() {
                      var e = r(this);
                      S(e) && e.addClass('dcg-focus-by-tap')
                    }),
                    r(h).each(function() {
                      var e = r(this);
                      e.data({
                        originalScrollTop: e.scrollTop(),
                        originalScrollLeft: e.scrollLeft()
                      })
                    }),
                    p = {}
                  }, _ = function(e) {
                    return e.is('input, textarea, select') ||
                        e.hasClass('dcg-mathquill-input-span') ||
                        e.is('[contenteditable=true]')
                  }, E = function(e) {
                    return !!r(e).closest(
                                     '.dcg-tap-container, .dcg-no-touchtracking')
                                 .is('.dcg-tap-container.' + o)
                  }, S = function(e) {
                    return 3 !== u && !_(e) && E(e)
                  }, M = function(e) {
                    m = null, r('.dcg-depressed').removeClass('dcg-depressed');
                    var t = r(document.activeElement);
                    if (S(t)) try {
                        t.blur()
                      } catch (e) {
                      }
                    if (r('.dcg-focus-by-tap').removeClass('dcg-focus-by-tap'),
                        r(h).each(function() {
                          var e = r(this),
                              t = e.data('originalScrollTop') - e.scrollTop(),
                              n = e.data('originalScrollLeft') - e.scrollLeft();
                          (t || n) && (p.scroll = !0)
                        }),
                        1 === p['dcg-tapstart'] && 1 === p['dcg-tapend'] &&
                            !p['dcg-tapcancel'] && !p.scroll) {
                      var n = 'mouse' === e.device ?
                          e.clientX :
                          e.originalEvent.changedTouches[0].clientX,
                          i = 'mouse' === e.device ?
                          e.clientY :
                          e.originalEvent.changedTouches[0].clientY;
                      if (e && !e.device && 0 === n && 0 === i) {
                        var o = e.target.getBoundingClientRect();
                        n = (o.left + o.right) / 2, i = (o.top + o.bottom) / 2,
                        e.device = 'keyboard'
                      }
                      for (var s = !1, a = 0; a < h.length && !s; a++) {
                        var d, y = r(h[a]);
                        if ('function' == typeof y[0].getBoundingClientRect &&
                                (d = y[0].getBoundingClientRect()),
                            'true' === y.attr('tapboundary') && (s = !0), d) {
                          if (n < d.left || i < d.top) continue;
                          if (n > d.right) continue;
                          if (i > d.bottom) continue
                        }
                        m = y[0], C('dcg-tap', e, m);
                        break
                      }
                    }
                    u !== l && u !== c || (g = setTimeout(function() {
                                             g = null, f = (new Date).getTime()
                                           }, 1e3)), h = [], u = 0
                  }, I = function() {
                    return g || (new Date).getTime() - f < 500
                  }, k = function(e) {
                    for (var t = [], r = 0; r < e.length; r++) {
                      var n = e[r];
                      t.push({
                        identifier: n.identifier,
                        x: n.pageX,
                        y: n.pageY,
                        screenX: n.screenX,
                        screenY: n.screenY,
                        pageX: n.pageX,
                        pageY: n.pageY,
                        clientX: n.clientX,
                        clientY: n.clientY
                      })
                    }
                    return t
                  }, C = function(e, t, n) {
                    if ('dcg-tapstart' === e)
                      d[t.identifier] = {
                        type: e,
                        pageX: t.originalEvent.changedTouches[0].pageX,
                        pageY: t.originalEvent.changedTouches[0].pageY
                      };
                    else if ('dcg-tapmove' === e) {
                      var i = t.originalEvent.changedTouches[0],
                          o = d[t.identifier];
                      if (o && i.pageX === o.pageX && i.pageY === o.pageY)
                        return;
                      if ((u === l || u === c) && o &&
                          'dcg-tapstart' === o.type &&
                          Math.abs(o.pageX - i.pageX) +
                                  Math.abs(o.pageY - i.pageY) <
                              2)
                        return;
                      d[t.identifier] = {
                        type: e,
                        pageX: t.originalEvent.changedTouches[0].pageX,
                        pageY: t.originalEvent.changedTouches[0].pageY
                      }
                    }
                    void 0 === p[e.toLowerCase()] ? p[e.toLowerCase()] = 1 :
                                                    p[e.toLowerCase()]++;
                    var s = r.event.fix(t.originalEvent);
                    s.type = e,
                    s.device = u === l || u === c ? 'touch' :
                        3 === u                   ? 'keyboard' :
                                                    'mouse',
                    s.touches = k(t.originalEvent.touches),
                    s.changedTouches = k(t.originalEvent.changedTouches),
                    s.target = n || t.target;
                    var a = 'keyboard' !== s.device && p['dcg-longhold'] > 0;
                    s.wasLongheld =
                        function() {
                      return a
                    },
                    s.preventTap =
                        function() {
                      p['dcg-tapcancel'] = 1
                    },
                    clearTimeout(y),
                    'dcg-tapstart' === s.type && 'keyboard' !== s.device &&
                        1 === s.touches.length &&
                        (y = setTimeout(
                             function() {
                               C('dcg-longhold', t, n)
                             },
                             500)),
                    s.target && r.nodeName(s.target, 'a') &&
                        'dcg-tap' === s.type && 'keyboard' === s.device &&
                        s.target.click && s.target.click(),
                    r(s.target).trigger(s)
                  }, T = function(e) {
                    var t = h, n = !!h.length,
                        i = r('.dcg-tap-container.' + o + ' .dcg-hovered'),
                        s = r.makeArray(i.filter(function() {
                          return E(this)
                        })),
                        a = [], l = [], c = [];
                    x(b(e)).forEach(function(e) {
                      n && -1 === t.indexOf(e) ||
                          (-1 === s.indexOf(e) && c.push(e), a.push(e))
                    });
                    for (var u = 0; u < s.length; u++)
                      e = s[u], -1 === a.indexOf(e) && l.push(e);
                    r(l).removeClass('dcg-hovered').trigger('tipsyhide'),
                        r(c).addClass('dcg-hovered').trigger('tipsyshow')
                  }, L = function(e) {
                    for (var t = 0; t < v.length; t++)
                      if (v[t].pointerId === e) return !0;
                    return !1
                  }, P = function(e) {
                    for (var t = 0; t < v.length; t++)
                      if (v[t].pointerId === e) return v.splice(t, 1)[0]
                  }, A = function(e) {
                    0 === u && w(c, e), T(null), v.push(e.originalEvent),
                        e.originalEvent.identifier = e.originalEvent.pointerId,
                        e.originalEvent.touches = v,
                        e.originalEvent.changedTouches = [e.originalEvent],
                        C('dcg-tapstart', e)
                  }, D = function(e) {
                    P(e.originalEvent.pointerId),
                        e.originalEvent.identifier = e.originalEvent.pointerId,
                        e.originalEvent.touches = v,
                        e.originalEvent.changedTouches = [e.originalEvent],
                        C('dcg-tapcancel', e), 0 === v.length && M(e)
                  }, O = function(e) {
                    P(e.originalEvent.pointerId),
                        e.originalEvent.identifier = e.originalEvent.pointerId,
                        e.originalEvent.touches = v,
                        e.originalEvent.changedTouches = [e.originalEvent],
                        C('dcg-tapend', e), 0 === v.length && M(e)
                  }, F = function(e) {
                    return 'touch' === e.originalEvent.pointerType ||
                        2 === e.originalEvent.pointerType
                  };
              r(document).on('pointerdown MSPointerDown', function(e) {
                2 !== u && u !== l && F(e) &&
                    (L(e.originalEvent.pointerId) || A(e))
              }), r(document).on('pointermove MSPointerMove', function(e) {
                2 !== u && u !== l && F(e) &&
                    (L(e.originalEvent.pointerId) || A(e),
                     P(e.originalEvent.pointerId), v.push(e.originalEvent),
                     e.originalEvent.identifier = e.originalEvent.pointerId,
                     e.originalEvent.touches = v,
                     e.originalEvent.changedTouches = [e.originalEvent],
                     C('dcg-tapmove', e))
              }), r(document).on('pointercancel MSPointerCancel', function(e) {
                if (u === c && F(e) && L(e.originalEvent.pointerId)) {
                  D(e);
                  for (var t; t = v.pop();) {
                    var e = r.Event(t, {originalEvent: t});
                    D(e)
                  }
                }
              }), r(document).on('pointerup MSPointerUp', function(e) {
                if (u === c && F(e) && L(e.originalEvent.pointerId)) {
                  O(e);
                  for (var t; t = v.pop();) {
                    var e = r.Event(t, {originalEvent: t});
                    O(e)
                  }
                }
              });
              var q = function() {
                var e = !1;
                try {
                  var t = Object.defineProperty({}, 'passive', {
                    get: function() {
                      e = !0
                    }
                  });
                  window.addEventListener('test', function() {}, t),
                      window.removeEventListener('test', function() {}, t)
                } catch (e) {
                }
                return e
              }();
              return t('touchstart',
                       function(e) {
                         2 !== u && u !== c &&
                             (0 === u && w(l, e), T(null), C('dcg-tapstart', e))
                       }),
                     t('touchmove',
                       function(e) {
                         u === l && C('dcg-tapmove', e)
                       }),
                     t('touchcancel',
                       function(e) {
                         u === l &&
                             (C('dcg-tapcancel', e),
                              0 === e.originalEvent.touches.length && M(e))
                       }),
                     t('touchend',
                       function(e) {
                         u === l &&
                             (C('dcg-tapend', e),
                              0 === e.originalEvent.touches.length && M(e))
                       }),
                     r(document).on(
                         'mousedown',
                         function(e) {
                           if (1 !== e.button && 2 !== e.button) {
                             if (u === l || u === c || I())
                               return void (
                                   !r(e.target).is('input, textarea, select') &&
                                   E(e.target) && e.preventDefault());
                             w(2, e), e.originalEvent.touches = [e],
                                      e.originalEvent.changedTouches = [e],
                                      C('dcg-tapstart', e)
                           }
                         }),
                     r(document).ready(function() {
                       r(document).on('mousedown', function(e) {
                         var t = !!r(e.target)
                                       .closest('.dcg-do-not-blur')
                                       .length,
                             n = !!r(e.target).closest('.dcg-do-blur').length;
                         if (t && !n && E(e.target)) {
                           e.preventDefault();
                           try {
                             var i = window.getSelection();
                             if (1 === i.rangeCount) {
                               var o = i.getRangeAt(0);
                               o.startContainer === o.endContainer &&
                                   r(o.startContainer)
                                       .closest('.dcg-text-selectable')
                                       .length &&
                                   i.removeAllRanges()
                             }
                           } catch (e) {
                           }
                         }
                       })
                     }),
                     r(document).on('mouseleave', function(e) {
                       0 === u && (I() || T(null))
                     }), r(document).on('mousemove', function(e) {
                       1 !== e.button && 2 !== e.button && u !== l && u !== c &&
                           (I() ||
                            (T(e.target), e.originalEvent.touches = [e],
                             e.originalEvent.changedTouches = [e],
                             C('dcg-tapmove', e)))
                     }), r(document).on('mouseup', function(e) {
                       1 !== e.button && 2 !== e.button && 2 === u &&
                           (e.originalEvent.touches = [],
                            e.originalEvent.changedTouches = [e],
                            C('dcg-tapend', e), M(e))
                     }), r(document).on('keydown', function(e) {
                       if ((i.lookup(e) === i.ENTER ||
                            i.lookup(e) === i.SPACEBAR) &&
                           E(e.target) && 3 !== u) {
                         if (r(e.target).is(
                                 'a:not([ontap]), button, input, textarea, select, [contenteditable="true"]'))
                           return;
                         e.preventDefault(), w(3, e),
                             e.originalEvent.touches = [e],
                             e.originalEvent.changedTouches = [e],
                             C('dcg-tapstart', e)
                       }
                     }), r(document).on('keyup', function(e) {
                       i.lookup(e) !== i.ENTER && i.lookup(e) !== i.SPACEBAR ||
                           !E(e.target) ||
                           3 === u &&
                               (e.originalEvent.touches = [],
                                e.originalEvent.changedTouches = [e],
                                C('dcg-tapend', e), M(e))
                     }), {
                monitor: s, ignore: a, isTapActive: function() {
                  return 0 !== u
                }, elIsFocusable: _
              }
            });
          r('lib/conditional_blur',
            ['require', 'exports', 'touchtracking', 'jquery'],
            function(e, t, r, n) {
              'use strict';
              function i() {
                if (document.activeElement) {
                  var e = n(document.activeElement);
                  r.elIsFocusable(e) && n(document.activeElement).blur()
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}), t.default = i
            });
          r('lib/state-stack', ['require', 'exports'], function(e, t) {
            'use strict';
            Object.defineProperty(t, '__esModule', {value: !0});
            var r = function() {
              function e(e) {
                void 0 === e && (e = 100), this.clear(), this._sizeLimit = e
              }
              return e.prototype.clear = function() {
                this._stack = [], this._stackPointer = -1
              }, e.prototype.getState = function() {
                return this._stack[this._stackPointer]
              }, e.prototype.serializeForBugsnag = function() {
                function e(e) {
                  try {
                    return JSON.stringify(e, null, 2)
                  } catch (e) {
                    return '[[could not jsonify]]'
                  }
                }
                return {
                  currentState: e(this._stack[this._stackPointer]),
                      undoState: e(this._stack[this._stackPointer - 1]),
                      redoState: e(this._stack[this._stackPointer + 1])
                }
              }, e.prototype.addState = function(e) {
                this.canRedo() && this._stack.splice(this._stackPointer + 1),
                    this._stack.push(e),
                    this._stack.length > this._sizeLimit && this._stack.shift(),
                    this._stackPointer = this._stack.length - 1
              }, e.prototype.replaceState = function(e) {
                this.canRedo() && this._stack.splice(this._stackPointer + 1),
                    0 === this._stack.length ?
                    (this._stack.push(e), this._stackPointer = 0) :
                    this._stack[this._stackPointer] = e
              }, e.prototype.canUndo = function() {
                return this._stackPointer > 0
              }, e.prototype.canRedo = function() {
                return this._stackPointer < this._stack.length - 1
              }, e.prototype.undo = function() {
                this.canUndo() && (this._stackPointer -= 1)
              }, e.prototype.redo = function() {
                this.canRedo() && (this._stackPointer += 1)
              }, e
            }();
            t.default = r
          }), r('graphing/viewport', ['require', 'exports'], function(e, t) {
            'use strict';
            function r(e, t) {
              return e * (1 - 1e-8) + 1e-8 * t > e && t - e > 1e-300 &&
                  t - e < 1e300
            }
            Object.defineProperty(t, '__esModule', {value: !0});
            var n = function() {
              function e(e, t, r, n) {
                void 0 === e && (e = -10), void 0 === t && (t = 10),
                    void 0 === r && (r = -10), void 0 === n && (n = 10),
                    this.xmin = e, this.xmax = t, this.ymin = r, this.ymax = n
              }
              return e.fromObject = function(t) {
                return new e(t.xmin, t.xmax, t.ymin, t.ymax)
              }, e.prototype.toObject = function() {
                return {
                  xmin: this.xmin, ymin: this.ymin, xmax: this.xmax,
                      ymax: this.ymax
                }
              }, e.prototype.equals = function(e) {
                return this.xmin === e.xmin &&
                    (this.ymin === e.ymin &&
                     (this.xmax === e.xmax && this.ymax === e.ymax))
              }, e.prototype.isXValid = function() {
                return r(this.xmin, this.xmax)
              }, e.prototype.isYValid = function() {
                return r(this.ymin, this.ymax)
              }, e.prototype.isValid = function() {
                return this.isXValid() && this.isYValid()
              }, e.prototype.isSquare = function(e) {
                return Math.abs(e.height - e.width * this.aspectRatio()) < 1
              }, e.prototype.aspectRatio = function() {
                return (this.ymax - this.ymin) / (this.xmax - this.xmin)
              }, e.prototype.squareXAxis = function(t) {
                var r = this.xmax - this.xmin, n = this.ymax - this.ymin,
                    i = this.xmin + r / 2, o = n / t.height * t.width;
                return new e(i - o / 2, i + o / 2, this.ymin, this.ymax)
              }, e.prototype.squareYAxis = function(t) {
                var r = this.xmax - this.xmin, n = this.ymax - this.ymin,
                    i = this.ymin + n / 2, o = r / t.width * t.height;
                return new e(this.xmin, this.xmax, i - o / 2, i + o / 2)
              }, e.prototype.squareCrop = function(e) {
                return this.aspectRatio() > e.height / e.width ?
                    this.squareYAxis(e) :
                    this.squareXAxis(e)
              }, e.prototype.polarDiameter = function() {
                var e = Math.abs(this.xmax), t = Math.abs(this.xmin),
                    r = Math.abs(this.ymax), n = Math.abs(this.ymin);
                return 1.5 * Math.max(e, t, r, n)
              }, e.prototype.largestR = function() {
                return Math.sqrt(
                    Math.pow(Math.max(-this.xmin, this.xmax), 2) +
                    Math.pow(Math.max(-this.ymin, this.ymax), 2))
              }, e.prototype.smallestR = function() {
                return this.xmin <= 0 && this.xmax >= 0 && this.ymin <= 0 &&
                        this.ymax >= 0 ?
                    0 :
                    this.xmin <= 0 && this.xmax >= 0 ?
                    Math.min(Math.abs(this.ymin), Math.abs(this.ymax)) :
                    this.ymin <= 0 && this.ymax >= 0 ?
                    Math.min(Math.abs(this.xmin), Math.abs(this.xmax)) :
                    Math.sqrt(
                        Math.pow(Math.max(this.xmin, -this.xmax), 2) +
                        Math.pow(Math.max(this.ymin, -this.ymax), 2))
              }, e
            }();
            t.Viewport = n
          });
          r('core/graphing-calc/migrations/0', ['require'], function(e) {
            'use strict';
            function t(e) {
              if (e.type) {
                if (l.hasOwnProperty(e.type)) return e.type;
                throw new Error('Invalid item type: \'' + e.type + '\'.')
              }
              return void 0 !== e.text                          ? 'text' :
                  void 0 !== e.columns || void 0 !== e.headings ? 'table' :
                                                                  'expression'
            }
            function r(e) {
              return e.replace(
                  /\\(total|length|mean|median|quantile|stdev|stddev|stdDev|stdevp|stddevp|stdDevP|var|variance|cov|corr|ceil|floor|round|abs|mod|lcm|mcm|mcd|nCr|nPr|signum|sign|arcsinh|arccosh|arctanh|arccsch|arcsech|arccoth|arccsc|arcsec|arccot)/g,
                  '\\operatorname{$1}')
            }
            function n(e) {
              var t = {};
              for (var n in e)
                e.hasOwnProperty(n) &&
                    (t[n] = 'latex' === n ? r(e[n]) :
                         'values' === n   ? e[n].map(r) :
                                            e[n]);
              return t
            }
            function i(e) {
              var i, o = t(e), s = {};
              switch (o) {
                case 'expression':
                  for (i in e)
                    e.hasOwnProperty(i) &&
                        (s[i] = 'latex' === i ? r(e[i]) : e[i]);
                  return s.type = o, s;
                case 'table':
                  for (i in e)
                    e.hasOwnProperty(i) &&
                        (s[i] = 'columns' === i ? e[i].map(n) : e[i]);
                  return s.type = o, s;
                case 'image':
                  for (i in e)
                    e.hasOwnProperty(i) &&
                        (s[i] = 'width' === i || 'height' === i || 'x' === i ||
                                 'y' === i ?
                             r(e[i]) :
                             e[i]);
                  return s.type = o, s;
                case 'text':
                case 'folder':
                  for (i in e) e.hasOwnProperty(i) && (s[i] = e[i]);
                  return s.type = o, s
              }
            }
            function o(e) {
              var t = {};
              for (var r in e)
                e.hasOwnProperty(r) && 'xAxisArrows' !== r &&
                    'yAxisArrows' !== r && (t[r] = e[r]);
              return t.xAxisArrowMode = c[e.xAxisArrows || 'none'],
                     t.yAxisArrowMode = c[e.yAxisArrows || 'none'], t
            }
            function s(e) {
              if (e.version)
                throw new Error('Unexpected version: ' + e.version);
              var t = {};
              return t.graph = o(e.graph),
                     t.expressions = {list: e.expressions.list.map(i)},
                     t.version = 0, t
            }
            var a = {NONE: 'NONE', POSITIVE: 'POSITIVE', BOTH: 'BOTH'}, l = {
              expression: !0,
              table: !0,
              image: !0,
              folder: !0,
              text: !0
            },
                c = {none: a.NONE, both: a.BOTH, positive: a.POSITIVE};
            return s
          });
          r('core/graphing-calc/migrations/1', ['require'], function(e) {
            'use strict';
            function t(e) {
              return e.replace(/\\(sech|csch)/g, '\\operatorname{$1}')
            }
            function r(e) {
              var r = {};
              for (var n in e)
                e.hasOwnProperty(n) &&
                    (r[n] = 'latex' === n ? t(e[n]) :
                         'values' === n   ? e[n].map(t) :
                                            e[n]);
              return r
            }
            function n(e) {
              var n, i = e.type, o = {};
              switch (i) {
                case 'expression':
                  for (n in e)
                    e.hasOwnProperty(n) &&
                        (o[n] = 'latex' === n ? t(e[n]) : e[n]);
                  return o;
                case 'table':
                  for (n in e)
                    e.hasOwnProperty(n) &&
                        (o[n] = 'columns' === n ? e[n].map(r) : e[n]);
                  return o;
                case 'image':
                  for (n in e)
                    e.hasOwnProperty(n) &&
                        (o[n] = 'width' === n || 'height' === n || 'x' === n ||
                                 'y' === n ?
                             t(e[n]) :
                             e[n]);
                  return o;
                case 'text':
                case 'folder':
                  for (n in e) e.hasOwnProperty(n) && (o[n] = e[n]);
                  return o;
                default:
                  throw new Error('Unexpected expression type: ' + i)
              }
            }
            function i(e) {
              if (e.version)
                throw new Error('Unexpected version: ' + e.version);
              var t = {};
              return t.graph = e.graph,
                     t.expressions = {list: e.expressions.list.map(n)},
                     t.version = o, t
            }
            var o = 1;
            return i
          });
          r('core/graphing-calc/migrations/2',
            ['require', 'core/lib/color-helpers'], function(e) {
              'use strict';
              function t(e) {
                switch (e) {
                  case a:
                    return s.RED;
                  case l:
                    return s.BLUE;
                  case c:
                    return s.GREEN;
                  case u:
                    return s.PURPLE;
                  case d:
                    return s.ORANGE;
                  case p:
                    return s.BLACK;
                  default:
                    return e
                }
              }
              function r(e) {
                var r = {};
                for (var n in e)
                  e.hasOwnProperty(n) &&
                      (r[n] = 'color' === n ? t(e[n]) : e[n]);
                return r
              }
              function n(e) {
                var n, i = e.type, o = {};
                switch (i) {
                  case 'expression':
                    for (n in e)
                      e.hasOwnProperty(n) &&
                          (o[n] = 'color' === n ? t(e[n]) : e[n]);
                    return o;
                  case 'table':
                    for (n in e)
                      e.hasOwnProperty(n) &&
                          (o[n] = 'columns' === n ? e[n].map(r) : e[n]);
                    return o;
                  case 'image':
                  case 'text':
                  case 'folder':
                    for (n in e) e.hasOwnProperty(n) && (o[n] = e[n]);
                    return o;
                  default:
                    throw new Error('Unexpected expression type: ' + i)
                }
              }
              function i(e) {
                if (e.version > 1)
                  throw new Error('Unexpected version: ' + e.version);
                var t = {};
                return t.graph = e.graph,
                       t.expressions = {list: e.expressions.list.map(n)},
                       t.version = o, t
              }
              var o = 2, s = e('core/lib/color-helpers').colors, a = '#C0504D',
                  l = '#4F81BD', c = '#9BBB59', u = '#8064A2', d = '#F79646',
                  p = '#000000';
              return i
            });
          r('core/graphing-calc/migrations/3', ['require'], function(e) {
            'use strict';
            function t(e) {
              if ('string' == typeof e) return e;
              if (void 0 === e) return '';
              var t = e + '';
              return t = t.replace(/1e\+?([-\d]+)/, '10^{$1}'),
                     t = t.replace(/([-\d\.]+)e\+?([-\d]+)/, '$1\\cdot 10^{$2}')
            }
            function r(e) {
              var r, n = e.type, i = {};
              switch (n) {
                case 'expression':
                  for (r in e)
                    e.hasOwnProperty(r) &&
                        (i[r] = 'sliderMax' === r || 'sliderMin' === r ||
                                 'sliderInterval' === r ?
                             t(e[r]) :
                             'domain' === r ?
                             {max: t(e[r].max), min: t(e[r].min)} :
                             e[r]);
                  return i.hasOwnProperty('sliderMin') &&
                             void 0 === i.sliderInterval &&
                             (i.sliderInterval = ''),
                         i;
                case 'image':
                case 'table':
                case 'text':
                case 'folder':
                  for (r in e) e.hasOwnProperty(r) && (i[r] = e[r]);
                  return i;
                default:
                  throw new Error('Unexpected expression type: ' + n)
              }
            }
            function n(e) {
              if (e.version > 2)
                throw new Error('Unexpected version: ' + e.version);
              var t = {};
              return t.graph = e.graph,
                     t.expressions = {list: e.expressions.list.map(r)},
                     t.version = i, t
            }
            var i = 3;
            return n
          });
          r('core/graphing-calc/migrations/4', ['require'], function(e) {
            'use strict';
            function t(e) {
              switch (e) {
                case 'point':
                  return 'POINT';
                case 'cross':
                  return 'CROSS';
                case 'open':
                  return 'OPEN';
                case 'normal':
                  return 'SOLID';
                case 'dashed':
                  return 'DASHED';
                case 'dotted':
                  return 'DOTTED';
                default:
                  return e
              }
            }
            function r(e) {
              var r = {};
              for (var n in e)
                e.hasOwnProperty(n) && (r[n] = 'style' === n ? t(e[n]) : e[n]);
              return r
            }
            function n(e) {
              var n, i = e.type, o = {};
              switch (i) {
                case 'expression':
                  for (n in e)
                    e.hasOwnProperty(n) &&
                        (o[n] = 'style' === n ? t(e[n]) : e[n]);
                  return o;
                case 'table':
                  for (n in e)
                    e.hasOwnProperty(n) &&
                        (o[n] = 'columns' === n ? e[n].map(r) : e[n]);
                  return o;
                case 'image':
                case 'text':
                case 'folder':
                  for (n in e) e.hasOwnProperty(n) && (o[n] = e[n]);
                  return o;
                default:
                  throw new Error('Unexpected expression type: ' + i)
              }
            }
            function i(e) {
              if (3 !== e.version)
                throw new Error('Unexpected version: ' + e.version);
              var t = {};
              return t.graph = e.graph,
                     t.expressions = {list: e.expressions.list.map(n)},
                     t.version = o, t
            }
            var o = 4;
            return i
          });
          r('core/graphing-calc/validate-state',
            ['require', 'exports', 'core/lib/deepCopy'], function(e, t, r) {
              'use strict';
              function n(e) {
                'number' == typeof e.min && (e.min = '' + e.min),
                    'number' == typeof e.max && (e.max = '' + e.max),
                    'number' == typeof e.step && (e.step = '' + e.step)
              }
              function i(e) {
                e.slider && n(e.slider),
                    'string' != typeof e.id && (e.id = '' + e.id)
              }
              function o(e) {
                for (var t, r, n = a(e) + 1, o = {}, s = 0, l = e; s < l.length;
                     s++) {
                  var c = l[s];
                  if (i(c), 'folder' === c.type)
                    t = c.id, o[c.id] && (c.id = '' + n, n += 1), r = c.id,
                    o[c.id] = !0,
                    c.hasOwnProperty('folderId') && delete c.folderId;
                  else {
                    if (void 0 !== t&& c.folderId === t ?
                            c.folderId = r :
                            (c.folderId && (c.folderId = ''), t = void 0,
                             r = void 0),
                        'table' === c.type)
                      for (var u = 0, d = c.columns; u < d.length; u++) {
                        var p = d[u];
                        o[p.id] && (p.id = '' + n, n += 1), o[p.id] = !0
                      }
                    o[c.id] && (c.id = '' + n, n += 1), o[c.id] = !0
                  }
                }
              }
              function s(e, t) {
                var r = parseFloat(t);
                return r !== Math.floor(r) ? e : Math.max(e, r)
              }
              function a(e) {
                for (var t = 0, r = 0, n = e; r < n.length; r++) {
                  var i = n[r];
                  if (t = s(t, i.id), 'table' === i.type)
                    for (var o = 0, a = i.columns; o < a.length; o++) {
                      var l = a[o];
                      s(t, l.id)
                    }
                }
                return t
              }
              function l(e) {
                var t = r.default(e);
                return o(t.expressions.list), t
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.validateState = l
            });
          r('core/graphing-calc/migrations/back-migration',
            ['require', 'exports', 'tslib'], function(e, t, r) {
              'use strict';
              function n(e) {
                var t = e.slider;
                if (t) {
                  var n = r.__assign(r.__assign({}, t), {loopMode: void 0});
                  return 'PLAY_ONCE' === t.loopMode ||
                                 'PLAY_INDEFINITELY' === t.loopMode ?
                             n.newLoopMode = t.loopMode :
                             n.loopMode = t.loopMode,
                             n.loopMode || delete n.loopMode, n
                }
              }
              function i(e) {
                if (8 !== e.version)
                  throw new Error('Unexpected version: ' + e.version);
                var t = e.expressions.list.map(function(e) {
                  if ('image' === e.type) {
                    var t = r.__assign(
                        r.__assign({}, e),
                        {stringOpacity: void 0, opacity: void 0});
                    if (void 0 !== e.opacity) {
                      var i = void 0 === e.opacity ? NaN : +e.opacity;
                      t.stringOpacity = e.opacity,
                      i > 0 && i < 1 && (t.opacity = i)
                    }
                    return void 0 === t.opacity && delete t.opacity,
                           void 0 === t.stringOpacity && delete t.stringOpacity,
                           t
                  }
                  if ('expression' === e.type) {
                    var t = r.__assign(r.__assign({}, e), {
                      stringFillOpacity: void 0,
                      fillOpacity: void 0,
                      slider: n(e)
                    });
                    return t.slider || delete t.slider, delete t.fillOpacity,
                           void 0 === e.fillOpacity ?
                               delete t.stringFillOpacity :
                               t.stringFillOpacity = e.fillOpacity,
                               t
                  }
                  return e
                });
                return {
                  version: 7, graph: e.graph, randomSeed: e.randomSeed,
                      expressions: {list: t}
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}), t.default = i
            });
          r('core/graphing-calc/migrations/5', ['require', 'exports'],
            function(e, t) {
              'use strict';
              function r(e) {
                var t, r = {};
                for (var n in e)
                  if (e.hasOwnProperty(n)) switch (t = e[n], n) {
                      case 'showAxes':
                        r.showXAxis = t, r.showYAxis = t;
                        break;
                      case 'showLabels':
                        r.xAxisNumbers = t, r.yAxisNumbers = t,
                        r.polarNumbers = t;
                        break;
                      case 'labelXMode':
                        r.xAxisStep = 'pi' === t ? Math.PI : 0;
                        break;
                      case 'labelYMode':
                        r.yAxisStep = 'pi' === t ? Math.PI : 0;
                        break;
                      default:
                        r[n] = t
                    }
                return r
              }
              function n(e) {
                var t = {};
                for (var r in e)
                  e.hasOwnProperty(r) && 'showPoints' !== r &&
                      'showLine' !== r && (t[r] = e[r]);
                return void 0 === e.showPoints && void 0 === e.showLine ||
                           (e.showPoints && e.showLine ?
                                               t.columnMode = 'POINTS_AND_LINES' :
                                e.showPoints ? t.columnMode = 'POINTS' :
                                e.showLine   ? t.columnMode = 'LINES' :
                                               (t.hidden = !0,
                                              t.columnMode = 'POINTS')),
                       t
              }
              function i(e) {
                var t, r = e.type, i = {};
                switch (r) {
                  case 'expression':
                    void 0 === e.hidden ?
                        e.hasOwnProperty('graphed') ?
                        i.hidden = !e.graphed :
                            e.hasOwnProperty('userRequestedGraphing') ?
                        i.hidden = 'never' === e.userRequestedGraphing :
                        i.hidden = !1 :
                        i.hidden = e.hidden;
                    for (t in e)
                      e.hasOwnProperty(t) && 'graphed' !== t &&
                          'userRequestedGraphing' !== t && 'hidden' !== t &&
                          'slider' !== t &&
                          ('color' !== t ?
                               'style' !== t ?
                               'sliderInterval' !== t ?
                               i[t] = e[t] :
                               i.sliderInterval =
                                           'undefined' === e.sliderInterval ?
                               '' :
                               e.sliderInterval :
                               i.style = 'normal' === e.style ? 'SOLID' :
                                                                e.style :
                               'object' == typeof e.color ?
                               i.color = e.color.value :
                               i.color = e.color);
                    return i;
                  case 'table':
                    if (e.headings || e.columns) {
                      var o = e.headings ? e.headings : e.columns;
                      if (i.columns = o.map(n), e.rows)
                        for (var s = 0; s < i.columns.length; s++) {
                          var a = i.columns[s];
                          a.values = [];
                          for (var l = 0; l < e.rows.length; l++)
                            a.values.push(e.rows[l][s])
                        }
                    }
                    for (t in e)
                      e.hasOwnProperty(t) && 'rows' !== t && 'headings' !== t &&
                          'columns' !== t && (i[t] = e[t]);
                    return i;
                  case 'image':
                  case 'text':
                  case 'folder':
                    for (t in e) e.hasOwnProperty(t) && (i[t] = e[t]);
                    return i;
                  default:
                    throw new Error('Unexpected expression type: ' + r)
                }
              }
              function o(e) {
                if (4 !== e.version)
                  throw new Error('Unexpected version: ' + e.version);
                return {
                  version: s, graph: r(e.graph),
                      expressions: {list: e.expressions.list.map(i)}
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var s = 5;
              t.migrateState = o
            });
          r('core/graphing-calc/migrations/6',
            [
              'require', 'exports', 'core/lib/deepCopy', 'underscore',
              'core/math/sliders', 'core/math/evaluate-single-expression'
            ],
            function(e, t, r, n, i, o) {
              'use strict';
              function s(e) {
                return !(e.length < 2) &&
                    ('`' === e[0] && '`' === e[e.length - 1])
              }
              function a(e) {
                if (s(e)) return {raw: e, parts: [e]};
                for (var t,
                     r =
                         [
                           '[a-zA-Z][0-9]*', '[a-zA-Z]_[a-zA-Z0-9]+',
                           '[a-zA-Z]_\\{[a-zA-Z0-9]+\\}'
                         ],
                     n = '({' + r.join('})|({') + '})', i = new RegExp(n, 'g'),
                     o = [], a = 0, l = 0;
                     t = i.exec(e);) {
                  l = t.index, l > a && o.push(e.substr(a, l - a));
                  var c = t[0],
                      u = c.replace(/[{}\$]/g, '')
                              .replace(/^([a-zA-Z])([0-9]+)$/, '$1_$2');
                  o.push({symbol: u, str: c}), a = t.index + c.length
                }
                return a < e.length && o.push(e.substr(a)), {
                  raw: e, parts: o
                }
              }
              function l(e) {
                var t = {};
                for (var r in e)
                  if (e.hasOwnProperty(r) && 'style' !== r)
                    if ('values' === r && (t[r] = e[r].map(function(e) {
                          return e ? '' + e : ''
                        })),
                        'columnMode' !== r || e.hasOwnProperty('points') ||
                            e.hasOwnProperty('lines'))
                      t[r] = e[r];
                    else
                      switch (e[r]) {
                        case 'LINES':
                          t.points = !1, t.lines = !0;
                          break;
                        case 'POINTS_AND_LINES':
                          t.points = !0, t.lines = !0;
                          break;
                        default:
                          t.points = !0, t.lines = !1
                      }
                return t.hasOwnProperty('pointStyle') ||
                           (t.pointStyle = 'POINT'),
                       t.hasOwnProperty('lineStyle') || (t.lineStyle = 'SOLID'),
                       t.id = '' + t.id, t
              }
              function c(e) {
                var t = a(e), r = '';
                return n.each(t.parts, function(e) {
                  r += 'object' == typeof e && e.str ? '$' + e.str : e
                }), r
              }
              function u(e, t) {
                var r = e.latex.split('=');
                if (2 === r.length) {
                  var n = o.default(r[1], t);
                  if (isFinite(n)) {
                    var s = e.slider.hardMin ?
                        o.default(e.slider.min || '-10', t) :
                        void 0,
                        a = e.slider.hardMax ?
                        o.default(e.slider.max || '10', t) :
                        void 0,
                        l = e.slider.step ? o.default(e.slider.step, t) :
                                            void 0,
                        c = i.determineWhichLimitsAreCompatibleWithValue(
                            {target: n, step: l, hardMin: s, hardMax: a});
                    c.min || (delete e.slider.hardMin, delete e.slider.min),
                        c.max || (delete e.slider.hardMax, delete e.slider.max),
                        c.step || delete e.slider.step
                  }
                }
              }
              function d(e, t, r, i) {
                var o, s = e.type, a = {};
                switch (s) {
                  case 'folder':
                    for (o in e)
                      e.hasOwnProperty(o) &&
                          ('memberIds' === o || (a[o] = e[o]));
                    break;
                  case 'expression':
                    for (o in e)
                      if (e.hasOwnProperty(o))
                        if ('style' !== o || e.hasOwnProperty('pointStyle') ||
                            e.hasOwnProperty('lineStyle'))
                          g.hasOwnProperty(o) ?
                              (a.slider = a.slider || {},
                               a.slider[g[o]] = e[o]) :
                              a[o] = e[o],
                              e.label && (a.label = c(e.label));
                        else {
                          var d = e[o];
                          n.contains(['POINT', 'OPEN', 'CROSS'], d) ?
                              (a.pointStyle = d, a.lineStyle = 'SOLID') :
                              n.contains(['SOLID', 'DASHED', 'DOTTED'], d) ?
                              (a.pointStyle = 'POINT', a.lineStyle = d) :
                              (a.pointStyle = 'POINT', a.lineStyle = 'SOLID')
                        }
                    a.latex && a.slider && !a.slider.isPlaying && u(a, i),
                        a.hasOwnProperty('fillOpacity') || (a.fillOpacity = .4),
                        !1 === a.label && (a.label = ''),
                        a.labelSize || (a.labelSize = 'medium'),
                        a.labelOrientation || (a.labelOrientation = 'default'),
                        a.verticalLabel || (a.verticalLabel = !1),
                        a.interactiveLabel || (a.interactiveLabel = !1);
                    break;
                  case 'image':
                    for (o in e)
                      e.hasOwnProperty(o) && 'x' !== o && 'y' !== o &&
                          (a[o] = e[o]);
                    a.center = '\\left(' + (e.x || '0') + ',' + (e.y || '0') +
                        '\\right)',
                    a.angle = e.angle || '0', a.foreground = !!a.foreground;
                    break;
                  case 'text':
                    for (o in e) e.hasOwnProperty(o) && (a[o] = e[o]);
                    break;
                  case 'table':
                    for (o in e)
                      e.hasOwnProperty(o) &&
                          (a[o] = 'columns' === o ? e[o].map(l) : e[o]);
                    break;
                  default:
                    throw new Error('Unexpected expression type: ' + s)
                }
                if (a.id = '' + a.id, 'folder' === e.type)
                  t.folderId = a.id, t.memberIds = e.memberIds, a.folderId = '';
                else {
                  var p = r[a.id];
                  t.memberIds && t.memberIds[p] ?
                      a.folderId = t.folderId :
                      (a.folderId = '', t.folderId = void 0,
                       t.memberIds = void 0)
                }
                return a
              }
              function p(e) {
                for (var t = 0, r = /^[0-9]+$/, n = e.length - 1; n >= 0; n--) {
                  var i, o = e[n], s = o.id;
                  if (r.test(s) && (i = parseInt(s, 10)) > t && (t = i),
                      'table' === o.type && o.columns)
                    for (var a = o.columns.length - 1; a >= 0; a--)
                      s = o.columns[a].id,
                      r.test(s) && (i = parseInt(s, 10)) > t && (t = i)
                }
                return t + 1
              }
              function h(e) {
                if (5 !== e.version)
                  throw new Error('Unexpected version: ' + e.version);
                var t = !(!e.graph || !e.graph.degreeMode),
                    n = e.expressions.list, i = -1, o = {}, s = {}, a = {};
                return {
                  version: f, graph: e.graph, expressions: {
                    list: n.map(function(e) {
                      return o[e.id] ?
                                 (-1 === i && (i = p(n)), s[i] = e.id,
                                  e = r.default(e), e.id = i + '', i += 1) :
                                 s[e.id] = e.id,
                                 o[e.id] = !0, d(e, a, s, t)
                    })
                  }
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var f = 6, g = {
                sliderMin: 'min',
                sliderMax: 'max',
                sliderInterval: 'step',
                sliderHardMin: 'hardMin',
                sliderHardMax: 'hardMax',
                sliderAnimationPeriod: 'animationPeriod',
                sliderLoopMode: 'loopMode',
                sliderPlayDirection: 'playDirection',
                sliderIsPlaying: 'isPlaying'
              };
              t.migrateState = h
            });
          r('core/graphing-calc/migrations/7', ['require', 'exports', 'tslib'],
            function(e, t, r) {
              'use strict';
              function n(e) {
                if (6 !== e.version)
                  throw new Error('Unexpected version: ' + e.version);
                var t = e.expressions.list.map(function(e) {
                  if ('expression' === e.type && e.domain) {
                    var t = r.__assign(r.__assign({}, e), {
                      parametricDomain: {min: e.domain.min, max: e.domain.max}
                    });
                    return delete t.domain, t
                  }
                  return e
                });
                return {
                  version: 7, randomSeed: e.randomSeed, graph: e.graph,
                      expressions: {list: t}
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}), t.default = n
            });
          r('core/lib/random-seed', ['require', 'exports', 'core/lib/md5'],
            function(e, t, r) {
              'use strict';
              function n(e) {
                return 1 === e.length ? '0' + e : e
              }
              function i() {
                var e = new Uint8Array(16);
                if ('undefined' != typeof crypto)
                  crypto.getRandomValues(e);
                else {
                  if ('undefined' == typeof msCrypto)
                    return r(Date.now().toString());
                  msCrypto.getRandomValues(e)
                }
                return Array.prototype.slice.call(e)
                    .map(function(e) {
                      return n(e.toString(16))
                    })
                    .join('')
              }
              Object.defineProperty(t, '__esModule', {value: !0}), t.default = i
            });
          r('core/graphing-calc/migrations/8',
            [
              'require', 'exports', 'tslib', 'core/lib/random-seed',
              'core/lib/deepCopy'
            ],
            function(e, t, r, n, i) {
              'use strict';
              function o(e) {
                var t = e.split('_');
                return 2 === t.length && t[1] && 1 === t[1].length ?
                    t[0] + '_{' + t[1] + '}' :
                    e
              }
              function s(e) {
                var t =
                    /\\operatorname(?:\{stdev\}p|\{stddev\}p|\{stdDev\}P|\{var\}iance)/g;
                return e.replace(t, function(e) {
                  switch (e) {
                    case '\\operatorname{stdev}p':
                      return '\\operatorname{stdevp}';
                    case '\\operatorname{stddev}p':
                      return '\\operatorname{stddevp}';
                    case '\\operatorname{stdDev}P':
                      return '\\operatorname{stdDevP}';
                    case '\\operatorname{var}iance':
                      return '\\operatorname{variance}';
                    default:
                      return ''
                  }
                })
              }
              function a(e) {
                return e.columns ?
                    r.__assign(r.__assign({}, e), {columns: e.columns.map(l)}) :
                    e
              }
              function l(e) {
                var t = e.latex, n = e.values, i = r.__assign({}, e);
                return t && (i.latex = s(t), i.latex = o(i.latex)),
                       n && (i.values = n.map(function(e) {
                         return e ? s(e) : ''
                       })),
                       i
              }
              function c(e) {
                if (7 !== e.version)
                  throw new Error('Unexpected version: ' + e.version);
                var t = e.expressions.list.map(function(e) {
                  if ('image' === e.type) {
                    var t = r.__assign(r.__assign({}, e), {opacity: ''});
                    e.hasOwnProperty('stringOpacity') ?
                        t.opacity = e.stringOpacity :
                        e.hasOwnProperty('opacity') ?
                        t.opacity = e.opacity + '' :
                        delete t.opacity,
                        delete t.stringOpacity;
                    for (var n in e)
                      if ('x' === n || 'y' === n || 'width' === n ||
                          'height' === n) {
                        var l = e[n];
                        l && (t[n] = s(l))
                      }
                    return t
                  }
                  if ('expression' === e.type) {
                    var t = r.__assign(
                        r.__assign({}, e),
                        {fillOpacity: '', lineStyle: 'SOLID'});
                    if ('SINGLE_PIXEL' === e.lineStyle    ? t.lineWidth = '1' :
                            e.hasOwnProperty('lineStyle') ? t.lineStyle =
                                                                e.lineStyle :
                                                            delete t.lineStyle,
                        t.hasOwnProperty('lineWidth') || (t.lineWidth = ''),
                        'string' == typeof e.latex && (t.latex = s(e.latex)),
                        e.latex && (t.latex = s(e.latex)),
                        e.hasOwnProperty('stringFillOpacity') ?
                            t.fillOpacity = e.stringFillOpacity :
                            e.hasOwnProperty('fillOpacity') ?
                            t.fillOpacity = e.fillOpacity + '' :
                            delete t.fillOpacity,
                        t.slider && e.slider && e.slider.newLoopMode &&
                            (t.slider = i.default(t.slider),
                             t.slider.loopMode = e.slider.newLoopMode,
                             delete t.slider.newLoopMode),
                        t.residualVariable &&
                            (t.residualVariable = o(t.residualVariable)),
                        t.regressionParameters) {
                      t.regressionParameters = {};
                      for (var c in e.regressionParameters) {
                        var u = o(c), d = e.regressionParameters[c];
                        t.regressionParameters[u] = d
                      }
                    }
                    return t
                  }
                  return 'table' === e.type ? a(e) : e
                });
                return {
                  version: 8, randomSeed: e.randomSeed || n.default(),
                      graph: e.graph, expressions: {list: t}
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}), t.default = c
            });
          r('core/graphing-calc/migrate-state',
            [
              'require', 'exports', './migrations/0', './migrations/1',
              './migrations/2', './migrations/3', './migrations/4',
              'core/graphing-calc/validate-state',
              './migrations/back-migration', './migrations/5', './migrations/6',
              './migrations/7', './migrations/8'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d, p) {
              'use strict';
              function h(e) {
                if (e.version > t.currentVersion)
                  return 'undefined' != typeof console && console.warn &&
                             console.warn(
                                 'Loading saved state with version ' +
                                 e.version + ' but last known version is ' +
                                 t.currentVersion +
                                 '. States saved in a newer version of the calculator may not load correctly in an older version of the calculator.'),
                         a.validateState(e);
                if (e.hasOwnProperty('version') && !g[e.version])
                  return 'undefined' != typeof console && console.warn &&
                             console.warn(
                                 'State has invalid version ' + e.version +
                                 '. If a version is present, it should be a non-negative integer less than or equal to ' +
                                 t.currentVersion + '.'),
                         a.validateState(e);
                for (e.hasOwnProperty('version') || (e = g[0](e));
                     e.version < t.currentVersion;)
                  e = g[e.version + 1](e);
                return a.validateState(e)
              }
              function f(e) {
                return l.default(h(e))
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var g = [
                r, n, i, o, s, c.migrateState, u.migrateState, d.default,
                p.default
              ];
              t.persistedVersion = 7, t.currentVersion = 8,
              t.migrateToLatest = h, t.migrateToPersisted = f
            });
          r('graphing-calc/models/focus',
            ['require', 'exports', './expression', './list'],
            function(e, t, r, n) {
              'use strict';
              function i(e, t, r) {
                o(e, s(e, t, r))
              }
              function o(e, t) {
                if (e.focusLocation = t,
                    t && 'settings' !== t.type && 'editable-label' !== t.type &&
                        'add-item-btn' !== t.type &&
                        'add-expression-btn' !== t.type &&
                        'add-table-btn' !== t.type &&
                        'add-folder-btn' !== t.type &&
                        'add-image-btn' !== t.type &&
                        'edit-list-toggle' !== t.type) {
                  var i = e.getItemModel(t.id);
                  if ('expression-menu' === t.type)
                    return void n.setSelected(e.getListModel(), void 0);
                  n.setSelected(e.getListModel(), i),
                      i && 'expression' === i.type &&
                      r.setSliderIsPlaying(i, !1)
                }
              }
              function s(e, t, r) {
                var n = e.getItemModel(t);
                if (n) switch (n.type) {
                    case 'expression':
                      return {
                        type: e.isInEditListMode() ? 'readonly-expression' :
                                                     n.type,
                        id: t
                      };
                    case 'folder':
                    case 'text':
                      return {type: n.type, id: t};
                    case 'table':
                      var i = {row: 1, column: 0}, o = !1;
                      return r &&
                                 ('cell' === r.location ?
                                      i = {row: r.row, column: r.column} :
                                      'end' === r ? i = {
                                        row: n.columnModels[0].cells.length,
                                        column: 0
                                      } :
                                      'start' === r ? i = {row: 0, column: 0} :
                                                      'container' === r &&
                                          (o = !0)),
                             o ? {type: 'table-container', id: t} :
                                 {type: n.type, id: t, location: i};
                    case 'image':
                      return {type: n.type, id: t, location: 'name'};
                    default:
                      return n
                  }
              }
              function a(e) {
                var t = e.getSelectedItem();
                if (t && 'expression' === t.type) return void i(e, t.id);
                if (!t || 'table' !== t.type || !e.focusLocation) {
                  for (var r = e.getFirstFullyVisibleItem(),
                           o = e.getListModel();
                       r && 'expression' !== r.type;)
                    r = n.findNextSelectableItem(o, r.index);
                  if (r) return void i(e, r.id);
                  var s = e.createItemModel({
                    type: 'expression',
                    id: e.generateId(),
                    color: e.getNextColor()
                  });
                  n.insertItemAtEnd(e.getListModel(), s), i(e, s.id)
                }
              }
              function l(e) {
                var t = e.focusLocation;
                if (t && 'settings' !== t.type && 'editable-label' !== t.type &&
                    'add-item-btn' !== t.type &&
                    'add-expression-btn' !== t.type &&
                    'add-table-btn' !== t.type && 'add-folder-btn' !== t.type &&
                    'add-image-btn' !== t.type && 'edit-list-toggle' !== t.type)
                  return e.getItemModel(t.id)
              }
              function c(e, t, r) {
                o(e, {type: 'table', id: t, location: r})
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.moveFocusToItem = i, t.setFocusLocation = o,
                  t.computeFocusLocationForItem = s, t.addFocusForKeypad = a,
                  t.getFocusedItem = l, t.focusTableCell = c
            });
          r('graphing-calc/actions/keyboard',
            [
              'require', 'exports', 'browser', 'lib/conditional_blur',
              '../models/table', '../models/focus', '../models/list',
              '../models/abstract-item'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              function l(e, t, r) {
                var n = e.getItemModel(t);
                if (n && 'table' === n.type) {
                  var s = n, a = i.getSelectedCell(s), l = a ? a.row : -1,
                      f = a ? a.column : -1, g = s.columnModels,
                      m = g[0].cells.length, y = g.length, v = function(r, n) {
                        -1 === r ? c(e) :
                            r > m ?
                                   u(e) :
                                   (-1 === n ? (n = y - 1, r--) :
                                               n === y && (r++, n = 0),
                                    o.focusTableCell(e, t, {row: r, column: n}))
                      }, b = function(r) {
                        m > 2 && i.removeRow(s, l - 1),
                            o.focusTableCell(e, t, {row: r, column: f})
                      }, x = function(r) {
                        0 === f || y <= 2 ||
                            (i.removeColumn(s, f),
                             o.focusTableCell(e, t, {row: l, column: r}))
                      };
                  switch (r) {
                    case 'Left':
                      v(l, f - 1);
                      break;
                    case 'Right':
                      v(l, f + 1);
                      break;
                    case 'Up':
                      v(l - 1, f);
                      break;
                    case 'Down':
                      v(l + 1, f);
                      break;
                    case 'Enter':
                      if (l >= m) return h(e);
                      if (f > 0) return v(l + 1, f);
                      if (l === m - 1) {
                        var w = i.getRowAutoFillValues(s, l);
                        i.insertBlankRow(s, l);
                        for (var _ = 0; _ < w.length; _++)
                          i.setCellLatex(s, {row: l + 1, column: _}, w[_]);
                        return void o.focusTableCell(
                            e, t, {row: l + 1, column: f})
                      }
                      i.insertBlankRow(s, l),
                          o.focusTableCell(e, t, {row: l + 1, column: f});
                      break;
                    case 'Backspace':
                      0 === l     ? 0 === f                         ? d(e) :
                                  f === y - 1 || 1 === f && 3 === y ? v(0, f - 1) :
                                                                      x(f - 1) :
                          0 !== f ? v(l, f - 1) :
                          l === m ? v(l - 1, f) :
                                    b(l - 1);
                      break;
                    case 'Delete':
                      0 === l ? 0 === f ? p(e) : f < y - 1 && x(f) :
                                l >= m || b(l)
                  }
                }
              }
              function c(e) {
                var t = e.getSelectedItem();
                t &&
                    (e.inAudioTraceMode() ||
                     0 !== t.index &&
                         (s.selectPrevItem(e.getListModel()),
                          (t = e.getSelectedItem()) &&
                              o.moveFocusToItem(e, t.id, 'end')))
              }
              function u(e) {
                if (!e.inAudioTraceMode()) {
                  if (!s.selectNextItem(e.getListModel()) &&
                      !e.isInEditListMode()) {
                    var t = e.createItemModel({
                      type: 'expression',
                      id: e.generateId(),
                      color: e.getNextColor()
                    });
                    s.insertItemAtEnd(e.getListModel(), t),
                        s.setSelected(e.getListModel(), t)
                  }
                  var r = e.getSelectedItem();
                  r && o.moveFocusToItem(e, r.id, 'start')
                }
              }
              function d(e) {
                if (!e.isInEditListMode()) {
                  var t = e.getSelectedItem();
                  if (t &&
                      (1 !== e.getItemCount() || 'expression' !== t.type)) {
                    var n = 'text' === t.type, i = s.getParentFolderModel(t);
                    if (i) {
                      var l = e.getNumberOfItemsInFolder(i.id);
                      if (t.index === i.index + l)
                        return void a.setFolderId(t, '')
                    }
                    if (f(e), n && r.IS_IPAD && r.IS_IN_IFRAME)
                      return void s.setSelected(e.getListModel(), void 0);
                    t = e.getSelectedItem(),
                    t && o.moveFocusToItem(e, t.id, 'end')
                  }
                }
              }
              function p(e) {
                if (!e.isInEditListMode()) {
                  var t = e.getSelectedItem();
                  t &&
                      (1 === e.getItemCount() && 'expression' === t.type ||
                       (g(e),
                        (t = e.getSelectedItem()) &&
                            o.moveFocusToItem(e, t.id, 'start')))
                }
              }
              function h(e) {
                if (!e.isInEditListMode()) {
                  var t = e.getSelectedItem();
                  if (t) {
                    if ('text' === t.type && r.IS_IPAD && r.IS_IN_IFRAME)
                      return n.default(),
                             void s.setSelected(e.getListModel(), void 0);
                    if (('expression' === t.type || 'image' === t.type) &&
                        t.missingVariables.length && e.areSlidersEnabled())
                      return e.createSlidersForItem(
                          t.id, t.missingVariables.concat(''));
                    var i = e.createItemModel({
                      type: 'expression',
                      id: e.generateId(),
                      color: e.getNextColor()
                    }),
                        l = t.index + 1;
                    'folder' === t.type && t.collapsed &&
                        (l += e.getNumberOfItemsInFolder(t.id)),
                        s.insertItemAtIndex(e.getListModel(), i, l),
                        s.setSelected(e.getListModel(), i),
                        'folder' !== t.type || t.collapsed ?
                        'folder' !== t.type && t.folderId &&
                            a.setFolderId(i, t.folderId) :
                        a.setFolderId(i, t.id),
                        t = e.getSelectedItem(), t && o.moveFocusToItem(e, t.id)
                  }
                }
              }
              function f(e) {
                var t = e.getSelectedItem(), r = e.getListModel();
                if (t) {
                  var n = s.findPrevSelectableItem(r, t.index);
                  if (e._removeExpressionSynchronously(t), !n) {
                    var i = s.getFirstSelectableItem(r);
                    i && (n = i)
                  }
                  s.setSelected(r, n)
                }
              }
              function g(e) {
                var t = e.getSelectedItem(), r = e.getListModel();
                if (t) {
                  var n = s.findNextSelectableItem(r, t.index);
                  if (e._removeExpressionSynchronously(t), !n) {
                    var i = s.getLastSelectableItem(r);
                    i && (n = i)
                  }
                  s.setSelected(r, n)
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.navigateTableByKey = l, t.onUpPressed = c,
                  t.onDownPressed = u, t.onBackspacePressed = d,
                  t.onDeletePressed = p, t.onEnterPressed = h,
                  t.upwardDeleteSelectedExpression = f,
                  t.downwardDeleteSelectedExpression = g
            });
          r('main/expression-zoom-helpers',
            ['require', 'exports', 'core/lib/deepCopy'], function(e, t, r) {
              'use strict';
              function n(e) {
                switch (e) {
                  case 'histogram':
                  case 'dotplot':
                    return 12;
                  case 'boxplot':
                    return 40
                }
                return 1 / 0
              }
              function i(e) {
                return 'boxplot' === e || 'dotplot' === e || 'histogram' == e
              }
              function o(e) {
                return 'boxplot' === e ? 3 : .5
              }
              function s(e, t) {
                if ('dotplot' === e.type || 'histogram' === e.type) {
                  var r = Math.max(1, e.xmax - e.xmin),
                      n = 80 * r / (e.binWidth ? e.binWidth : 1),
                      i = .5 * (t.screen.width - n) / n;
                  return Math.max(.2, i)
                }
                return .5
              }
              function a(e) {
                e = r.default(e);
                return e.xmax < 0 && e.xmin < 0 &&
                           e.xmax / (e.xmin - e.xmax) < 1.2 && (e.xmax = 0),
                       e.xmax > 0 && e.xmin > 0 &&
                           e.xmin / (e.xmax - e.xmin) < 1.2 && (e.xmin = 0),
                       e.ymax < 0 && e.ymin < 0 &&
                           e.ymax / (e.ymin - e.ymax) < 1.2 && (e.ymax = 0),
                       e.ymax > 0 && e.ymin > 0 &&
                           e.ymin / (e.ymax - e.ymin) < 1.2 && (e.ymin = 0),
                       e
              }
              function l(e, t) {
                var r, a, l, c, u = e.type, d = s(e, t), p = o(u);
                e.xmin === e.xmax && (e.xmin -= .5, e.xmax += .5),
                    e.ymin === e.ymax && (e.ymin -= .5, e.ymax += .5);
                var h = e.xmax - e.xmin;
                r = e.xmin - d * h, a = e.xmax + d * h;
                var f = e.ymax - e.ymin;
                if (l = e.ymin - p * f, c = e.ymax + p * f, i(u)) {
                  var g = t.screen.height / t.screen.width, m = (a - r) * g;
                  if (m > e.ymax - e.ymin && m < n(u) * (e.ymax - e.ymin)) {
                    var y = .5 * (e.ymax + e.ymin);
                    c = y + .5 * m, l = y - .5 * m
                  }
                }
                return {
                  xmin: r, xmax: a, ymin: l, ymax: c
                }
              }
              function c(e, t) {
                var r = u(e, t);
                if (!r) return !1;
                var n = t.mapx(r.xmin), i = t.mapx(r.xmax), o = t.mapy(r.ymin),
                    s = t.mapy(r.ymax);
                return !(
                    Math.abs(n) <= 10 && Math.abs(s) <= 10 &&
                    Math.abs(i - t.screen.width) <= 10 &&
                    Math.abs(o - t.screen.height) <= 10)
              }
              function u(e, t) {
                for (var r = 1 / 0, n = -1 / 0, i = 1 / 0, o = -1 / 0, s = 0,
                         c = e.length, u = 0;
                     u < c; u++) {
                  var d = a(e[u]);
                  if (isFinite(d.xmax - d.xmin) && isFinite(d.ymax - d.ymin)) {
                    var p = l(d, t);
                    p.xmin<r && (r = p.xmin), p.xmax>n && (n = p.xmax),
                        p.ymin<i && (i = p.ymin), p.ymax>o && (o = p.ymax)
                  } else
                    s += 1
                }
                if (s !== c) return {
                    xmin: r, xmax: n, ymin: i, ymax: o
                  }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.conditionalExpandViewport = a, t.padViewport = l,
                  t.shouldExpressionZoomFit = c,
                  t.getRecommendedViewportForExpression = u
            });
          r('main/layout-model', ['require', 'exports', 'browser'],
            function(e, t, r) {
              'use strict';
              function n(e) {
                switch (e) {
                  case 'letters':
                    return 'capitalLetters';
                  case 'noQwertyLetters':
                    return 'noQwertyCapitalLetters';
                  case 'noQwertyCapitalLetters':
                    return 'noQwertyLetters';
                  default:
                    return 'letters'
                }
              }
              function i(e) {
                return {
                  keypadMinimized: !r.IS_TOUCH_DEVICE,
                      keypadLayout: 'mainNumbers', keypadFunctionsTab: 'trig',
                      keypadFunctionsOpen: !1, graphSettingsOpen: !1,
                      addExpressionOpen: !1,
                      expressionsVisible: !!e.expressions, inEditListMode: !1,
                      isFileDraggedOver: !1, expressionsHiddenTime: void 0
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.getShiftedLayoutForCurrentLayout = n,
                  t.defaultLayoutModel = i
            });
          r('main/settings-view-model',
            ['require', 'exports', 'tslib', 'core/lib/label'],
            function(e, t, r, n) {
              'use strict';
              function i(e, t) {
                var r = n.value(e, t), i = '';
                if (r.mantissa)
                  i = r.mantissa.split('×').join('\\cdot') + '^{' +
                      r.superscript + '}';
                else {
                  var o = r.string.split('/');
                  i = 2 === o.length ?
                      '-' === o[0][0] ?
                      '-\\frac{' + o[0].slice(1) + '}{' + o[1] + '}' :
                      '\\frac{' + o[0] + '}{' + o[1] + '}' :
                      r.string
                }
                return i = i.replace(/π/, '\\pi')
              }
              function o(e) {
                return {
                  xmin: i(e.xmin, e.xmax - e.xmin),
                      xmax: i(e.xmax, e.xmax - e.xmin),
                      ymin: i(e.ymin, e.ymax - e.ymin),
                      ymax: i(e.ymax, e.ymax - e.ymin)
                }
              }
              function s(e, t) {
                return 0 === e ? '' : i(e, t)
              }
              function a(e, t, n) {
                var i = o(e);
                return r.__assign(r.__assign({}, i), {
                  xstep: s(t, e.xmax - e.xmin),
                  ystep: s(n, e.ymax - e.ymin)
                })
              }
              function l() {
                return {
                  limitLatex: {
                    xmin: '',
                    xmax: '',
                    xstep: '',
                    ymin: '',
                    ymax: '',
                    ystep: ''
                  }
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.formatLatex = i, t.formatViewport = o, t.formatStep = s,
                  t.limitLatex = a, t.defaultSettingsViewModel = l
            });
          (function(e, t) {
            if ('object' == typeof exports && 'object' == typeof module)
              module.exports = t();
            else if ('function' == typeof r && r.amd)
              r('abraham', [], t);
            else {
              var n = t();
              for (var i in n)
                ('object' == typeof exports ? exports : e)[i] = n[i]
            }
          })(this, function() {
            return function(e) {
              function t(n) {
                if (r[n]) return r[n].exports;
                var i = r[n] = {i: n, l: !1, exports: {}};
                return e[n].call(i.exports, i, i.exports, t), i.l = !0,
                                                              i.exports
              }
              var r = {};
              return t.m = e, t.c = r, t.i = function(e) {
                return e
              }, t.d = function(e, r, n) {
                t.o(e, r) ||
                    Object.defineProperty(
                        e, r, {configurable: !1, enumerable: !0, get: n})
              }, t.n = function(e) {
                var r = e && e.__esModule ? function() {
                  return e.default
                } : function() {
                  return e
                };
                return t.d(r, 'a', r), r
              }, t.o = function(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
              }, t.p = '', t(t.s = 26)
            }([
              function(e, t, r) {
                function n(e, t) {
                  var r = i.map(e, t);
                  return e.warnings && (r.warnings = e.warnings), r
                }
                Object.defineProperty(t, '__esModule', {value: !0});
                var i = r(22);
                t.map = n
              },
              function(e, t) {
                function r() {
                  throw new Error('setTimeout has not been defined')
                }
                function n() {
                  throw new Error('clearTimeout has not been defined')
                }
                function i(e) {
                  if (u === setTimeout) return setTimeout(e, 0);
                  if ((u === r || !u) && setTimeout)
                    return u = setTimeout, setTimeout(e, 0);
                  try {
                    return u(e, 0)
                  } catch (t) {
                    try {
                      return u.call(null, e, 0)
                    } catch (t) {
                      return u.call(this, e, 0)
                    }
                  }
                }
                function o(e) {
                  if (d === clearTimeout) return clearTimeout(e);
                  if ((d === n || !d) && clearTimeout)
                    return d = clearTimeout, clearTimeout(e);
                  try {
                    return d(e)
                  } catch (t) {
                    try {
                      return d.call(null, e)
                    } catch (t) {
                      return d.call(this, e)
                    }
                  }
                }
                function s() {
                  g && h &&
                      (g = !1, h.length ? f = h.concat(f) : m = -1,
                       f.length && a())
                }
                function a() {
                  if (!g) {
                    var e = i(s);
                    g = !0;
                    for (var t = f.length; t;) {
                      for (h = f, f = []; ++m < t;) h && h[m].run();
                      m = -1, t = f.length
                    }
                    h = null, g = !1, o(e)
                  }
                }
                function l(e, t) {
                  this.fun = e, this.array = t
                }
                function c() {}
                var u, d, p = e.exports = {};
                !function() {
                  try {
                    u = 'function' == typeof setTimeout ? setTimeout : r
                  } catch (e) {
                    u = r
                  }
                  try {
                    d = 'function' == typeof clearTimeout ? clearTimeout : n
                  } catch (e) {
                    d = n
                  }
                }();
                var h, f = [], g = !1, m = -1;
                p.nextTick =
                    function(e) {
                  var t = new Array(arguments.length - 1);
                  if (arguments.length > 1)
                    for (var r = 1; r < arguments.length; r++)
                      t[r - 1] = arguments[r];
                  f.push(new l(e, t)), 1 !== f.length || g || i(a)
                },
                l.prototype.run =
                    function() {
                  this.fun.apply(null, this.array)
                },
                p.title = 'browser', p.browser = !0, p.env = {}, p.argv = [],
                p.version = '', p.versions = {}, p.on = c, p.addListener = c,
                p.once = c, p.off = c, p.removeListener = c,
                p.removeAllListeners = c, p.emit = c, p.prependListener = c,
                p.prependOnceListener = c, p.listeners = function(e) {
                  return []
                }, p.binding = function(e) {
                  throw new Error('process.binding is not supported')
                }, p.cwd = function() {
                  return '/'
                }, p.chdir = function(e) {
                  throw new Error('process.chdir is not supported')
                }, p.umask = function() {
                  return 0
                }
              },
              function(e, t, r) {
                function n(e) {
                  for (var t = !1, r = 0, n = '', i = '', o = 0, s = e;
                       o < s.length; o++) {
                    var a = s[o];
                    if ('terminal' !== a.type || !/[A-Za-z]/.test(a.value))
                      break;
                    n += a.value, r++
                  }
                  return i = n.replace(c, '\\operatorname{$1}'),
                         t = r > 0 && i !== n, {
                    modified: t, terminalCount: r, value: i
                  }
                }
                function i(e) {
                  return -1 !== d.indexOf(e.toLowerCase())
                }
                function o(e) {
                  if (!Array.isArray(e))
                    throw new Error(
                        'Operator names must be an array, got ' + typeof e);
                  for (var t = 0, r = e; t < r.length; t++) {
                    var n = r[t];
                    if ('string' != typeof n)
                      throw new Error(
                          'Operator names must be strings, found ' + typeof n)
                  }
                  d = e, a()
                }
                function s() {
                  d = u, c = p
                }
                function a() {
                  c = l(d)
                }
                function l(e) {
                  var t = e.sort(function(e, t) {
                             return t.length - e.length || t.localeCompare(e)
                           }).join('|');
                  return new RegExp('(' + t + ')', 'g')
                }
                Object.defineProperty(t, '__esModule', {value: !0});
                var c,
                    u =
                        [
                          'abs',
                          'ans',
                          'arccosh',
                          'arccot',
                          'arccoth',
                          'arccsc',
                          'arccsch',
                          'arcsec',
                          'arcsech',
                          'arcsinh',
                          'arctanh',
                          'binomialdist',
                          'boxplot',
                          'cdf',
                          'ceil',
                          'corr',
                          'cov',
                          'csch',
                          'distance',
                          'dotplot',
                          'erf',
                          'floor',
                          'gcf',
                          'histogram',
                          'IndependentTTest',
                          'iTTest',
                          'ittest',
                          'lcm',
                          'length',
                          'mad',
                          'mcd',
                          'mcm',
                          'mean',
                          'median',
                          'midpoint',
                          'mod',
                          'nCr',
                          'normaldist',
                          'nPr',
                          'pdf',
                          'poissondist',
                          'polygon',
                          'quantile',
                          'quartile',
                          'random',
                          'round',
                          'sech',
                          'sign',
                          'signum',
                          'stdDev',
                          'stddev',
                          'stdDevP',
                          'stddevp',
                          'stdev',
                          'stdevp',
                          'tdist',
                          'total',
                          'TScore',
                          'TScore',
                          'Tscore',
                          'tscore',
                          'tscore',
                          'TTest',
                          'ttest',
                          'var',
                          'variance',
                          'varp'
                        ],
                    d = u, p = l(u);
                t.getAutoOperator = n, t.containsValue = i,
                t.setOperatorNames = o, t.resetOperatorNames = s
              },
              function(e, t, r) {
                function n(e) {
                  if (!f.isSixDotCells(e))
                    throw new Error(
                        'EncodingError: Expected input to be six-dot unicode braille characters.')
                }
                function i(e, r) {
                  return n(e), d.default(t.UnicodeBraille.toBrailleAscii(e), r)
                }
                function o(e, r) {
                  return r && r.operatorNames ?
                             l.setOperatorNames(r.operatorNames) :
                             l.resetOperatorNames(),
                         p.map(
                             c.default(e), t.UnicodeBraille.coerceToSixDotCells)
                }
                function s(e, r) {
                  return n(e), h.default(t.UnicodeBraille.toBrailleAscii(e), r)
                }
                function a(e, r) {
                  return r && r.operatorNames ?
                             l.setOperatorNames(r.operatorNames) :
                             l.resetOperatorNames(),
                         p.map(
                             u.default(e), t.UnicodeBraille.coerceToSixDotCells)
                }
                Object.defineProperty(t, '__esModule', {value: !0});
                var l = r(2), c = r(14), u = r(15), d = r(16), p = r(0),
                    h = r(23), f = r(25);
                t.nemethToLatex = i, t.latexToNemeth = o, t.uebToLatex = s,
                t.latexToUeb = a, t.UnicodeBraille = {
                  coerceToSixDotCells: f.coerceToSixDotCells,
                  toBrailleAscii: f.toBrailleAscii,
                  toExpandedBrailleAscii: f.toExpandedBrailleAscii
                },
                t.version = '1.0.3'
              },
              function(e, t) {},
              function(e, t, r) {
                (function(e) {
                  function r(e, t) {
                    for (var r = 0, n = e.length - 1; n >= 0; n--) {
                      var i = e[n];
                      '.' === i      ? e.splice(n, 1) :
                          '..' === i ? (e.splice(n, 1), r++) :
                                       r && (e.splice(n, 1), r--)
                    }
                    if (t)
                      for (; r--; r) e.unshift('..');
                    return e
                  }
                  function n(e, t) {
                    if (e.filter) return e.filter(t);
                    for (var r = [], n = 0; n < e.length; n++)
                      t(e[n], n, e) && r.push(e[n]);
                    return r
                  }
                  var i = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,
                      o = function(e) {
                        return i.exec(e).slice(1)
                      };
                  t.resolve = function() {
                    for (var t = '', i = !1, o = arguments.length - 1;
                         o >= -1 && !i; o--) {
                      var s = o >= 0 ? arguments[o] : e.cwd();
                      if ('string' != typeof s)
                        throw new TypeError(
                            'Arguments to path.resolve must be strings');
                      s && (t = s + '/' + t, i = '/' === s.charAt(0))
                    }
                    return t = r(n(t.split('/'), function(e) {
                                   return !!e
                                 }), !i).join('/'), (i ? '/' : '') + t || '.'
                  }, t.normalize = function(e) {
                    var i = t.isAbsolute(e), o = '/' === s(e, -1);
                    return e = r(n(e.split('/'),
                                   function(e) {
                                     return !!e
                                   }),
                                 !i)
                                   .join('/'),
                           e || i || (e = '.'), e && o && (e += '/'),
                           (i ? '/' : '') + e
                  }, t.isAbsolute = function(e) {
                    return '/' === e.charAt(0)
                  }, t.join = function() {
                    var e = Array.prototype.slice.call(arguments, 0);
                    return t.normalize(
                        n(e, function(e, t) {
                          if ('string' != typeof e)
                            throw new TypeError(
                                'Arguments to path.join must be strings');
                          return e
                        }).join('/'))
                  }, t.relative = function(e, r) {
                    function n(e) {
                      for (var t = 0; t < e.length && '' === e[t]; t++)
                        ;
                      for (var r = e.length - 1; r >= 0 && '' === e[r]; r--)
                        ;
                      return t > r ? [] : e.slice(t, r - t + 1)
                    }
                    e = t.resolve(e).substr(1), r = t.resolve(r).substr(1);
                    for (var i = n(e.split('/')), o = n(r.split('/')),
                             s = Math.min(i.length, o.length), a = s, l = 0;
                         l < s; l++)
                      if (i[l] !== o[l]) {
                        a = l;
                        break
                      }
                    for (var c = [], l = a; l < i.length; l++) c.push('..');
                    return c = c.concat(o.slice(a)), c.join('/')
                  }, t.sep = '/', t.delimiter = ':', t.dirname = function(e) {
                    var t = o(e), r = t[0], n = t[1];
                    return r || n ?
                        (n && (n = n.substr(0, n.length - 1)), r + n) :
                        '.'
                  }, t.basename = function(e, t) {
                    var r = o(e)[2];
                    return t && r.substr(-1 * t.length) === t &&
                               (r = r.substr(0, r.length - t.length)),
                           r
                  }, t.extname = function(e) {
                    return o(e)[3]
                  };
                  var s = 'b' === 'ab'.substr(-1) ? function(e, t, r) {
                    return e.substr(t, r)
                  } : function(e, t, r) {
                    return t < 0 && (t = e.length + t), e.substr(t, r)
                  }
                }).call(t, r(1))
              },
              function(e, t, r) {
                function n(e) {
                  if (!e.hash) throw e;
                  return {
                    _diagnostic: {
                      expected: e.hash.expected,
                      message: e.message,
                      text: e.hash.text,
                      token: e.hash.token
                    },
                        location: e.hash.loc
                  }
                }
                Object.defineProperty(t, '__esModule', {value: !0}),
                    t.default = n
              },
              function(e, t, r) {
                function n(e) {
                  return {
                    type: 'terminal', value: e
                  }
                }
                function i(e) {
                  return {
                    type: 'command', value: e
                  }
                }
                function o(e) {
                  return {
                    type: 'greek', value: e
                  }
                }
                function s(e) {
                  return {
                    subscript: e._, superscript: e['^'], type: 'level'
                  }
                }
                function a(e, t) {
                  var r = [], n = e.match(/'+/);
                  if (null !== n)
                    for (var o = n[0].length, s = 0; s < o; s++)
                      r.push(i('\\prime'));
                  return d(r, t)
                }
                function l(e, t) {
                  return {
                    type: 'fraction', numerator: e, denominator: t
                  }
                }
                function c(e, t) {
                  return {
                    name: e, type: 'typeform', value: t
                  }
                }
                function u(e, t) {
                  return {
                    type: 'radical', index: t, radicand: e
                  }
                }
                function d() {
                  for (var e = [], t = 0; t < arguments.length; t++)
                    e[t] = arguments[t];
                  return Array.prototype.concat.apply([], e)
                }
                Object.defineProperty(t, '__esModule', {value: !0}),
                    t.terminal = n, t.command = i, t.greek = o, t.level = s,
                    t.processPrimes = a, t.fraction = l, t.typeform = c,
                    t.radical = u, t.group = d
              },
              function(e, t) {
                e.exports = function(e) {
                  return e.webpackPolyfill ||
                             (e.deprecate = function() {}, e.paths = [],
                              e.children || (e.children = []),
                              Object.defineProperty(e, 'loaded', {
                                enumerable: !0,
                                get: function() {
                                  return e.l
                                }
                              }),
                              Object.defineProperty(e, 'id', {
                                enumerable: !0,
                                get: function() {
                                  return e.i
                                }
                              }),
                              e.webpackPolyfill = 1),
                         e
                }
              },
              function(e, t, r) {
                (function(e, n) {
                  var i = function() {
                    function e() {
                      this.yy = {}
                    }
                    var t =
                            function(e, t, r, n) {
                      for (r = r || {}, n = e.length; n--; r[e[n]] = t)
                        ;
                      return r
                    },
                        r = [1, 11], n = [1, 12], i = [1, 13], o = [1, 69],
                        s = [1, 70], a = [1, 68], l = [1, 38], c = [1, 39],
                        u = [1, 58], d = [1, 59], p = [1, 60], h = [1, 61],
                        f = [1, 62], g = [1, 63], m = [1, 64], y = [1, 65],
                        v = [1, 66], b = [1, 67], x = [1, 40], w = [1, 34],
                        _ = [1, 35], E = [1, 36], S = [1, 37], M = [1, 41],
                        I = [1, 42], k = [1, 43], C = [1, 44], T = [1, 45],
                        L = [1, 46], P = [1, 47], A = [1, 48], D = [1, 49],
                        O = [1, 50], F = [1, 51], q = [1, 52], N = [1, 17],
                        R = [1, 53], B = [1, 54], j = [1, 55], V = [1, 56],
                        U = [1, 57], z = [5, 12, 13, 14, 18, 24, 25],
                        G =
                            [
                              5,  11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24,
                              25, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
                              57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
                              69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81
                            ],
                        K = [1, 74],
                        W =
                            [
                              5,  11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24,
                              25, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
                              57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
                              69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81
                            ],
                        H =
                            [
                              5,  11, 12, 13, 14, 15, 17, 18, 20, 21,
                              23, 24, 25, 46, 47, 48, 49, 50, 51, 52,
                              53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
                              63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
                              73, 74, 75, 76, 77, 78, 79, 80, 81
                            ],
                        Y = {
                          trace: function() {},
                          yy: {},
                          symbols_: {
                            error: 2,
                            sentence: 3,
                            group: 4,
                            EOF: 5,
                            element: 6,
                            index_element: 7,
                            modified_expression: 8,
                            radical: 9,
                            primes: 10,
                            OPEN_MODEXP: 11,
                            MODEXP_UNDER: 12,
                            MODEXP_OVER: 13,
                            CLOSE_MODEXP: 14,
                            RADICAL_INDEX: 15,
                            index_group: 16,
                            OPEN_RADICAL: 17,
                            CLOSE_RADICAL: 18,
                            level: 19,
                            LEVEL: 20,
                            BASELINE: 21,
                            frac: 22,
                            OPEN_FRAC: 23,
                            SLASH: 24,
                            CLOSE_FRAC: 25,
                            subscript_head: 26,
                            number: 27,
                            atom: 28,
                            command: 29,
                            greek: 30,
                            letter: 31,
                            comma: 32,
                            period: 33,
                            space: 34,
                            operation: 35,
                            comparison: 36,
                            level_with_comparison: 37,
                            ellipsis: 38,
                            colon: 39,
                            infinity: 40,
                            integral: 41,
                            factorial: 42,
                            ampersand: 43,
                            question_mark: 44,
                            bracket: 45,
                            ',': 46,
                            '.': 47,
                            '[': 48,
                            '{': 49,
                            '(': 50,
                            ']': 51,
                            '}': 52,
                            ')': 53,
                            LANGLE: 54,
                            RANGLE: 55,
                            PIPE: 56,
                            DOUBLE_PIPE: 57,
                            SPACE: 58,
                            COMMAND: 59,
                            GREEK: 60,
                            LETTER: 61,
                            CAPITAL_LETTER: 62,
                            '+': 63,
                            '-': 64,
                            CDOT: 65,
                            TIMES: 66,
                            '*': 67,
                            '/': 68,
                            DIV: 69,
                            PERCENT: 70,
                            COMPARISON: 71,
                            LEVEL_WITH_COMPARISON: 72,
                            ELLIPSIS: 73,
                            COLON: 74,
                            NUMBER: 75,
                            INFINITY: 76,
                            INTEGRAL: 77,
                            FACTORIAL: 78,
                            '&': 79,
                            PRIMES: 80,
                            '?': 81,
                            unknown: 82,
                            UNKNOWN: 83,
                            $accept: 0,
                            $end: 1
                          },
                          terminals_: {
                            2: 'error',
                            5: 'EOF',
                            11: 'OPEN_MODEXP',
                            12: 'MODEXP_UNDER',
                            13: 'MODEXP_OVER',
                            14: 'CLOSE_MODEXP',
                            15: 'RADICAL_INDEX',
                            17: 'OPEN_RADICAL',
                            18: 'CLOSE_RADICAL',
                            20: 'LEVEL',
                            21: 'BASELINE',
                            23: 'OPEN_FRAC',
                            24: 'SLASH',
                            25: 'CLOSE_FRAC',
                            46: ',',
                            47: '.',
                            48: '[',
                            49: '{',
                            50: '(',
                            51: ']',
                            52: '}',
                            53: ')',
                            54: 'LANGLE',
                            55: 'RANGLE',
                            56: 'PIPE',
                            57: 'DOUBLE_PIPE',
                            58: 'SPACE',
                            59: 'COMMAND',
                            60: 'GREEK',
                            61: 'LETTER',
                            62: 'CAPITAL_LETTER',
                            63: '+',
                            64: '-',
                            65: 'CDOT',
                            66: 'TIMES',
                            67: '*',
                            68: '/',
                            69: 'DIV',
                            70: 'PERCENT',
                            71: 'COMPARISON',
                            72: 'LEVEL_WITH_COMPARISON',
                            73: 'ELLIPSIS',
                            74: 'COLON',
                            75: 'NUMBER',
                            76: 'INFINITY',
                            77: 'INTEGRAL',
                            78: 'FACTORIAL',
                            79: '&',
                            80: 'PRIMES',
                            81: '?',
                            83: 'UNKNOWN'
                          },
                          productions_: [
                            0,       [3, 2],  [3, 1],  [4, 2],  [4, 1],
                            [6, 1],  [6, 1],  [6, 2],  [6, 1],  [8, 7],
                            [8, 6],  [8, 5],  [8, 6],  [8, 5],  [8, 5],
                            [8, 4],  [8, 4],  [8, 3],  [8, 4],  [8, 4],
                            [8, 4],  [8, 4],  [8, 3],  [8, 3],  [8, 2],
                            [9, 5],  [9, 4],  [9, 4],  [9, 3],  [9, 3],
                            [9, 2],  [19, 1], [19, 1], [22, 5], [22, 4],
                            [22, 4], [22, 3], [16, 2], [16, 1], [7, 3],
                            [7, 2],  [7, 2],  [7, 3],  [7, 2],  [7, 2],
                            [7, 1],  [7, 1],  [7, 1],  [26, 1], [26, 1],
                            [26, 1], [28, 1], [28, 1], [28, 1], [28, 1],
                            [28, 1], [28, 1], [28, 1], [28, 1], [28, 1],
                            [28, 1], [28, 1], [28, 1], [28, 1], [28, 1],
                            [28, 1], [28, 1], [32, 1], [33, 1], [45, 1],
                            [45, 1], [45, 1], [45, 1], [45, 1], [45, 1],
                            [45, 1], [45, 1], [45, 1], [45, 1], [34, 1],
                            [29, 1], [30, 1], [31, 1], [31, 1], [35, 1],
                            [35, 1], [35, 1], [35, 1], [35, 1], [35, 1],
                            [35, 1], [35, 1], [36, 1], [37, 1], [38, 1],
                            [39, 1], [27, 1], [40, 1], [41, 1], [42, 1],
                            [43, 1], [10, 1], [44, 1], [82, 1]
                          ],
                          performAction: function(e, t, r, n, i, o, s) {
                            var a = o.length - 1;
                            switch (i) {
                              case 1:
                                return o[a - 1];
                              case 2:
                                return n.group();
                              case 3:
                              case 37:
                              case 41:
                              case 43:
                              case 44:
                                this.$ = n.group(o[a - 1], o[a]);
                                break;
                              case 4:
                              case 38:
                                this.$ = n.group(o[a]);
                                break;
                              case 7:
                                this.$ = n.group(o[a - 1], o[a]);
                                break;
                              case 9:
                                this.$ = n.modified_expression(
                                    o[a - 5], o[a - 3], o[a - 1]);
                                break;
                              case 10:
                                this.$ =
                                    n.modified_expression(o[a - 4], o[a - 2]);
                                break;
                              case 11:
                                this.$ =
                                    n.modified_expression(o[a - 3], o[a - 1]);
                                break;
                              case 12:
                                this.$ = n.modified_expression(
                                    o[a - 4], n.group(), o[a - 1]);
                                break;
                              case 13:
                                this.$ = n.modified_expression(
                                    o[a - 3], n.group(), o[a - 1]);
                                break;
                              case 14:
                                this.$ = n.modified_expression(
                                    o[a - 3], n.group(), n.group());
                                break;
                              case 15:
                              case 16:
                                this.$ =
                                    n.modified_expression(o[a - 2], n.group());
                                break;
                              case 17:
                                this.$ = n.modified_expression(o[a - 1]);
                                break;
                              case 18:
                              case 19:
                              case 22:
                              case 23:
                              case 24:
                                this.$ = n.modified_expression(n.group());
                                break;
                              case 20:
                              case 21:
                                n.warnOrError(
                                    'Multi-level modified expressions are not supported.'),
                                    this.$ = n.modified_expression(n.group());
                                break;
                              case 25:
                                this.$ = n.radical(o[a - 1], o[a - 3]);
                                break;
                              case 26:
                                this.$ = n.radical(o[a - 1], n.group());
                                break;
                              case 27:
                                this.$ = n.radical(n.group(), o[a - 2]);
                                break;
                              case 28:
                                this.$ = n.radical(n.group(), n.group());
                                break;
                              case 29:
                                this.$ = n.radical(o[a - 1]);
                                break;
                              case 30:
                                this.$ = n.radical(n.group());
                                break;
                              case 31:
                                this.$ = n.level(o[a]);
                                break;
                              case 32:
                                this.$ = n.baseline();
                                break;
                              case 33:
                                this.$ = n.fraction(o[a - 3], o[a - 1]);
                                break;
                              case 34:
                                this.$ = n.fraction(o[a - 2], n.group());
                                break;
                              case 35:
                                this.$ = n.fraction(n.group(), o[a - 1]);
                                break;
                              case 36:
                                this.$ = n.fraction(n.group(), n.group());
                                break;
                              case 39:
                                this.$ = n.group(
                                    n.simple_subscript(o[a - 2], o[a]),
                                    o[a - 1]);
                                break;
                              case 40:
                                this.$ = n.simple_subscript(o[a - 1], o[a]);
                                break;
                              case 42:
                                n.warnOrError('Illegal use of Nemeth primes'),
                                    this.$ = n.group(
                                        n.simple_subscript(o[a - 2], o[a - 1]),
                                        o[a]);
                                break;
                              case 67:
                                this.$ = n.terminal(',');
                                break;
                              case 68:
                                this.$ = n.terminal('.');
                                break;
                              case 69:
                                this.$ = n.terminal('[');
                                break;
                              case 70:
                                this.$ = n.terminal('\\{');
                                break;
                              case 71:
                                this.$ = n.terminal('(');
                                break;
                              case 72:
                                this.$ = n.terminal(']');
                                break;
                              case 73:
                                this.$ = n.terminal('\\}');
                                break;
                              case 74:
                                this.$ = n.terminal(')');
                                break;
                              case 75:
                                this.$ = n.terminal('\\langle ');
                                break;
                              case 76:
                                this.$ = n.terminal('\\rangle ');
                                break;
                              case 77:
                                this.$ = n.terminal('|');
                                break;
                              case 78:
                                this.$ = n.terminal('\\|');
                                break;
                              case 79:
                                this.$ = n.terminal(' ');
                                break;
                              case 80:
                                this.$ = n.command(o[a].toLowerCase());
                                break;
                              case 81:
                                this.$ = n.terminal(n.greek(o[a]));
                                break;
                              case 82:
                                this.$ = n.terminal(o[a].toLowerCase());
                                break;
                              case 83:
                                this.$ = n.terminal(o[a].toUpperCase());
                                break;
                              case 84:
                                this.$ = n.terminal('+');
                                break;
                              case 85:
                                this.$ = n.terminal('-');
                                break;
                              case 86:
                                this.$ = n.terminal('\\cdot ');
                                break;
                              case 87:
                                this.$ = n.terminal('\\times ');
                                break;
                              case 88:
                                this.$ = n.terminal('*');
                                break;
                              case 89:
                                this.$ = n.terminal('/');
                                break;
                              case 90:
                                this.$ = n.terminal('\\div ');
                                break;
                              case 91:
                                this.$ = n.terminal('\\%');
                                break;
                              case 92:
                                this.$ = n.comparison(o[a].trim());
                                break;
                              case 93:
                                this.$ = n.level_with_comparison(o[a].trim());
                                break;
                              case 94:
                                this.$ = n.terminal('\\ldots ');
                                break;
                              case 95:
                                this.$ = n.terminal(':');
                                break;
                              case 96:
                                this.$ = n.terminal(o[a]);
                                break;
                              case 97:
                                this.$ = n.terminal('\\infty ');
                                break;
                              case 98:
                                this.$ = n.terminal('\\int ');
                                break;
                              case 99:
                                this.$ = n.terminal('!');
                                break;
                              case 100:
                                this.$ = n.terminal('\\&');
                                break;
                              case 101:
                                this.$ = n.primes(o[a]);
                                break;
                              case 102:
                                this.$ = n.terminal('?')
                            }
                          },
                          table: [
                            {
                              3: 1,
                              4: 2,
                              5: [1, 3],
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              11: r,
                              15: n,
                              17: i,
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            {1: [3]},
                            {5: [1, 71]},
                            {1: [2, 2]},
                            t(z, [2, 4], {
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              22: 32,
                              19: 33,
                              4: 72,
                              11: r,
                              15: n,
                              17: i,
                              20: o,
                              21: s,
                              23: a,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            }),
                            t(G, [2, 5]),
                            t(G, [2, 6]),
                            t(G, [2, 8], {10: 73, 80: K}),
                            t(W, [2, 45], {10: 75, 27: 76, 75: N, 80: K}),
                            t(G, [2, 46], {10: 77, 80: K}),
                            t(G, [2, 47], {10: 78, 80: K}),
                            {
                              4: 79,
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              11: r,
                              12: [1, 81],
                              13: [1, 80],
                              14: [1, 82],
                              15: n,
                              17: i,
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            {
                              7: 85,
                              16: 83,
                              17: [1, 84],
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            {
                              4: 86,
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              11: r,
                              15: n,
                              17: i,
                              18: [1, 87],
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            t(H, [2, 48]),
                            t(H, [2, 49]),
                            t(H, [2, 50]),
                            t(H, [2, 96]),
                            t(H, [2, 51]),
                            t(H, [2, 52]),
                            t(H, [2, 53]),
                            t(H, [2, 54]),
                            t(H, [2, 55]),
                            t(H, [2, 56]),
                            t(H, [2, 57]),
                            t(H, [2, 58]),
                            t(H, [2, 59]),
                            t(H, [2, 60]),
                            t(H, [2, 61]),
                            t(H, [2, 62]),
                            t(H, [2, 63]),
                            t(H, [2, 64]),
                            t(H, [2, 65]),
                            t(H, [2, 66]),
                            t(H, [2, 80]),
                            t(H, [2, 81]),
                            t(H, [2, 82]),
                            t(H, [2, 83]),
                            t(H, [2, 67]),
                            t(H, [2, 68]),
                            t(H, [2, 79]),
                            t(H, [2, 84]),
                            t(H, [2, 85]),
                            t(H, [2, 86]),
                            t(H, [2, 87]),
                            t(H, [2, 88]),
                            t(H, [2, 89]),
                            t(H, [2, 90]),
                            t(H, [2, 91]),
                            t(H, [2, 92]),
                            t(H, [2, 93]),
                            t(H, [2, 94]),
                            t(H, [2, 95]),
                            t(H, [2, 97]),
                            t(H, [2, 98]),
                            t(H, [2, 99]),
                            t(H, [2, 100]),
                            t(H, [2, 102]),
                            t(H, [2, 69]),
                            t(H, [2, 70]),
                            t(H, [2, 71]),
                            t(H, [2, 72]),
                            t(H, [2, 73]),
                            t(H, [2, 74]),
                            t(H, [2, 75]),
                            t(H, [2, 76]),
                            t(H, [2, 77]),
                            t(H, [2, 78]),
                            {
                              4: 88,
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              11: r,
                              15: n,
                              17: i,
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              24: [1, 89],
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            t(H, [2, 31]),
                            t(H, [2, 32]),
                            {1: [2, 1]},
                            t(z, [2, 3]),
                            t(G, [2, 7]),
                            t(G, [2, 101]),
                            t(W, [2, 41], {27: 90, 75: N}),
                            t(G, [2, 40], {10: 91, 80: K}),
                            t(G, [2, 43]),
                            t(G, [2, 44]),
                            {12: [1, 92], 13: [1, 93], 14: [1, 94]},
                            {12: [1, 95], 13: [1, 96], 14: [1, 97]},
                            {12: [1, 99], 13: [1, 98], 14: [1, 100]},
                            t(G, [2, 24]),
                            {17: [1, 101]},
                            {
                              4: 102,
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              11: r,
                              15: n,
                              17: i,
                              18: [1, 103],
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            {
                              7: 85,
                              16: 104,
                              17: [2, 38],
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            {18: [1, 105]},
                            t(H, [2, 30]),
                            {24: [1, 106]},
                            {
                              4: 107,
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              11: r,
                              15: n,
                              17: i,
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              25: [1, 108],
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            t(G, [2, 39]),
                            t(G, [2, 42]),
                            {
                              4: 109,
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              11: r,
                              13: [1, 110],
                              14: [1, 111],
                              15: n,
                              17: i,
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            {
                              4: 112,
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              11: r,
                              14: [1, 113],
                              15: n,
                              17: i,
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            t(G, [2, 17]),
                            {14: [1, 114]},
                            {14: [1, 115]},
                            t(G, [2, 22]),
                            {14: [1, 116]},
                            {14: [1, 117]},
                            t(G, [2, 23]),
                            {
                              4: 118,
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              11: r,
                              15: n,
                              17: i,
                              18: [1, 119],
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            {18: [1, 120]},
                            t(H, [2, 28]),
                            {17: [2, 37]},
                            t(H, [2, 29]),
                            {
                              4: 121,
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              11: r,
                              15: n,
                              17: i,
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              25: [1, 122],
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            {25: [1, 123]},
                            t(H, [2, 36]),
                            {13: [1, 124], 14: [1, 125]},
                            {
                              4: 126,
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              11: r,
                              14: [1, 127],
                              15: n,
                              17: i,
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            t(G, [2, 16]),
                            {14: [1, 128]},
                            t(G, [2, 15]),
                            t(G, [2, 18]),
                            t(G, [2, 20]),
                            t(G, [2, 19]),
                            t(G, [2, 21]),
                            {18: [1, 129]},
                            t(H, [2, 27]),
                            t(H, [2, 26]),
                            {25: [1, 130]},
                            t(H, [2, 34]),
                            t(H, [2, 35]),
                            {
                              4: 131,
                              6: 4,
                              7: 5,
                              8: 6,
                              9: 7,
                              11: r,
                              14: [1, 132],
                              15: n,
                              17: i,
                              19: 33,
                              20: o,
                              21: s,
                              22: 32,
                              23: a,
                              26: 8,
                              27: 9,
                              28: 10,
                              29: 14,
                              30: 15,
                              31: 16,
                              32: 18,
                              33: 19,
                              34: 20,
                              35: 21,
                              36: 22,
                              37: 23,
                              38: 24,
                              39: 25,
                              40: 26,
                              41: 27,
                              42: 28,
                              43: 29,
                              44: 30,
                              45: 31,
                              46: l,
                              47: c,
                              48: u,
                              49: d,
                              50: p,
                              51: h,
                              52: f,
                              53: g,
                              54: m,
                              55: y,
                              56: v,
                              57: b,
                              58: x,
                              59: w,
                              60: _,
                              61: E,
                              62: S,
                              63: M,
                              64: I,
                              65: k,
                              66: C,
                              67: T,
                              68: L,
                              69: P,
                              70: A,
                              71: D,
                              72: O,
                              73: F,
                              74: q,
                              75: N,
                              76: R,
                              77: B,
                              78: j,
                              79: V,
                              81: U
                            },
                            t(G, [2, 11]),
                            {14: [1, 133]},
                            t(G, [2, 14]),
                            t(G, [2, 13]),
                            t(H, [2, 25]),
                            t(H, [2, 33]),
                            {14: [1, 134]},
                            t(G, [2, 10]),
                            t(G, [2, 12]),
                            t(G, [2, 9])
                          ],
                          defaultActions: {3: [2, 2], 71: [2, 1], 104: [2, 37]},
                          parseError: function(e, t) {
                            if (!t.recoverable) {
                              var r = new Error(e);
                              throw r.hash = t, r
                            }
                            this.trace(e)
                          },
                          parse: function(e) {
                            var t = this, r = [0], n = [null], i = [],
                                o = this.table, s = '', a = 0, l = 0, c = 0,
                                u = i.slice.call(arguments, 1),
                                d = Object.create(this.lexer), p = {yy: {}};
                            for (var h in this.yy)
                              Object.prototype.hasOwnProperty.call(
                                  this.yy, h) &&
                                  (p.yy[h] = this.yy[h]);
                            d.setInput(e, p.yy),
                                p.yy.lexer = d, p.yy.parser = this,
                                void 0 === d.yylloc && (d.yylloc = {});
                            var f = d.yylloc;
                            i.push(f);
                            var g = d.options && d.options.ranges;
                            'function' == typeof p.yy.parseError ?
                                this.parseError = p.yy.parseError :
                                this.parseError =
                                    Object.getPrototypeOf(this).parseError;
                            for (var m, y, v, b, x, w, _, E, S, M = function() {
                                   var e;
                                   return e = d.lex() || 1,
                                          'number' != typeof e &&
                                              (e = t.symbols_[e] || e),
                                          e
                                 }, I = {};;) {
                              if (v = r[r.length - 1],
                                  this.defaultActions[v] ?
                                      b = this.defaultActions[v] :
                                      (null !== m && void 0 !== m || (m = M()),
                                       b = o[v] && o[v][m]),
                                  void 0 === b || !b.length || !b[0]) {
                                var k = '';
                                S = [];
                                for (w in o[v])
                                  this.terminals_[w] && w > 2 &&
                                      S.push('\'' + this.terminals_[w] + '\'');
                                k = d.showPosition ?
                                    'Parse error on line ' + (a + 1) + ':\n' +
                                        d.showPosition() + '\nExpecting ' +
                                        S.join(', ') + ', got \'' +
                                        (this.terminals_[m] || m) + '\'' :
                                    'Parse error on line ' + (a + 1) +
                                        ': Unexpected ' +
                                        (1 == m ?
                                             'end of input' :
                                             '\'' + (this.terminals_[m] || m) +
                                                 '\''),
                                this.parseError(k, {
                                  text: d.match,
                                  token: this.terminals_[m] || m,
                                  line: d.yylineno,
                                  loc: f,
                                  expected: S
                                })
                              }
                              if (b[0] instanceof Array && b.length > 1)
                                throw new Error(
                                    'Parse Error: multiple actions possible at state: ' +
                                    v + ', token: ' + m);
                              switch (b[0]) {
                                case 1:
                                  r.push(m), n.push(d.yytext), i.push(d.yylloc),
                                      r.push(b[1]),
                                      m = null,
                                      y ? (m = y, y = null) :
                                          (l = d.yyleng, s = d.yytext,
                                           a = d.yylineno, f = d.yylloc,
                                           c > 0 && c--);
                                  break;
                                case 2:
                                  if (_ = this.productions_[b[1]][1],
                                      I.$ = n[n.length - _], I._$ = {
                                        first_line:
                                            i[i.length - (_ || 1)].first_line,
                                        last_line: i[i.length - 1].last_line,
                                        first_column:
                                            i[i.length - (_ || 1)].first_column,
                                        last_column: i[i.length - 1].last_column
                                      },
                                      g &&
                                          (I._$.range =
                                               [
                                                 i[i.length - (_ || 1)]
                                                     .range[0],
                                                 i[i.length - 1].range[1]
                                               ]),
                                      void 0 !==
                                          (x = this.performAction.apply(I, [
                                            s, l, a, p.yy, b[1], n, i
                                          ].concat(u))))
                                    return x;
                                  _ &&
                                      (r = r.slice(0, -1 * _ * 2),
                                       n = n.slice(0, -1 * _),
                                       i = i.slice(0, -1 * _)),
                                      r.push(this.productions_[b[1]][0]),
                                      n.push(I.$), i.push(I._$),
                                      E = o[r[r.length - 2]][r[r.length - 1]],
                                      r.push(E);
                                  break;
                                case 3:
                                  return !0
                              }
                            }
                            return !0
                          }
                        },
                        X = function() {
                          return {
                            EOF: 1,
                                parseError:
                                    function(e, t) {
                                      if (!this.yy.parser) throw new Error(e);
                                      this.yy.parser.parseError(e, t)
                                    },
                                setInput:
                                    function(e, t) {
                                      return this.yy = t || this.yy || {},
                                             this._input = e,
                                             this._more = this._backtrack =
                                                 this.done = !1,
                                             this.yylineno = this.yyleng = 0,
                                             this.yytext = this.matched =
                                                 this.match = '',
                                             this.conditionStack = ['INITIAL'],
                                             this.yylloc = {
                                               first_line: 1,
                                               first_column: 0,
                                               last_line: 1,
                                               last_column: 0
                                             },
                                             this.options.ranges &&
                                                 (this.yylloc.range = [0, 0]),
                                             this.offset = 0, this
                                    },
                                input:
                                    function() {
                                      var e = this._input[0];
                                      return this.yytext += e, this.yyleng++,
                                             this.offset++, this.match += e,
                                             this.matched += e,
                                             e.match(/(?:\r\n?|\n).*/g) ?
                                                 (this.yylineno++,
                                                  this.yylloc.last_line++) :
                                                 this.yylloc.last_column++,
                                             this.options.ranges &&
                                                 this.yylloc.range[1]++,
                                             this._input = this._input.slice(1),
                                             e
                                    },
                                unput:
                                    function(e) {
                                      var t = e.length,
                                          r = e.split(/(?:\r\n?|\n)/g);
                                      this._input = e + this._input,
                                      this.yytext = this.yytext.substr(
                                          0, this.yytext.length - t),
                                      this.offset -= t;
                                      var n = this.match.split(/(?:\r\n?|\n)/g);
                                      this.match = this.match.substr(
                                          0, this.match.length - 1),
                                      this.matched = this.matched.substr(
                                          0, this.matched.length - 1),
                                      r.length - 1 &&
                                          (this.yylineno -= r.length - 1);
                                      var i = this.yylloc.range;
                                      return this.yylloc = {
                                        first_line: this.yylloc.first_line,
                                        last_line: this.yylineno + 1,
                                        first_column: this.yylloc.first_column,
                                        last_column: r ?
                                            (r.length === n.length ?
                                                 this.yylloc.first_column :
                                                 0) +
                                                n[n.length - r.length].length -
                                                r[0].length :
                                            this.yylloc.first_column - t
                                      },
                                             this.options.ranges &&
                                                 (this.yylloc.range =
                                                      [
                                                        i[0],
                                                        i[0] + this.yyleng - t
                                                      ]),
                                             this.yyleng = this.yytext.length,
                                             this
                                    },
                                more:
                                    function() {
                                      return this._more = !0, this
                                    },
                                reject:
                                    function() {
                                      return this.options.backtrack_lexer ?
                                          (this._backtrack = !0, this) :
                                          this.parseError(
                                              'Lexical error on line ' +
                                                  (this.yylineno + 1) +
                                                  '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' +
                                                  this.showPosition(),
                                              {
                                                text: '',
                                                token: null,
                                                line: this.yylineno
                                              })
                                    },
                                less:
                                    function(e) {
                                      this.unput(this.match.slice(e))
                                    },
                                pastInput:
                                    function() {
                                      var e = this.matched.substr(
                                          0,
                                          this.matched.length -
                                              this.match.length);
                                      return (e.length > 20 ? '...' : '') +
                                          e.substr(-20).replace(/\n/g, '')
                                    },
                                upcomingInput:
                                    function() {
                                      var e = this.match;
                                      return e.length < 20 &&
                                                 (e += this._input.substr(
                                                      0, 20 - e.length)),
                                             (e.substr(0, 20) +
                                              (e.length > 20 ? '...' : ''))
                                                 .replace(/\n/g, '')
                                    },
                                showPosition:
                                    function() {
                                      var e = this.pastInput(),
                                          t = new Array(e.length + 1).join('-');
                                      return e + this.upcomingInput() + '\n' +
                                          t + '^'
                                    },
                                test_match:
                                    function(e, t) {
                                      var r, n, i;
                                      if (this.options.backtrack_lexer &&
                                              (i = {
                                                yylineno: this.yylineno,
                                                yylloc: {
                                                  first_line:
                                                      this.yylloc.first_line,
                                                  last_line: this.last_line,
                                                  first_column:
                                                      this.yylloc.first_column,
                                                  last_column:
                                                      this.yylloc.last_column
                                                },
                                                yytext: this.yytext,
                                                match: this.match,
                                                matches: this.matches,
                                                matched: this.matched,
                                                yyleng: this.yyleng,
                                                offset: this.offset,
                                                _more: this._more,
                                                _input: this._input,
                                                yy: this.yy,
                                                conditionStack:
                                                    this.conditionStack.slice(
                                                        0),
                                                done: this.done
                                              },
                                               this.options.ranges &&
                                                   (i.yylloc.range =
                                                        this.yylloc.range.slice(
                                                            0))),
                                          n = e[0].match(/(?:\r\n?|\n).*/g),
                                          n && (this.yylineno += n.length),
                                          this.yylloc = {
                                            first_line: this.yylloc.last_line,
                                            last_line: this.yylineno + 1,
                                            first_column:
                                                this.yylloc.last_column,
                                            last_column: n ?
                                                n[n.length - 1].length -
                                                    n[n.length - 1]
                                                        .match(/\r?\n?/)[0]
                                                        .length :
                                                this.yylloc.last_column +
                                                    e[0].length
                                          },
                                          this.yytext += e[0],
                                          this.match += e[0], this.matches = e,
                                          this.yyleng = this.yytext.length,
                                          this.options.ranges &&
                                              (this.yylloc.range =
                                                   [
                                                     this.offset,
                                                     this.offset += this.yyleng
                                                   ]),
                                          this._more = !1, this._backtrack = !1,
                                          this._input =
                                              this._input.slice(e[0].length),
                                          this.matched += e[0],
                                          r = this.performAction.call(
                                              this, this.yy, this, t,
                                              this.conditionStack
                                                  [this.conditionStack.length -
                                                   1]),
                                          this.done && this._input &&
                                              (this.done = !1),
                                          r)
                                        return r;
                                      if (this._backtrack) {
                                        for (var o in i) this[o] = i[o];
                                        return !1
                                      }
                                      return !1
                                    },
                                next:
                                    function() {
                                      if (this.done) return this.EOF;
                                      this._input || (this.done = !0);
                                      var e, t, r, n;
                                      this._more ||
                                          (this.yytext = '', this.match = '');
                                      for (var i = this._currentRules(), o = 0;
                                           o < i.length; o++)
                                        if ((r = this._input.match(
                                                 this.rules[i[o]])) &&
                                            (!t || r[0].length > t[0].length)) {
                                          if (t = r, n = o,
                                              this.options.backtrack_lexer) {
                                            if (!1 !==
                                                (e = this.test_match(r, i[o])))
                                              return e;
                                            if (this._backtrack) {
                                              t = !1;
                                              continue
                                            }
                                            return !1
                                          }
                                          if (!this.options.flex) break
                                        }
                                      return t ?
                                          !1 !==
                                                  (e = this.test_match(
                                                       t, i[n])) &&
                                              e :
                                          '' === this._input ?
                                          this.EOF :
                                          this.parseError(
                                              'Lexical error on line ' +
                                                  (this.yylineno + 1) +
                                                  '. Unrecognized text.\n' +
                                                  this.showPosition(),
                                              {
                                                text: '',
                                                token: null,
                                                line: this.yylineno
                                              })
                                    },
                                lex:
                                    function() {
                                      var e = this.next();
                                      return e || this.lex()
                                    },
                                begin:
                                    function(e) {
                                      this.conditionStack.push(e)
                                    },
                                popState:
                                    function() {
                                      return this.conditionStack.length - 1 >
                                              0 ?
                                          this.conditionStack.pop() :
                                          this.conditionStack[0]
                                    },
                                _currentRules:
                                    function() {
                                      return this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1] ? this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules : this.conditions.INITIAL.rules
                                    },
                                topState:
                                    function(e) {
                                      return e = this.conditionStack.length -
                                                 1 - Math.abs(e || 0),
                                             e >= 0 ? this.conditionStack[e] :
                                                      'INITIAL'
                                    },
                                pushState:
                                    function(e) {
                                      this.begin(e)
                                    },
                                stateStackSize:
                                    function() {
                                      return this.conditionStack.length
                                    },
                                options: {},
                                performAction:
                                    function(e, t, r, n) {
                                      switch (r) {
                                        case 0:
                                          return this.begin('modexp'), 11;
                                        case 1:
                                          return 21;
                                        case 2:
                                          return this.begin('modexp'), 11;
                                        case 3:
                                          return 12;
                                        case 4:
                                          return 13;
                                        case 5:
                                          return this.popState(), 14;
                                        case 6:
                                          return 63;
                                        case 7:
                                          return 64;
                                        case 8:
                                          return 65;
                                        case 9:
                                          return 66;
                                        case 10:
                                          return 67;
                                        case 11:
                                          return 68;
                                        case 12:
                                          return 69;
                                        case 13:
                                          return 54;
                                        case 14:
                                          return 48;
                                        case 15:
                                          return 49;
                                        case 16:
                                          return 50;
                                        case 17:
                                          return 55;
                                        case 18:
                                          return 51;
                                        case 19:
                                          return 52;
                                        case 20:
                                          return 53;
                                        case 21:
                                          return 57;
                                        case 22:
                                          return 56;
                                        case 23:
                                          return 74;
                                        case 24:
                                          return 70;
                                        case 25:
                                        case 26:
                                        case 27:
                                        case 28:
                                        case 29:
                                        case 30:
                                        case 31:
                                        case 32:
                                        case 33:
                                          return 72;
                                        case 34:
                                          return 71;
                                        case 35:
                                        case 36:
                                          return 72;
                                        case 37:
                                        case 38:
                                        case 39:
                                        case 40:
                                        case 41:
                                        case 42:
                                        case 43:
                                        case 44:
                                        case 45:
                                        case 46:
                                          return 71;
                                        case 47:
                                          return 73;
                                        case 48:
                                          return 20;
                                        case 49:
                                          return 47;
                                        case 50:
                                          return 21;
                                        case 51:
                                          return 80;
                                        case 52:
                                          return 60;
                                        case 53:
                                          return 15;
                                        case 54:
                                          return this.begin('radical'), 17;
                                        case 55:
                                          return this.popState(), 18;
                                        case 56:
                                          return 18;
                                        case 57:
                                          return 77;
                                        case 58:
                                          return 79;
                                        case 59:
                                          return 78;
                                        case 60:
                                        case 61:
                                          return 59;
                                        case 62:
                                          return t.yytext = this.matches[1], 75;
                                        case 63:
                                          return 23;
                                        case 64:
                                          return 24;
                                        case 65:
                                          return 25;
                                        case 66:
                                          return t.yytext = this.matches[1], 62;
                                        case 67:
                                          return 61;
                                        case 68:
                                          return 76;
                                        case 69:
                                          return 81;
                                        case 70:
                                          return 46;
                                        case 71:
                                          return 47;
                                        case 72:
                                          return 58;
                                        case 73:
                                          return 5;
                                        case 74:
                                          return 83
                                      }
                                    },
                                rules:
                                    [
                                      /^(?:"(?=[^>\]]+%))/,
                                      /^(?:")/,
                                      /^(?:"(?=[^>\]]+\]|[^>\]]+%))/,
                                      /^(?:%)/,
                                      /^(?:<)/,
                                      /^(?:\])/,
                                      /^(?:[+])/,
                                      /^(?:[-])/,
                                      /^(?:[*])/,
                                      /^(?:[@][*])/,
                                      /^(?:[@][\#])/,
                                      /^(?:[_][\/])/,
                                      /^(?:[.][\/])/,
                                      /^(?:[.][.][(])/,
                                      /^(?:[@][(])/,
                                      /^(?:[.][(])/,
                                      /^(?:[(])/,
                                      /^(?:[.][.][)])/,
                                      /^(?:[@][)])/,
                                      /^(?:[.][)])/,
                                      /^(?:[)])/,
                                      /^(?:[\\][\\])/,
                                      /^(?:[\\])/,
                                      /^(?:[_][3])/,
                                      /^(?:[@][0])/,
                                      /^(?:[ ][\^;]+[.]K[ ])/,
                                      /^(?:[\^;]+[=])/,
                                      /^(?:[ ][\^;]+[\/][.]K[ ])/,
                                      /^(?:[ ][\^;]+[@][:][@][:][ ])/,
                                      /^(?:[ ][\^;]+["]K[:][ ])/,
                                      /^(?:[ ][\^;]+[.]1[:][ ])/,
                                      /^(?:[ ][\^;]+["]K[ ])/,
                                      /^(?:[ ][\^;]+[.]1[ ])/,
                                      /^(?:[ ][\^;]+[\/][$][L][ ])/,
                                      /^(?:[ ][.]K[ ])/,
                                      /^(?:[ ][\^;]+[\/]?[$][L][ ])/,
                                      /^(?:[ ][\^;]+[$]P[ ])/,
                                      /^(?:[=])/,
                                      /^(?:[ ][\/][.]K[ ])/,
                                      /^(?:[ ][@][:][@][:][ ])/,
                                      /^(?:[ ]["]K[:][ ])/,
                                      /^(?:[ ][.]1[:][ ])/,
                                      /^(?:[ ]["]K[ ])/,
                                      /^(?:[ ][.]1[ ])/,
                                      /^(?:[@][:])/,
                                      /^(?:[ ][\/]?[$][L][ ])/,
                                      /^(?:[ ][$]P[ ])/,
                                      /^(?:[ ]['][']['][ ])/,
                                      /^(?:[\^;]+)/,
                                      /^(?:[.]["])/,
                                      /^(?:["])/,
                                      /^(?:[']+)/,
                                      /^(?:[.][,]?[ABGDEZ\?\:IKLMNXOPRSTUYF\&W])/,
                                      /^(?:[.]*[<])/,
                                      /^(?:[.]*[>])/,
                                      /^(?:[.]*\])/,
                                      /^(?:[.]*\])/,
                                      /^(?:!)/,
                                      /^(?:[_]&)/,
                                      /^(?:&)/,
                                      /^(?:(ARC)?(SIN|COS|TAN|CSC|SEC|COT)(H)?)/,
                                      /^(?:(ARG|DET|EXP|IM|INF|LIM|LN|LOG|MAX|MIN|MOD|RE|SUP))/,
                                      /^(?:#?(\d*\.?\d+))/,
                                      /^(?:[,]*[?])/,
                                      /^(?:[,]*[\/])/,
                                      /^(?:[,]*#)/,
                                      /^(?:[,]([A-Z]))/,
                                      /^(?:[A-Z])/,
                                      /^(?:[,][=])/,
                                      /^(?:[_][8])/,
                                      /^(?:[,][ ]?)/,
                                      /^(?:[.])/,
                                      /^(?:[ ])/,
                                      /^(?:$)/,
                                      /^(?:.)/
                                    ],
                                conditions: {
                                  radical: {
                                    rules:
                                        [
                                          0,  1,  2,  6,  7,  8,  9,  10, 11,
                                          12, 13, 14, 15, 16, 17, 18, 19, 20,
                                          21, 22, 23, 24, 25, 26, 27, 28, 29,
                                          30, 31, 32, 33, 34, 35, 36, 37, 38,
                                          39, 40, 41, 42, 43, 44, 45, 46, 47,
                                          48, 49, 50, 51, 52, 53, 54, 55, 56,
                                          57, 58, 59, 60, 61, 62, 63, 64, 65,
                                          66, 67, 68, 69, 70, 71, 72, 73, 74
                                        ],
                                    inclusive: !0
                                  },
                                  modexp: {
                                    rules:
                                        [
                                          2,  3,  4,  5,  6,  7,  8,  9,  10,
                                          11, 12, 13, 14, 15, 16, 17, 18, 19,
                                          20, 21, 22, 23, 24, 25, 26, 27, 28,
                                          29, 30, 31, 32, 33, 34, 35, 36, 37,
                                          38, 39, 40, 41, 42, 43, 44, 45, 46,
                                          47, 48, 49, 50, 51, 52, 53, 54, 56,
                                          57, 58, 59, 60, 61, 62, 63, 64, 65,
                                          66, 67, 68, 69, 70, 71, 72, 73, 74
                                        ],
                                    inclusive: !0
                                  },
                                  INITIAL: {
                                    rules:
                                        [
                                          2,  6,  7,  8,  9,  10, 11, 12, 13,
                                          14, 15, 16, 17, 18, 19, 20, 21, 22,
                                          23, 24, 25, 26, 27, 28, 29, 30, 31,
                                          32, 33, 34, 35, 36, 37, 38, 39, 40,
                                          41, 42, 43, 44, 45, 46, 47, 48, 49,
                                          50, 51, 52, 53, 54, 56, 57, 58, 59,
                                          60, 61, 62, 63, 64, 65, 66, 67, 68,
                                          69, 70, 71, 72, 73, 74
                                        ],
                                    inclusive: !0
                                  }
                                }
                          }
                        }();
                    return Y.lexer = X, e.prototype = Y, Y.Parser = e, new e
                  }();
                  t.parser = i, t.Parser = i.Parser, t.parse = function() {
                    return i.parse.apply(i, arguments)
                  }, t.main = function(n) {
                    n[1] ||
                        (console.log('Usage: ' + n[0] + ' FILE'), e.exit(1));
                    var i = r(4).readFileSync(r(5).normalize(n[1]), 'utf8');
                    return t.parser.parse(i)
                  }, void 0 !== n && r.c[r.s] === n && t.main(e.argv.slice(1))
                }).call(t, r(1), r(8)(e))
              },
              function(e, t, r) {
                (function(e, n) {
                  var i = function() {
                    function e() {
                      this.yy = {}
                    }
                    var t =
                            function(e, t, r, n) {
                      for (r = r || {}, n = e.length; n--; r[e[n]] = t)
                        ;
                      return r
                    },
                        r = [1, 15], n = [1, 16], i = [1, 17], o = [1, 36],
                        s = [1, 18], a = [1, 37], l = [1, 38], c = [1, 14],
                        u = [1, 46], d = [1, 47], p = [1, 39], h = [1, 40],
                        f = [1, 41], g = [1, 56], m = [1, 42], y = [1, 43],
                        v = [1, 44], b = [1, 45], x = [1, 54], w = [1, 55],
                        _ = [1, 57], E = [1, 58], S = [1, 59], M = [1, 60],
                        I = [1, 61], k = [1, 62], C = [1, 63], T = [1, 64],
                        L = [1, 65], P = [1, 66], A = [1, 67], D = [1, 68],
                        O = [1, 69], F = [1, 70], q = [1, 71], N = [1, 72],
                        R = [1, 73], B = [1, 74], j = [1, 75], V = [1, 48],
                        U = [1, 49], z = [1, 50], G = [1, 51], K = [1, 52],
                        W = [1, 76], H = [1, 53],
                        Y = [5, 14, 18, 19, 29, 52, 53, 54],
                        X = [5, 10, 13, 14, 15, 18, 19, 29, 52, 53, 54],
                        $ =
                            [
                              5,  10, 13, 14, 15, 17, 18, 19, 21, 23, 24,
                              28, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55,
                              56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
                              67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                              78, 79, 80, 81, 82, 83, 84, 85, 86, 87
                            ],
                        Q = [1, 84], Z = [1, 85], J = [1, 86],
                        ee =
                            [
                              10, 13, 15, 17, 21, 23, 24, 28, 47, 48,
                              49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                              59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
                              69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
                              79, 80, 81, 82, 83, 84, 85, 86, 87
                            ],
                        te = {
                          trace: function() {},
                          yy: {},
                          symbols_: {
                            error: 2,
                            sentence: 3,
                            group: 4,
                            EOF: 5,
                            expression_group: 6,
                            delimited_expression: 7,
                            level: 8,
                            radical: 9,
                            LEVEL: 10,
                            basic_token: 11,
                            bracketed_expression: 12,
                            RADICAL_WITH_INDEX: 13,
                            CLOSE_RADICAL: 14,
                            RADICAL: 15,
                            frac: 16,
                            OPEN_FRAC: 17,
                            OVER: 18,
                            CLOSE_FRAC: 19,
                            simple_frac: 20,
                            NUMBER: 21,
                            NUMBER_FRAC_DENOMINATOR: 22,
                            NUMBER_FRAC_NUMERATOR_BAD: 23,
                            NUMBER_FRAC_DENOMINATOR_BAD: 24,
                            atom: 25,
                            lbracket: 26,
                            rbracket: 27,
                            OPEN_GROUP: 28,
                            CLOSE_GROUP: 29,
                            command: 30,
                            greek: 31,
                            letter: 32,
                            comma: 33,
                            period: 34,
                            colon: 35,
                            infinity: 36,
                            integral: 37,
                            factorial: 38,
                            ampersand: 39,
                            question_mark: 40,
                            bracket: 41,
                            space: 42,
                            operation: 43,
                            comparison: 44,
                            ellipsis: 45,
                            primes: 46,
                            ',': 47,
                            '.': 48,
                            '[': 49,
                            '{': 50,
                            '(': 51,
                            ']': 52,
                            '}': 53,
                            ')': 54,
                            SPACE: 55,
                            COMMAND: 56,
                            GREEK: 57,
                            CAPITAL_LETTER: 58,
                            LETTER: 59,
                            PIPE: 60,
                            DOUBLE_PIPE: 61,
                            '+': 62,
                            '-': 63,
                            CDOT: 64,
                            TIMES: 65,
                            '*': 66,
                            DIV: 67,
                            SLASH: 68,
                            PERCENT: 69,
                            '=': 70,
                            NEQ: 71,
                            '<': 72,
                            '>': 73,
                            LEQ: 74,
                            APPROX: 75,
                            GEQ: 76,
                            TILDE: 77,
                            PARALLEL: 78,
                            PERPENDICULAR: 79,
                            ELLIPSIS: 80,
                            COLON: 81,
                            INFINITY: 82,
                            INTEGRAL: 83,
                            FACTORIAL: 84,
                            '&': 85,
                            PRIMES: 86,
                            '?': 87,
                            unknown: 88,
                            UNKNOWN: 89,
                            $accept: 0,
                            $end: 1
                          },
                          terminals_: {
                            2: 'error',
                            5: 'EOF',
                            10: 'LEVEL',
                            13: 'RADICAL_WITH_INDEX',
                            14: 'CLOSE_RADICAL',
                            15: 'RADICAL',
                            17: 'OPEN_FRAC',
                            18: 'OVER',
                            19: 'CLOSE_FRAC',
                            21: 'NUMBER',
                            22: 'NUMBER_FRAC_DENOMINATOR',
                            23: 'NUMBER_FRAC_NUMERATOR_BAD',
                            24: 'NUMBER_FRAC_DENOMINATOR_BAD',
                            28: 'OPEN_GROUP',
                            29: 'CLOSE_GROUP',
                            47: ',',
                            48: '.',
                            49: '[',
                            50: '{',
                            51: '(',
                            52: ']',
                            53: '}',
                            54: ')',
                            55: 'SPACE',
                            56: 'COMMAND',
                            57: 'GREEK',
                            58: 'CAPITAL_LETTER',
                            59: 'LETTER',
                            60: 'PIPE',
                            61: 'DOUBLE_PIPE',
                            62: '+',
                            63: '-',
                            64: 'CDOT',
                            65: 'TIMES',
                            66: '*',
                            67: 'DIV',
                            68: 'SLASH',
                            69: 'PERCENT',
                            70: '=',
                            71: 'NEQ',
                            72: '<',
                            73: '>',
                            74: 'LEQ',
                            75: 'APPROX',
                            76: 'GEQ',
                            77: 'TILDE',
                            78: 'PARALLEL',
                            79: 'PERPENDICULAR',
                            80: 'ELLIPSIS',
                            81: 'COLON',
                            82: 'INFINITY',
                            83: 'INTEGRAL',
                            84: 'FACTORIAL',
                            85: '&',
                            86: 'PRIMES',
                            87: '?',
                            89: 'UNKNOWN'
                          },
                          productions_: [
                            0,       [3, 2],  [3, 1],  [4, 3],  [4, 2],
                            [4, 1],  [4, 2],  [4, 1],  [7, 1],  [7, 1],
                            [8, 2],  [8, 2],  [8, 2],  [9, 4],  [9, 3],
                            [9, 3],  [9, 2],  [9, 4],  [9, 3],  [9, 2],
                            [16, 5], [16, 4], [16, 4], [16, 3], [16, 2],
                            [20, 2], [20, 1], [20, 1], [11, 1], [11, 1],
                            [11, 1], [6, 2],  [6, 2],  [6, 1],  [6, 1],
                            [12, 3], [12, 2], [12, 3], [12, 2], [25, 1],
                            [25, 1], [25, 1], [25, 1], [25, 1], [25, 1],
                            [25, 1], [25, 1], [25, 1], [25, 1], [25, 1],
                            [25, 1], [25, 1], [25, 1], [25, 1], [25, 1],
                            [25, 1], [25, 1], [33, 1], [34, 1], [26, 1],
                            [26, 1], [26, 1], [27, 1], [27, 1], [27, 1],
                            [42, 1], [30, 1], [31, 1], [32, 1], [32, 1],
                            [41, 1], [41, 1], [43, 1], [43, 1], [43, 1],
                            [43, 1], [43, 1], [43, 1], [43, 1], [43, 1],
                            [44, 1], [44, 1], [44, 1], [44, 1], [44, 1],
                            [44, 1], [44, 1], [44, 1], [44, 1], [44, 1],
                            [45, 1], [35, 1], [36, 1], [37, 1], [38, 1],
                            [39, 1], [46, 1], [40, 1], [88, 1]
                          ],
                          performAction: function(e, t, r, n, i, o, s) {
                            var a = o.length - 1;
                            switch (i) {
                              case 1:
                                return o[a - 1];
                              case 2:
                                return n.group();
                              case 3:
                              case 35:
                                this.$ = n.group(o[a - 2], o[a - 1], o[a]);
                                break;
                              case 4:
                              case 6:
                              case 31:
                              case 32:
                              case 36:
                                this.$ = n.group(o[a - 1], o[a]);
                                break;
                              case 5:
                              case 7:
                              case 33:
                              case 34:
                                this.$ = n.group(o[a]);
                                break;
                              case 10:
                              case 11:
                              case 12:
                                this.$ = n.basic_level(o[a - 1], n.group(o[a]));
                                break;
                              case 13:
                              case 17:
                                this.$ = n.radical(o[a - 1], n.group(o[a - 2]));
                                break;
                              case 14:
                              case 15:
                                this.$ =
                                    n.radical(n.group(), n.group(o[a - 1]));
                                break;
                              case 16:
                                this.$ = n.radical(n.group(), n.group());
                                break;
                              case 18:
                                this.$ = n.radical(o[a - 1]);
                                break;
                              case 19:
                                this.$ = n.radical(n.group());
                                break;
                              case 20:
                                this.$ = n.fraction(o[a - 3], o[a - 1]);
                                break;
                              case 21:
                                this.$ = n.fraction(o[a - 2], n.group());
                                break;
                              case 22:
                                this.$ = n.fraction(n.group(), o[a - 1]);
                                break;
                              case 23:
                              case 24:
                                this.$ = n.fraction(n.group(), n.group());
                                break;
                              case 25:
                                this.$ = n.fraction(
                                    n.group(n.terminal(n.to_number(o[a - 1]))),
                                    n.group(n.terminal(n.to_number(o[a]))));
                                break;
                              case 26:
                                this.$ = n.fraction(
                                    n.group(n.terminal(n.to_number(o[a]))),
                                    n.group());
                                break;
                              case 27:
                                this.$ = n.fraction(
                                    n.group(),
                                    n.group(n.terminal(n.to_number(o[$01]))));
                                break;
                              case 37:
                                this.$ = n.group(o[a - 1]);
                                break;
                              case 38:
                                this.$ = n.group();
                                break;
                              case 39:
                                this.$ = n.terminal(n.to_number(o[a]));
                                break;
                              case 57:
                                this.$ = n.terminal(',');
                                break;
                              case 58:
                                this.$ = n.terminal('.');
                                break;
                              case 59:
                                this.$ = n.terminal('[');
                                break;
                              case 60:
                                this.$ = n.terminal('\\{');
                                break;
                              case 61:
                                this.$ = n.terminal('(');
                                break;
                              case 62:
                                this.$ = n.terminal(']');
                                break;
                              case 63:
                                this.$ = n.terminal('\\}');
                                break;
                              case 64:
                                this.$ = n.terminal(')');
                                break;
                              case 65:
                                this.$ = n.terminal(' ');
                                break;
                              case 66:
                                this.$ =
                                    n.command('\\' + o[a].trim().toLowerCase());
                                break;
                              case 67:
                                this.$ = n.terminal(n.greek(o[a]));
                                break;
                              case 68:
                                this.$ = n.terminal(o[a].toUpperCase());
                                break;
                              case 69:
                                this.$ = n.terminal(o[a].toLowerCase());
                                break;
                              case 70:
                                this.$ = n.terminal('|');
                                break;
                              case 71:
                                this.$ = n.terminal('\\|');
                                break;
                              case 72:
                                this.$ = n.terminal('+');
                                break;
                              case 73:
                                this.$ = n.terminal('-');
                                break;
                              case 74:
                                this.$ = n.terminal('\\cdot ');
                                break;
                              case 75:
                                this.$ = n.terminal('\\times ');
                                break;
                              case 76:
                                this.$ = n.terminal('*');
                                break;
                              case 77:
                                this.$ = n.terminal('\\div ');
                                break;
                              case 78:
                                this.$ = n.terminal('/');
                                break;
                              case 79:
                                this.$ = n.terminal('\\%');
                                break;
                              case 80:
                                this.$ = n.terminal('=');
                                break;
                              case 81:
                                this.$ = n.terminal('\\neq ');
                                break;
                              case 82:
                                this.$ = n.terminal('<');
                                break;
                              case 83:
                                this.$ = n.terminal('>');
                                break;
                              case 84:
                                this.$ = n.terminal('\\leq ');
                                break;
                              case 85:
                                this.$ = n.terminal('\\approx ');
                                break;
                              case 86:
                                this.$ = n.terminal('\\geq ');
                                break;
                              case 87:
                                this.$ = n.terminal('\\sim ');
                                break;
                              case 88:
                                this.$ = n.terminal('\\parallel ');
                                break;
                              case 89:
                                this.$ = n.terminal('\\perp ');
                                break;
                              case 90:
                                this.$ = n.terminal('\\ldots ');
                                break;
                              case 91:
                                this.$ = n.terminal(':');
                                break;
                              case 92:
                                this.$ = n.terminal('\\infty ');
                                break;
                              case 93:
                                this.$ = n.terminal('\\int ');
                                break;
                              case 94:
                                this.$ = n.terminal('!');
                                break;
                              case 95:
                                this.$ = n.terminal('\\&');
                                break;
                              case 96:
                                this.$ = n.primes(o[a]);
                                break;
                              case 97:
                                this.$ = n.terminal('?')
                            }
                          },
                          table: [
                            {
                              3: 1,
                              4: 2,
                              5: [1, 3],
                              6: 4,
                              7: 5,
                              8: 8,
                              9: 9,
                              10: r,
                              11: 6,
                              12: 7,
                              13: n,
                              15: i,
                              16: 11,
                              17: o,
                              20: 12,
                              21: s,
                              23: a,
                              24: l,
                              25: 10,
                              26: 13,
                              28: c,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            },
                            {1: [3]},
                            {5: [1, 77]},
                            {1: [2, 2]},
                            t(Y, [2, 5],
                              {8: 8, 9: 9, 7: 78, 10: r, 13: n, 15: i}),
                            t(Y, [2, 7], {
                              6: 4,
                              7: 5,
                              11: 6,
                              12: 7,
                              8: 8,
                              9: 9,
                              25: 10,
                              16: 11,
                              20: 12,
                              26: 13,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              4: 79,
                              10: r,
                              13: n,
                              15: i,
                              17: o,
                              21: s,
                              23: a,
                              24: l,
                              28: c,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            }),
                            t(X, [2, 33], {
                              11: 6,
                              12: 7,
                              25: 10,
                              16: 11,
                              20: 12,
                              26: 13,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              6: 80,
                              17: o,
                              21: s,
                              23: a,
                              24: l,
                              28: c,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            }),
                            t(X, [2, 34], {
                              11: 6,
                              12: 7,
                              25: 10,
                              16: 11,
                              20: 12,
                              26: 13,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              6: 81,
                              17: o,
                              21: s,
                              23: a,
                              24: l,
                              28: c,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            }),
                            t($, [2, 8]),
                            t($, [2, 9]),
                            t($, [2, 28]),
                            t($, [2, 29]),
                            t($, [2, 30]),
                            {
                              4: 82,
                              6: 4,
                              7: 5,
                              8: 8,
                              9: 9,
                              10: r,
                              11: 6,
                              12: 7,
                              13: n,
                              15: i,
                              16: 11,
                              17: o,
                              20: 12,
                              21: s,
                              23: a,
                              24: l,
                              25: 10,
                              26: 13,
                              27: 83,
                              28: c,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              52: Q,
                              53: Z,
                              54: J,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            },
                            {
                              4: 87,
                              6: 4,
                              7: 5,
                              8: 8,
                              9: 9,
                              10: r,
                              11: 6,
                              12: 7,
                              13: n,
                              15: i,
                              16: 11,
                              17: o,
                              20: 12,
                              21: s,
                              23: a,
                              24: l,
                              25: 10,
                              26: 13,
                              28: c,
                              29: [1, 88],
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            },
                            {
                              9: 91,
                              11: 89,
                              12: 90,
                              13: n,
                              15: i,
                              16: 11,
                              17: o,
                              20: 12,
                              21: s,
                              23: a,
                              24: l,
                              25: 10,
                              26: 13,
                              28: c,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            },
                            {
                              11: 92,
                              12: 93,
                              14: [1, 94],
                              16: 11,
                              17: o,
                              20: 12,
                              21: s,
                              23: a,
                              24: l,
                              25: 10,
                              26: 13,
                              28: c,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            },
                            {
                              4: 95,
                              6: 4,
                              7: 5,
                              8: 8,
                              9: 9,
                              10: r,
                              11: 6,
                              12: 7,
                              13: n,
                              14: [1, 96],
                              15: i,
                              16: 11,
                              17: o,
                              20: 12,
                              21: s,
                              23: a,
                              24: l,
                              25: 10,
                              26: 13,
                              28: c,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            },
                            t($, [2, 39], {22: [1, 97]}),
                            t($, [2, 40]),
                            t($, [2, 41]),
                            t($, [2, 42]),
                            t($, [2, 43]),
                            t($, [2, 44]),
                            t($, [2, 45]),
                            t($, [2, 46]),
                            t($, [2, 47]),
                            t($, [2, 48]),
                            t($, [2, 49]),
                            t($, [2, 50]),
                            t($, [2, 51]),
                            t($, [2, 52]),
                            t($, [2, 53]),
                            t($, [2, 54]),
                            t($, [2, 55]),
                            t($, [2, 56]),
                            {
                              4: 98,
                              6: 4,
                              7: 5,
                              8: 8,
                              9: 9,
                              10: r,
                              11: 6,
                              12: 7,
                              13: n,
                              15: i,
                              16: 11,
                              17: o,
                              18: [1, 99],
                              19: [1, 100],
                              20: 12,
                              21: s,
                              23: a,
                              24: l,
                              25: 10,
                              26: 13,
                              28: c,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            },
                            t($, [2, 26]),
                            t($, [2, 27]),
                            t(ee, [2, 59]),
                            t(ee, [2, 60]),
                            t(ee, [2, 61]),
                            t($, [2, 66]),
                            t($, [2, 67]),
                            t($, [2, 68]),
                            t($, [2, 69]),
                            t($, [2, 57]),
                            t($, [2, 58]),
                            t($, [2, 91]),
                            t($, [2, 92]),
                            t($, [2, 93]),
                            t($, [2, 94]),
                            t($, [2, 95]),
                            t($, [2, 97]),
                            t($, [2, 70]),
                            t($, [2, 71]),
                            t($, [2, 65]),
                            t($, [2, 72]),
                            t($, [2, 73]),
                            t($, [2, 74]),
                            t($, [2, 75]),
                            t($, [2, 76]),
                            t($, [2, 77]),
                            t($, [2, 78]),
                            t($, [2, 79]),
                            t($, [2, 80]),
                            t($, [2, 81]),
                            t($, [2, 82]),
                            t($, [2, 83]),
                            t($, [2, 84]),
                            t($, [2, 85]),
                            t($, [2, 86]),
                            t($, [2, 87]),
                            t($, [2, 88]),
                            t($, [2, 89]),
                            t($, [2, 90]),
                            t($, [2, 96]),
                            {1: [2, 1]},
                            t(Y, [2, 4], {
                              6: 4,
                              7: 5,
                              11: 6,
                              12: 7,
                              8: 8,
                              9: 9,
                              25: 10,
                              16: 11,
                              20: 12,
                              26: 13,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              4: 101,
                              10: r,
                              13: n,
                              15: i,
                              17: o,
                              21: s,
                              23: a,
                              24: l,
                              28: c,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            }),
                            t(Y, [2, 6]),
                            t(X, [2, 31]),
                            t(X, [2, 32]),
                            {27: 102, 52: Q, 53: Z, 54: J},
                            t($, [2, 36]),
                            t($, [2, 62]),
                            t($, [2, 63]),
                            t($, [2, 64]),
                            {29: [1, 103]},
                            t($, [2, 38]),
                            t($, [2, 10]),
                            t($, [2, 11]),
                            t($, [2, 12]),
                            {
                              4: 104,
                              6: 4,
                              7: 5,
                              8: 8,
                              9: 9,
                              10: r,
                              11: 6,
                              12: 7,
                              13: n,
                              14: [1, 105],
                              15: i,
                              16: 11,
                              17: o,
                              20: 12,
                              21: s,
                              23: a,
                              24: l,
                              25: 10,
                              26: 13,
                              28: c,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            },
                            {
                              4: 107,
                              6: 4,
                              7: 5,
                              8: 8,
                              9: 9,
                              10: r,
                              11: 6,
                              12: 7,
                              13: n,
                              14: [1, 106],
                              15: i,
                              16: 11,
                              17: o,
                              20: 12,
                              21: s,
                              23: a,
                              24: l,
                              25: 10,
                              26: 13,
                              28: c,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            },
                            t($, [2, 16]),
                            {14: [1, 108]},
                            t($, [2, 19]),
                            t($, [2, 25]),
                            {18: [1, 109]},
                            {
                              4: 110,
                              6: 4,
                              7: 5,
                              8: 8,
                              9: 9,
                              10: r,
                              11: 6,
                              12: 7,
                              13: n,
                              15: i,
                              16: 11,
                              17: o,
                              19: [1, 111],
                              20: 12,
                              21: s,
                              23: a,
                              24: l,
                              25: 10,
                              26: 13,
                              28: c,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            },
                            t($, [2, 24]),
                            t(Y, [2, 3]),
                            t($, [2, 35]),
                            t($, [2, 37]),
                            {14: [1, 112]},
                            t($, [2, 15]),
                            t($, [2, 14]),
                            {14: [1, 113]},
                            t($, [2, 18]),
                            {
                              4: 114,
                              6: 4,
                              7: 5,
                              8: 8,
                              9: 9,
                              10: r,
                              11: 6,
                              12: 7,
                              13: n,
                              15: i,
                              16: 11,
                              17: o,
                              19: [1, 115],
                              20: 12,
                              21: s,
                              23: a,
                              24: l,
                              25: 10,
                              26: 13,
                              28: c,
                              30: 19,
                              31: 20,
                              32: 21,
                              33: 22,
                              34: 23,
                              35: 24,
                              36: 25,
                              37: 26,
                              38: 27,
                              39: 28,
                              40: 29,
                              41: 30,
                              42: 31,
                              43: 32,
                              44: 33,
                              45: 34,
                              46: 35,
                              47: u,
                              48: d,
                              49: p,
                              50: h,
                              51: f,
                              55: g,
                              56: m,
                              57: y,
                              58: v,
                              59: b,
                              60: x,
                              61: w,
                              62: _,
                              63: E,
                              64: S,
                              65: M,
                              66: I,
                              67: k,
                              68: C,
                              69: T,
                              70: L,
                              71: P,
                              72: A,
                              73: D,
                              74: O,
                              75: F,
                              76: q,
                              77: N,
                              78: R,
                              79: B,
                              80: j,
                              81: V,
                              82: U,
                              83: z,
                              84: G,
                              85: K,
                              86: W,
                              87: H
                            },
                            {19: [1, 116]},
                            t($, [2, 23]),
                            t($, [2, 13]),
                            t($, [2, 17]),
                            {19: [1, 117]},
                            t($, [2, 21]),
                            t($, [2, 22]),
                            t($, [2, 20])
                          ],
                          defaultActions: {3: [2, 2], 77: [2, 1]},
                          parseError: function(e, t) {
                            if (!t.recoverable) {
                              var r = new Error(e);
                              throw r.hash = t, r
                            }
                            this.trace(e)
                          },
                          parse: function(e) {
                            var t = this, r = [0], n = [null], i = [],
                                o = this.table, s = '', a = 0, l = 0, c = 0,
                                u = i.slice.call(arguments, 1),
                                d = Object.create(this.lexer), p = {yy: {}};
                            for (var h in this.yy)
                              Object.prototype.hasOwnProperty.call(
                                  this.yy, h) &&
                                  (p.yy[h] = this.yy[h]);
                            d.setInput(e, p.yy),
                                p.yy.lexer = d, p.yy.parser = this,
                                void 0 === d.yylloc && (d.yylloc = {});
                            var f = d.yylloc;
                            i.push(f);
                            var g = d.options && d.options.ranges;
                            'function' == typeof p.yy.parseError ?
                                this.parseError = p.yy.parseError :
                                this.parseError =
                                    Object.getPrototypeOf(this).parseError;
                            for (var m, y, v, b, x, w, _, E, S, M = function() {
                                   var e;
                                   return e = d.lex() || 1,
                                          'number' != typeof e &&
                                              (e = t.symbols_[e] || e),
                                          e
                                 }, I = {};;) {
                              if (v = r[r.length - 1],
                                  this.defaultActions[v] ?
                                      b = this.defaultActions[v] :
                                      (null !== m && void 0 !== m || (m = M()),
                                       b = o[v] && o[v][m]),
                                  void 0 === b || !b.length || !b[0]) {
                                var k = '';
                                S = [];
                                for (w in o[v])
                                  this.terminals_[w] && w > 2 &&
                                      S.push('\'' + this.terminals_[w] + '\'');
                                k = d.showPosition ?
                                    'Parse error on line ' + (a + 1) + ':\n' +
                                        d.showPosition() + '\nExpecting ' +
                                        S.join(', ') + ', got \'' +
                                        (this.terminals_[m] || m) + '\'' :
                                    'Parse error on line ' + (a + 1) +
                                        ': Unexpected ' +
                                        (1 == m ?
                                             'end of input' :
                                             '\'' + (this.terminals_[m] || m) +
                                                 '\''),
                                this.parseError(k, {
                                  text: d.match,
                                  token: this.terminals_[m] || m,
                                  line: d.yylineno,
                                  loc: f,
                                  expected: S
                                })
                              }
                              if (b[0] instanceof Array && b.length > 1)
                                throw new Error(
                                    'Parse Error: multiple actions possible at state: ' +
                                    v + ', token: ' + m);
                              switch (b[0]) {
                                case 1:
                                  r.push(m), n.push(d.yytext), i.push(d.yylloc),
                                      r.push(b[1]),
                                      m = null,
                                      y ? (m = y, y = null) :
                                          (l = d.yyleng, s = d.yytext,
                                           a = d.yylineno, f = d.yylloc,
                                           c > 0 && c--);
                                  break;
                                case 2:
                                  if (_ = this.productions_[b[1]][1],
                                      I.$ = n[n.length - _], I._$ = {
                                        first_line:
                                            i[i.length - (_ || 1)].first_line,
                                        last_line: i[i.length - 1].last_line,
                                        first_column:
                                            i[i.length - (_ || 1)].first_column,
                                        last_column: i[i.length - 1].last_column
                                      },
                                      g &&
                                          (I._$.range =
                                               [
                                                 i[i.length - (_ || 1)]
                                                     .range[0],
                                                 i[i.length - 1].range[1]
                                               ]),
                                      void 0 !==
                                          (x = this.performAction.apply(I, [
                                            s, l, a, p.yy, b[1], n, i
                                          ].concat(u))))
                                    return x;
                                  _ &&
                                      (r = r.slice(0, -1 * _ * 2),
                                       n = n.slice(0, -1 * _),
                                       i = i.slice(0, -1 * _)),
                                      r.push(this.productions_[b[1]][0]),
                                      n.push(I.$), i.push(I._$),
                                      E = o[r[r.length - 2]][r[r.length - 1]],
                                      r.push(E);
                                  break;
                                case 3:
                                  return !0
                              }
                            }
                            return !0
                          }
                        },
                        re = function() {
                          return {
                            EOF: 1,
                                parseError:
                                    function(e, t) {
                                      if (!this.yy.parser) throw new Error(e);
                                      this.yy.parser.parseError(e, t)
                                    },
                                setInput:
                                    function(e, t) {
                                      return this.yy = t || this.yy || {},
                                             this._input = e,
                                             this._more = this._backtrack =
                                                 this.done = !1,
                                             this.yylineno = this.yyleng = 0,
                                             this.yytext = this.matched =
                                                 this.match = '',
                                             this.conditionStack = ['INITIAL'],
                                             this.yylloc = {
                                               first_line: 1,
                                               first_column: 0,
                                               last_line: 1,
                                               last_column: 0
                                             },
                                             this.options.ranges &&
                                                 (this.yylloc.range = [0, 0]),
                                             this.offset = 0, this
                                    },
                                input:
                                    function() {
                                      var e = this._input[0];
                                      return this.yytext += e, this.yyleng++,
                                             this.offset++, this.match += e,
                                             this.matched += e,
                                             e.match(/(?:\r\n?|\n).*/g) ?
                                                 (this.yylineno++,
                                                  this.yylloc.last_line++) :
                                                 this.yylloc.last_column++,
                                             this.options.ranges &&
                                                 this.yylloc.range[1]++,
                                             this._input = this._input.slice(1),
                                             e
                                    },
                                unput:
                                    function(e) {
                                      var t = e.length,
                                          r = e.split(/(?:\r\n?|\n)/g);
                                      this._input = e + this._input,
                                      this.yytext = this.yytext.substr(
                                          0, this.yytext.length - t),
                                      this.offset -= t;
                                      var n = this.match.split(/(?:\r\n?|\n)/g);
                                      this.match = this.match.substr(
                                          0, this.match.length - 1),
                                      this.matched = this.matched.substr(
                                          0, this.matched.length - 1),
                                      r.length - 1 &&
                                          (this.yylineno -= r.length - 1);
                                      var i = this.yylloc.range;
                                      return this.yylloc = {
                                        first_line: this.yylloc.first_line,
                                        last_line: this.yylineno + 1,
                                        first_column: this.yylloc.first_column,
                                        last_column: r ?
                                            (r.length === n.length ?
                                                 this.yylloc.first_column :
                                                 0) +
                                                n[n.length - r.length].length -
                                                r[0].length :
                                            this.yylloc.first_column - t
                                      },
                                             this.options.ranges &&
                                                 (this.yylloc.range =
                                                      [
                                                        i[0],
                                                        i[0] + this.yyleng - t
                                                      ]),
                                             this.yyleng = this.yytext.length,
                                             this
                                    },
                                more:
                                    function() {
                                      return this._more = !0, this
                                    },
                                reject:
                                    function() {
                                      return this.options.backtrack_lexer ?
                                          (this._backtrack = !0, this) :
                                          this.parseError(
                                              'Lexical error on line ' +
                                                  (this.yylineno + 1) +
                                                  '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' +
                                                  this.showPosition(),
                                              {
                                                text: '',
                                                token: null,
                                                line: this.yylineno
                                              })
                                    },
                                less:
                                    function(e) {
                                      this.unput(this.match.slice(e))
                                    },
                                pastInput:
                                    function() {
                                      var e = this.matched.substr(
                                          0,
                                          this.matched.length -
                                              this.match.length);
                                      return (e.length > 20 ? '...' : '') +
                                          e.substr(-20).replace(/\n/g, '')
                                    },
                                upcomingInput:
                                    function() {
                                      var e = this.match;
                                      return e.length < 20 &&
                                                 (e += this._input.substr(
                                                      0, 20 - e.length)),
                                             (e.substr(0, 20) +
                                              (e.length > 20 ? '...' : ''))
                                                 .replace(/\n/g, '')
                                    },
                                showPosition:
                                    function() {
                                      var e = this.pastInput(),
                                          t = new Array(e.length + 1).join('-');
                                      return e + this.upcomingInput() + '\n' +
                                          t + '^'
                                    },
                                test_match:
                                    function(e, t) {
                                      var r, n, i;
                                      if (this.options.backtrack_lexer &&
                                              (i = {
                                                yylineno: this.yylineno,
                                                yylloc: {
                                                  first_line:
                                                      this.yylloc.first_line,
                                                  last_line: this.last_line,
                                                  first_column:
                                                      this.yylloc.first_column,
                                                  last_column:
                                                      this.yylloc.last_column
                                                },
                                                yytext: this.yytext,
                                                match: this.match,
                                                matches: this.matches,
                                                matched: this.matched,
                                                yyleng: this.yyleng,
                                                offset: this.offset,
                                                _more: this._more,
                                                _input: this._input,
                                                yy: this.yy,
                                                conditionStack:
                                                    this.conditionStack.slice(
                                                        0),
                                                done: this.done
                                              },
                                               this.options.ranges &&
                                                   (i.yylloc.range =
                                                        this.yylloc.range.slice(
                                                            0))),
                                          n = e[0].match(/(?:\r\n?|\n).*/g),
                                          n && (this.yylineno += n.length),
                                          this.yylloc = {
                                            first_line: this.yylloc.last_line,
                                            last_line: this.yylineno + 1,
                                            first_column:
                                                this.yylloc.last_column,
                                            last_column: n ?
                                                n[n.length - 1].length -
                                                    n[n.length - 1]
                                                        .match(/\r?\n?/)[0]
                                                        .length :
                                                this.yylloc.last_column +
                                                    e[0].length
                                          },
                                          this.yytext += e[0],
                                          this.match += e[0], this.matches = e,
                                          this.yyleng = this.yytext.length,
                                          this.options.ranges &&
                                              (this.yylloc.range =
                                                   [
                                                     this.offset,
                                                     this.offset += this.yyleng
                                                   ]),
                                          this._more = !1, this._backtrack = !1,
                                          this._input =
                                              this._input.slice(e[0].length),
                                          this.matched += e[0],
                                          r = this.performAction.call(
                                              this, this.yy, this, t,
                                              this.conditionStack
                                                  [this.conditionStack.length -
                                                   1]),
                                          this.done && this._input &&
                                              (this.done = !1),
                                          r)
                                        return r;
                                      if (this._backtrack) {
                                        for (var o in i) this[o] = i[o];
                                        return !1
                                      }
                                      return !1
                                    },
                                next:
                                    function() {
                                      if (this.done) return this.EOF;
                                      this._input || (this.done = !0);
                                      var e, t, r, n;
                                      this._more ||
                                          (this.yytext = '', this.match = '');
                                      for (var i = this._currentRules(), o = 0;
                                           o < i.length; o++)
                                        if ((r = this._input.match(
                                                 this.rules[i[o]])) &&
                                            (!t || r[0].length > t[0].length)) {
                                          if (t = r, n = o,
                                              this.options.backtrack_lexer) {
                                            if (!1 !==
                                                (e = this.test_match(r, i[o])))
                                              return e;
                                            if (this._backtrack) {
                                              t = !1;
                                              continue
                                            }
                                            return !1
                                          }
                                          if (!this.options.flex) break
                                        }
                                      return t ?
                                          !1 !==
                                                  (e = this.test_match(
                                                       t, i[n])) &&
                                              e :
                                          '' === this._input ?
                                          this.EOF :
                                          this.parseError(
                                              'Lexical error on line ' +
                                                  (this.yylineno + 1) +
                                                  '. Unrecognized text.\n' +
                                                  this.showPosition(),
                                              {
                                                text: '',
                                                token: null,
                                                line: this.yylineno
                                              })
                                    },
                                lex:
                                    function() {
                                      var e = this.next();
                                      return e || this.lex()
                                    },
                                begin:
                                    function(e) {
                                      this.conditionStack.push(e)
                                    },
                                popState:
                                    function() {
                                      return this.conditionStack.length - 1 >
                                              0 ?
                                          this.conditionStack.pop() :
                                          this.conditionStack[0]
                                    },
                                _currentRules:
                                    function() {
                                      return this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1] ? this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules : this.conditions.INITIAL.rules
                                    },
                                topState:
                                    function(e) {
                                      return e = this.conditionStack.length -
                                                 1 - Math.abs(e || 0),
                                             e >= 0 ? this.conditionStack[e] :
                                                      'INITIAL'
                                    },
                                pushState:
                                    function(e) {
                                      this.begin(e)
                                    },
                                stateStackSize:
                                    function() {
                                      return this.conditionStack.length
                                    },
                                options: {},
                                performAction:
                                    function(e, t, r, n) {
                                      switch (r) {
                                        case 0:
                                          return void this.begin('captext');
                                        case 1:
                                          return 58;
                                        case 2:
                                          return this.popState(), 58;
                                        case 3:
                                          return 62;
                                        case 4:
                                          return 63;
                                        case 5:
                                          return 64;
                                        case 6:
                                          return 65;
                                        case 7:
                                          return 66;
                                        case 8:
                                          return 67;
                                        case 9:
                                          return 49;
                                        case 10:
                                          return 50;
                                        case 11:
                                          return 51;
                                        case 12:
                                          return 52;
                                        case 13:
                                          return 53;
                                        case 14:
                                          return 54;
                                        case 15:
                                          return 71;
                                        case 16:
                                          return 74;
                                        case 17:
                                          return 75;
                                        case 18:
                                          return 76;
                                        case 19:
                                          return 70;
                                        case 20:
                                          return 72;
                                        case 21:
                                          return 73;
                                        case 22:
                                          return 77;
                                        case 23:
                                          return 69;
                                        case 24:
                                          return 80;
                                        case 25:
                                          return 13;
                                        case 26:
                                          return 15;
                                        case 27:
                                          return 14;
                                        case 28:
                                          return 10;
                                        case 29:
                                          return 28;
                                        case 30:
                                          return 29;
                                        case 31:
                                          return 83;
                                        case 32:
                                          return 84;
                                        case 33:
                                          return 85;
                                        case 34:
                                          return 17;
                                        case 35:
                                          return 18;
                                        case 36:
                                          return 19;
                                        case 37:
                                          return 78;
                                        case 38:
                                          return 79;
                                        case 39:
                                          return 82;
                                        case 40:
                                          return t.yytext = this.matches[1], 21;
                                        case 41:
                                          return t.yytext = this.matches[1], 22;
                                        case 42:
                                          return t.yytext = this.matches[1], 24;
                                        case 43:
                                          return 68;
                                        case 44:
                                          return 47;
                                        case 45:
                                          return 48;
                                        case 46:
                                          return 86;
                                        case 47:
                                          return 61;
                                        case 48:
                                          return 60;
                                        case 49:
                                          return 81;
                                        case 50:
                                        case 51:
                                          return 56;
                                        case 52:
                                          return 57;
                                        case 53:
                                          return t.yytext = this.matches[1], 58;
                                        case 54:
                                          return 59;
                                        case 55:
                                          return;
                                        case 56:
                                          return 87;
                                        case 57:
                                          return;
                                        case 58:
                                          return 55;
                                        case 59:
                                          return 5;
                                        case 60:
                                          return 89
                                      }
                                    },
                                rules:
                                    [
                                      /^(?:([,][,])(?=[A-Z]))/,
                                      /^(?:[A-Z](?=[A-Z]))/,
                                      /^(?:[A-Z])/,
                                      /^(?:["][6])/,
                                      /^(?:["][-])/,
                                      /^(?:["][4])/,
                                      /^(?:["][8])/,
                                      /^(?:["][9])/,
                                      /^(?:["][\/])/,
                                      /^(?:[.][<])/,
                                      /^(?:[_][<])/,
                                      /^(?:["][<])/,
                                      /^(?:[.][>])/,
                                      /^(?:[_][>])/,
                                      /^(?:["][>])/,
                                      /^(?:["][7][@][:])/,
                                      /^(?:[_][@][<])/,
                                      /^(?:[\^][9])/,
                                      /^(?:[_][@][>])/,
                                      /^(?:["][7])/,
                                      /^(?:[@][<])/,
                                      /^(?:[@][>])/,
                                      /^(?:[@][9])/,
                                      /^(?:[.][0])/,
                                      /^(?:[4][4][4])/,
                                      /^(?:[%][9])/,
                                      /^(?:[%])/,
                                      /^(?:[\+])/,
                                      /^(?:[95]+(?=.))/,
                                      /^(?:[<])/,
                                      /^(?:[>])/,
                                      /^(?:!)/,
                                      /^(?:[6])/,
                                      /^(?:[@]&)/,
                                      /^(?:[(])/,
                                      /^(?:[.][\/])/,
                                      /^(?:[)])/,
                                      /^(?:#[L])/,
                                      /^(?:#-)/,
                                      /^(?:#=)/,
                                      /^(?:#([A-J4]+))/,
                                      /^(?:[\/]([A-J4]+))/,
                                      /^(?:[#][\/]([A-J4]+))/,
                                      /^(?:[_]?[\/])/,
                                      /^(?:[1])/,
                                      /^(?:[4])/,
                                      /^(?:[7]+)/,
                                      /^(?:[_][\\][_][\\])/,
                                      /^(?:[_][\\])/,
                                      /^(?:[3])/,
                                      /^(?:(ARC)?(SIN|COS|TAN|CSC|SEC|COT)(H)?)/,
                                      /^(?:(ARG|DET|EXP|IM|INF|LIM|LN|LOG|MAX|MIN|MOD|RE|SUP))/,
                                      /^(?:[,]?[.][ABGDEZ\?\:IKLMNXOPRSTUYF\&W])/,
                                      /^(?:[,]([A-Z]))/,
                                      /^(?:[A-Z])/,
                                      /^(?:[,]['])/,
                                      /^(?:[8])/,
                                      /^(?:[;])/,
                                      /^(?:[ ])/,
                                      /^(?:$)/,
                                      /^(?:.)/
                                    ],
                                conditions: {
                                  captext: {
                                    rules:
                                        [
                                          0,  1,  2,  3,  4,  5,  6,  7,  8,
                                          9,  10, 11, 12, 13, 14, 15, 16, 17,
                                          18, 19, 20, 21, 22, 23, 24, 25, 26,
                                          27, 28, 29, 30, 31, 32, 33, 34, 35,
                                          36, 37, 38, 39, 40, 41, 42, 43, 44,
                                          45, 46, 47, 48, 49, 50, 51, 52, 53,
                                          54, 55, 56, 57, 58, 59, 60
                                        ],
                                    inclusive: !0
                                  },
                                  INITIAL: {
                                    rules:
                                        [
                                          0,  3,  4,  5,  6,  7,  8,  9,  10,
                                          11, 12, 13, 14, 15, 16, 17, 18, 19,
                                          20, 21, 22, 23, 24, 25, 26, 27, 28,
                                          29, 30, 31, 32, 33, 34, 35, 36, 37,
                                          38, 39, 40, 41, 42, 43, 44, 45, 46,
                                          47, 48, 49, 50, 51, 52, 53, 54, 55,
                                          56, 57, 58, 59, 60
                                        ],
                                    inclusive: !0
                                  }
                                }
                          }
                        }();
                    return te.lexer = re, e.prototype = te, te.Parser = e, new e
                  }();
                  t.parser = i, t.Parser = i.Parser, t.parse = function() {
                    return i.parse.apply(i, arguments)
                  }, t.main = function(n) {
                    n[1] ||
                        (console.log('Usage: ' + n[0] + ' FILE'), e.exit(1));
                    var i = r(4).readFileSync(r(5).normalize(n[1]), 'utf8');
                    return t.parser.parse(i)
                  }, void 0 !== n && r.c[r.s] === n && t.main(e.argv.slice(1))
                }).call(t, r(1), r(8)(e))
              },
              function(e, t, r) {
                function n(e) {
                  for (var t = [], r = 0; r < e.length; r++) {
                    var d = e[r];
                    switch (d.type) {
                      case 'command':
                        var p = d.value.slice(1).trim();
                        c.hasOwnProperty(d.value) ?
                            t.push(a.command(c[d.value])) :
                            s.containsValue(p) ?
                            t.push(a.typeform('operator_name', i(p))) :
                            u[d.value] || t.push(d);
                        break;
                      case 'level':
                        var h = {
                          subscript: d.subscript && d.subscript.length > 0 ?
                              n(d.subscript) :
                              void 0,
                          superscript:
                              d.superscript && d.superscript.length > 0 ?
                              n(d.superscript) :
                              void 0,
                          type: d.type
                        };
                        (h.subscript || h.superscript) && t.push(h);
                        break;
                      case 'fraction':
                        t.push({
                          denominator: n(d.denominator),
                          numerator: n(d.numerator),
                          type: d.type
                        });
                        break;
                      case 'radical':
                        t.push({
                          index: d.index ? n(d.index) : void 0,
                          radicand: n(d.radicand),
                          type: d.type
                        });
                        break;
                      case 'terminal':
                        o(e.slice(r)) ?
                            (t.push({type: 'command', value: '\\ldots'}),
                             r += 2) :
                            t.push({
                              type: d.type,
                              value: l.hasOwnProperty(d.value) ? l[d.value] :
                                                                 d.value
                            });
                        break;
                      case 'typeform':
                        t.push(d);
                        break;
                      case 'greek':
                        t.push({
                          type: d.type,
                          value: l.hasOwnProperty(d.value) ? l[d.value] :
                                                             d.value
                        });
                        break;
                      default:
                        throw new Error(
                            'Unexpected item:\n' +
                            JSON.stringify({group: e, item: d}))
                    }
                  }
                  return t
                }
                function i(e) {
                  for (var t = [], r = 0, n = e; r < n.length; r++) {
                    var i = n[r];
                    t.push(a.terminal(i))
                  }
                  return t
                }
                function o(e) {
                  for (var t = 0, r = 0; r < Math.min(3, e.length); r++) {
                    var n = e[r];
                    'terminal' === n.type && '.' === n.value && t++
                  }
                  return 3 === t
                }
                Object.defineProperty(t, '__esModule', {value: !0});
                var s = r(2), a = r(7), l = {
                  '~': '\\ ',
                  '\\,': '\\ ',
                  '\\:': '\\ ',
                  '\\;': '\\ ',
                  '\\!': '\\ '
                },
                    c = {
                      '\\Vert': '\\|',
                      '\\ge': '\\geq',
                      '\\le': '\\leq',
                      '\\vert': '|'
                    },
                    u = {'\\space': !0};
                t.default = n
              },
              function(e, t, r) {
                function n(e) {
                  try {
                    return {
                      isError: !1, value: o.parser.parse(e)
                    }
                  } catch (e) {
                    return {
                      isError: !0, error: i.default(e)
                    }
                  }
                }
                Object.defineProperty(t, '__esModule', {value: !0});
                var i = r(6), o = r(13), s = r(7);
                o.parser.yy = s, t.default = n
              },
              function(e, t, r) {
                (function(e, n) {
                  var i = function() {
                    function e() {
                      this.yy = {}
                    }
                    var t =
                            function(e, t, r, n) {
                      for (r = r || {}, n = e.length; n--; r[e[n]] = t)
                        ;
                      return r
                    },
                        r = [1, 13], n = [1, 14], i = [1, 15], o = [1, 16],
                        s = [1, 17], a = [1, 21], l = [1, 18], c = [1, 19],
                        u = [1, 20], d = [1, 22], p = [1, 23], h = [1, 28],
                        f = [1, 30], g = [1, 31], m = [1, 32], y = [1, 33],
                        v = [1, 29], b = [5, 21, 27, 38],
                        x =
                            [
                              5, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34,
                              35, 36, 37, 38
                            ],
                        w =
                            [
                              5,  10, 12, 13, 14, 19, 21, 22, 23, 24, 25,
                              26, 27, 28, 32, 33, 34, 35, 36, 37, 38
                            ],
                        _ =
                            [
                              5, 10, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33,
                              34, 35, 36, 37, 38
                            ],
                        E = {
                          trace: function() {},
                          yy: {},
                          symbols_: {
                            error: 2,
                            sentence: 3,
                            group: 4,
                            EOF: 5,
                            level: 6,
                            expression: 7,
                            subscript: 8,
                            superscript: 9,
                            _: 10,
                            atom: 11,
                            '^': 12,
                            'PRIMES^': 13,
                            PRIMES: 14,
                            delimited_group: 15,
                            typeform: 16,
                            frac: 17,
                            radical: 18,
                            LEFT: 19,
                            delimiter: 20,
                            RIGHT: 21,
                            FRAC: 22,
                            OPERATOR_NAME: 23,
                            MATHRM: 24,
                            TEXT: 25,
                            RADICAL_OPTARG: 26,
                            CLOSE_OPTARG: 27,
                            RADICAL: 28,
                            curly_group: 29,
                            greek: 30,
                            command: 31,
                            SYMBOL: 32,
                            DELIMITER: 33,
                            DELIMITER_COMMAND: 34,
                            GREEK: 35,
                            COMMAND: 36,
                            '{': 37,
                            '}': 38,
                            $accept: 0,
                            $end: 1
                          },
                          terminals_: {
                            2: 'error',
                            5: 'EOF',
                            10: '_',
                            12: '^',
                            13: 'PRIMES^',
                            14: 'PRIMES',
                            19: 'LEFT',
                            21: 'RIGHT',
                            22: 'FRAC',
                            23: 'OPERATOR_NAME',
                            24: 'MATHRM',
                            25: 'TEXT',
                            26: 'RADICAL_OPTARG',
                            27: 'CLOSE_OPTARG',
                            28: 'RADICAL',
                            32: 'SYMBOL',
                            33: 'DELIMITER',
                            34: 'DELIMITER_COMMAND',
                            35: 'GREEK',
                            36: 'COMMAND',
                            37: '{',
                            38: '}'
                          },
                          productions_: [
                            0,       [3, 2],  [3, 1],  [4, 3],  [4, 2],
                            [4, 1],  [4, 2],  [4, 1],  [6, 2],  [6, 2],
                            [6, 1],  [6, 1],  [8, 2],  [9, 2],  [9, 2],
                            [9, 1],  [7, 1],  [7, 1],  [7, 1],  [7, 1],
                            [7, 1],  [15, 5], [15, 4], [17, 3], [16, 2],
                            [16, 2], [16, 2], [18, 4], [18, 3], [18, 2],
                            [18, 2], [11, 1], [11, 1], [11, 1], [11, 1],
                            [11, 1], [20, 1], [20, 1], [30, 1], [31, 1],
                            [29, 3], [29, 2]
                          ],
                          performAction: function(e, t, r, n, i, o, s) {
                            var a = o.length - 1;
                            switch (i) {
                              case 1:
                                return o[a - 1];
                              case 2:
                                return n.group();
                              case 3:
                                this.$ = n.group(o[a - 2], o[a - 1], o[a]);
                                break;
                              case 4:
                              case 6:
                                this.$ = n.group(o[a - 1], o[a]);
                                break;
                              case 5:
                              case 7:
                                this.$ = n.group(o[a]);
                                break;
                              case 8:
                                this.$ = n.level(
                                    {_: n.group(o[a - 1]), '^': n.group(o[a])});
                                break;
                              case 9:
                                this.$ = n.level(
                                    {_: n.group(o[a]), '^': n.group(o[a - 1])});
                                break;
                              case 10:
                                this.$ = n.level({'^': n.group(o[a])});
                                break;
                              case 11:
                                this.$ = n.level({_: n.group(o[a])});
                                break;
                              case 12:
                              case 13:
                                this.$ = o[a];
                                break;
                              case 14:
                                this.$ = n.processPrimes(o[a - 1], o[a]);
                                break;
                              case 15:
                                this.$ = n.processPrimes(o[a], n.group());
                                break;
                              case 21:
                                this.$ = n.group(o[a - 3], o[a - 2], o[a]);
                                break;
                              case 22:
                                this.$ = n.group(o[a - 2], o[a]);
                                break;
                              case 23:
                                this.$ = n.fraction(
                                    n.group(o[a - 1]), n.group(o[a]));
                                break;
                              case 24:
                                this.$ =
                                    n.typeform('operator_name', n.group(o[a]));
                                break;
                              case 25:
                                this.$ = n.typeform('mathrm', n.group(o[a]));
                                break;
                              case 26:
                                this.$ = n.typeform('text', n.group(o[a]));
                                break;
                              case 27:
                                this.$ = n.radical(o[a], n.group(o[a - 2]));
                                break;
                              case 28:
                                this.$ = n.radical(n.group(o[a]), n.group());
                                break;
                              case 29:
                              case 30:
                                this.$ = n.radical(n.group(o[a]));
                                break;
                              case 35:
                              case 36:
                                this.$ = n.terminal(o[a]);
                                break;
                              case 37:
                              case 39:
                                this.$ = n.command(o[a]);
                                break;
                              case 38:
                                this.$ = n.greek(o[a]);
                                break;
                              case 40:
                                this.$ = o[a - 1];
                                break;
                              case 41:
                                this.$ = n.group()
                            }
                          },
                          table:
                              [
                                {
                                  3: 1,
                                  4: 2,
                                  5: [1, 3],
                                  6: 4,
                                  7: 5,
                                  8: 6,
                                  9: 7,
                                  10: r,
                                  11: 12,
                                  12: n,
                                  13: i,
                                  14: o,
                                  15: 8,
                                  16: 9,
                                  17: 10,
                                  18: 11,
                                  19: s,
                                  20: 25,
                                  22: a,
                                  23: l,
                                  24: c,
                                  25: u,
                                  26: d,
                                  28: p,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                {1: [3]},
                                {5: [1, 34]},
                                {1: [2, 2]},
                                t(b, [2, 5], {
                                  15: 8,
                                  16: 9,
                                  17: 10,
                                  18: 11,
                                  11: 12,
                                  29: 24,
                                  20: 25,
                                  30: 26,
                                  31: 27,
                                  7: 35,
                                  19: s,
                                  22: a,
                                  23: l,
                                  24: c,
                                  25: u,
                                  26: d,
                                  28: p,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                }),
                                t(b, [2, 7], {
                                  6: 4,
                                  7: 5,
                                  8: 6,
                                  9: 7,
                                  15: 8,
                                  16: 9,
                                  17: 10,
                                  18: 11,
                                  11: 12,
                                  29: 24,
                                  20: 25,
                                  30: 26,
                                  31: 27,
                                  4: 36,
                                  10: r,
                                  12: n,
                                  13: i,
                                  14: o,
                                  19: s,
                                  22: a,
                                  23: l,
                                  24: c,
                                  25: u,
                                  26: d,
                                  28: p,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                }),
                                t(x, [2, 11], {9: 37, 12: n, 13: i, 14: o}),
                                t(x, [2, 10], {8: 38, 10: r}),
                                t(w, [2, 16]),
                                t(w, [2, 17]),
                                t(w, [2, 18]),
                                t(w, [2, 19]),
                                t(w, [2, 20]),
                                {
                                  11: 39,
                                  20: 25,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                {
                                  11: 40,
                                  20: 25,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                {
                                  11: 41,
                                  20: 25,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                t(_, [2, 15]),
                                {20: 42, 33: f, 34: g},
                                {
                                  11: 43,
                                  20: 25,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                {
                                  11: 44,
                                  20: 25,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                {
                                  11: 45,
                                  20: 25,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                {
                                  11: 46,
                                  20: 25,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                {
                                  4: 47,
                                  6: 4,
                                  7: 5,
                                  8: 6,
                                  9: 7,
                                  10: r,
                                  11: 12,
                                  12: n,
                                  13: i,
                                  14: o,
                                  15: 8,
                                  16: 9,
                                  17: 10,
                                  18: 11,
                                  19: s,
                                  20: 25,
                                  22: a,
                                  23: l,
                                  24: c,
                                  25: u,
                                  26: d,
                                  27: [1, 48],
                                  28: p,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                {
                                  11: 49,
                                  17: 50,
                                  20: 25,
                                  22: a,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                t(w, [2, 31]),
                                t(w, [2, 32]),
                                t(w, [2, 33]),
                                t(w, [2, 34]),
                                t(w, [2, 35]),
                                {
                                  4: 51,
                                  6: 4,
                                  7: 5,
                                  8: 6,
                                  9: 7,
                                  10: r,
                                  11: 12,
                                  12: n,
                                  13: i,
                                  14: o,
                                  15: 8,
                                  16: 9,
                                  17: 10,
                                  18: 11,
                                  19: s,
                                  20: 25,
                                  22: a,
                                  23: l,
                                  24: c,
                                  25: u,
                                  26: d,
                                  28: p,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v,
                                  38: [1, 52]
                                },
                                t(w, [2, 36]),
                                t(w, [2, 37]),
                                t(w, [2, 38]),
                                t(w, [2, 39]),
                                {1: [2, 1]},
                                t(b, [2, 4], {
                                  6: 4,
                                  7: 5,
                                  8: 6,
                                  9: 7,
                                  15: 8,
                                  16: 9,
                                  17: 10,
                                  18: 11,
                                  11: 12,
                                  29: 24,
                                  20: 25,
                                  30: 26,
                                  31: 27,
                                  4: 53,
                                  10: r,
                                  12: n,
                                  13: i,
                                  14: o,
                                  19: s,
                                  22: a,
                                  23: l,
                                  24: c,
                                  25: u,
                                  26: d,
                                  28: p,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                }),
                                t(b, [2, 6]),
                                t(x, [2, 8]),
                                t(x, [2, 9]),
                                t(
                                    [
                                      5,  12, 13, 14, 19, 21, 22, 23, 24, 25,
                                      26, 27, 28, 32, 33, 34, 35, 36, 37, 38
                                    ],
                                    [2, 12]),
                                t(_, [2, 13]),
                                t(_, [2, 14]),
                                {
                                  4: 54,
                                  6: 4,
                                  7: 5,
                                  8: 6,
                                  9: 7,
                                  10: r,
                                  11: 12,
                                  12: n,
                                  13: i,
                                  14: o,
                                  15: 8,
                                  16: 9,
                                  17: 10,
                                  18: 11,
                                  19: s,
                                  20: 25,
                                  21: [1, 55],
                                  22: a,
                                  23: l,
                                  24: c,
                                  25: u,
                                  26: d,
                                  28: p,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                t(w, [2, 24]),
                                t(w, [2, 25]),
                                t(w, [2, 26]),
                                {
                                  11: 56,
                                  20: 25,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                {27: [1, 57]},
                                {
                                  11: 58,
                                  20: 25,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                t(w, [2, 29]),
                                t(w, [2, 30]),
                                {38: [1, 59]},
                                t(w, [2, 41]),
                                t(b, [2, 3]),
                                {21: [1, 60]},
                                {20: 61, 33: f, 34: g},
                                t(w, [2, 23]),
                                {
                                  11: 62,
                                  20: 25,
                                  29: 24,
                                  30: 26,
                                  31: 27,
                                  32: h,
                                  33: f,
                                  34: g,
                                  35: m,
                                  36: y,
                                  37: v
                                },
                                t(w, [2, 28]),
                                t(w, [2, 40]),
                                {20: 63, 33: f, 34: g},
                                t(w, [2, 22]),
                                t(w, [2, 27]),
                                t(w, [2, 21])
                              ],
                          defaultActions: {3: [2, 2], 34: [2, 1]},
                          parseError: function(e, t) {
                            if (!t.recoverable) {
                              var r = new Error(e);
                              throw r.hash = t, r
                            }
                            this.trace(e)
                          },
                          parse: function(e) {
                            var t = this, r = [0], n = [null], i = [],
                                o = this.table, s = '', a = 0, l = 0, c = 0,
                                u = i.slice.call(arguments, 1),
                                d = Object.create(this.lexer), p = {yy: {}};
                            for (var h in this.yy)
                              Object.prototype.hasOwnProperty.call(
                                  this.yy, h) &&
                                  (p.yy[h] = this.yy[h]);
                            d.setInput(e, p.yy),
                                p.yy.lexer = d, p.yy.parser = this,
                                void 0 === d.yylloc && (d.yylloc = {});
                            var f = d.yylloc;
                            i.push(f);
                            var g = d.options && d.options.ranges;
                            'function' == typeof p.yy.parseError ?
                                this.parseError = p.yy.parseError :
                                this.parseError =
                                    Object.getPrototypeOf(this).parseError;
                            for (var m, y, v, b, x, w, _, E, S, M = function() {
                                   var e;
                                   return e = d.lex() || 1,
                                          'number' != typeof e &&
                                              (e = t.symbols_[e] || e),
                                          e
                                 }, I = {};;) {
                              if (v = r[r.length - 1],
                                  this.defaultActions[v] ?
                                      b = this.defaultActions[v] :
                                      (null !== m && void 0 !== m || (m = M()),
                                       b = o[v] && o[v][m]),
                                  void 0 === b || !b.length || !b[0]) {
                                var k = '';
                                S = [];
                                for (w in o[v])
                                  this.terminals_[w] && w > 2 &&
                                      S.push('\'' + this.terminals_[w] + '\'');
                                k = d.showPosition ?
                                    'Parse error on line ' + (a + 1) + ':\n' +
                                        d.showPosition() + '\nExpecting ' +
                                        S.join(', ') + ', got \'' +
                                        (this.terminals_[m] || m) + '\'' :
                                    'Parse error on line ' + (a + 1) +
                                        ': Unexpected ' +
                                        (1 == m ?
                                             'end of input' :
                                             '\'' + (this.terminals_[m] || m) +
                                                 '\''),
                                this.parseError(k, {
                                  text: d.match,
                                  token: this.terminals_[m] || m,
                                  line: d.yylineno,
                                  loc: f,
                                  expected: S
                                })
                              }
                              if (b[0] instanceof Array && b.length > 1)
                                throw new Error(
                                    'Parse Error: multiple actions possible at state: ' +
                                    v + ', token: ' + m);
                              switch (b[0]) {
                                case 1:
                                  r.push(m), n.push(d.yytext), i.push(d.yylloc),
                                      r.push(b[1]),
                                      m = null,
                                      y ? (m = y, y = null) :
                                          (l = d.yyleng, s = d.yytext,
                                           a = d.yylineno, f = d.yylloc,
                                           c > 0 && c--);
                                  break;
                                case 2:
                                  if (_ = this.productions_[b[1]][1],
                                      I.$ = n[n.length - _], I._$ = {
                                        first_line:
                                            i[i.length - (_ || 1)].first_line,
                                        last_line: i[i.length - 1].last_line,
                                        first_column:
                                            i[i.length - (_ || 1)].first_column,
                                        last_column: i[i.length - 1].last_column
                                      },
                                      g &&
                                          (I._$.range =
                                               [
                                                 i[i.length - (_ || 1)]
                                                     .range[0],
                                                 i[i.length - 1].range[1]
                                               ]),
                                      void 0 !==
                                          (x = this.performAction.apply(I, [
                                            s, l, a, p.yy, b[1], n, i
                                          ].concat(u))))
                                    return x;
                                  _ &&
                                      (r = r.slice(0, -1 * _ * 2),
                                       n = n.slice(0, -1 * _),
                                       i = i.slice(0, -1 * _)),
                                      r.push(this.productions_[b[1]][0]),
                                      n.push(I.$), i.push(I._$),
                                      E = o[r[r.length - 2]][r[r.length - 1]],
                                      r.push(E);
                                  break;
                                case 3:
                                  return !0
                              }
                            }
                            return !0
                          }
                        },
                        S = function() {
                          return {
                            EOF: 1,
                                parseError:
                                    function(e, t) {
                                      if (!this.yy.parser) throw new Error(e);
                                      this.yy.parser.parseError(e, t)
                                    },
                                setInput:
                                    function(e, t) {
                                      return this.yy = t || this.yy || {},
                                             this._input = e,
                                             this._more = this._backtrack =
                                                 this.done = !1,
                                             this.yylineno = this.yyleng = 0,
                                             this.yytext = this.matched =
                                                 this.match = '',
                                             this.conditionStack = ['INITIAL'],
                                             this.yylloc = {
                                               first_line: 1,
                                               first_column: 0,
                                               last_line: 1,
                                               last_column: 0
                                             },
                                             this.options.ranges &&
                                                 (this.yylloc.range = [0, 0]),
                                             this.offset = 0, this
                                    },
                                input:
                                    function() {
                                      var e = this._input[0];
                                      return this.yytext += e, this.yyleng++,
                                             this.offset++, this.match += e,
                                             this.matched += e,
                                             e.match(/(?:\r\n?|\n).*/g) ?
                                                 (this.yylineno++,
                                                  this.yylloc.last_line++) :
                                                 this.yylloc.last_column++,
                                             this.options.ranges &&
                                                 this.yylloc.range[1]++,
                                             this._input = this._input.slice(1),
                                             e
                                    },
                                unput:
                                    function(e) {
                                      var t = e.length,
                                          r = e.split(/(?:\r\n?|\n)/g);
                                      this._input = e + this._input,
                                      this.yytext = this.yytext.substr(
                                          0, this.yytext.length - t),
                                      this.offset -= t;
                                      var n = this.match.split(/(?:\r\n?|\n)/g);
                                      this.match = this.match.substr(
                                          0, this.match.length - 1),
                                      this.matched = this.matched.substr(
                                          0, this.matched.length - 1),
                                      r.length - 1 &&
                                          (this.yylineno -= r.length - 1);
                                      var i = this.yylloc.range;
                                      return this.yylloc = {
                                        first_line: this.yylloc.first_line,
                                        last_line: this.yylineno + 1,
                                        first_column: this.yylloc.first_column,
                                        last_column: r ?
                                            (r.length === n.length ?
                                                 this.yylloc.first_column :
                                                 0) +
                                                n[n.length - r.length].length -
                                                r[0].length :
                                            this.yylloc.first_column - t
                                      },
                                             this.options.ranges &&
                                                 (this.yylloc.range =
                                                      [
                                                        i[0],
                                                        i[0] + this.yyleng - t
                                                      ]),
                                             this.yyleng = this.yytext.length,
                                             this
                                    },
                                more:
                                    function() {
                                      return this._more = !0, this
                                    },
                                reject:
                                    function() {
                                      return this.options.backtrack_lexer ?
                                          (this._backtrack = !0, this) :
                                          this.parseError(
                                              'Lexical error on line ' +
                                                  (this.yylineno + 1) +
                                                  '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' +
                                                  this.showPosition(),
                                              {
                                                text: '',
                                                token: null,
                                                line: this.yylineno
                                              })
                                    },
                                less:
                                    function(e) {
                                      this.unput(this.match.slice(e))
                                    },
                                pastInput:
                                    function() {
                                      var e = this.matched.substr(
                                          0,
                                          this.matched.length -
                                              this.match.length);
                                      return (e.length > 20 ? '...' : '') +
                                          e.substr(-20).replace(/\n/g, '')
                                    },
                                upcomingInput:
                                    function() {
                                      var e = this.match;
                                      return e.length < 20 &&
                                                 (e += this._input.substr(
                                                      0, 20 - e.length)),
                                             (e.substr(0, 20) +
                                              (e.length > 20 ? '...' : ''))
                                                 .replace(/\n/g, '')
                                    },
                                showPosition:
                                    function() {
                                      var e = this.pastInput(),
                                          t = new Array(e.length + 1).join('-');
                                      return e + this.upcomingInput() + '\n' +
                                          t + '^'
                                    },
                                test_match:
                                    function(e, t) {
                                      var r, n, i;
                                      if (this.options.backtrack_lexer &&
                                              (i = {
                                                yylineno: this.yylineno,
                                                yylloc: {
                                                  first_line:
                                                      this.yylloc.first_line,
                                                  last_line: this.last_line,
                                                  first_column:
                                                      this.yylloc.first_column,
                                                  last_column:
                                                      this.yylloc.last_column
                                                },
                                                yytext: this.yytext,
                                                match: this.match,
                                                matches: this.matches,
                                                matched: this.matched,
                                                yyleng: this.yyleng,
                                                offset: this.offset,
                                                _more: this._more,
                                                _input: this._input,
                                                yy: this.yy,
                                                conditionStack:
                                                    this.conditionStack.slice(
                                                        0),
                                                done: this.done
                                              },
                                               this.options.ranges &&
                                                   (i.yylloc.range =
                                                        this.yylloc.range.slice(
                                                            0))),
                                          n = e[0].match(/(?:\r\n?|\n).*/g),
                                          n && (this.yylineno += n.length),
                                          this.yylloc = {
                                            first_line: this.yylloc.last_line,
                                            last_line: this.yylineno + 1,
                                            first_column:
                                                this.yylloc.last_column,
                                            last_column: n ?
                                                n[n.length - 1].length -
                                                    n[n.length - 1]
                                                        .match(/\r?\n?/)[0]
                                                        .length :
                                                this.yylloc.last_column +
                                                    e[0].length
                                          },
                                          this.yytext += e[0],
                                          this.match += e[0], this.matches = e,
                                          this.yyleng = this.yytext.length,
                                          this.options.ranges &&
                                              (this.yylloc.range =
                                                   [
                                                     this.offset,
                                                     this.offset += this.yyleng
                                                   ]),
                                          this._more = !1, this._backtrack = !1,
                                          this._input =
                                              this._input.slice(e[0].length),
                                          this.matched += e[0],
                                          r = this.performAction.call(
                                              this, this.yy, this, t,
                                              this.conditionStack
                                                  [this.conditionStack.length -
                                                   1]),
                                          this.done && this._input &&
                                              (this.done = !1),
                                          r)
                                        return r;
                                      if (this._backtrack) {
                                        for (var o in i) this[o] = i[o];
                                        return !1
                                      }
                                      return !1
                                    },
                                next:
                                    function() {
                                      if (this.done) return this.EOF;
                                      this._input || (this.done = !0);
                                      var e, t, r, n;
                                      this._more ||
                                          (this.yytext = '', this.match = '');
                                      for (var i = this._currentRules(), o = 0;
                                           o < i.length; o++)
                                        if ((r = this._input.match(
                                                 this.rules[i[o]])) &&
                                            (!t || r[0].length > t[0].length)) {
                                          if (t = r, n = o,
                                              this.options.backtrack_lexer) {
                                            if (!1 !==
                                                (e = this.test_match(r, i[o])))
                                              return e;
                                            if (this._backtrack) {
                                              t = !1;
                                              continue
                                            }
                                            return !1
                                          }
                                          if (!this.options.flex) break
                                        }
                                      return t ?
                                          !1 !==
                                                  (e = this.test_match(
                                                       t, i[n])) &&
                                              e :
                                          '' === this._input ?
                                          this.EOF :
                                          this.parseError(
                                              'Lexical error on line ' +
                                                  (this.yylineno + 1) +
                                                  '. Unrecognized text.\n' +
                                                  this.showPosition(),
                                              {
                                                text: '',
                                                token: null,
                                                line: this.yylineno
                                              })
                                    },
                                lex:
                                    function() {
                                      var e = this.next();
                                      return e || this.lex()
                                    },
                                begin:
                                    function(e) {
                                      this.conditionStack.push(e)
                                    },
                                popState:
                                    function() {
                                      return this.conditionStack.length - 1 >
                                              0 ?
                                          this.conditionStack.pop() :
                                          this.conditionStack[0]
                                    },
                                _currentRules:
                                    function() {
                                      return this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1] ? this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules : this.conditions.INITIAL.rules
                                    },
                                topState:
                                    function(e) {
                                      return e = this.conditionStack.length -
                                                 1 - Math.abs(e || 0),
                                             e >= 0 ? this.conditionStack[e] :
                                                      'INITIAL'
                                    },
                                pushState:
                                    function(e) {
                                      this.begin(e)
                                    },
                                stateStackSize:
                                    function() {
                                      return this.conditionStack.length
                                    },
                                options: {},
                                performAction:
                                    function(e, t, r, n) {
                                      switch (r) {
                                        case 0:
                                          break;
                                        case 1:
                                          return this.begin('optarg'), 26;
                                        case 2:
                                          return this.popState(), 27;
                                        case 3:
                                          return 23;
                                        case 4:
                                          return 24;
                                        case 5:
                                          return 25;
                                        case 6:
                                          return 28;
                                        case 7:
                                          return 22;
                                        case 8:
                                          return 13;
                                        case 9:
                                          return 14;
                                        case 10:
                                          return 12;
                                        case 11:
                                          return 10;
                                        case 12:
                                          return 19;
                                        case 13:
                                          return 21;
                                        case 14:
                                          return 34;
                                        case 15:
                                          return 33;
                                        case 16:
                                          return 37;
                                        case 17:
                                          return 38;
                                        case 18:
                                        case 19:
                                        case 20:
                                          return 32;
                                        case 21:
                                        case 22:
                                          return 35;
                                        case 23:
                                          return 36;
                                        case 24:
                                          return 32;
                                        case 25:
                                          return 5
                                      }
                                    },
                                rules:
                                    [
                                      /^(?:\s+)/,
                                      /^(?:(\\sqrt)\s*\[)/,
                                      /^(?:\])/,
                                      /^(?:(\\operatorname))/,
                                      /^(?:(\\mathrm))/,
                                      /^(?:(\\text))/,
                                      /^(?:(\\sqrt))/,
                                      /^(?:(\\frac))/,
                                      /^(?:'+\^)/,
                                      /^(?:'+)/,
                                      /^(?:\^)/,
                                      /^(?:[_])/,
                                      /^(?:(\\left))/,
                                      /^(?:(\\right))/,
                                      /^(?:(\\langle|\\rangle|\\vert|\\Vert))/,
                                      /^(?:\[|\]|\\\{|\\\}|\(|\)|\||\\\|)/,
                                      /^(?:\{)/,
                                      /^(?:\})/,
                                      /^(?:\\(infty))/,
                                      /^(?:\\(int))/,
                                      /^(?:!)/,
                                      /^(?:\\(alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|omicron|pi|rho|sigma|tau|xi|upsilon|phi|chi|psi|omega))/,
                                      /^(?:\\(Alpha|Beta|Gamma|Delta|Epsilon|Zeta|Eta|Theta|Iota|Kappa|Lambda|Mu|Nu|Omicron|Pi|Rho|Sigma|Tau|Xi|Upsilon|Phi|Chi|Psi|Omega))/,
                                      /^(?:\\[A-Za-z]+)/,
                                      /^(?:\\.|.)/,
                                      /^(?:$)/
                                    ],
                                conditions: {
                                  optarg: {
                                    rules:
                                        [
                                          0,  1,  2,  3,  4,  5,  6,  7,  8,
                                          9,  10, 11, 12, 13, 14, 15, 16, 17,
                                          18, 19, 20, 21, 22, 23, 24, 25
                                        ],
                                    inclusive: !0
                                  },
                                  INITIAL: {
                                    rules:
                                        [
                                          0,  1,  3,  4,  5,  6,  7,  8,  9,
                                          10, 11, 12, 13, 14, 15, 16, 17, 18,
                                          19, 20, 21, 22, 23, 24, 25
                                        ],
                                    inclusive: !0
                                  }
                                }
                          }
                        }();
                    return E.lexer = S, e.prototype = E, E.Parser = e, new e
                  }();
                  t.parser = i, t.Parser = i.Parser, t.parse = function() {
                    return i.parse.apply(i, arguments)
                  }, t.main = function(n) {
                    n[1] ||
                        (console.log('Usage: ' + n[0] + ' FILE'), e.exit(1));
                    var i = r(4).readFileSync(r(5).normalize(n[1]), 'utf8');
                    return t.parser.parse(i)
                  }, void 0 !== n && r.c[r.s] === n && t.main(e.argv.slice(1))
                }).call(t, r(1), r(8)(e))
              },
              function(e, t, r) {
                function n(e) {
                  return S.map(E.default(e), function(e) {
                    return x(_.default(e))
                  })
                }
                function i(e) {
                  return /^[a-z]$/.test(e.value) ? e.value.toUpperCase() :
                      /^[A-Z]$/.test(e.value)    ? ',' + e.value :
                      /^[0-9.]$/.test(e.value)   ? e.value :
                      /^[+\-()]$/.test(e.value)  ? e.value :
                      M.hasOwnProperty(e.value)  ? M[e.value] :
                                                   '[terminal: ' + e.value + ']'
                }
                function o(e) {
                  return I.hasOwnProperty(e.value) ?
                      I[e.value] :
                      e.value.slice(1).toUpperCase() + ' '
                }
                function s(e) {
                  return k.hasOwnProperty(e.value) ?
                      k[e.value] :
                      e.value.slice(1).toUpperCase() + ' '
                }
                function a(e) {
                  return '\\space' === e.value
                }
                function l(e, t) {
                  return e.isStartOfLine && /^-?$/.test(t) || /\s-?$/.test(t) ||
                      e.wasFraction
                }
                function c(e) {
                  return '\\sum' === e.value || '\\prod' === e.value
                }
                function u(e, t) {
                  if (t >= e.length) return !1;
                  var r = e[t];
                  if ('terminal' === r.type) {
                    if (/^[0-9]$/.test(r.value)) return !0;
                    if ('.' !== r.value) return !1;
                    if (t + 1 >= e.length) return !1;
                    if (r = e[t + 1], 'terminal' === r.type)
                      return /^[0-9]$/.test(r.value)
                  }
                  return !1
                }
                function d(e, t) {
                  for (var r = '', n = e.levelIndicator, g = 0, y = !1, x = 0;
                       x < t.length; x++) {
                    u(t, x) &&
                        ('' === n && /[A-Z]$/.test(r) ? r += m(n) :
                                                        l(e, r) && (r += '#'));
                    var w = t[x], _ = x < t.length - 1 ? t[x + 1] : null;
                    switch (
                        'level' !== w.type && n !== e.levelIndicator &&
                            (b(w) ? n = '' :
                                    (e.wasModifiedExpression&& '' ===
                                             e.levelIndicator ?
                                         e = v(e, {wasModifiedExpression: !1}) :
                                         r += m(e.levelIndicator),
                                     n = e.levelIndicator)),
                        w.type) {
                      case 'terminal':
                        !e.wasModifiedExpression && '' !== n && b(w) ?
                            r += ' ' + m(n) + i(w).trim() + ' ' :
                            r += i(w),
                            '.' === w.value && _ &&
                            ('terminal' === _.type && /^[^_\d,]/.test(i(_)) ||
                             'greek' === _.type) &&
                            (r += '"'),
                            e = v(e, {wasFraction: !1, wasRomanCommand: !1});
                        break;
                      case 'command':
                        if (!a(w)) {
                          var E = c(w);
                          E && (r += '"'),
                              !E && '' !== n && b(w) ?
                              r += ' ' + m(n) + o(w).trim() + ' ' :
                              r += o(w),
                              e = v(e, {
                                wasFraction: !1,
                                wasModifiedExpression: E,
                                wasRomanCommand: !0
                              })
                        }
                        break;
                      case 'greek':
                        r += s(w), e = v(e, {wasFraction: !1});
                        break;
                      case 'fraction':
                        var S = p(e, w);
                        r += S.value,
                            g = Math.max(g, S.fractionLevel),
                            e = v(e, {wasFraction: !0, wasRomanCommand: !1});
                        break;
                      case 'radical':
                        var M = h(e, w);
                        r += M.value,
                            g = Math.max(g, M.fractionLevel),
                            e = v(e, {wasFraction: !1, wasRomanCommand: !1});
                        break;
                      case 'level':
                        !e.wasModifiedExpression && e.wasRomanCommand ?
                            (y = /\s$/.test(r)) && (r = r.replace(/\s$/, '')) :
                            y = !1;
                        var I = r.length > 0 &&
                            !0 === /[A-Za-z]/.test(r[r.length - 1]),
                            k = f(e, I, y, w);
                        r += k.value,
                            n = k.levelIndicator,
                            e = v(e, {wasFraction: !1, wasRomanCommand: !1});
                        break;
                      case 'typeform':
                        r += d(e, w.value).value,
                            'operator_name' === w.name && (r += ' '),
                            e = v(e, {
                              wasFraction: !1,
                              wasModifiedExpression: !1,
                              wasRomanCommand: !1
                            })
                    }
                  }
                  return {
                    fractionLevel: g, levelIndicator: n, value: r
                  }
                }
                function p(e, t) {
                  e = v(e, {isStartOfLine: !1});
                  for (var r = d(e, t.numerator), n = d(e, t.denominator),
                           i = Math.max(r.fractionLevel, n.fractionLevel),
                           o = '', s = 0;
                       s < i; s++)
                    o += ',';
                  var a = o + '?' + r.value;
                  return r.levelIndicator !== e.levelIndicator &&
                             (a += m(e.levelIndicator)),
                         /\.$/.test(r.value) && (a += '"'),
                         a += o + '/' + n.value,
                         n.levelIndicator !== e.levelIndicator &&
                             (a += m(e.levelIndicator)),
                         /\.$/.test(n.value) && (a += '"'), a += o + '#', {
                    fractionLevel: i + 1, value: a
                  }
                }
                function h(e, t) {
                  for (var r = e.radicalLevel, n = '', i = '', o = 0; o < r;
                       o++)
                    i += '.';
                  if (t.index) {
                    n += i + '<';
                    var s = d(v(e, {isStartOfLine: !1}), t.index);
                    n += s.value, /\.$/.test(s.value) && (n += '"'),
                        s.levelIndicator !== e.levelIndicator &&
                        (n += m(e.levelIndicator)),
                        n += '>'
                  } else
                    n += i + '>';
                  var a =
                      d(v(e, {isStartOfLine: !1, radicalLevel: r + 1}),
                        t.radicand);
                  return n += a.value, /\.$/.test(a.value) && (n += '"'),
                         a.levelIndicator !== e.levelIndicator &&
                             (n += m(e.levelIndicator)),
                         n += i + ']', {
                    fractionLevel: a.fractionLevel, value: n
                  }
                }
                function f(e, t, r, n) {
                  var i = e.levelIndicator, o = '', s = g(n.superscript);
                  if (o += s, n.subscript) {
                    e.wasModifiedExpression && (o += '%'),
                        i = e.levelIndicator + ';';
                    var a =
                        d(v(e, {isStartOfLine: !1, levelIndicator: i}),
                          n.subscript);
                    t &&
                            /^[0-9]*(\.|\,)?[0-9]+$/.test(a.value)&& i.length <=
                                1 ?
                        i = e.levelIndicator :
                        !e.wasModifiedExpression && n.subscript[0] &&
                            'level' !== n.subscript[0].type && (o += m(i)),
                        o += a.value, /\.$/.test(a.value) && (o += '"')
                  }
                  if (n.superscript) {
                    e.wasModifiedExpression && (o += '<'),
                        i = e.levelIndicator + '^';
                    var l =
                        d(v(e, {isStartOfLine: !1, levelIndicator: i}),
                          n.superscript.slice(s.length));
                    !e.wasModifiedExpression && n.superscript[0] &&
                        'level' !== n.superscript[0].type && '' !== l.value &&
                        (o += m(i)),
                        o += l.value, /\.$/.test(l.value) && (o += '"')
                  }
                  return e.wasModifiedExpression ? o += ']' :
                                                   e.wasRomanCommand && r &&
                                 (o += ' ', i = i.slice(0, i.length - 1)),
                  {
                    levelIndicator: i, value: o
                  }
                }
                function g(e) {
                  var t = '';
                  if (e)
                    for (var r = 0, n = e; r < n.length; r++) {
                      var i = n[r];
                      if ('command' !== i.type || '\\prime' !== i.value) break;
                      t += '\''
                    }
                  return t
                }
                function m(e) {
                  return e || '"'
                }
                function y() {
                  return {
                    isStartOfLine: !0, levelIndicator: '', radicalLevel: 0,
                        wasFraction: !1, wasModifiedExpression: !1,
                        wasRomanCommand: !1
                  }
                }
                function v(e, t) {
                  return w(w({}, e), t)
                }
                function b(e) {
                  return ('terminal' === e.type || 'command' === e.type) &&
                      /^<|>|\=|\\leq?|\\geq?|\\neq?$/.test(e.value)
                }
                function x(e) {
                  return d(y(), e).value
                }
                var w = this && this.__assign || function() {
                  return w = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++) {
                      t = arguments[r];
                      for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) &&
                            (e[i] = t[i])
                    }
                    return e
                  }, w.apply(this, arguments)
                };
                Object.defineProperty(t, '__esModule', {value: !0});
                var _ = r(11), E = r(12), S = r(0);
                t.default = n;
                var M = {
                  '!': '&',
                  '*': '@#',
                  ',': ', ',
                  '/': '_/',
                  ':': '_3',
                  '<': ' "K ',
                  '=': ' .K ',
                  '>': ' .1 ',
                  '?': '_8',
                  '[': '@(',
                  '\\ ': ' ',
                  '\\%': '@0',
                  '\\&': '_&',
                  '\\,': ' ',
                  '\\infty': ',=',
                  '\\int': '!',
                  '\\{': '.(',
                  '\\|': '\\\\',
                  '\\}': '.)',
                  ']': '@)',
                  '|': '\\'
                },
                    I = {
                      '\\Vert': '\\\\',
                      '\\cdot': '*',
                      '\\div': './',
                      '\\ge': ' .1: ',
                      '\\geq': ' .1: ',
                      '\\langle': '..(',
                      '\\ldots': ' \'\'\' ',
                      '\\le': ' "K: ',
                      '\\leq': ' "K: ',
                      '\\ne': ' /.K ',
                      '\\neq': ' /.K ',
                      '\\approx': ' @:@: ',
                      '\\nparallel': ' /$L ',
                      '\\parallel': ' $L ',
                      '\\perp': ' $P ',
                      '\\prime': '\'',
                      '\\prod': '.,P',
                      '\\rangle': '..)',
                      '\\sim': '@:',
                      '\\sum': '.,S',
                      '\\times': '@*',
                      '\\vert': '\\'
                    },
                    k = {
                      '\\Alpha': '.,A',
                      '\\Beta': '.,B',
                      '\\Chi': '.,&',
                      '\\Delta': '.,D',
                      '\\Epsilon': '.,E',
                      '\\Eta': '.,:',
                      '\\Gamma': '.,G',
                      '\\Iota': '.,I',
                      '\\Kappa': '.,K',
                      '\\Lambda': '.,L',
                      '\\Mu': '.,M',
                      '\\Nu': '.,N',
                      '\\Omega': '.,W',
                      '\\Omicron': '.,O',
                      '\\Phi': '.,F',
                      '\\Pi': '.,P',
                      '\\Psi': '.,Y',
                      '\\Rho': '.,R',
                      '\\Sigma': '.,S',
                      '\\Tau': '.,T',
                      '\\Theta': '.,?',
                      '\\Upsilon': '.,U',
                      '\\Xi': '.,X',
                      '\\Zeta': '.,Z',
                      '\\alpha': '.A',
                      '\\beta': '.B',
                      '\\chi': '.&',
                      '\\delta': '.D',
                      '\\epsilon': '.E',
                      '\\eta': '.:',
                      '\\gamma': '.G',
                      '\\iota': '.I',
                      '\\kappa': '.K',
                      '\\lambda': '.L',
                      '\\mu': '.M',
                      '\\nu': '.N',
                      '\\omega': '.W',
                      '\\omicron': '.O',
                      '\\phi': '.F',
                      '\\pi': '.P',
                      '\\psi': '.Y',
                      '\\rho': '.R',
                      '\\sigma': '.S',
                      '\\tau': '.T',
                      '\\theta': '.?',
                      '\\upsilon': '.U',
                      '\\xi': '.X',
                      '\\zeta': '.Z'
                    }
              },
              function(e, t, r) {
                function n(e) {
                  return I.map(M.default(e), function(e) {
                    return w(S.default(e))
                  })
                }
                function i(e, t, r) {
                  var n = '', i = t.value,
                      o = r && 'terminal' === r.type ? r.value : '';
                  return d(i, e) && (n += ';'),
                         /^[\D]/.test(i) && (e = x(e, {wasNumber: !1})),
                         /^[a-z]$/.test(i) ?
                             e.capsLock ? (e = x(e, {capsLock: !1}),
                                           n += ',\'' + i.toUpperCase()) :
                                          n += i.toUpperCase() :
                             /^[A-Z]$/.test(i) ?
                             e.capsLock ?
                             n += i :
                                 /[A-Z]/.test(o) ?
                             (e = x(e, {capsLock: !0}), n += ',,' + i) :
                             n += ',' + i :
                             (e = x(e, {capsLock: !1}),
                              /^[0-9.]$/.test(i)      ? n += c(i) :
                                  k.hasOwnProperty(i) ? n += k[i] :
                                                        n +=
                                  '[terminal: ' + i + ']'),
                  {
                    value: n, ctx: e
                  }
                }
                function o(e, t) {
                  var r;
                  return r = C.hasOwnProperty(e.value) ?
                             C[e.value] :
                             e.value.slice(1).toUpperCase() + ' ',
                         d(r, t) && (r = ';' + r),
                         /^[\D]/.test(r) && (t = x(t, {wasNumber: !1})), {
                    value: r, ctx: t
                  }
                }
                function s(e) {
                  return T.hasOwnProperty(e.value) ?
                      T[e.value] :
                      e.value.slice(1).toUpperCase() + ' '
                }
                function a(e) {
                  return '\\space' === e.value
                }
                function l(e, t) {
                  if (t < e.length) {
                    var r = e[t];
                    if ('terminal' === r.type) {
                      if (/^\d$/.test(r.value)) return !0;
                      if ('.' !== r.value) return !1;
                      if (t + 1 >= e.length) return !1;
                      if (r = e[t + 1], 'terminal' === r.type)
                        return /^\d$/.test(r.value)
                    }
                  }
                  return !1
                }
                function c(e) {
                  for (var t = '', r = 'A'.charCodeAt(0) - 1, n = 0, i = e;
                       n < i.length; n++) {
                    var o = i[n];
                    t += ',' === o ? '1' :
                        '.' === o  ? '4' :
                        '0' === o  ? 'J' :
                                     String.fromCharCode(r + Number(o))
                  }
                  return t
                }
                function u(e, t) {
                  for (var r, n, c = '', d = !0, h = 0; h < t.length; h++) {
                    l(t, h) ?
                        (e = x(e, {wasNumber: !0}), d && (c += '#', d = !1)) :
                        d = !0;
                    var m = t[h];
                    switch (m.type) {
                      case 'terminal':
                        r = i(e, m, h < t.length - 1 ? t[h + 1] : void 0),
                        e = r.ctx, c += r.value,
                        ' ' === c[c.length - 1] && (d = !0);
                        break;
                      case 'command':
                        a(m) ||
                            (n = o(m, e), e = n.ctx, c += n.value,
                             ' ' === c[c.length - 1] && (d = !0));
                        break;
                      case 'greek':
                        c += s(m), ' ' === c[c.length - 1] && (d = !0);
                        break;
                      case 'fraction':
                        var y = p(e, m);
                        c += y.value, e = y.ctx, d = !1;
                        break;
                      case 'radical':
                        c += f(e, m).value, d = !0;
                        break;
                      case 'level':
                        var v = g(e, m);
                        c += v.value, e = v.ctx, d = !0;
                        break;
                      case 'typeform':
                        var b = u(e, m.value).value;
                        c += b,
                            /(ARC)?(SIN|COS|TAN|CSC|SEC|COT)(H)?/.test(b) &&
                            (c += ' ')
                    }
                  }
                  return {
                    ctx: e, value: c
                  }
                }
                function d(e, t) {
                  return t.wasNumber && /^[A-Ja-j]/.test(e)
                }
                function p(e, t) {
                  var r, n = u(e, t.numerator), i = u(e, t.denominator);
                  return h(n.value) && h(i.value) ?
                             (e = x(e, {wasNumber: !0}),
                              r = n.value + '/' + i.value.slice(1)) :
                             (e = x(e, {wasNumber: !1}),
                              r = '(' + n.value + './' + i.value + ')'),
                  {
                    ctx: e, value: r
                  }
                }
                function h(e) {
                  return /^\#[A-J41]+$/.test(e)
                }
                function f(e, t) {
                  var r = '%';
                  if (t.index) {
                    r += u(e, E.group(E.level({'^': t.index}))).value
                  }
                  return r += u(e, t.radicand).value + '+', {
                    ctx: e, value: r
                  }
                }
                function g(e, t) {
                  var r = '', n = y(t.superscript);
                  r += n;
                  var i;
                  if (t.subscript) {
                    var o = u(e, t.subscript);
                    i = v(t.subscript, o.value, 0) ? '<' + m(o.value) + '>' :
                                                     o.value,
                    e = x(e, {wasNumber: o.ctx.wasNumber}),
                    '' !== i && (r += '5' + i)
                  }
                  if (t.superscript) {
                    var s = u(e, t.superscript.slice(n.length));
                    i = v(t.superscript, s.value, n.length) ?
                        '<' + m(s.value) + '>' :
                        s.value,
                    e = x(e, {wasNumber: s.ctx.wasNumber}),
                    '' !== n && '' === i || (r += '9' + i)
                  }
                  return {
                    ctx: e, value: r
                  }
                }
                function m(e) {
                  return /^;/.test(e) ? e.slice(1) : e
                }
                function y(e) {
                  var t = '';
                  if (e)
                    for (var r = 0, n = e; r < n.length; r++) {
                      var i = n[r];
                      if ('command' !== i.type || '\\prime' !== i.value) break;
                      t += '7'
                    }
                  return t
                }
                function v(e, t, r) {
                  var n = e[0], i = (t.match(/\</g) || []).length,
                      o = /^["|\.|_]?\</.test(t),
                      s = (t.match(/\>/g) || []).length,
                      a = /["|\.|_]?\>$/.test(t);
                  return !h(t) && e.length - r > 1 && 0 === i && 0 === s ||
                      i > 0 && s > 0 && (!o || !a) || i > 1 || s > 1 ||
                      n && 'typeform' === n.type
                }
                function b() {
                  return {
                    capsLock: !1, wasNumber: !1
                  }
                }
                function x(e, t) {
                  return _(_({}, e), t)
                }
                function w(e) {
                  return u(b(), e).value
                }
                var _ = this && this.__assign || function() {
                  return _ = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++) {
                      t = arguments[r];
                      for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) &&
                            (e[i] = t[i])
                    }
                    return e
                  }, _.apply(this, arguments)
                };
                Object.defineProperty(t, '__esModule', {value: !0});
                var E = r(7), S = r(11), M = r(12), I = r(0);
                t.default = n;
                var k = {
                  '!': '6',
                  '(': '"<',
                  ')': '">',
                  '*': '"9',
                  '+': '"6',
                  ',': '1',
                  '-': '"-',
                  '.': '4',
                  '/': '_/',
                  ':': '3',
                  '<': '@<',
                  '=': '"7',
                  '>': '@>',
                  '?': '8',
                  '[': '.<',
                  '\\ ': ' ',
                  '\\%': '.0',
                  '\\&': '@&',
                  '\\,': ' ',
                  '\\infty': '#=',
                  '\\int': '!',
                  '\\{': '_<',
                  '\\|': '_\\_\\',
                  '\\}': '_>',
                  ']': '.>',
                  '|': '_\\'
                },
                    C = {
                      '\\Vert': '_\\_\\',
                      '\\cdot': '"4',
                      '\\div': '"/',
                      '\\ge': '_@>',
                      '\\geq': '_@>',
                      '\\langle': '@<',
                      '\\ldots': '444',
                      '\\le': '_@<',
                      '\\leq': '_@<',
                      '\\ne': '"7@:',
                      '\\neq': '"7@:',
                      '\\approx': '^9',
                      '\\parallel': '#L',
                      '\\perp': '#-',
                      '\\prime': '7',
                      '\\prod': ',.P',
                      '\\rangle': '@>',
                      '\\sim': '@9',
                      '\\sum': ',.S',
                      '\\times': '"8',
                      '\\vert': '_\\'
                    },
                    T = {
                      '\\Alpha': ',.A',
                      '\\Beta': ',.B',
                      '\\Chi': ',.&',
                      '\\Delta': ',.D',
                      '\\Epsilon': ',.E',
                      '\\Eta': ',.:',
                      '\\Gamma': ',.G',
                      '\\Iota': ',.I',
                      '\\Kappa': ',.K',
                      '\\Lambda': ',.L',
                      '\\Mu': ',.M',
                      '\\Nu': ',.N',
                      '\\Omega': ',.W',
                      '\\Omicron': ',.O',
                      '\\Phi': ',.F',
                      '\\Pi': ',.P',
                      '\\Psi': ',.Y',
                      '\\Rho': ',.R',
                      '\\Sigma': ',.S',
                      '\\Tau': ',.T',
                      '\\Theta': ',.?',
                      '\\Upsilon': ',.U',
                      '\\Xi': ',.X',
                      '\\Zeta': ',.Z',
                      '\\alpha': '.A',
                      '\\beta': '.B',
                      '\\chi': '.&',
                      '\\delta': '.D',
                      '\\epsilon': '.E',
                      '\\eta': '.:',
                      '\\gamma': '.G',
                      '\\iota': '.I',
                      '\\kappa': '.K',
                      '\\lambda': '.L',
                      '\\mu': '.M',
                      '\\nu': '.N',
                      '\\omega': '.W',
                      '\\omicron': '.O',
                      '\\phi': '.F',
                      '\\pi': '.P',
                      '\\psi': '.Y',
                      '\\rho': '.R',
                      '\\sigma': '.S',
                      '\\tau': '.T',
                      '\\theta': '.?',
                      '\\upsilon': '.U',
                      '\\xi': '.X',
                      '\\zeta': '.Z'
                    }
              },
              function(e, t, r) {
                function n(e, t) {
                  for (var r = '', o = t, s = '', a = !1, u = '', d = '',
                           h = i(e), f = 0;
                       f < e.length; f++) {
                    var y = e[f], v = f + 1 < e.length ? e[f + 1] : null;
                    switch (y.type) {
                      case 'terminal':
                        var b = p.getAutoOperator(e.slice(f));
                        '' !== b.value ?
                            (r += b.value, f += b.terminalCount - 1,
                             a = a || b.modified) :
                            ' ' === y.value ?
                            (a ? (s = u, r += c(o, s), o = s) : r += '\\ ',
                             a = !1) :
                            (h[f] === g ? r += '\\left' :
                                          h[f] === m && (r += '\\right'),
                             r += y.value);
                        break;
                      case 'comparison':
                        s = '', r += c(o, s), o = s, a = !1, r += y.value;
                        break;
                      case 'level_with_comparison':
                        r += c(o, y.level), o = y.level, a = !1, r += y.value;
                        break;
                      case 'command':
                        var x = y.value.slice(1).trim();
                        v && 'terminal' === v.type && /[a-z]/.test(v.value) ?
                            (r += x, a = !1) :
                            p.containsValue(x) ?
                            (r += '\\operatorname{' + x + '}', a = !0) :
                            (r += y.value, a = !0),
                            u = o;
                        break;
                      case 'expression':
                        r += y.value;
                        break;
                      case 'fraction':
                        r += l(y.numerator, y.denominator, o);
                        break;
                      case 'modified_expression':
                        r += n(y.expression, o) + ' ',
                            y.under && (r += '_{' + n(y.under, o) + '}'),
                            y.over && (r += '^{' + n(y.over, o) + '}');
                        break;
                      case 'radical':
                        r += '\\sqrt',
                            y.index && (r += '[' + n(y.index, o) + ']'),
                            r += '{' + n(y.value, o) + '}';
                        break;
                      case 'simple_subscript':
                        '' === o ?
                            (r += y.base.value + '_{' + y.subscript.value + '}',
                             'command' === y.base.type && (a = !0, u = o)) :
                            r += y.base.value + y.subscript.value;
                        break;
                      case 'level':
                        r += c(o, y.value, d),
                            o = y.value,
                            '^' === y.value && '' !== d && (d = '');
                        break;
                      case 'primes':
                        v&& 'level' === v.type&& ';' === v.value ?
                            d = y.value :
                            '' !== o ?
                            (r += Array(y.value.length + 1).join('\\prime '),
                             d = '') :
                            (r += y.value, d = '')
                    }
                  }
                  return r += c(o, t) + d, r.replace(/([^\\])( )$/, '$1')
                }
                function i(e) {
                  for (var t = [], r = [], n = 0; n < e.length; n++) {
                    var i = e[n];
                    if (o(i))
                      t.push({direction: g, index: n}), r.push(y);
                    else if (s(i)) {
                      for (; t.length && t[t.length - 1].direction === v;)
                        t.pop();
                      if (t.length) {
                        var l = t.pop();
                        if (l) {
                          var c = l.index;
                          r[c] = g, r.push(m)
                        }
                      } else
                        r.push(y)
                    } else if (a(i))
                      if (t.length && t[t.length - 1].direction === v) {
                        var l = t.pop();
                        if (l) {
                          var c = l.index;
                          r[c] = g, r.push(m)
                        }
                      } else
                        t.push({direction: v, index: n}), r.push(y);
                    else
                      r.push(y)
                  }
                  return r
                }
                function o(e) {
                  return 'terminal' === e.type &&
                      /^(\\langle |\[|\(|\\{)$/.test(e.value)
                }
                function s(e) {
                  return 'terminal' === e.type &&
                      /^(\\rangle |\]|\)|\\})$/.test(e.value)
                }
                function a(e) {
                  return 'terminal' === e.type && /^(\\\||\|)$/.test(e.value)
                }
                function l(e, t, r) {
                  return '\\frac{' + n(e, r) + '}{' + n(t, r) + '}'
                }
                function c(e, t, r) {
                  var n, i, o, s = '', a = Math.max(e.length, t.length);
                  for (n = 0; n < a && e[n] === t[n]; n++)
                    ;
                  for (i = e.length - 1; i >= n; i--) s += '}';
                  for (o = n; o < t.length; o++)
                    '^' === t[o] && (r && (s += r), s += '^{'),
                        ';' === t[o] && (s += '_{');
                  return s
                }
                function u(e) {
                  return n(e, '')
                }
                function d(e, t) {
                  return t && t.operatorNames ?
                             p.setOperatorNames(t.operatorNames) :
                             p.resetOperatorNames(),
                         f.map(h.default(e, t), u)
                }
                Object.defineProperty(t, '__esModule', {value: !0});
                var p = r(2), h = r(18), f = r(0), g = 1, m = -1, y = 0, v = 2;
                t.default = d
              },
              function(e, t, r) {
                function n(e) {
                  return {
                    type: 'terminal', value: e
                  }
                }
                function i(e) {
                  return {
                    type: 'command', value: '\\' + e.trim() + ' '
                  }
                }
                function o(e) {
                  var t = /[\^;]+/.exec(e), r = t ? t.toString() : '',
                      n = e.slice(a.length);
                  return {
                    type: 'level_with_comparison', level: r, value: y[n]
                  }
                }
                function s(e) {
                  return {
                    type: 'comparison', value: y[e]
                  }
                }
                function a(e) {
                  return {
                    type: 'level', value: e
                  }
                }
                function l() {
                  return a('')
                }
                function c(e) {
                  return {
                    type: 'primes', value: e
                  }
                }
                function u(e, t) {
                  return {
                    type: 'fraction', numerator: e, denominator: t
                  }
                }
                function d(e, t, r) {
                  return {
                    type: 'modified_expression', expression: e, under: t,
                        over: r
                  }
                }
                function p(e, t) {
                  return {
                    type: 'radical', value: e, index: t
                  }
                }
                function h(e) {
                  return {
                    type: 'expression', value: e
                  }
                }
                function f(e, t) {
                  return {
                    type: 'simple_subscript', base: e, subscript: t
                  }
                }
                function g(e) {
                  if (v.hasOwnProperty(e)) return v[e] + ' ';
                  throw new Error('Unknown Greek letter')
                }
                function m() {
                  for (var e = [], t = 0; t < arguments.length; t++)
                    e[t] = arguments[t];
                  return Array.prototype.concat.apply([], e)
                }
                Object.defineProperty(t, '__esModule', {value: !0}),
                    t.terminal = n, t.command = i;
                var y = {
                  '"K': '<',
                  '"K:': '\\leq ',
                  $L: '\\parallel ',
                  $P: '\\perp ',
                  '.1': '>',
                  '.1:': '\\geq ',
                  '.K': '=',
                  '@:@:': '\\approx',
                  '/$L': '\\nparallel ',
                  '/.K': '\\neq ',
                  '=': '=',
                  '@:': '\\sim '
                };
                t.level_with_comparison = o, t.comparison = s, t.level = a,
                t.baseline = l, t.primes = c, t.fraction = u,
                t.modified_expression = d, t.radical = p, t.expression = h,
                t.simple_subscript = f;
                var v = {
                  '.&': '\\chi',
                  '.,&': '\\Chi',
                  '.,:': '\\Eta',
                  '.,?': '\\Theta',
                  '.,A': '\\Alpha',
                  '.,B': '\\Beta',
                  '.,D': '\\Delta',
                  '.,E': '\\Epsilon',
                  '.,F': '\\Phi',
                  '.,G': '\\Gamma',
                  '.,I': '\\Iota',
                  '.,K': '\\Kappa',
                  '.,L': '\\Lambda',
                  '.,M': '\\Mu',
                  '.,N': '\\Nu',
                  '.,O': '\\Omicron',
                  '.,P': '\\prod',
                  '.,R': '\\Rho',
                  '.,S': '\\sum',
                  '.,T': '\\Tau',
                  '.,U': '\\Upsilon',
                  '.,W': '\\Omega',
                  '.,X': '\\Xi',
                  '.,Y': '\\Psi',
                  '.,Z': '\\Zeta',
                  '.:': '\\eta',
                  '.?': '\\theta',
                  '.A': '\\alpha',
                  '.B': '\\beta',
                  '.D': '\\delta',
                  '.E': '\\epsilon',
                  '.F': '\\phi',
                  '.G': '\\gamma',
                  '.I': '\\iota',
                  '.K': '\\kappa',
                  '.L': '\\lambda',
                  '.M': '\\mu',
                  '.N': '\\nu',
                  '.O': '\\omicron',
                  '.P': '\\pi',
                  '.R': '\\rho',
                  '.S': '\\sigma',
                  '.T': '\\tau',
                  '.U': '\\upsilon',
                  '.W': '\\omega',
                  '.X': '\\xi',
                  '.Y': '\\psi',
                  '.Z': '\\zeta'
                };
                t.greek = g, t.group = m
              },
              function(e, t, r) {
                function n(e, t) {
                  t || (t = {});
                  var r = s.parser, n = Object.create(r);
                  n.yy = a, n.yy.warnOrError = function(e) {
                    n.parseError(e, {recoverable: !1})
                  };
                  var c = Object.create(r);
                  c.yy = i({warnings: []}, a), c.yy.warnOrError = function(e) {
                    c.yy.warnings.push(e)
                  }, c.lexer = l.default, r = t.strict ? n : c;
                  try {
                    return {
                      isError: !1, value: r.parse(e),
                          warnings: r.yy.warnings || []
                    }
                  } catch (e) {
                    return {
                      error: o.default(e), isError: !0
                    }
                  }
                }
                var i = this && this.__assign || function() {
                  return i = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++) {
                      t = arguments[r];
                      for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) &&
                            (e[i] = t[i])
                    }
                    return e
                  }, i.apply(this, arguments)
                };
                Object.defineProperty(t, '__esModule', {value: !0});
                var o = r(6), s = r(9), a = r(17), l = r(20);
                t.default = n
              },
              function(e, t, r) {
                function n(e, t) {
                  t || (t = {});
                  var r = a.parser, n = Object.create(r);
                  n.yy = l;
                  var c = Object.create(r);
                  c.yy = i({warnings: []}, l), c.lexer = s.default,
                  r = t.strict ? n : c;
                  try {
                    return {
                      isError: !1, value: r.parse(e),
                          warnings: r.yy.warnings || []
                    }
                  } catch (e) {
                    return {
                      error: o.default(e), isError: !0
                    }
                  }
                }
                var i = this && this.__assign || function() {
                  return i = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++) {
                      t = arguments[r];
                      for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) &&
                            (e[i] = t[i])
                    }
                    return e
                  }, i.apply(this, arguments)
                };
                Object.defineProperty(t, '__esModule', {value: !0});
                var o = r(6), s = r(21), a = r(10), l = r(24);
                t.default = n
              },
              function(e, t, r) {
                Object.defineProperty(t, '__esModule', {value: !0});
                var n = r(9), i = n.parser.lexer, o = Object.create(i);
                t.default = o;
                var s = n.parser.terminals_, a = n.parser.symbols_;
                o.setInput = function(e, t) {
                  this.delimiterStack = [], this.outputQueue = [],
                  this.canAcceptPrimes = !1, i.setInput.call(this, e, t)
                }, o.lex = function() {
                  var e = -1;
                  if (!this) return e;
                  if (this.outputQueue.length) return this.outputQueue.shift();
                  for (var t = i.lex.call(this); 'UNKNOWN' === s[t] ||
                       !this.canAcceptPrimes && 'PRIMES' === s[t];)
                    this.warn(), t = i.lex.call(this);
                  this.canAcceptPrimes = !0;
                  var r, n,
                      o = this.delimiterStack ?
                      this.delimiterStack[this.delimiterStack.length - 1] :
                      -1;
                  switch (s[t]) {
                    case 'OPEN_FRAC':
                    case 'OPEN_MODEXP':
                      this.delimiterStack.push(t), this.canAcceptPrimes = !1;
                      break;
                    case 'RADICAL_INDEX':
                      o === a.RADICAL_INDEX &&
                          (this.delimiterStack.pop(), this.pushCloseTokens(o)),
                          this.delimiterStack.push(t),
                          this.canAcceptPrimes = !1;
                      break;
                    case 'OPEN_RADICAL':
                      o === a.RADICAL_INDEX && this.delimiterStack.pop(),
                          this.delimiterStack.push(t),
                          this.canAcceptPrimes = !1;
                      break;
                    case 'SLASH':
                      for (r = !1; this.delimiterStack.length;) {
                        if ((n = this.delimiterStack.pop() || -1) ===
                            a.OPEN_FRAC) {
                          r = !0;
                          break
                        }
                        this.pushCloseTokens(n)
                      }
                      r || this.pushOpenTokens(t), this.delimiterStack.push(t),
                          this.canAcceptPrimes = !1;
                      break;
                    case 'CLOSE_FRAC':
                      for (r = !1; this.delimiterStack.length;) {
                        if ((n = this.delimiterStack.pop() || -1) === a.SLASH) {
                          r = !0;
                          break
                        }
                        if (n === a.OPEN_FRAC) {
                          this.addMissingToken(a.SLASH), r = !0;
                          break
                        }
                        this.pushCloseTokens(n)
                      }
                      if (!r)
                        return this.warn(), this.canAcceptPrimes = !1,
                                            this.lex();
                      break;
                    case 'CLOSE_RADICAL':
                      for (r = !1; this.delimiterStack.length;) {
                        if ((n = this.delimiterStack.pop() || -1) ===
                            a.OPEN_RADICAL) {
                          r = !0;
                          break
                        }
                        if (n === a.RADICAL_INDEX) {
                          r = !0, this.addMissingToken(a.OPEN_RADICAL);
                          break
                        }
                        this.pushCloseTokens(n)
                      }
                      r || this.pushOpenTokens(t);
                      break;
                    case 'CLOSE_MODEXP':
                      for (r = !1; this.delimiterStack.length;) {
                        if ((n = this.delimiterStack.pop() || -1) ===
                            a.OPEN_MODEXP) {
                          r = !0;
                          break
                        }
                        this.pushCloseTokens(n)
                      }
                      r || this.pushOpenTokens(t);
                      break;
                    case 'EOF':
                      for (; this.delimiterStack.length;)
                        n = this.delimiterStack.pop() || -1,
                        this.pushCloseTokens(n)
                  }
                  return this.outputQueue.push(t),
                         e = this.outputQueue.shift() || -1
                }, o.warn = function() {
                  this.yylloc && this.yy.warnings.push({location: this.yylloc})
                }, o.addMissingToken = function(e) {
                  this.outputQueue.push(e), this.warn()
                }, o.pushCloseTokens = function(e) {
                  switch (s[e]) {
                    case 'OPEN_FRAC':
                      this.addMissingToken(a.SLASH),
                          this.addMissingToken(a.CLOSE_FRAC);
                      break;
                    case 'SLASH':
                      this.addMissingToken(a.CLOSE_FRAC);
                      break;
                    case 'RADICAL_INDEX':
                      this.addMissingToken(a.OPEN_RADICAL),
                          this.addMissingToken(a.CLOSE_RADICAL);
                      break;
                    case 'OPEN_RADICAL':
                      this.addMissingToken(a.CLOSE_RADICAL);
                      break;
                    case 'OPEN_MODEXP':
                      this.addMissingToken(a.CLOSE_MODEXP)
                  }
                }, o.pushOpenTokens = function(e) {
                  switch (s[e]) {
                    case 'SLASH':
                      this.addMissingToken(a.OPEN_FRAC);
                      break;
                    case 'CLOSE_FRAC':
                      this.addMissingToken(a.OPEN_FRAC),
                          this.addMissingToken(a.SLASH);
                      break;
                    case 'CLOSE_RADICAL':
                      this.addMissingToken(a.OPEN_RADICAL);
                      break;
                    case 'CLOSE_MODEXP':
                      this.addMissingToken(a.OPEN_MODEXP)
                  }
                }
              },
              function(e, t, r) {
                Object.defineProperty(t, '__esModule', {value: !0});
                var n = r(10), i = n.parser.lexer, o = Object.create(i);
                t.default = o;
                var s = n.parser.terminals_, a = n.parser.symbols_;
                o.setInput = function(e, t) {
                  this.delimiterStack = [], this.outputQueue = [],
                  i.setInput.call(this, e, t)
                }, o.lex = function() {
                  if (this.outputQueue.length) return this.outputQueue.shift();
                  for (var e = i.lex.call(this); 'UNKNOWN' === s[e];)
                    this.warn(), e = i.lex.call(this);
                  var t, r,
                      n = this.delimiterStack ?
                      this.delimiterStack[this.delimiterStack.length - 1] :
                      -1;
                  switch (s[e]) {
                    case 'OPEN_FRAC':
                    case 'OPEN_GROUP':
                      this.delimiterStack.push(e);
                      break;
                    case 'RADICAL_WITH_INDEX':
                      n === a.RADICAL_WITH_INDEX &&
                          (this.delimiterStack.pop(), this.pushCloseTokens(n)),
                          this.delimiterStack.push(e);
                      break;
                    case 'RADICAL':
                      n === a.RADICAL_WITH_INDEX && this.delimiterStack.pop(),
                          this.delimiterStack.push(e);
                      break;
                    case 'OVER':
                      for (t = !1; this.delimiterStack.length;) {
                        if ((r = this.delimiterStack.pop() || -1) ===
                            a.OPEN_FRAC) {
                          t = !0;
                          break
                        }
                        this.pushCloseTokens(r)
                      }
                      t || this.pushOpenTokens(e), this.delimiterStack.push(e);
                      break;
                    case 'CLOSE_FRAC':
                      for (t = !1; this.delimiterStack.length;) {
                        if ((r = this.delimiterStack.pop() || -1) === a.OVER) {
                          t = !0;
                          break
                        }
                        if (r === a.OPEN_FRAC) {
                          this.outputQueue.push(a.OVER), t = !0;
                          break
                        }
                        this.pushCloseTokens(r)
                      }
                      t || this.pushOpenTokens(e);
                      break;
                    case 'CLOSE_GROUP':
                      for (t = !1; this.delimiterStack.length;) {
                        if ((r = this.delimiterStack.pop() || -1) ===
                            a.OPEN_GROUP) {
                          t = !0;
                          break
                        }
                        this.pushCloseTokens(r)
                      }
                      t || this.pushOpenTokens(e);
                      break;
                    case 'CLOSE_RADICAL':
                      for (t = !1; this.delimiterStack.length;) {
                        if ((r = this.delimiterStack.pop() || -1) ===
                                a.RADICAL ||
                            r === a.RADICAL_WITH_INDEX) {
                          t = !0;
                          break
                        }
                        this.pushCloseTokens(r)
                      }
                      t || this.pushOpenTokens(e);
                      break;
                    case 'EOF':
                      for (; this.delimiterStack.length;)
                        r = this.delimiterStack.pop() || -1,
                        this.pushCloseTokens(r)
                  }
                  return this.outputQueue.push(e),
                         this.outputQueue.shift() || -1
                }, o.warn = function() {
                  this.yylloc && this.yy.warnings.push({location: this.yylloc})
                }, o.addMissingToken = function(e) {
                  this.outputQueue.push(e), this.warn()
                }, o.pushCloseTokens = function(e) {
                  switch (s[e]) {
                    case 'OPEN_FRAC':
                      this.addMissingToken(a.OVER),
                          this.addMissingToken(a.CLOSE_FRAC);
                      break;
                    case 'OVER':
                      this.addMissingToken(a.CLOSE_FRAC);
                      break;
                    case 'OPEN_GROUP':
                      this.addMissingToken(a.CLOSE_GROUP);
                      break;
                    case 'RADICAL_WITH_INDEX':
                    case 'RADICAL':
                      this.addMissingToken(a.CLOSE_RADICAL)
                  }
                }, o.pushOpenTokens = function(e) {
                  switch (s[e]) {
                    case 'OVER':
                      this.addMissingToken(a.OPEN_FRAC);
                      break;
                    case 'CLOSE_FRAC':
                      this.addMissingToken(a.OPEN_FRAC),
                          this.addMissingToken(a.OVER);
                      break;
                    case 'CLOSE_GROUP':
                      this.addMissingToken(a.OPEN_GROUP);
                      break;
                    case 'CLOSE_RADICAL':
                      this.addMissingToken(a.RADICAL)
                  }
                }
              },
              function(e, t, r) {
                function n(e) {
                  return e.isError
                }
                function i(e) {
                  return !e.isError
                }
                function o(e, t) {
                  return n(e) ? e : {isError: !1, value: t(e.value)}
                }
                Object.defineProperty(t, '__esModule', {value: !0}),
                    t.isErr = n, t.isOk = i, t.map = o
              },
              function(e, t, r) {
                function n(e, t) {
                  for (var r = '', o = !1, s = '', a = i(e), d = 0;
                       d < e.length; d++) {
                    var h = e[d], f = d + 1 < e.length ? e[d + 1] : null;
                    switch (h.type) {
                      case 'terminal':
                        var y = p.getAutoOperator(e.slice(d));
                        '' !== y.value ?
                            (r += y.value, d += y.terminalCount - 1) :
                            ' ' !== h.value || o ?
                            (a[d] === g ? r += '\\left' :
                                          a[d] === m && (r += '\\right'),
                             r += h.value) :
                            r += '\\ ',
                            o = !1;
                        break;
                      case 'command':
                        var v = h.value.slice(1).trim();
                        f && 'terminal' === f.type && /[a-z]/.test(f.value) ?
                            (r += v, o = !1) :
                            p.containsValue(v) ?
                            (r += '\\operatorname{' + v + '}', o = !0) :
                            (r += h.value, o = !0);
                        break;
                      case 'expression':
                        r += h.value;
                        break;
                      case 'fraction':
                        r += l(h.numerator, h.denominator);
                        break;
                      case 'radical':
                        r += '\\sqrt', h.index && (r += '[' + n(h.index) + ']'),
                            r += '{' + n(h.value) + '}';
                        break;
                      case 'basic_level':
                        r += c(h.level, h.value, s),
                            '9' === h.level && (s = '');
                        break;
                      case 'bracketed_level':
                        r += u(h.level, h.lbrack, h.value, h.rbrack, s),
                            '9' === h.level && (s = '');
                        break;
                      case 'primes':
                        !f ||
                                'basic_level' !== f.type &&
                                    'bracketed_level' !== f.type ||
                                '5' !== f.level ?
                            t && '' !== t ?
                            (r += Array(h.value.length + 1).join('\\prime '),
                             s = '') :
                            (r += h.value, s = '') :
                            s = h.value
                    }
                  }
                  return r += s, r.replace(/([^\\])( )$/, '$1')
                }
                function i(e) {
                  for (var t = [], r = [], n = 0; n < e.length; n++) {
                    var i = e[n];
                    if (o(i))
                      t.push({direction: g, index: n}), r.push(y);
                    else if (s(i)) {
                      for (; t.length && t[t.length - 1].direction === v;)
                        t.pop();
                      if (t.length) {
                        var l = t.pop();
                        if (l) {
                          var c = l.index;
                          r[c] = g, r.push(m)
                        }
                      } else
                        r.push(y)
                    } else if (a(i))
                      if (t.length && t[t.length - 1].direction === v) {
                        var l = t.pop();
                        if (l) {
                          var c = l.index;
                          r[c] = g, r.push(m)
                        }
                      } else
                        t.push({direction: v, index: n}), r.push(y);
                    else
                      r.push(y)
                  }
                  return r
                }
                function o(e) {
                  return 'terminal' === e.type &&
                      /^(\\langle |\[|\(|\\{)$/.test(e.value)
                }
                function s(e) {
                  return 'terminal' === e.type &&
                      /^(\\rangle |\]|\)|\\})$/.test(e.value)
                }
                function a(e) {
                  return 'terminal' === e.type && /^(\\\||\|)$/.test(e.value)
                }
                function l(e, t) {
                  return '\\frac{' + n(e) + '}{' + n(t) + '}'
                }
                function c(e, t, r) {
                  var i = '', o = '{' + n(t, e) + '}';
                  return '9' === e ? i += r + '^' + o :
                                     '5' === e && (i += '_' + o),
                         i
                }
                function u(e, t, r, i, o) {
                  var s = '', a = '{' + t + n(r, e) + i + '}';
                  return '9' === e ? s += o + '^' + a :
                                     '5' === e && (s += '_' + a),
                         s
                }
                function d(e, t) {
                  return t && t.operatorNames ?
                             p.setOperatorNames(t.operatorNames) :
                             p.resetOperatorNames(),
                         f.map(h.default(e, t), function(e) {
                           return b(e, '')
                         })
                }
                Object.defineProperty(t, '__esModule', {value: !0});
                var p = r(2), h = r(19), f = r(0), g = 1, m = -1, y = 0, v = 2,
                    b = n;
                t.default = d
              },
              function(e, t, r) {
                function n(e) {
                  return {
                    type: 'terminal', value: e
                  }
                }
                function i(e) {
                  return {
                    type: 'command', value: e
                  }
                }
                function o(e, t) {
                  return {
                    type: 'basic_level', level: e, value: t
                  }
                }
                function s(e, t, r, n) {
                  return {
                    type: 'bracketed_level', level: e, lbrack: t, value: r,
                        rbrack: n
                  }
                }
                function a(e) {
                  return {
                    type: 'primes',
                        value: e.length > 0 ? Array(e.length + 1).join('\'') :
                                              ''
                  }
                }
                function l(e, t) {
                  return {
                    type: 'fraction', numerator: e, denominator: t
                  }
                }
                function c(e, t) {
                  return {
                    type: 'radical', value: e, index: t
                  }
                }
                function u(e) {
                  return {
                    type: 'expression', value: e
                  }
                }
                function d() {
                  for (var e = [], t = 0; t < arguments.length; t++)
                    e[t] = arguments[t];
                  return Array.prototype.concat.apply([], e)
                }
                function p(e) {
                  if (f.hasOwnProperty(e)) return f[e] + ' ';
                  throw new Error('Unknown Greek letter')
                }
                function h(e) {
                  for (var t = '', r = 'A'.charCodeAt(0) - 1, n = 0, i = e;
                       n < i.length; n++) {
                    var o = i[n];
                    t += '4' === o ? '.' : 'J' === o ? '0' : o.charCodeAt(0) - r
                  }
                  return t
                }
                Object.defineProperty(t, '__esModule', {value: !0}),
                    t.terminal = n, t.command = i, t.basic_level = o,
                    t.bracketed_level = s, t.primes = a, t.fraction = l,
                    t.radical = c, t.expression = u, t.group = d;
                var f = {
                  ',.&': '\\Chi',
                  ',.:': '\\Eta',
                  ',.?': '\\Theta',
                  ',.A': '\\Alpha',
                  ',.B': '\\Beta',
                  ',.D': '\\Delta',
                  ',.E': '\\Epsilon',
                  ',.F': '\\Phi',
                  ',.G': '\\Gamma',
                  ',.I': '\\Iota',
                  ',.K': '\\Kappa',
                  ',.L': '\\Lambda',
                  ',.M': '\\Mu',
                  ',.N': '\\Nu',
                  ',.O': '\\Omicron',
                  ',.P': '\\prod',
                  ',.R': '\\Rho',
                  ',.S': '\\sum',
                  ',.T': '\\Tau',
                  ',.U': '\\Upsilon',
                  ',.W': '\\Omega',
                  ',.X': '\\Xi',
                  ',.Y': '\\Psi',
                  ',.Z': '\\Zeta',
                  '.&': '\\chi',
                  '.:': '\\eta',
                  '.?': '\\theta',
                  '.A': '\\alpha',
                  '.B': '\\beta',
                  '.D': '\\delta',
                  '.E': '\\epsilon',
                  '.F': '\\phi',
                  '.G': '\\gamma',
                  '.I': '\\iota',
                  '.K': '\\kappa',
                  '.L': '\\lambda',
                  '.M': '\\mu',
                  '.N': '\\nu',
                  '.O': '\\omicron',
                  '.P': '\\pi',
                  '.R': '\\rho',
                  '.S': '\\sigma',
                  '.T': '\\tau',
                  '.U': '\\upsilon',
                  '.W': '\\omega',
                  '.X': '\\xi',
                  '.Y': '\\psi',
                  '.Z': '\\zeta'
                };
                t.greek = p, t.to_number = h
              },
              function(e, t, r) {
                function n(e) {
                  return String.fromCharCode(h + e)
                }
                function i(e) {
                  return e.charCodeAt(0) - h
                }
                function o(e) {
                  return p[e]
                }
                function s(e) {
                  return p.indexOf(e)
                }
                function a(e) {
                  for (var t = '', r = 0, i = e; r < i.length; r++) {
                    t += n(s(i[r]))
                  }
                  return t
                }
                function l(e) {
                  for (var t = '', r = 0, n = e; r < n.length; r++) {
                    t += o(i(n[r]))
                  }
                  return t
                }
                function c(e) {
                  return l(e).replace(/[@-^]/g, function(e) {
                    return String.fromCharCode(e.charCodeAt(0) + 32)
                  })
                }
                function u(e) {
                  var t = '';
                  if (e)
                    for (var r = 0, n = e; r < n.length; r++) {
                      var i = n[r], o = i.charCodeAt(0);
                      96 <= o && o <= 127 &&
                          (o -= 32, i = String.fromCharCode(o)),
                          32 <= o && o <= 95 && (i = a(i), o = i.charCodeAt(0)),
                          10305 <= o && o <= 10495 &&
                          (o = 10240 + (o - 1024) % 64,
                           i = String.fromCharCode(o)),
                          t += 10240 <= o && o <= 10304 ?
                          i :
                          String.fromCharCode(10240)
                    }
                  return t
                }
                function d(e) {
                  for (var t = 0; t < e.length; t++) {
                    var r = e.charCodeAt(t);
                    if (r < 10240 || r > 10304) return !1
                  }
                  return !0
                }
                Object.defineProperty(t, '__esModule', {value: !0});
                var p = ' A1B\'K2L@CIF/MSP"E3H9O6R^DJG>NTQ,*5<-U8V.%[$+X!&;:4\\0Z7(_?W]#Y)=',
                    h = 10240;
                t.toBrailleAscii = l, t.toExpandedBrailleAscii = c,
                t.coerceToSixDotCells = u, t.isSixDotCells = d
              },
              function(e, t, r) {
                r(3), e.exports = r(3)
              }
            ])
          });
          r('submodules/dcgview/src/attr-event-handler', [], function() {
            function e(e, t) {
              if (null !== t && void 0 !== t) {
                if ('string' != typeof e)
                  throw new Error(
                      'Must pass a string for an EventHandler name');
                if ('function' != typeof t)
                  throw new Error(
                      'Must pass a function for an EventHandler callback');
                return {
                  bindings: {
                    onMount:
                        function(r) {
                          r[e.toLowerCase()] = function(e) {
                            e && t.apply(this, arguments)
                          }
                        }
                  }
                }
              }
            }
            return e
          });
          r('submodules/dcgview/src/const', ['require'], function(e) {
            function t(e) {
              var t = function() {
                return e
              };
              return t.isDCGViewConst = !0, t
            }
            function r(e) {
              return !('function' != typeof e || !e.isDCGViewConst)
            }
            return {
              isConst: r, makeConst: t
            }
          });
          r('submodules/dcgview/src/attr', ['require'], function(e) {
            function t(e, t, r) {
              void 0 === r ? e.removeAttribute(t) : e.setAttribute(t, r + '')
            }
            return {
              update: t
            }
          });
          r('submodules/dcgview/src/attr-generic',
            ['require', './const', './attr'], function(e) {
              function t(e, t) {
                var i, o = t();
                return r.isConst(t) || (i = {
                         onUpdate: function(r) {
                           var i = t();
                           i !== o && (o = i, n.update(r, e, i))
                         }
                       }),
                {
                  value: o, bindings: i
                }
              }
              var r = e('./const'), n = e('./attr');
              return t
            });
          r('submodules/dcgview/src/is-event-handler', [], function() {
            function e(e) {
              return 'o' === e[0] && 'n' === e[1] && e[2].toUpperCase() === e[2]
            }
            return e
          });
          r('submodules/dcgview/src/custom-attributes', ['require'],
            function(e) {
              function t(e, t) {
                i[e] = t
              }
              function r(e) {
                return i.hasOwnProperty(e)
              }
              function n(e, t) {
                return (0, i[e])(t)
              }
              var i = {};
              return {
                isCustomAttribute: r, add: t, parse: n
              }
            });
          r('submodules/dcgview/src/bindings', ['require'], function(e) {
            function t(e, t, r) {
              var n = e._bindings[t];
              n ? n.push(r) : e._bindings[t] = [r]
            }
            function r(e, t) {
              var r = e._bindings[t];
              if (r)
                for (var n = r.length, i = 0; i < n; i++) r[i]()
            }
            return {
              add: t, invoke: r
            }
          });
          r('submodules/dcgview/src/bind-attrs',
            [
              'require', './attr-event-handler', './attr-generic',
              './is-event-handler', './custom-attributes', './bindings'
            ],
            function(e) {
              function t(e, t, r) {
                var n = r.bindings;
                if (n)
                  for (var i in n) {
                    var o = n[i];
                    i in c && (o = o.bind(null, t)), l.add(e, i, o)
                  }
              }
              function r(e, t) {
                if ('function' != typeof t)
                  throw new Error(
                      'The "' + e +
                      '" attr must be a function. It is: ' + JSON.stringify(t));
                return a.isCustomAttribute(e) ? a.parse(e, t) :
                    s(e)                      ? i(e, t) :
                                                o(e, t)
              }
              function n(e, n, i) {
                if (n)
                  for (var o in n) {
                    var s = r(o, n[o]);
                    if (s) {
                      var a = s.value;
                      void 0 !== a && i.setAttribute(o, a),
                          s.bindings && t(e, i, s)
                    }
                  }
              }
              var i = e('./attr-event-handler'), o = e('./attr-generic'),
                  s = e('./is-event-handler'), a = e('./custom-attributes'),
                  l = e('./bindings'), c = {
                    onMount: !0,
                    didMount: !0,
                    willUnmount: !0,
                    willUpdate: !0,
                    onUpdate: !0,
                    didUpdate: !0
                  };
              return n
            });
          r('submodules/dcgview/src/bind-text', ['require', './bindings'],
            function(e) {
              function t() {
                i = !0
              }
              function r(e, t, r) {
                if ('function' != typeof r)
                  throw new Error('bindText expects a function');
                var o = r();
                void 0 !== o && null !== o || (o = '');
                var s = document.createTextNode(o);
                if (i) {
                  var a = document.createElement('span');
                  a.appendChild(s), t.appendChild(a)
                } else
                  t.appendChild(s);
                n.add(e, 'onUpdate', function() {
                  var e = r();
                  void 0 !== e && null !== e || (e = ''),
                      o !== e && (s.nodeValue = e, o = e)
                })
              }
              var n = e('./bindings'), i = !1;
              return {
                bindText: r, enableSpanWrapping: t
              }
            });
          r('submodules/dcgview/src/warnings', ['require'], function(e) {
            function t(e) {
              i.push(e)
            }
            function r(e) {
              var t = i;
              i = [];
              for (var r = 0; r < t.length; r++) {
                var n = t[r];
                n !== e && i.push(n)
              }
            }
            function n(e) {
              try {
                throw new Error(e)
              } catch (e) {
                console.warn(e);
                for (var t = 0; t < i.length; t++) i[t](e)
              }
            }
            var i = [];
            return {
              warn: n, addWarningHandler: t, removeWarningHandler: r
            }
          });
          r('submodules/dcgview/src/dcg-element',
            ['require', './bind-attrs', './bind-text', './const', './warnings'],
            function(e) {
              function t(e, t) {
                var r = document.createTextNode(t);
                e.appendChild(r)
              }
              function r(e, t, r) {
                this.tagName = e, this.attrs = t, this.children = r
              }
              var n = e('./bind-attrs'), i = e('./bind-text').bindText,
                  o = e('./const'), s = e('./warnings');
              return r.prototype._isDCGElement = !0,
                     r.prototype.renderToDocFrag = function(e, r) {
                       if (this._domNode)
                         throw new Error('Cannot remount a DCGElement');
                       var a = this.children,
                           l = document.createElement(this.tagName);
                       this._domNode = l, n(r, this.attrs, l), e.appendChild(l);
                       for (var c = a.length, u = 0; u < c; u++) {
                         var d = a[u];
                         d._isDCGElement ?
                             d.renderToDocFrag(l, r) :
                             o.isConst(d) ?
                             t(l, d()) :
                             'function' == typeof d ?
                             i(r, l, d) :
                             (s.warn(
                                  'Text should be a const or a getter: ' +
                                  JSON.stringify(d)),
                              t(l, d))
                       }
                     }, r
            });
          r('submodules/dcgview/src/create-element',
            ['require', './dcg-element'], function(e) {
              function t(e, r) {
                if (null !== e && void 0 !== e)
                  if (Array.isArray(e))
                    for (var n = 0; n < e.length; n++) t(e[n], r);
                  else
                    r.push(e)
              }
              function r(e, r) {
                for (var i = [], o = arguments.length - 1, s = 2; s <= o; s++)
                  t(arguments[s], i);
                if ('string' == typeof e) return new n(e, r, i);
                if (e && e._isDCGViewClass) return new e(r, i);
                throw new Error(
                    'createElement expects a String or DCGViewClass')
              }
              var n = e('./dcg-element');
              return r
            });
          r('submodules/dcgview/src/mounting', ['require', './bindings'],
            function(e) {
              function t() {
                for (var e = this._element; e._isDCGView;) e = e._element;
                return e._domNode
              }
              function r(e, t) {
                if (t && t._childViews.push(this), this.__generatedHTMLBefore)
                  throw new Error('Cannot remount a DCGView');
                this.__generatedHTMLBefore = !0,
                this._element.renderToDocFrag(e, this)
              }
              function n(e, t, r) {
                if (!e || !e._isDCGViewClass)
                  throw new Error('Must pass a DCGView class to be mounted');
                if (!t || 1 !== t.nodeType)
                  throw new Error('Must pass an HTMLElement for the node');
                if (t._mountedDCGView)
                  throw new Error('This node is already mounted by a view');
                var n = new e(r), i = document.createDocumentFragment();
                return n.renderToDocFrag(i), t.innerHTML = '', o(n),
                                             t._mountedDCGView = n,
                                             t.appendChild(i), s(n), a(n), n
              }
              function i(e) {
                var t = e._mountedDCGView;
                if (!t)
                  throw new Error('This node is not mounted by a DCGView');
                l(t), e.innerHTML = '', delete e._mountedDCGView, c(t), u(t)
              }
              function o(e) {
                e.willMount && e.willMount(), p.invoke(e, 'willMount'),
                    e._childViews.forEach(o)
              }
              function s(e) {
                e._isMounted = !0, e.onMount && e.onMount(),
                p.invoke(e, 'onMount'), e._childViews.forEach(s)
              }
              function a(e) {
                e.didMount && e.didMount(), p.invoke(e, 'didMount'),
                    e._childViews.forEach(a)
              }
              function l(e) {
                e.willUnmount && e.willUnmount(), p.invoke(e, 'willUnmount'),
                    e._childViews.forEach(l)
              }
              function c(e) {
                e._isMounted = !1, e._childViews.forEach(c),
                p.invoke(e, 'onUnmount'), e.onUnmount && e.onUnmount()
              }
              function u(e) {
                e._childViews.forEach(u), p.invoke(e, 'didUnmount'),
                    e.didUnmount && e.didUnmount()
              }
              function d(e, t) {
                var r = document.createDocumentFragment();
                return e.renderToDocFrag(r, t), r.firstChild
              }
              var p = e('./bindings');
              return {
                renderToDocFrag: r, findRootNode: t, createNodeForView: d,
                    willMount: o, onMount: s, didMount: a, willUnmount: l,
                    onUnmount: c, didUnmount: u, mountToNode: n,
                    unmountFromNode: i
              }
            });
          r('submodules/dcgview/src/update',
            ['require', './bindings', './warnings'], function(e) {
              function t() {
                if (!this._isMounted)
                  return n.warn(
                      'Trying to update view that is not mounted. Ignoring update.');
                if (!this.shouldUpdate || this.shouldUpdate()) {
                  if (this.willUpdate && this.willUpdate(),
                      r.invoke(this, 'willUpdate'), r.invoke(this, 'onUpdate'),
                      this.onUpdate && this.onUpdate(),
                      this.overrideChildUpdates)
                    this.overrideChildUpdates();
                  else
                    for (var e = this._childViews, t = e.length, i = 0; i < t;
                         i++)
                      e[i].update();
                  r.invoke(this, 'didUpdate'),
                      this.didUpdate && this.didUpdate()
                }
              }
              var r = e('./bindings'), n = e('./warnings');
              return {
                update: t
              }
            });
          r('submodules/dcgview/src/spread', ['require'], function(e) {
            function t(e) {
              var t = arguments.length;
              if (t < 2) return e;
              for (var r = 1; r < t; r++)
                for (var n = arguments[r], i = Object.keys(n), o = i.length,
                         s = 0;
                     s < o; s++) {
                  var a = i[s];
                  e[a] = n[a]
                }
              return e
            }
            return t
          });
          r('submodules/dcgview/src/create-class',
            [
              'require', './create-element', './mounting', './update',
              './const', './spread'
            ],
            function(e) {
              function t(e) {
                if (!e)
                  throw new Error('must pass a spec to DCGView.createClass');
                if ('function' != typeof e.template)
                  throw new Error(
                      'must pass a template function to DCGView.createClass');
                var t = function(e, t) {
                  this._setupProps(e, t), this.init && this.init(),
                      this._callTemplate()
                };
                t.prototype._setupProps =
                    function(e, t) {
                  if (e) {
                    for (var r in e) {
                      var n = e[r];
                      if ('function' != typeof n && void 0 !== n)
                        throw new Error(
                            'The "' + r + '" prop must be a function. It is: ' +
                            JSON.stringify(n))
                    }
                    this.props = e
                  } else
                    this.props = {};
                  this.children = t, this._childViews = [], this._bindings = {}
                },
                t.prototype._callTemplate =
                    function() {
                  if (this._element = this.template(),
                      !this._element || !this._element._isDCGElement)
                    throw new Error('template() must return a DCGElement')
                },
                t.prototype.bindFn =
                    function(e) {
                  return e.bind(this)
                },
                t.prototype.findRootNode = n.findRootNode,
                t.prototype.renderToDocFrag = n.renderToDocFrag,
                t.prototype.const = o.makeConst, t.prototype.spread = s,
                t.prototype.createElement = r, t.prototype.update = i.update;
                for (var a in e)
                  if (e.hasOwnProperty(a)) {
                    if (t.prototype.hasOwnProperty(a))
                      throw new Error('Cannot override the ' + a + '() method');
                    t.prototype[a] = e[a]
                  }
                return t._isDCGViewClass = !0, t.prototype._isDCGView = !0,
                       t.prototype._isDCGElement = !0, t
              }
              var r = e('./create-element'), n = e('./mounting'),
                  i = e('./update'), o = e('./const'), s = e('./spread');
              return t
            });
          r('submodules/dcgview/src/attr-style',
            ['require', './const', './attr'], function(e) {
              function t(e) {
                var t = e(), r = typeof t;
                if ('string' === r) return t;
                if (!r || 'object' !== r)
                  throw new Error(
                      'Unsupported type returned from style getter: ' + r);
                var n = '';
                for (var i in t) {
                  var o = t[i];
                  t.hasOwnProperty(i) && null !== o && void 0 !== o &&
                      (n ? n += ';' + i + ':' + o : n = i + ':' + o)
                }
                return n
              }
              function r(e) {
                var r, o = t(e);
                return n.isConst(e) || (r = {
                         onUpdate: function(r) {
                           var n = t(e);
                           o !== n && (i.update(r, 'style', n), o = n)
                         }
                       }),
                {
                  value: o, bindings: r
                }
              }
              var n = e('./const'), i = e('./attr');
              return r
            });
          r('submodules/dcgview/src/attr-class', ['require', './const'],
            function(e) {
              function t(e) {
                var t = e(), r = typeof t;
                if ('string' === r) return t;
                if (!r || 'object' !== r)
                  throw new Error(
                      'Unsupported type returned from class getter: ' + r);
                var n = '';
                for (var i in t)
                  if (t.hasOwnProperty(i)) {
                    var o = t[i];
                    o && (n ? n += ' ' + i : n = i)
                  }
                return n
              }
              function r(e, t, r) {
                for (var n = [], i = e.className.replace(o, '').split(s),
                         a = t.replace(o, '').split(s), l = {},
                         c = a.length - 1;
                     c >= 0; c--)
                  l[a[c]] = !0;
                var u = i.length;
                for (c = 0; c < u; c++) {
                  var d = i[c];
                  l.hasOwnProperty(d) || n.push(d)
                }
                return r ? n.length ? r + ' ' + n.join(' ') : r : n.join(' ')
              }
              function n(e) {
                var n, o = t(e);
                return i.isConst(e) || (n = {
                         onUpdate: function(n) {
                           var i = t(e);
                           o !== i &&
                               (n.className === o ?
                                    (n.className = i, o = i) :
                                    (n.className = r(n, o, i), o = i))
                         }
                       }),
                {
                  value: o, bindings: n
                }
              }
              var i = e('./const'), o = /^\s+|\s+$/g, s = /\s+/;
              return n
            });
          r('submodules/dcgview/src/attr-lifecycle', ['require', './const'],
            function(e) {
              function t(e) {
                return function(t) {
                  if ('function' != typeof t)
                    throw new Error(
                        'The ' + e +
                        ' attribute expects a function for the value');
                  if (r.isConst(t))
                    throw new Error(
                        'The ' + e +
                        ' attribute does not expect a const for the value');
                  var n = {bindings: {}};
                  return n.bindings[e] = t, n
                }
              }
              var r = e('./const');
              return t
            });
          r('submodules/dcgview/src/longest-subsequence', ['require'],
            function(e) {
              return function(e) {
                var t, r, n = e.length, i = new Array(n), o = new Array(n + 1),
                          s = 0;
                for (r = 0; r < n; r++) {
                  if (e[o[s]] < e[r])
                    t = s + 1;
                  else {
                    for (var a = 1, l = s - 1; a <= l;) {
                      var c = Math.ceil((a + l) / 2);
                      e[o[c]] < e[r] ? a = c + 1 : l = c - 1
                    }
                    t = a
                  }
                  i[r] = o[t - 1], o[t] = r, t > s && (s = t)
                }
                var u = new Array(s), d = o[s];
                for (r = s - 1; r >= 0; r--) u[r] = e[d], d = i[d];
                return u
              }
            });
          r('submodules/dcgview/src/compute-key-mutations',
            ['require', './longest-subsequence'], function(e) {
              function t(e, t) {
                var n, i, o = {}, s = [], a = [];
                for (n = 0; n < t.length; n++) i = t[n], o[i] = n;
                for (n = 0; n < e.length; n++)
                  i = e[n], void 0 === o[i] && s.push(i);
                var l = [];
                for (n = 0; n < e.length; n++) {
                  i = e[n];
                  var c = o[i];
                  void 0 !== c && l.push(c)
                }
                var u = r(l), d = {};
                for (n = 0; n < u.length; n++) i = t[u[n]], d[i] = !0;
                for (n = t.length - 1; n >= 0; n--)
                  i = t[n], d[i] || a.push({key: i, beforeKey: t[n + 1]});
                return {
                  removes: s, inserts: a
                }
              }
              var r = e('./longest-subsequence');
              return t
            });
          r('submodules/dcgview/src/for',
            [
              'require', './create-class', './compute-key-mutations', './const',
              './mounting'
            ],
            function(e) {
              var t = e('./create-class'), r = e('./compute-key-mutations'),
                  n = e('./const'), i = e('./mounting'),
                  o = t({
                    template: function() {
                      return this.children[0]
                    }
                  });
              return t({
                _isDCGFor: !0,
                getKeys: function() {
                  this._keyToItem = {};
                  var e = this.props.each();
                  if (!Array.isArray(e))
                    throw new Error('<For each={}> must return an array');
                  var t = this.props.key ? e.map(this.props.key) : e.slice(0);
                  if (!this._chosenKeyType && t.length &&
                      (this._chosenKeyType = typeof t[0],
                       'string' !== this._chosenKeyType &&
                           'number' !== this._chosenKeyType))
                    throw new Error(
                        'The key: ' + JSON.stringify(t[0]) +
                        ' is not a string or number');
                  for (var r = 0; r < t.length; r++) {
                    var n = t[r];
                    if (typeof n !== this._chosenKeyType)
                      throw new Error(
                          'Keys must be the same type. ' + JSON.stringify(n) +
                          ' is not a ' + this._chosenKeyType);
                    if (n in this._keyToItem)
                      throw new Error(
                          'The key: ' + JSON.stringify(n) + ' is not unique');
                    this._keyToItem[n] = e[r]
                  }
                  return t
                },
                createViewForKey: function(e) {
                  var t = this._keyToItem[e],
                      r = this._viewFunction.call(this, t, e), n = r;
                  return n._isDCGView || (n = this.createElement(o, null, r)),
                         this._keyToView[e] = n, n
                },
                template: function() {
                  if (this._keyToView = {},
                      'function' != typeof this.props.each)
                    throw new Error('<For each={}> must be a function');
                  if (1 !== this.children.length)
                    throw new Error(
                        '<For> expects a single child. You passed ' +
                        this.children.length);
                  var e = this.children[0];
                  if (!e || !e._isDCGElement)
                    throw new Error(
                        '<For> expects the root node to be a DCGElement. You passed ' +
                        JSON.stringify(e));
                  if (e._isDCGView)
                    throw new Error(
                        '<For> expects the root node to not be a DCGView. Pass in something like <div> or <span>');
                  if (1 !== e.children.length)
                    throw new Error(
                        '<For> expects a root node with a single child. You passed ' +
                        e.children.length);
                  if (this._viewFunction = e.children[0],
                      this._viewFunction && this._viewFunction._isDCGElement)
                    throw new Error(
                        '<For> expects a function that constructs a DCGElement. You passed a DCGElement directly');
                  if ('function' != typeof this._viewFunction) {
                    var t = JSON.stringify(this._viewFunction);
                    throw new Error(
                        '<For> expects a function that constructs a DCGElement. You passed ' +
                        t)
                  }
                  if (n.isConst(this._viewFunction))
                    throw new Error(
                        '<For> expects a function that constructs a DCGElement. You passed a constant');
                  this._keys = this.getKeys();
                  for (var r = [], i = 0; i < this._keys.length; i++) {
                    var o = this._keys[i];
                    r.push(this.createViewForKey(o))
                  }
                  return e.children = r, e
                },
                detachAllRemovedViews: function() {
                  for (var e, t = this._childViews, r = 0, n = t.length, i = 0;
                       i < n; i++)
                    e = t[i], e._will_be_unmounted_ ? r++ : t[i - r] = e;
                  t.splice(n - r, r)
                },
                overrideChildUpdates: function() {
                  var e = this._keys, t = this.getKeys();
                  this._keys = t;
                  var n, o, s, a, l, c, u = this.findRootNode(), d = r(e, t),
                                        p = [];
                  for (n = d.removes.length - 1; n >= 0; n--)
                    c = d.removes[n], p.push(this._keyToView[c]);
                  for (p.forEach(i.willUnmount), n = 0; n < d.removes.length;
                       n++)
                    c = d.removes[n], o = this._keyToView[c],
                    delete this._keyToView[c], o._will_be_unmounted_ = !0,
                    u.removeChild(o.findRootNode());
                  p.length > 0 && this.detachAllRemovedViews(),
                      p.forEach(i.onUnmount), p.forEach(i.didUnmount);
                  var h = [];
                  for (n = d.inserts.length - 1; n >= 0; n--)
                    (c = d.inserts[n].key) in this._keyToView ||
                        (o = this.createViewForKey(c), h.push(o),
                         i.createNodeForView(o, this));
                  for (h.forEach(i.willMount), n = 0; n < d.inserts.length; n++)
                    l = d.inserts[n], s = this._keyToView[l.key].findRootNode(),
                    a = void 0 !== l.beforeKey ?
                        this._keyToView[l.beforeKey].findRootNode() :
                        null,
                    u.insertBefore(s, a);
                  h.forEach(i.onMount), h.forEach(i.didMount);
                  var f = this._childViews, g = f.length - h.length;
                  for (n = 0; n < g; n++) f[n].update()
                }
              })
            });
          r('submodules/dcgview/src/switch',
            ['require', './create-class', './const', './mounting'],
            function(e) {
              var t = e('./create-class'), r = e('./const'),
                  n = e('./mounting'), i = t({
                                         template: function() {
                                           return this.children[0]
                                         }
                                       });
              return t({
                _isDCGSwitch: !0,
                updateKey: function() {
                  this._key = this.props.key()
                },
                createView: function() {
                  var e = this._viewFunction(this._key);
                  return null !== e && void 0 !== e ||
                             (e = this.createElement(
                                  'div', {style: this.const('display: none')})),
                         this.createElement(i, null, e)
                },
                template: function() {
                  if (this._key = void 0, 'function' != typeof this.props.key)
                    throw new Error('<Switch key={}> must be a function');
                  if (1 !== this.children.length)
                    throw new Error(
                        '<Switch> expects a single child. You passed ' +
                        this.children.length);
                  if (this._viewFunction = this.children[0],
                      this._viewFunction && this._viewFunction._isDCGElement)
                    throw new Error(
                        '<Switch> expects a function that constructs a DCGElement. You passed a DCGElement directly');
                  if ('function' != typeof this._viewFunction) {
                    var e = JSON.stringify(this._viewFunction);
                    throw new Error(
                        '<Switch> expects a function that constructs a DCGElement. You passed ' +
                        e)
                  }
                  if (r.isConst(this._viewFunction))
                    throw new Error(
                        '<Switch> expects a function that constructs a DCGElement. You passed a constant');
                  return this.updateKey(), this.createView()
                },
                overrideChildUpdates: function() {
                  var e = this._key;
                  if (this.updateKey(), e === this._key)
                    this._element.update();
                  else {
                    var t = this.findRootNode(),
                        r = document.createTextNode('');
                    t.parentNode.insertBefore(r, t),
                        n.willUnmount(this._element),
                        this._childViews = [], t.parentNode.removeChild(t),
                        n.onUnmount(this._element), n.didUnmount(this._element),
                        this._element = this.createView();
                    var i = n.createNodeForView(this._element, this);
                    n.willMount(this._element), r.parentNode.insertBefore(i, r),
                        r.parentNode.removeChild(r), n.onMount(this._element),
                        n.didMount(this._element)
                  }
                }
              })
            });
          r('submodules/dcgview/src/switch-union',
            ['require', './create-class', './mounting', './create-element'],
            function(e) {
              function t(e, t, r) {
                return o(a, {
                  getCase: function() {
                    var r = t();
                    return e ? r && r[e] : r
                  },
                  buildChildView: function(e) {
                    var n = r[e];
                    if (n) return n(t)
                  }
                })
              }
              function r(e, r) {
                return 'string' == typeof e ? t.bind(this, e, r) :
                                              t(void 0, e, r)
              }
              var n = e('./create-class'), i = e('./mounting'),
                  o = e('./create-element'), s = n({
                                               template: function() {
                                                 return this.children[0]
                                               }
                                             }),
                  a = n({
                    _isDCGSwitchUnion: !0,
                    updateCase: function() {
                      this._case = this.props.getCase()
                    },
                    createView: function() {
                      var e = this.props.buildChildView(this._case);
                      return null !== e && void 0 !== e ||
                                 (e = this.createElement(
                                      'div',
                                      {style: this.const('display: none')})),
                             this.createElement(s, null, e)
                    },
                    template: function() {
                      return this._case = void 0, this.updateCase(),
                             this.createView()
                    },
                    overrideChildUpdates: function() {
                      var e = this._case;
                      if (this.updateCase(), e === this._case)
                        this._element.update();
                      else {
                        var t = this.findRootNode(),
                            r = document.createTextNode('');
                        t.parentNode.insertBefore(r, t),
                            i.willUnmount(this._element),
                            this._childViews = [], t.parentNode.removeChild(t),
                            i.onUnmount(this._element),
                            i.didUnmount(this._element),
                            this._element = this.createView();
                        var n = i.createNodeForView(this._element, this);
                        i.willMount(this._element),
                            r.parentNode.insertBefore(n, r),
                            r.parentNode.removeChild(r),
                            i.onMount(this._element), i.didMount(this._element)
                      }
                    }
                  });
              return r
            });
          r('submodules/dcgview/src/if',
            ['require', './create-class', './const', './switch'], function(e) {
              var t = e('./create-class'), r = e('./const'), n = e('./switch');
              return t({
                _isDCGIf: !0,
                template: function() {
                  if ('function' != typeof this.props.predicate)
                    throw new Error('<If predicate={}> must be a function');
                  if (1 !== this.children.length)
                    throw new Error(
                        '<If> expects a single child. You passed ' +
                        this.children.length);
                  if (this._viewFunction = this.children[0],
                      this._viewFunction && this._viewFunction._isDCGElement)
                    throw new Error(
                        '<If> expects a function that constructs a DCGElement. You passed a DCGElement directly');
                  if ('function' != typeof this._viewFunction) {
                    var e = JSON.stringify(this._viewFunction);
                    throw new Error(
                        '<If> expects a function that constructs a DCGElement. You passed ' +
                        e)
                  }
                  if (r.isConst(this._viewFunction))
                    throw new Error(
                        '<If> expects a function that constructs a DCGElement. You passed a constant');
                  var t = function() {
                    return !!this.props.predicate()
                  }.bind(this), i = function(e) {
                    if (e) return this._viewFunction()
                  }.bind(this);
                  return this.createElement(n, {key: t}, i)
                }
              })
            });
          r('submodules/dcgview/src/if-defined',
            ['require', './create-class', './mounting', './create-element'],
            function(e) {
              function t(e, t) {
                return i(s, {
                  isDefined: function() {
                    return null != e()
                  },
                  buildChildView: function() {
                    return t(e)
                  }
                })
              }
              var r = e('./create-class'), n = e('./mounting'),
                  i = e('./create-element'), o = r({
                                               template: function() {
                                                 return this.children[0]
                                               }
                                             }),
                  s = r({
                    _isDCGIfDefined: !0,
                    updateIsDefined: function() {
                      this._isDefined = this.props.isDefined()
                    },
                    createView: function() {
                      var e;
                      return this._isDefined &&
                                 (e = this.props.buildChildView()),
                             null !== e && void 0 !== e ||
                                 (e = this.createElement(
                                      'div',
                                      {style: this.const('display: none')})),
                             this.createElement(o, null, e)
                    },
                    template: function() {
                      return this._isDefined = void 0, this.updateIsDefined(),
                             this.createView()
                    },
                    overrideChildUpdates: function() {
                      var e = this._isDefined;
                      if (this.updateIsDefined(), e === this._isDefined)
                        this._element.update();
                      else {
                        var t = this.findRootNode(),
                            r = document.createTextNode('');
                        t.parentNode.insertBefore(r, t),
                            n.willUnmount(this._element),
                            this._childViews = [], t.parentNode.removeChild(t),
                            n.onUnmount(this._element),
                            n.didUnmount(this._element),
                            this._element = this.createView();
                        var i = n.createNodeForView(this._element, this);
                        n.willMount(this._element),
                            r.parentNode.insertBefore(i, r),
                            r.parentNode.removeChild(r),
                            n.onMount(this._element), n.didMount(this._element)
                      }
                    }
                  });
              return t
            });
          r('submodules/dcgview/src/if-else', ['require', './switch-union'],
            function(e) {
              function t(e, t) {
                return r(function() {
                  return e() ? 'true' : 'false'
                }, t)
              }
              var r = e('./switch-union');
              return t
            });
          r('submodules/dcgview/src/textarea',
            ['require', './create-class', './spread'], function(e) {
              var t = e('./create-class'), r = e('./spread');
              return t({
                computeValue: function() {
                  var e = this.props.value();
                  return null === e || void 0 === e ? '' : e + ''
                },
                template: function() {
                  if (!this.props.value)
                    throw new Error('<Textarea> expects a "value={}" prop');
                  if (!this.props.onInput)
                    throw new Error('<Textarea> expects an "onInput={}" prop');
                  var e = r({}, this.props, {
                    onInput: function(e) {
                      this.props.onInput(e.target.value),
                          this._isMounted && this.update()
                    }.bind(this)
                  });
                  return this.props.disabled &&
                             (e.disabled =
                                  function() {
                                    return !!this.props.disabled() || void 0
                                  }.bind(this)),
                         delete e.value,
                         this.createElement(
                             'textarea', e, this.const(this.computeValue()))
                },
                didUpdate: function() {
                  this.rootDOM || (this.rootDOM = this.findRootNode());
                  var e = this.computeValue();
                  this.rootDOM.value !== e && (this.rootDOM.value = e)
                }
              })
            });
          r('submodules/dcgview/src/input',
            ['require', './create-class', './spread'], function(e) {
              var t = e('./create-class'), r = e('./spread');
              return t({
                computeValue: function() {
                  var e = this.props.value();
                  return null === e || void 0 === e ? '' : e + ''
                },
                template: function() {
                  if (!this.props.value)
                    throw new Error('<Input> expects a "value={}" prop');
                  if (!this.props.onInput)
                    throw new Error('<Input> expects an "onInput={}" prop');
                  var e = r({}, this.props, {
                    value: this.const(this.computeValue()),
                    onInput: function(e) {
                      this.props.onInput(e.target.value),
                          this._isMounted && this.update()
                    }.bind(this)
                  });
                  return this.props.disabled &&
                             (e.disabled =
                                  function() {
                                    return !!this.props.disabled() || void 0
                                  }.bind(this)),
                         e.hasOwnProperty('tabindex') ||
                             (e.tabindex =
                                  function() {
                                    return this.props.disabled &&
                                            this.props.disabled() ?
                                        '-1' :
                                        '0'
                                  }.bind(this)),
                         this.createElement('input', e)
                },
                didUpdate: function() {
                  this.rootDOM || (this.rootDOM = this.findRootNode());
                  var e = this.computeValue();
                  this.rootDOM.value !== e && (this.rootDOM.value = e)
                }
              })
            });
          r('submodules/dcgview/src/checkbox',
            ['require', './create-class', './spread'], function(e) {
              var t = e('./create-class'), r = e('./spread');
              return t({
                computeChecked: function() {
                  return !!this.props.checked()
                },
                template: function() {
                  if (!this.props.checked)
                    throw new Error('<Checkbox> expects a "checked={}" prop');
                  if (!this.props.onChange)
                    throw new Error('<Checkbox> expects an "onChange={}" prop');
                  var e = r({}, this.props, {
                    type: this.const('checkbox'),
                    checked:
                        this.const(this.computeChecked() ? 'checked' : void 0),
                    onChange: function(e) {
                      this.props.onChange(e.target.checked),
                          this._isMounted && this.update()
                    }.bind(this)
                  });
                  return this.createElement('input', e)
                },
                didUpdate: function() {
                  this.rootDOM || (this.rootDOM = this.findRootNode());
                  var e = this.computeChecked();
                  this.rootDOM.checked !== e && (this.rootDOM.checked = e)
                }
              })
            });
          r('submodules/dcgview/src/components',
            [
              'require', './for', './switch', './switch-union', './if',
              './if-defined', './if-else', './textarea', './input', './checkbox'
            ],
            function(e) {
              return {
                For: e('./for'), Switch: e('./switch'),
                    SwitchUnion: e('./switch-union'), If: e('./if'),
                    IfDefined: e('./if-defined'), IfElse: e('./if-else'),
                    Textarea: e('./textarea'), Input: e('./input'),
                    Checkbox: e('./checkbox')
              }
            });
          r('submodules/dcgview/src/class', ['require', './create-class'],
            function(e) {
              return e('./create-class')({template: function() {}})
            });
          r('submodules/dcgview/src/dcg-view',
            [
              'require', './create-element', './create-class', './mounting',
              './spread', './const', './custom-attributes', './attr-style',
              './attr-class', './attr-lifecycle', './components', './warnings',
              './bind-text', './class'
            ],
            function(e) {
              var t = e('./create-element'), r = e('./create-class'),
                  n = e('./mounting'), i = e('./spread'), o = e('./const'),
                  s = e('./custom-attributes'), a = e('./attr-style'),
                  l = e('./attr-class'), c = e('./attr-lifecycle'),
                  u = e('./components'), d = e('./warnings'),
                  p = e('./bind-text').enableSpanWrapping, h = e('./class'),
                  f = {
                    createElement: t,
                    createClass: r,
                    mountToNode: n.mountToNode,
                    unmountFromNode: n.unmountFromNode,
                    spread: i,
                    const : o.makeConst,
                    isConst: o.isConst,
                    addCustomAttribute: s.add,
                    Components: u,
                    addWarningHandler: d.addWarningHandler,
                    removeWarningHandler: d.removeWarningHandler,
                    enableSpanWrapping: p,
                    Class: h
                  };
              return f.addCustomAttribute('style', a),
                     f.addCustomAttribute('class', l),
                     f.addCustomAttribute('willMount', c('willMount')),
                     f.addCustomAttribute('onMount', c('onMount')),
                     f.addCustomAttribute('didMount', c('didMount')),
                     f.addCustomAttribute('willUnmount', c('willUnmount')),
                     f.addCustomAttribute('onUnmount', c('onUnmount')),
                     f.addCustomAttribute('didUnmount', c('didUnmount')),
                     f.addCustomAttribute('willUpdate', c('willUpdate')),
                     f.addCustomAttribute('onUpdate', c('onUpdate')),
                     f.addCustomAttribute('didUpdate', c('didUpdate')), f
            });
          r('submodules/dcgview/dcgview', ['require', './src/dcg-view'],
            function(e) {
              return e('./src/dcg-view')
            });
          r('lib/urlparser', ['require', 'exports'], function(e, t) {
            'use strict';
            function r(e, t) {
              var r = new RegExp('[?|&]' + t + '=([^&;]+?)(&|#|;|$)'),
                  n = r.exec(e);
              return n ? decodeURIComponent(n[1].replace(/\+/g, '%20')) : null
            }
            function n(e, t) {
              return new RegExp('[?|&]' + t + '(=|&|;|$)').test(e)
            }
            function i(e, t, r) {
              if (t !== encodeURIComponent(t))
                throw new Error(
                    'Programming error: parameter name should be URL-safe without encoding.');
              var n = encodeURIComponent(r);
              return e.length ?
                  /\?/.test(e) ? e + '&' + t + '=' + n : e + '?' + t + '=' + n :
                  '?' + t + '=' + n
            }
            function o(e, t, r) {
              var n = new RegExp('([?|&])' + t + '=([^&;]+?)(&|#|;|$)'),
                  i = n.exec(e);
              if (!i) return e;
              var o = i[1], s = i[2], a = '' + o + t + '=' + s,
                  l = encodeURIComponent(r), c = '' + o + t + '=' + l;
              return e.replace(a, c)
            }
            function s(e, t) {
              var r = new RegExp('([?|&])' + t + '=([^&;]+?)(&|#|;|$)'),
                  n = r.exec(e);
              if (!n) return e;
              var i = n[1], o = n[2], s = '' + i + t + '=' + o,
                  a = e.replace(s, '');
              return '&' === a[0] ? a.replace('&', '?') : a
            }
            function a(e, t, r) {
              return n(e, t) ? o(e, t, r) : i(e, t, r)
            }
            Object.defineProperty(t, '__esModule', {value: !0}),
                t.getParameter = r, t.hasParameter = n, t.pushParameter = i,
                t.replaceParameter = o, t.deleteParameter = s,
                t.setParameter = a
          });
          r('lib/retain-lang',
            ['require', 'exports', './parse-query-params', './urlparser'],
            function(e, t, r, n) {
              'use strict';
              function i(e) {
                var t = l.exec(e);
                if (t) {
                  var r = t[1];
                  return !c.test(r)
                }
                return !1
              }
              function o(e, t) {
                var o = '';
                if (void 0 !== t)
                  o = t;
                else {
                  var l = r.getQueryParams();
                  o = l.lang ? '' + l.lang : ''
                }
                return '' === e || '' === o || s.test(e) || a.test(e) || i(e) ?
                    e :
                    n.setParameter(e, 'lang', o)
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var s = /lang=[A-Za-z]+/, a = /(cl|learn|support).desmos.com/,
                  l = /^(?:https?:)?(?:\/\/)?([^\s\/\?]+)/i,
                  c = /(^desmos\.com$)|(\.desmos.com$)/;
              t.domainNotDesmos = i, t.retainLang = o
            });
          r('loadcss!dcgview-shim', function() {});
          (function() {
            r('dcgview',
              [
                'require', 'jquery', 'underscore', 'submodules/dcgview/dcgview',
                'bugsnag', 'lib/retain-lang', 'loadcss!dcgview-shim'
              ],
              function(e) {
                var t, r, n, i, o, s;
                return t = e('jquery'), i = e('underscore'),
                       n = e('submodules/dcgview/dcgview'), r = e('bugsnag'),
                       o = e('lib/retain-lang').retainLang,
                       e('loadcss!dcgview-shim'),
                       n.addWarningHandler(function(e) {
                         return r.notify(e)
                       }),
                       s = [], n.onUrlChange = function(e) {
                         return s.push(e)
                       }, n.addCustomAttribute('href', function(e) {
                         var r, n;
                         return r = o(e()), n = {
                           value: '' + o(e()),
                           bindings: {
                             onMount: function(r) {
                               var n;
                               if (!t(r).is('a') && !t(r).is('use'))
                                 throw new Error(
                                     'Cannot have an href on a non-link element.');
                               return n = !1, t(r).on('dcg-tap', function(t) {
                                 var r;
                                 if (!t.metaKey &&
                                     (n = !1, r = o(e()),
                                      i.any(s.map(function(e) {
                                        return e(r, t)
                                      }))))
                                   return n = !0
                               }), t(r).on('click', function(e) {
                                 if (n) return n = !1, e.preventDefault()
                               })
                             }
                           }
                         },
                                n.bindings.onUpdate = function(t) {
                                  var n;
                                  if (n = o(e()), r !== n)
                                    return r = n, t.setAttribute('href', n)
                                }, n
                       }), n.addCustomAttribute('onTap', function(e) {
                         return {
                           value: '', bindings: {
                             onMount:
                                 function(r) {
                                   return t(r).on('dcg-tap', e)
                                 }
                           }
                         }
                       }), n.addCustomAttribute('ignoreRealClick', function(e) {
                         return {
                           bindings: {
                             onMount:
                                 function(r) {
                                   return t(r).on('click', function(t) {
                                     if (e()) return t.preventDefault()
                                   })
                                 }
                           }
                         }
                       }), n.addCustomAttribute('onTapStart', function(e) {
                         return {
                           bindings: {
                             onMount:
                                 function(r) {
                                   return t(r).on('dcg-tapstart', e)
                                 }
                           }
                         }
                       }), n.addCustomAttribute('onTapMove', function(e) {
                         return {
                           bindings: {
                             onMount:
                                 function(r) {
                                   return t(r).on('dcg-tapmove', e)
                                 }
                           }
                         }
                       }), n.addCustomAttribute('onTapEnd', function(e) {
                         return {
                           bindings: {
                             onMount:
                                 function(r) {
                                   return t(r).on('dcg-tapend', e)
                                 }
                           }
                         }
                       }), n.addCustomAttribute('onLongHold', function(e) {
                         return {
                           bindings: {
                             onMount:
                                 function(r) {
                                   return t(r).on('dcg-longhold', e)
                                 }
                           }
                         }
                       }), n.addCustomAttribute('manageFocus', function(e) {
                         return void 0 === e() ? {} : {
                           bindings: {
                             onMount: function(t) {
                               return e().shouldBeFocused() && t.focus(),
                                      t.onfocus = function(t) {
                                        if (!e().shouldBeFocused())
                                          return e().onFocusedChanged(!0, t)
                                      }, t.onblur = function(t) {
                                        if (e().shouldBeFocused())
                                          return e().onFocusedChanged(!1, t)
                                      }
                             },
                             onUpdate: function(t) {
                               var r, n;
                               return n = e().shouldBeFocused(),
                                      r = document.activeElement === t,
                                      n && !r     ? t.focus() :
                                          r && !n ? t.blur() :
                                                    void 0
                             },
                             willUnmount: function(e) {
                               return delete e.onfocus, delete e.onblur
                             }
                           }
                         }
                       }), n
              })
          })(this);
          r('expressions/braille-input',
            ['require', 'exports', 'tslib', 'dcgview', 'jquery'],
            function(e, t, r, n, i) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var o = n.Components.Input, s = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.ASCIICharacters =
                      ' A1B\'K2L@CIF/MSP"E3H9O6R^DJG>NTQ,*5<-U8V.%[$+X!&;:4\\0Z7(_?W]#Y)=',
                  this.ASCIITable = [], this.HomeRowCharacters = 'FDSJKL',
                  this.charCodes = [],
                  this.sixKeyModel = {keysDown: 0, stickyKeysDown: 0};
                  var e;
                  for (e = 0; e < this.ASCIICharacters.length; e++)
                    this.ASCIITable.push(this.ASCIICharacters.charCodeAt(e));
                  for (e = 0; e < this.HomeRowCharacters.length; e++)
                    this.charCodes.push(this.HomeRowCharacters.charCodeAt(e))
                }, t.prototype.template = function() {
                  var e = this;
                  return n.createElement(o, {
                    class: this.const('dcg-braille-input dcg-do-blur'),
                    tabindex: function() {
                      return e.props.tabindex ? e.props.tabindex() : 0
                    },
                    readonly: function() {
                      return e.props.isStatic() ? 'true' : void 0
                    },
                    autocomplete: this.const('off'),
                    autocorrect: this.const('off'),
                    autocapitalize: this.const('off'),
                    spellcheck: this.const('false'),
                    onKeydown: this.bindFn(this.onKeydown),
                    onKeyup: this.bindFn(this.onKeyup),
                    onInput: this.bindFn(this.props.onInput),
                    value: function() {
                      return e.props.value()
                    },
                    'aria-label': function() {
                      return e.props.ariaLabel() || ''
                    },
                    didMount: this.bindFn(this.didMount),
                    didUnmount: this.bindFn(this.props.didUnmount),
                    placeholder: function() {
                      return e.props.placeholder ? e.props.placeholder() : ''
                    }
                  })
                }, t.prototype.didMount = function(e) {
                  var t = this;
                  this.rootNode = e,
                  i(this.rootNode)
                      .on('focus',
                          function(e) {
                            !0 !== t.props.shouldFocus() &&
                                t.props.onFocusedChanged(!0, e.originalEvent)
                          })
                      .on('blur',
                          function(e) {
                            !1 !== t.props.shouldFocus() &&
                                t.props.onFocusedChanged(!1, e.originalEvent)
                          }),
                  this.props.didMount(e), this.updateFocus()
                }, t.prototype.didUpdate = function() {
                  this.updateFocus()
                }, t.prototype.updateFocus = function() {
                  this.rootNode &&
                      (this.props.shouldFocus() &&
                           document.activeElement !== this.rootNode &&
                           this.rootNode.focus(),
                       this.props.shouldFocus() ||
                           document.activeElement !== this.rootNode ||
                           this.rootNode.blur())
                }, t.prototype.onKeydown = function(e) {
                  var t = this.charCodes.indexOf(e.which);
                  this.props.isStatic() || !this.isSixKeyInput() || e.altKey ||
                          e.ctrlKey || e.metaKey || e.shiftKey || -1 === t ?
                      this.props.onKeydown && this.props.onKeydown(e) :
                      (this.sixKeyModel =
                           r.__assign(r.__assign({}, this.sixKeyModel), {
                             keysDown:
                                 this.addKey(this.sixKeyModel.keysDown, t),
                             stickyKeysDown:
                                 this.addKey(this.sixKeyModel.stickyKeysDown, t)
                           }),
                       e.preventDefault())
                }, t.prototype.onKeyup = function(e) {
                  var t = this.charCodes.indexOf(e.which), n = !1;
                  return this.props.isStatic() || !this.isSixKeyInput() ||
                                 e.altKey || e.ctrlKey || e.metaKey ||
                                 e.shiftKey || -1 === t ?
                             n = !0 :
                             (this.sixKeyModel =
                                  r.__assign(r.__assign({}, this.sixKeyModel), {
                                    keysDown: this.removeKey(
                                        this.sixKeyModel.keysDown, t)
                                  }),
                              0 === this.sixKeyModel.keysDown &&
                                  (this.addCharacter(this.bitsToASCII(
                                       this.sixKeyModel.stickyKeysDown)),
                                   this.sixKeyModel = r.__assign(
                                       r.__assign({}, this.sixKeyModel),
                                       {stickyKeysDown: 0}))),
                             n || e.preventDefault(), n
                }, t.prototype.addKey = function(e, t) {
                  return e | 1 << t
                }, t.prototype.removeKey = function(e, t) {
                  return e & ~(1 << t)
                }, t.prototype.bitsToASCII = function(e) {
                  return String.fromCharCode(this.ASCIITable[e])
                }, t.prototype.addCharacter = function(e) {
                  this.rootNode && !this.props.isStatic() &&
                      (this.rootNode.setRangeText(
                           e, this.rootNode.selectionStart,
                           this.rootNode.selectionEnd, 'end'),
                       this.props.onInput(this.rootNode.value))
                }, t.prototype.isSixKeyInput = function() {
                  return 'function' == typeof this.props.sixKeyInput &&
                      this.props.sixKeyInput()
                }, t
              }(n.Class);
              t.default = s
            });
          r('vendor/mathquill',
            ['require', 'exports', 'toplevel/mathquill', 'mathquill'],
            function(e, t, r, n) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.MQ = r.getInterface(1).config(n)
            });
          r('loadcss!dcgview-helpers/static-mathquill-view', function() {});
          r('dcgview-helpers/static-mathquill-view',
            [
              'require', 'exports', 'tslib', 'dcgview', 'vendor/mathquill',
              'jquery', 'lib/conditional_blur',
              'loadcss!./static-mathquill-view'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return 1 === this.children.length ?
                      this.children[0] :
                      n.createElement('div', {
                        didMount: function(t) {
                          return e.didMountMathquill(t)
                        }
                      })
                }, t.prototype.didMount = function() {
                  1 === this.children.length &&
                      this.didMountMathquill(this.findRootNode())
                }, t.prototype.didMountMathquill = function(e) {
                  this.staticMath = i.MQ.StaticMath(e),
                  o(e).off('.mathquill')
                      .addClass('dcg-static-mathquill-view')
                      .on('dcg-tapstart',
                          function() {
                            s.default()
                          }),
                  this.updateMathquill()
                }, t.prototype.didUpdate = function() {
                  this.updateMathquill()
                }, t.prototype.updateMathquill = function() {
                  this.updateMathquillAria(), this.updateMathquillLatex()
                }, t.prototype.updateMathquillLatex = function() {
                  if (this.staticMath) {
                    var e = this.props.latex();
                    this.lastLatex !== e &&
                        (this.staticMath.latex(e), this.lastLatex = e,
                         this.props.onReflow && this.props.onReflow())
                  }
                }, t.prototype.updateMathquillAria = function() {
                  if (this.staticMath && this.props.getAriaLabel) {
                    var e = this.props.getAriaLabel();
                    e !== this.staticMath.getAriaLabel() &&
                        this.staticMath.setAriaLabel(e)
                  }
                }, t
              }(n.Class);
              t.default = a
            });
          r('loadcss!lib/tooltip', function() {});
          r('lib/tooltip',
            [
              'require', 'exports', 'tslib', 'keys', 'dcgview', 'jquery',
              'underscore', 'dcgview-helpers/static-mathquill-view',
              'loadcss!./tooltip'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = i.Components.IfElse, c = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return i.createElement(
                      'div', {
                        class: function() {
                          var t;
                          return t = {}, t[e.getCustomClassName()] = !0,
                                 t['dcg-tooltip-positioning-container'] = !0,
                                 t['dcg-latex-tooltip-positioning-container'] =
                                     e.props.renderAsLatex(),
                                 t['dcg-tooltip-gravity-ne-se'] =
                                     'ne' === e.props.gravity() ||
                                     'se' === e.props.gravity(),
                                 t['dcg-tooltip-gravity-nw-sw'] =
                                     'nw' === e.props.gravity() ||
                                     'sw' === e.props.gravity(),
                                 t['dcg-tooltip-gravity-n-s'] =
                                     'n' === e.props.gravity() ||
                                     's' === e.props.gravity(),
                                 t['dcg-tooltip-gravity-e-w'] =
                                     'e' === e.props.gravity() ||
                                     'w' === e.props.gravity(),
                                 t
                        },
                        style: function() {
                          return {
                            top: e.props.hitAreaRect().top +
                                (e.props.offset().top || 0) + 'px',
                                left: e.props.hitAreaRect().left +
                                (e.props.offset().left || 0) + 'px',
                                width: e.props.hitAreaRect().width + 'px',
                                height: e.props.hitAreaRect().height + 'px'
                          }
                        }
                      },
                      i.createElement(
                          'div', {
                            class: i.const('dcg-tooltip-message-container'),
                            style: this.bindFn(this.getMessageStyle)
                          },
                          l(
                              function() {
                                return e.props.renderAsLatex()
                              },
                              {
                                true: function() {
                                  return i.createElement(
                                      'div', {
                                        class: function() {
                                          return {
                                            'dcg-tooltip-message': !0,
                                                'dcg-latex': !0,
                                                'dcg-sticky-not-stuck': e.props
                                                    .isStickyAndNotStuck(),
                                                'dcg-tooltip-overflow':
                                                    e.messageOverflows()
                                          }
                                        },
                                        style: function() {
                                          return {
                                            'max-width': e.getMaxWidth() + 'px'
                                          }
                                        },
                                        didMount: function(t) {
                                          e.tooltipMessage = t
                                        }
                                      },
                                      i.createElement(a.default, {
                                        latex: function() {
                                          return e.props.tooltip()
                                        }
                                      }))
                                },
                                false: function() {
                                  return i.createElement(
                                      'div', {
                                        class: i.const('dcg-tooltip-message'),
                                        style: function() {
                                          return {
                                            background: e.getBackgroundColor(),
                                                cursor: e.props
                                                    .isStickyAndNotStuck() ?
                                                'pointer' :
                                                'default'
                                          }
                                        }
                                      },
                                      e.props.tooltip)
                                }
                              })),
                      i.createElement('div', {
                        class: i.const('dcg-tooltip-arrow'),
                        style: function() {
                          return e.props.renderAsLatex() ?
                              e.getArrowWithBorderStyle() :
                              e.getSolidArrowStyle()
                        }
                      }))
                }, t.prototype.getCustomClassName = function() {
                  return this.props.class ? this.props.class() : ''
                }, t.prototype.messageOverflows = function() {
                  return this.tooltipMessage &&
                      this.tooltipMessage.getBoundingClientRect().width >=
                      this.getMaxWidth()
                }, t.prototype.getArrowWithBorderStyle = function() {
                  var e = this.props.gravity(), t = this.getBackgroundColor(),
                      n = this.props.isStickyAndNotStuck() ? '.95' : '1', i = {
                        width: '8px',
                        height: '8px',
                        border: '1px solid #bbb',
                        background: t,
                        opacity: n
                      };
                  switch (e) {
                    case 's':
                      return r.__assign(r.__assign({}, i), {
                        top: '100%',
                        left: '50%',
                        'margin-top': '1px',
                        'border-right': '0',
                        'border-bottom': '0'
                      });
                    case 'sw':
                      return r.__assign(r.__assign({}, i), {
                        top: '100%',
                        right: '10px',
                        'margin-top': '1px',
                        'border-right': '0',
                        'border-bottom': '0'
                      });
                    case 'se':
                      return r.__assign(r.__assign({}, i), {
                        top: '100%',
                        left: '10px',
                        'margin-top': '1px',
                        'border-right': '0',
                        'border-bottom': '0'
                      });
                    case 'n':
                      return r.__assign(r.__assign({}, i), {
                        bottom: '100%',
                        left: '50%',
                        'margin-bottom': '1px',
                        'border-left': '0',
                        'border-top': '0'
                      });
                    case 'nw':
                      return r.__assign(r.__assign({}, i), {
                        bottom: '100%',
                        right: '10px',
                        'margin-bottom': '1px',
                        'border-left': '0',
                        'border-top': '0'
                      });
                    case 'ne':
                      return r.__assign(r.__assign({}, i), {
                        bottom: '100%',
                        left: '10px',
                        'margin-bottom': '1px',
                        'border-left': '0',
                        'border-top': '0'
                      });
                    case 'e':
                      return r.__assign(r.__assign({}, i), {
                        top: '50%',
                        left: '100%',
                        'margin-left': '1px',
                        'border-right': '0',
                        'border-top': '0'
                      });
                    case 'w':
                      return r.__assign(r.__assign({}, i), {
                        top: '50%',
                        right: '100%',
                        'margin-right': '1px',
                        'border-left': '0',
                        'border-bottom': '0'
                      });
                    default:
                      return e
                  }
                }, t.prototype.getSolidArrowStyle = function() {
                  var e = this.props.gravity(), t = this.getBackgroundColor(),
                      r = 'transparent transparent ' + t + ' transparent',
                      n = t + ' transparent transparent transparent',
                      i = 'transparent ' + t + ' transparent transparent',
                      o = 'transparent transparent transparent ' + t;
                  switch (e) {
                    case 's':
                      return {
                        top: '100%',
                        left: '50%',
                        border: '5px solid transparent',
                        'border-color': r,
                        'margin-top': '-5px',
                        'margin-left': '-5px'
                      };
                    case 'sw':
                      return {
                        top: '100%',
                        right: '10px',
                        border: '5px solid transparent',
                        'border-color': r,
                        'margin-top': '-5px',
                        'margin-left': '-5px'
                      };
                    case 'se':
                      return {
                        top: '100%',
                        left: '10px',
                        border: '5px solid transparent',
                        'border-color': r,
                        'margin-top': '-5px',
                        'margin-left': '-5px'
                      };
                    case 'n':
                      return {
                        bottom: '100%',
                        left: '50%',
                        border: '5px solid transparent',
                        'border-color': n,
                        'margin-bottom': '-5px',
                        'margin-left': '-5px'
                      };
                    case 'nw':
                      return {
                        bottom: '100%',
                        right: '10px',
                        border: '5px solid transparent',
                        'border-color': n,
                        'margin-bottom': '-5px',
                        'margin-left': '-5px'
                      };
                    case 'ne':
                      return {
                        bottom: '100%',
                        left: '10px',
                        border: '5px solid transparent',
                        'border-color': n,
                        'margin-bottom': '-5px',
                        'margin-left': '-5px'
                      };
                    case 'e':
                      return {
                        top: '50%',
                        left: '100%',
                        border: '5px solid transparent',
                        'border-color': i,
                        'margin-left': '-5px',
                        'margin-top': '-5px'
                      };
                    case 'w':
                      return {
                        top: '50%',
                        right: '100%',
                        border: '5px solid transparent',
                        'border-color': o,
                        'margin-right': '-5px',
                        'margin-top': '-5px'
                      };
                    default:
                      return e
                  }
                }, t.prototype.getBackgroundColor = function() {
                  return this.props.renderAsLatex()    ? '#fff' :
                      this.props.isStickyAndNotStuck() ? '#666' :
                                                         '#000'
                }, t.prototype.getMaxWidth = function() {
                  var e = this.props.gravity(),
                      t = this.props.hitAreaRect().left +
                      (this.props.offset().left || 0),
                      r = t + this.props.hitAreaRect().width,
                      n = .5 * this.props.hitAreaRect().width + t,
                      i = window.innerWidth - 5;
                  switch (e) {
                    case 'se':
                    case 'ne':
                    case 'e':
                      return i - t;
                    case 'sw':
                    case 'nw':
                    case 'w':
                      return r - 5;
                    case 's':
                    case 'n':
                      return 2 * Math.min(i - n, n - 5);
                    default:
                      return e
                  }
                }, t.prototype.getMessageStyle = function() {
                  var e = this.props.hitAreaRect(), t = this.props.gravity();
                  switch (t) {
                    case 's':
                      return {
                        top: '100%',
                        transform: 'translate(-50%, 0)',
                        left: .5 * e.width + 'px',
                        'margin-top': '5px',
                        'text-align': 'center'
                      };
                    case 'sw':
                      return {
                        top: '100%',
                        right: '0',
                        'margin-top': '5px',
                        'text-align': 'right'
                      };
                    case 'se':
                      return {
                        top: '100%',
                        'margin-top': '5px',
                        'text-align': 'left'
                      };
                    case 'n':
                      return {
                        bottom: '100%',
                        transform: 'translate(-50%, 0)',
                        left: .5 * e.width + 'px',
                        'margin-bottom': '5px',
                        'text-align': 'center'
                      };
                    case 'nw':
                      return {
                        bottom: '100%',
                        right: '0',
                        'margin-bottom': '5px',
                        'text-align': 'right'
                      };
                    case 'ne':
                      return {
                        bottom: '100%',
                        'margin-bottom': '5px',
                        'text-align': 'left'
                      };
                    case 'e':
                      return {
                        transform: 'translate(0, -50%)',
                        left: '100%',
                        top: .5 * e.height + 'px',
                        'margin-left': '5px',
                        'text-align': 'left'
                      };
                    case 'w':
                      return {
                        transform: 'translate(0, -50%)',
                        right: '100%',
                        top: .5 * e.height + 'px',
                        'margin-right': '5px',
                        'text-align': 'right'
                      };
                    default:
                      return t
                  }
                }, t
              }(i.Class), u = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.uuid = s.uniqueId(), this.isMounted = !0
                }, t.prototype.template = function() {
                  var e = this;
                  return i.createElement(
                      'div', {
                        class: i.const('dcg-tooltip-hit-area-container'),
                        handleevent: i.const('true'),
                        didMount: function(t) {
                          e.hitAreaNode = t,
                          e.setupEventListeners(e.hitAreaNode)
                        },
                        onTap: function() {
                          e.shouldHideOnTargetClick() ?
                              e.hideTooltip() :
                              e.shouldShowOnTargetClick() ?
                              e.showTooltip() :
                              e.shouldStickOnTargetClick() &&
                                  (e.isStuck ?
                                       (e.clearTimeouts(), e.hideTooltip()) :
                                       (e.showTooltip(), e.stickTooltip()))
                        }
                      },
                      this.children)
                }, t.prototype.didUpdate = function() {
                  this.updateTooltip()
                }, t.prototype.updateTooltip = function() {
                  if (this.wrapperRef) {
                    if (!this.props.tooltip()) return void this.hideTooltip();
                    var e = this.hitAreaNode.getBoundingClientRect(),
                        t = this.wrapperRef.elt.getBoundingClientRect(),
                        r = this.wrapperRef, n = r.originalTop,
                        i = r.originalLeft, o = e.top - t.top,
                        s = e.left - t.left;
                    Math.abs(o - n) > 3 || Math.abs(s - i) > 3 ?
                        this.hideTooltip() :
                        this.wrapperRef.view.update()
                  }
                }, t.prototype.handleShowEvent = function(e) {
                  if (!this.props.disabled || !this.props.disabled()) {
                    var t = this.props.delay ? this.props.delay() : 500;
                    this.clearTimeouts(),
                        this.showTooltipTimeout = setTimeout(e, t)
                  }
                }, t.prototype.handleHideEvent = function() {
                  this.clearTimeouts(),
                      this.hideTooltipTimeout =
                          setTimeout(this.bindFn(this.hideTooltip), 150)
                }, t.prototype.setupEventListeners = function(e) {
                  var t = this;
                  o(e).on('tipsyshow',
                          function(r) {
                            r.target === e && t.handleShowEvent(function() {
                              t.showTooltip()
                            })
                          })
                      .on('tipsyhide',
                          function(r) {
                            r.target !== e || t.isStuck || t.handleHideEvent()
                          }),
                      this.shouldShowOnTargetClick() &&
                      this.setUpHideOnExternalMousedown()
                }, t.prototype.willUnmount = function() {
                  this.clearTimeouts(), this.isMounted = !1, this.hideTooltip()
                }, t.prototype.setUpHideOnExternalMousedown = function() {
                  var e = this;
                  o(document).on(
                      'mousedown.dcg-tooltip-' + this.uuid +
                          ' touchstart.dcg-tooltip-' + this.uuid +
                          ' pointerdown.dcg-tooltip-' + this.uuid,
                      function(t) {
                        e.wrapperRef &&
                            (o(t.target).closest(e.hitAreaNode).length ||
                             o(t.target).closest(e.wrapperRef.elt).length ||
                             e.hideTooltip())
                      })
                }, t.prototype.stickTooltip = function() {
                  this.isMounted && this.wrapperRef &&
                      (this.isStuck ||
                       (this.setUpHideOnExternalMousedown(), this.isStuck = !0,
                        this.updateTooltip()))
                }, t.prototype.clearTimeouts = function() {
                  clearTimeout(this.showTooltipTimeout),
                      clearTimeout(this.hideTooltipTimeout)
                }, t.prototype.showTooltip = function() {
                  var e = this;
                  if (this.isMounted && !this.wrapperRef &&
                      this.props.tooltip()) {
                    var t = this.hitAreaNode.getBoundingClientRect(),
                        r = document.createElement('div');
                    r.className = 'dcg-tooltip-mount-pt';
                    o(this.hitAreaNode)
                        .closest('.dcg-tap-container')[0]
                        .appendChild(r);
                    var s = r.getBoundingClientRect(), a = t.left - s.left,
                        l = t.top - s.top, u = {
                          tooltip: this.props.tooltip,
                          class: this.props.class,
                          isStickyAndNotStuck: function() {
                            return e.shouldStickOnTargetClick() && !e.isStuck
                          },
                          offset: function() {
                            return e.props.offset ? e.props.offset() : {}
                          },
                          gravity: function() {
                            return e.props.gravity ? e.props.gravity() : 's'
                          },
                          renderAsLatex: function() {
                            return !!e.props.renderAsLatex &&
                                e.props.renderAsLatex()
                          },
                          hitAreaRect: function() {
                            return {
                              top: l || 0, left: a || 0, width: t.width || 0,
                                  height: t.height || 0
                            }
                          }
                        };
                    this.setupEventListeners(r), o(r).on('dcg-tap', function() {
                      e.shouldStickOnTargetClick() && e.stickTooltip()
                    });
                    var d = i.mountToNode(c, r, u);
                    o(document).on(
                        'keydown.dcg-tooltip-' + this.uuid, function(t) {
                          n.lookup(t) === n.ESCAPE && e.hideTooltip()
                        });
                    var p = function() {
                      return e.updateTooltip()
                    };
                    window.addEventListener('scroll', p, !0),
                        this.wrapperRef = {
                          elt: r,
                          view: d,
                          originalLeft: a,
                          originalTop: l,
                          onScroll: p
                        }
                  }
                }, t.prototype.hideTooltip = function() {
                  this.clearTimeouts(),
                      this.wrapperRef &&
                      (this.isStuck = !1,
                       o(document).off('.dcg-tooltip-' + this.uuid),
                       window.removeEventListener(
                           'scroll', this.wrapperRef.onScroll, !0),
                       i.unmountFromNode(this.wrapperRef.elt),
                       this.wrapperRef.elt.parentNode &&
                           this.wrapperRef.elt.parentNode.removeChild(
                               this.wrapperRef.elt),
                       this.wrapperRef = void 0)
                }, t.prototype.shouldStickOnTargetClick = function() {
                  return !!this.props.targetClickBehavior &&
                      'stick' === this.props.targetClickBehavior()
                }, t.prototype.shouldShowOnTargetClick = function() {
                  return !!this.props.targetClickBehavior &&
                      'show' === this.props.targetClickBehavior()
                }, t.prototype.shouldHideOnTargetClick = function() {
                  return !this.props.targetClickBehavior ||
                      'hide' === this.props.targetClickBehavior()
                }, t
              }(i.Class);
              t.Tooltip = u
            });
          r('lib/abraham-helpers', ['require', 'exports', 'abraham'],
            function(e, t, r) {
              'use strict';
              function n(e, t) {
                return 'nemeth' === t ?
                    r.latexToNemeth(e) :
                    'ueb' === t ?
                    r.latexToUeb(e) :
                    {
                      isError: !0,
                      error: 'Braille mode should be \'nemeth\' or \'ueb\''
                    }
              }
              function i(e, t) {
                return 'nemeth' === t ?
                    r.nemethToLatex(e) :
                    'ueb' === t ?
                    r.uebToLatex(e) :
                    {
                      isError: !0,
                      error: 'Braille mode should be \'nemeth\' or \'ueb\''
                    }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.latexToBraille = n, t.brailleToLatex = i
            });
          r('loadcss!dcgview-helpers/mathquill-view', function() {});
          r('dcgview-helpers/mathquill-view',
            [
              'require', 'exports', 'tslib', 'keys', 'browser', 'dcgview',
              'vendor/mathquill', 'jquery', './static-mathquill-view',
              'loadcss!./mathquill-view'
            ],
            function(e, t, r, n, i, o, s, a, l) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var c = o.Components.If;
              t.EXPRESSION_SIZE_LIMIT = 100;
              var u = function(e) {
                function u() {
                  var t = null !== e && e.apply(this, arguments) || this;
                  return t.lastLatexProp = '', t.wasFocusedLastUpdate = !1, t
                }
                return r.__extends(u, e),
                       u.prototype
                           .template =
                           function() {
                         var e = this;
                         return 1 === this.children.length ?
                             this.children[0] :
                             o.createElement(
                                 'div', {class: o.const('dcg-mq-container')},
                                 o.createElement(
                                     c, {
                                       predicate: function() {
                                         return e.getPlaceholder()
                                                    .trim()
                                                    .length > 0
                                       }
                                     },
                                     function() {
                                       return o.createElement(
                                           'span', {
                                             class:
                                                 o.const('dcg-mq-placeholder')
                                           },
                                           o.createElement(l.default, {
                                             latex: function() {
                                               return e.getPlaceholder()
                                             }
                                           }))
                                     }),
                                 o.createElement('div', {
                                   class: function() {
                                     return {
                                       'dcg-math-field': !0,
                                           'dcg-no-fadeout':
                                               e.props.noFadeout &&
                                           e.props.noFadeout(),
                                           'dcg-invalid': e.props.hasError(),
                                           'dcg-focus': e.props.isFocused()
                                     }
                                   },
                                   didMount: function(t) {
                                     return e.didMountMathquill(t)
                                   },
                                   'data-dcg-label': function() {
                                     return e.props.dataLabelAttributeValue ?
                                         e.props.dataLabelAttributeValue() :
                                         void 0
                                   }
                                 }))
                       },
                u.prototype.didMount =
                           function() {
                  1 === this.children.length &&
                      this.didMountMathquill(this.findRootNode())
                },
                u.prototype.willUnmount =
                           function() {
                  this.$mathField.off('.view'), this.mathField = void 0
                },
                u.prototype.getPlaceholder =
                           function() {
                  return this.props.placeholder ? this.props.isFocused() ? '' :
                          this.props.latex()                             ? '' :
                                               this.props.placeholder() :
                                                  ''
                },
                u.prototype.didMountMathquill =
                           function(e) {
                  var t = this,
                      o = r.__assign(r.__assign({}, this.props.config()), {
                        handlers: {
                          reflow: function(e) {
                            t.props.onReflow && t.mathField &&
                                t.props.onReflow(e)
                          }
                        },
                        onCut: function() {
                          t.mathField &&
                              t.props.onUserChangedLatex(t.mathField.latex())
                        },
                        onPaste: function() {
                          t.mathField &&
                              t.props.onUserChangedLatex(t.mathField.latex())
                        },
                        overrideTypedText: function(e) {
                          t.mathField && t.viewCanAcceptText(e) &&
                              (t.props.onUserTypedText ?
                                   t.props.onUserTypedText(e) :
                                   (t.mathField.typedText(e),
                                    t.props.onUserChangedLatex(
                                        t.mathField.latex())))
                        },
                        overrideKeystroke: function(e, r) {
                          if ('Backspace' === e && r.preventDefault(),
                              t.mathField) {
                            if ('Spacebar' === e && t.props.disableSpace &&
                                t.props.disableSpace())
                              return r.preventDefault();
                            if (r.originalEvent) {
                              var i = n.lookup(r.originalEvent);
                              if ('Up' === i || 'Down' === i || 'Left' === i ||
                                  'Right' === i || 'Esc' === i) {
                                var o = [];
                                r.ctrlKey && o.push('Ctrl'),
                                    r.metaKey && o.push('Meta'),
                                    r.altKey && o.push('Alt'),
                                    r.shiftKey && o.push('Shift'),
                                    o.length ? (o.push(i), e = o.join('-')) :
                                               e = i
                              }
                            }
                            t.props.onUserPressedKey ?
                                t.props.onUserPressedKey(e, r) :
                                (t.mathField.keystroke(e, r),
                                 t.props.onUserChangedLatex(
                                     t.mathField.latex()))
                          }
                        }
                      });
                  this.props.needsSystemKeypad &&
                      this.props.needsSystemKeypad() &&
                      (o.substituteTextarea =
                           function() {
                             return a(
                                 '<textarea autocorrect="off" autocapitalize="none" spellcheck="false" autocomplete="off">')[0]
                           }),
                      this.$mathField = a(e),
                      this.mathField = s.MQ.MathField(e, o),
                      e._mqMathFieldInstance = this.mathField,
                      e._mqViewInstance = this,
                      this.$mathField
                          .on('focusin.view focusout.view',
                              function(e) {
                                return t.onFocusEvent(e)
                              })
                          .on('paste.view',
                              function(e) {
                                return t.onPasteEvent(e)
                              }),
                      (i.IS_IOS || i.IS_ANDROID) &&
                      this.$mathField.on(
                          'keypress.view',
                          function(e) {
                            return t.onKeypressEvent(e)
                          }),
                      this.hookupMQTapTouch(), this.updateMathquill()
                },
                u.prototype.didUpdate =
                           function() {
                  this.updateMathquill()
                },
                u.prototype.updateMathquill =
                           function() {
                  this.updateMathquillAria(), this.updateMathquillLatex(),
                      this.updateMathquillFocused(),
                      this.updateMathquillPostLabel()
                },
                u.prototype.onFocusEvent =
                           function(e) {
                  var t = this.isFocused();
                  t !== this.shouldBeFocused() &&
                      this.props.onFocusedChanged(t, e)
                },
                u.prototype.onPasteEvent =
                           function(e) {
                  var t = '', r = window.clipboardData, n = e.originalEvent;
                  r&& r.getData ?
                      t = r.getData('Text') :
                      n && n.clipboardData && n.clipboardData.getData &&
                          (t = n.clipboardData.getData('text/plain'));
                  var i = this.viewCanAcceptText(t);
                  return !i && this.props.onExpressionSizeExceeded &&
                             this.props.onExpressionSizeExceeded(),
                         i
                },
                u.prototype.viewCanAcceptText =
                           function(e) {
                  return u.canAcceptText(
                      this.mathField, this.props.capExpressionSize(), e)
                },
                u.canAcceptText =
                           function(e, r, n) {
                  return !!e &&
                      (!r ||
                       e.latex().length + n.length <= t.EXPRESSION_SIZE_LIMIT)
                },
                u.prototype.onKeypressEvent =
                           function(e) {
                  if (e.stopPropagation(), e.preventDefault(), this.mathField) {
                    var t = n.lookupChar(e.originalEvent);
                    t && this.viewCanAcceptText(t) &&
                        (this.props.onUserTypedText ?
                             this.props.onUserTypedText(t) :
                             (this.mathField.typedText(t),
                              this.props.onUserChangedLatex(
                                  this.mathField.latex())))
                  }
                },
                u.prototype.hookupMQTapTouch =
                           function() {
                  var e = this;
                  this.$mathField.on('dcg-tap.view', function(t) {
                    if ('touch' === t.device && e.mathField) {
                      var r = t.originalEvent.changedTouches[0];
                      e.mathField.clickAt(r.clientX, r.clientY, r.target),
                          e.isFocused() || e.mathField.focus();
                      var n = void 0;
                      setTimeout(function() {
                        n = Date.now()
                      }, 0), e.mathField.ignoreNextMousedown(function() {
                        return void 0 === n || Date.now() - n < 500
                      })
                    }
                  })
                },
                u.prototype.updateMathquillAria =
                           function() {
                  if (this.mathField) {
                    var e = this.props.getAriaLabel();
                    e !== this.mathField.getAriaLabel() &&
                        this.mathField.setAriaLabel(e)
                  }
                },
                u.prototype.updateMathquillPostLabel =
                           function() {
                  this.mathField &&
                      this.mathField.setAriaPostLabel(
                          this.props.getAriaPostLabel(),
                          this.props.hasError() ? 5e3 : 1e3)
                },
                u.prototype.updateMathquillLatex =
                           function() {
                  var e = this.props.latex();
                  this.mathField && this.lastLatexProp !== e &&
                      (this.props.capExpressionSize() &&
                           e.length > t.EXPRESSION_SIZE_LIMIT ||
                       (this.lastLatexProp = e,
                        this.mathField.latex() !== e &&
                            this.mathField.latex(e)))
                },
                u.prototype.updateMathquillFocused =
                           function() {
                  if (this.mathField) {
                    var e = this.isFocused(), t = this.shouldBeFocused();
                    t && t !== this.wasFocusedLastUpdate &&
                        this.props.selectOnFocus &&
                        this.props.selectOnFocus() && this.mathField.select(),
                        this.wasFocusedLastUpdate = t,
                        e !== t &&
                        (t ? this.mathField.focus() : this.mathField.blur())
                  }
                },
                u.prototype.isFocused =
                           function() {
                  return !(
                      !document.activeElement ||
                      !a(document.activeElement)
                           .closest(this.$mathField)
                           .length)
                },
                u.prototype.shouldBeFocused =
                           function() {
                  return this.props.isFocused()
                },
                u.getFocusedMathquill =
                           function() {
                  if (document.activeElement) {
                    var e = a(document.activeElement)
                                .closest('.dcg-mq-editable-field')[0];
                    return e ? e._mqMathFieldInstance : void 0
                  }
                },
                u.getMQViewInstance =
                           function(e) {
                  var t = e.el();
                  return t ? t._mqViewInstance : void 0
                },
                u.applyArrowKeyAndReturnIfWasAtBounds =
                           function(e, t, r) {
                  var n = a(e.el()), i = n.find('.dcg-mq-selection'),
                      o = 1 === i.length && i.parent().parent()[0] === n[0] &&
                      1 === i.parent().children().length;
                  if (('Up' === t || 'Down' === t) && o)
                    return e.keystroke(t, r), !0;
                  var s = n.find('.dcg-mq-cursor')[0];
                  if (!s) return e.keystroke(t, r), !1;
                  var l = s.previousSibling || s.parentElement;
                  return e.keystroke(t, r),
                         l === (s.previousSibling || s.parentElement)
                },
                u.simulateKeypress =
                           function(e, t) {
                  var r = u.getMQViewInstance(e);
                  r &&
                      (r.props.onUserPressedKey ?
                           r.props.onUserPressedKey(t) :
                           (e.keystroke(t),
                            r.props.onUserChangedLatex(e.latex())))
                },
                u.simulateUserChangedLatex =
                           function(e) {
                  var t = u.getMQViewInstance(e);
                  t && t.mathField &&
                      t.props.onUserChangedLatex(t.mathField.latex())
                },
                u.handleKeystrokeAndDecideIfSpecialEvent = function(e, t, r) {
                  return 'Enter' === t ||
                      ('Delete' === t && '' === e.latex() ||
                       ('Backspace' === t && '' === e.latex() ||
                        ('Up' === t ?
                             u.applyArrowKeyAndReturnIfWasAtBounds(e, t, r) :
                             'Down' === t ?
                             u.applyArrowKeyAndReturnIfWasAtBounds(e, t, r) :
                             'Left' === t ?
                             u.applyArrowKeyAndReturnIfWasAtBounds(e, t, r) :
                             'Right' === t ?
                             u.applyArrowKeyAndReturnIfWasAtBounds(e, t, r) :
                             (e.keystroke(t, r), !1))))
                }, u
              }(o.Class);
              t.default = u
            });
          r('loadcss!Abraham', function() {});
          r('loadcss!dcgview-helpers/mathquill-braille-wrapper', function() {});
          r('dcgview-helpers/mathquill-braille-wrapper',
            [
              'require', 'exports', 'tslib', 'jquery', 'abraham', 'dcgview',
              '../expressions/braille-input', '../lib/tooltip',
              '../lib/abraham-helpers', 'dcgview-helpers/mathquill-view',
              'loadcss!Abraham', 'loadcss!./mathquill-braille-wrapper'
            ],
            function(e, t, r, n, i, o, s, a, l, c) {
              'use strict';
              function u() {
                if (document.activeElement &&
                    n(document.activeElement).hasClass('dcg-braille-input'))
                  return document.activeElement
              }
              function d(e) {
                return !e || '' === n(e).val()
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var p = o.Components.If, h = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller(),
                  this.currentBrailleValue =
                      this.getBrailleFromLatex(this.props.latex()),
                  this.currentBrailleMode = this.controller.getBrailleMode(),
                  this.hasTranslationError = !1,
                  this.currentLatex = this.props.latex()
                }, t.prototype.isFocused = function() {
                  return this.props.brailleShouldFocus()
                }, t.prototype.isStatic = function() {
                  return !!this.props.isStatic && this.props.isStatic()
                }, t.prototype.hasError = function() {
                  return !!this.props.hasError && this.props.hasError()
                }, t.prototype.willUpdate = function() {
                  if (!this.isFocused() ||
                      this.currentLatex !== this.props.latex()) {
                    var e = this.currentLatex !== this.props.latex();
                    this.currentLatex = this.props.latex();
                    var t = this.controller.getBrailleMode();
                    (t !== this.currentBrailleMode && 'none' !== t ||
                     !this.hasTranslationError || e || this.isStatic()) &&
                        (this.currentBrailleValue =
                             this.getBrailleFromLatex(this.props.latex()),
                         this.hasTranslationError = !1),
                        this.currentBrailleMode = t
                  }
                }, t.prototype.onBrailleInput = function(e) {
                  if (this.props.onBrailleInput) {
                    var t = this.getLatexFromBraille(e);
                    if (this.hasTranslationError = t.isError,
                        !t.isError && this.controller.getCapExpressionSize() &&
                            t.value.length > c.EXPRESSION_SIZE_LIMIT)
                      return void (
                          this.props.onExpressionSizeExceeded ?
                              this.props.onExpressionSizeExceeded() :
                              this.controller.dispatch(
                                  {type: 'expression-size-exceeded'}));
                    this.currentBrailleValue = e,
                    t.isError ||
                        (this.currentLatex = t.value,
                         this.props.onBrailleInput(t.value))
                  }
                }, t.prototype.getBrailleFromLatex = function(e) {
                  var t = l.latexToBraille(e, this.controller.getBrailleMode());
                  return t.isError ?
                      '' :
                      i.UnicodeBraille.toExpandedBrailleAscii(t.value)
                }, t.prototype.getLatexFromBraille = function(e) {
                  return l.brailleToLatex(
                      i.UnicodeBraille.coerceToSixDotCells(e),
                      this.controller.getBrailleMode())
                }, t.prototype.getBrailleLabel = function(e) {
                  return this.getBrailleFromLatex(e.replace(/\s/, '\\ '))
                }, t.prototype.shouldShowBraille = function() {
                  var e = this.controller.getBrailleMode();
                  return 'nemeth' === e || 'ueb' === e
                }, t.prototype.isOverflowingLeft = function() {
                  return !!this.brailleInput && this.brailleInput.scrollLeft > 0
                }, t.prototype.isOverflowingRight = function() {
                  if (!this.brailleInput) return !1;
                  var e = this.brailleInput.getBoundingClientRect().width;
                  return this.brailleInput.scrollWidth >
                      e + this.brailleInput.scrollLeft + 2
                }, t.prototype.didMountBrailleInput = function(e) {
                  this.brailleInput = e
                }, t.prototype.didUnmountBrailleInput = function() {
                  this.brailleInput = void 0
                }, t.prototype.getTooltipGravity = function() {
                  var e =
                      this.props.tooltipOptions && this.props.tooltipOptions();
                  return e && e.gravity ? e.gravity : 'se'
                }, t.prototype.getTooltipDelay = function() {
                  var e =
                      this.props.tooltipOptions && this.props.tooltipOptions();
                  return e && e.delay ? e.delay : 0
                }, t.prototype.handleBrailleFocusChanged = function(e, t) {
                  this.props.onBrailleFocusedChanged &&
                      this.props.onBrailleFocusedChanged(e, t),
                      this.brailleInput &&
                      (e && this.props.selectOnFocus &&
                           this.props.selectOnFocus() &&
                           this.brailleInput.select(),
                       this.isStatic() && this.brailleInput.scrollTo(0, 0))
                }, t.prototype.getTooltipText = function() {
                  var e = this.props.placeholder && !this.isFocused() ?
                      this.props.placeholder() :
                      '';
                  return this.props.latex() || e
                }, t.prototype.template = function() {
                  var e = this;
                  return o.createElement(
                      'div', {class: o.const('dcg-mathquill-wrapper')},
                      o.createElement(
                          p, {
                            predicate: function() {
                              return e.shouldShowBraille()
                            }
                          },
                          function() {
                            return o.createElement(
                                'div', {
                                  class: function() {
                                    return {
                                      'dcg-mathquill-braille': !0,
                                          'dcg-focus':
                                              e.props.brailleShouldFocus &&
                                          e.props.brailleShouldFocus(),
                                          'dcg-invalid': e.hasError(),
                                          'dcg-mathquill-static-braille':
                                              e.isStatic(),
                                          'dcg-mathquill-braille-overflow-left':
                                              e.isOverflowingLeft(),
                                          'dcg-mathquill-braille-overflow-right':
                                              e.isOverflowingRight()
                                    }
                                  },
                                  'data-dcg-limit': function() {
                                    return e.props.dataDCGLimit ?
                                        e.props.dataDCGLimit() :
                                        void 0
                                  },
                                  'data-dcg-label': function() {
                                    return e.props.dataLabelAttributeValue ?
                                        e.props.dataLabelAttributeValue() :
                                        void 0
                                  }
                                },
                                o.createElement(
                                    a.Tooltip, {
                                      class: e.const(
                                          'dcg-mathquill-braille-tooltip'),
                                      renderAsLatex: e.const(!0),
                                      tooltip: function() {
                                        return e.getTooltipText()
                                      },
                                      gravity: e.bindFn(e.getTooltipGravity),
                                      delay: e.bindFn(e.getTooltipDelay),
                                      targetClickBehavior: e.const('show')
                                    },
                                    o.createElement(s.default, {
                                      ariaLabel: function() {
                                        return e.props.ariaLabel ?
                                            e.getBrailleLabel(
                                                e.props.ariaLabel()) :
                                            ''
                                      },
                                      didMount:
                                          e.bindFn(e.didMountBrailleInput),
                                      didUnmount:
                                          e.bindFn(e.didUnmountBrailleInput),
                                      onFocusedChanged:
                                          e.bindFn(e.handleBrailleFocusChanged),
                                      shouldFocus: e.props.brailleShouldFocus ||
                                          e.const(!1),
                                      onKeydown: e.props.onBrailleKeydown,
                                      onInput: e.bindFn(e.onBrailleInput),
                                      sixKeyInput: function() {
                                        return e.controller.getSixKeyInput()
                                      },
                                      value: function() {
                                        return e.currentBrailleValue
                                      },
                                      placeholder: function() {
                                        return e.props.placeholder ?
                                            e.getBrailleFromLatex(
                                                e.props.placeholder()) :
                                            ''
                                      },
                                      tabindex: function() {
                                        return e.props.tabindex ?
                                            e.props.tabindex() :
                                            0
                                      },
                                      isStatic: e.bindFn(e.isStatic)
                                    })))
                          }),
                      o.createElement(
                          'div', {
                            class: o.const('dcg-typeset-math'),
                            style: function() {
                              return {
                                display: e.shouldShowBraille() ? 'none' : void 0
                              }
                            }
                          },
                          this.children))
                }, t
              }(o.Class);
              t.default = h, t.getFocusedBrailleElement = u,
              t.brailleInputIsEmpty = d
            });
          r('expressions/list_move_controller',
            [
              'require', 'exports', 'core/lib/dragmode',
              'core/lib/number-to-latex', 'core/lib/label', 'lib/rounding',
              'graphing-calc/models/expression', 'graphing-calc/models/table',
              'graphing-calc/models/list', 'graphing-calc/models/image',
              'core/math/poi', 'core/math/functions'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d) {
              'use strict';
              function p(e, t, n) {
                if (n.tableInfo) {
                  l.setSelected(t, void 0);
                  var i = e.getItemModel(n.tableInfo.tableId);
                  if (!i || 'table' !== i.type) return;
                  a.setIsDraggingOnGrapher(i, !0)
                } else {
                  var o = e.getItemModel(n.sketch.id);
                  if (!o || 'expression' !== o.type && 'image' !== o.type)
                    return;
                  if ('image' !== o.type && l.setSelected(t, void 0),
                      !o.formula || !o.formula.move_strategy)
                    return;
                  for (var u = o.formula.move_strategy, d = 0; d < u.length;
                       d++)
                    if ('updateCoordinate' === u[d].type)
                      'image' === o.type ? c.setIsDraggingOnGrapher(o, !0) :
                                           'expression' === o.type &&
                              s.setIsDraggingOnGrapher(o, !0);
                    else if (
                        'updateSlider' === u[d].type ||
                        'updateSliderNonlinear' === u[d].type) {
                      var p = e.getItemModel(u[d].id);
                      if (!p || 'expression' !== p.type) continue;
                      var h;
                      if ((h = 'expression' === o.type ?
                               o.reconciledDragMode :
                               void 0) === r.DragMode.NONE ||
                          0 === d && h === r.DragMode.Y ||
                          1 === d && h === r.DragMode.X)
                        continue;
                      s.setSliderDragging(p, !0)
                    }
                }
              }
              function h(e, t) {
                if (t.tableInfo) {
                  var r = e.getItemModel(t.tableInfo.tableId);
                  if (!r || 'table' !== r.type) return;
                  return void a.setIsDraggingOnGrapher(r, !1)
                }
                var n = e.getItemModel(t.sketch.id);
                if (n && ('expression' === n.type || 'image' === n.type) &&
                    n.formula && n.formula.move_strategy) {
                  var i = n.formula.move_strategy;
                  if ('updateSliderNonlinear' === i[0].type) {
                    var o = e.getItemModel(i[0].id);
                    if (!o || 'expression' !== o.type) return;
                    s.setSliderDragging(o, !1)
                  }
                  for (var l = 0; l < i.length; l++)
                    if ('image' === n.type ? c.setIsDraggingOnGrapher(n, !1) :
                                             'expression' === n.type &&
                                s.setIsDraggingOnGrapher(n, !1),
                        'updateSlider' === i[l].type ||
                            'updateSliderNonlinear' === i[l].type) {
                      var o = e.getItemModel(i[l].id);
                      if (!o || 'expression' !== o.type) continue;
                      s.setSliderDragging(o, !1)
                    }
                }
              }
              function f(e, t, r, i) {
                var s = t.tableInfo.tableId, l = t.tableInfo.rowIndex,
                    c = t.tableInfo.columnId, u = t.tableInfo.dragX,
                    d = t.tableInfo.dragY, p = e.getItemModel(s);
                if (p && 'table' === p.type) {
                  var h = a.getColumnModel(p, c);
                  if (h) {
                    var f = i.closestPointOnScreen(r),
                        m = i.pixelsToMath.mapRect(g(f, .5)), y = {
                          x: n.default(
                              o.shortestDecimalBetween(m.left, m.right)),
                          y: n.default(
                              o.shortestDecimalBetween(m.top, m.bottom))
                        };
                    if (u && a.setCellLatex(p, {row: l + 1, column: 0}, y.x),
                        d) {
                      var v = h.index;
                      a.setCellLatex(p, {row: l + 1, column: v}, y.y)
                    }
                  }
                }
              }
              function g(e, t) {
                return {
                  left: e.x - t, right: e.x + t, top: e.y + t, bottom: e.y - t
                }
              }
              function m(e, t, r) {
                var s;
                s = e.assignment ? i.identifierToLatex(e.assignment) + '=' : '';
                var a = o.shortestDecimalBetween(t[0].min, t[0].max),
                    l = o.shortestDecimalBetween(t[1].min, t[1].max),
                    c = 'updateCoordinate' === e.move_strategy[0].type &&
                    y(0, r),
                    u = 'updateCoordinate' === e.move_strategy[1].type &&
                    y(1, r);
                return s + '\\left(' +
                    (c ? n.default(a) : e.move_strategy[0].inputString) + ',' +
                    (u ? n.default(l) : e.move_strategy[1].inputString) +
                    '\\right)'
              }
              function y(e, t) {
                switch (t) {
                  case r.DragMode.X:
                    return 0 === e;
                  case r.DragMode.Y:
                    return 1 === e;
                  case r.DragMode.XY:
                    return !0;
                  default:
                    return !1
                }
              }
              function v(e, t, r) {
                if (0 === r[0] && 0 === r[1])
                  return {x: t.x, y: t.y, width: e.width, height: e.height};
                var n = Math.cos(e.radianAngle), i = Math.sin(e.radianAngle),
                    o = t.x - e.x, s = t.y - e.y;
                if (0 === r[0])
                  return {
                    x: e.x,
                    y: e.y,
                    width: e.width,
                    height: 2 * r[1] * (n * s + i * o)
                  };
                if (0 === r[1])
                  return {
                    x: e.x,
                    y: e.y,
                    width: 2 * r[0] * (n * o - i * s),
                    height: e.height
                  };
                var a = 2 *
                    (e.width * r[0] * (n * o - i * s) +
                     e.height * r[1] * (i * o + n * s)) /
                    (e.width * e.width + e.height * e.height);
                return {
                  x: e.x, y: e.y, width: a * e.width, height: a * e.height
                }
              }
              function b(e, t, r) {
                for (var n =
                             [
                               {x: t.left, y: t.bottom}, {x: t.left, y: t.top},
                               {x: t.right, y: t.top}, {x: t.right, y: t.bottom}
                             ],
                         i = ['x', 'y', 'width', 'height'],
                         o = {x: 1 / 0, y: 1 / 0, width: 1 / 0, height: 1 / 0},
                         s = {
                           x: -1 / 0,
                           y: -1 / 0,
                           width: -1 / 0,
                           height: -1 / 0
                         },
                         a = 0, l = n;
                     a < l.length; a++)
                  for (var c = l[a], u = v(e, c, r), d = 0, p = i; d < p.length;
                       d++) {
                    var h = p[d];
                    o[h] = Math.min(o[h], u[h]), s[h] = Math.max(s[h], u[h])
                  }
                return {
                  min: o, max: s
                }
              }
              function x(e, t, r, i, a) {
                var l = t.formula;
                if (!l || !l.move_strategy) return !1;
                var u = l.dimensions, d = r.scaleFactor,
                    p = 0 !== d[0] && 0 !== d[1], h = a.closestPointOnScreen(i),
                    f = a.pixelsToMath.mapRect(g(h, p ? .05 : .5)),
                    m = b(u, f, d), y = a.mathToPixels.mapRect({
                      left: u.x - .5 * u.width,
                      right: u.x + .5 * u.width,
                      top: u.y - .5 * u.height,
                      bottom: u.y + .5 * u.height
                    }),
                    v = Math.abs(y.right - y.left),
                    x = Math.abs(y.bottom - y.top), w = a.mathToPixels.mapRect({
                      left: m.min.x - .5 * m.min.width,
                      right: m.min.x + .5 * m.min.width,
                      top: m.min.y - .5 * m.min.height,
                      bottom: m.min.y + .5 * m.min.height
                    }),
                    _ = Math.abs(w.right - w.left),
                    E = Math.abs(w.bottom - w.top);
                if (_ < v && _ < 1 || E < x && E < 1) return !1;
                for (var S = ['width', 'height', 'x', 'y'], M = !1, I = 0;
                     I < S.length; I++) {
                  var k = S[I], C = l.move_strategy[I];
                  switch (C.type) {
                    case 'updateCoordinate':
                      var T = o.shortestDecimalBetween(m.min[k], m.max[k]),
                          L = n.default(T);
                      switch (k) {
                        case 'width':
                        case 'height':
                          c.setMQAttribute(t, k, L);
                          break;
                        case 'x':
                          if ('updateCoordinate' === l.move_strategy[3].type) {
                            var P = o.shortestDecimalBetween(m.min.y, m.max.y),
                                A = n.default(P),
                                D = '\\left(' + L + ',' + A + '\\right)';
                            c.setMQAttribute(t, 'center', D)
                          } else {
                            var D = '\\left(' + L + ',' +
                                l.move_strategy[3].inputString + '\\right)';
                            c.setMQAttribute(t, 'center', D)
                          }
                          break;
                        case 'y':
                          if ('updateCoordinate' !== l.move_strategy[2].type) {
                            var D = '\\left(' + l.move_strategy[2].inputString +
                                ',' + L + '\\right)';
                            c.setMQAttribute(t, 'center', D)
                          }
                          break;
                        default:
                          return k
                      }
                      M = !0;
                      break;
                    case 'updateSlider':
                      var O = e.getItemModel(C.id);
                      if (!O || 'expression' !== O.type) continue;
                      var F = C.coefficients[0], q = C.coefficients[1],
                          N = q * m.min[k] + F, R = q * m.max[k] + F,
                          B = o.shortestDecimalBetween(N, R), j = O.latex;
                      s.adjustSliderByMovablePoint(O, B),
                          O.latex !== j && (M = !0)
                  }
                }
                return M
              }
              function w(e, t, n, i, a) {
                var l = t.formula;
                if (!l || !l.move_strategy) return !1;
                var c = t.reconciledDragMode || r.DragMode.NONE, p = !1,
                    h = i.closestPointOnScreen(n),
                    f = i.pixelsToMath.mapRect(g(h, .5)), v = [
                      {min: f.left, max: f.right}, {min: f.top, max: f.bottom}
                    ];
                'updateCoordinate' !== l.move_strategy[0].type &&
                        'updateCoordinate' !== l.move_strategy[1].type ||
                    (s.setLatex(t, m(l, v, c)), p = !0);
                for (var b, x, w, _, E, S, M, I = 0; I < 2; I++)
                  !function() {
                    if (b = l.move_strategy[I],
                        'updateSlider' !== b.type &&
                            'updateSliderNonlinear' !== b.type)
                      return 'continue';
                    if (!y(I, c)) return 'continue';
                    if (!(x = e.getItemModel(b.id)) || 'expression' !== x.type)
                      return 'continue';
                    if (w = x.latex, _ = a && a[I])
                      s.adjustSliderByKeyboard(x, _);
                    else if ('updateSlider' === b.type)
                      E = b.coefficients[0], S = b.coefficients[1],
                      M = o.shortestDecimalBetween(
                          S * v[I].min + E, S * v[I].max + E),
                      s.adjustSliderByMovablePoint(x, M);
                    else if ('updateSliderNonlinear' === b.type) {
                      b.compiled.fn || d.rehydrateCompiledFunction(b.compiled);
                      var t = b.compiled.fn,
                          r =
                              function(e) {
                            var r, n = t(e), o = n[0], s = n[1];
                            return r = i.mathToPixels.mapPoint({x: o, y: s}),
                                   o = r.x, s = r.y, [o, s]
                          },
                          n = b.initialValue, f = b.min, g = b.max,
                          m = [h.x, h.y],
                          k = u.findLocalClosestPointOnParametric(
                              r, m, n, f, g, 1);
                      if (k) {
                        var C = o.shortestDecimalBetween(k[0], k[1]);
                        void 0 !== f && C<f && (C = f), void 0 !== g && C>g &&
                            (C = g),
                            s.adjustSliderByMovablePoint(x, C)
                      }
                    }
                    x.latex !== w && (p = !0)
                  }();
                return p
              }
              function _(e, t, r, n, i) {
                if (t.tableInfo) return f(e, t, r, n), !0;
                var o = e.getItemModel(t.sketch.id);
                return !!o &&
                    ('image' === o.type ?
                         x(e, o, t, r, n) :
                         'expression' === o.type && w(e, o, r, n, i))
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.onStartMovingPoint = p, t.onStopMovingPoint = h,
                  t.onMovePoint = _
            });
          r('main/blank_state',
            ['require', 'exports', 'core/graphing-calc/migrate-state'],
            function(e, t, r) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.BLANK_STATE = {
                    version: r.currentVersion,
                    randomSeed: '',
                    graph: {
                      viewport: {xmin: -10, ymin: -13.25, xmax: 10, ymax: 13.25}
                    },
                    expressions: {list: [{id: '1', type: 'expression'}]}
                  },
                  t.default = t.BLANK_STATE
            });
          r('expressions/measure-expressions', ['require', 'exports', 'jquery'],
            function(e, t, r) {
              'use strict';
              function n(e) {
                for (var t = [], r = e.getAllItemModels(), n = 0, i = r;
                     n < i.length; n++) {
                  var o = i[n], s = e.getItemRootNodeById(o.id);
                  s && t.push(s)
                }
                return t
              }
              function i(e) {
                for (var t = e.getAllItemModels(), r = t.length - 1; r >= 0;
                     r--) {
                  var n = t[r];
                  if (n.dcgView) return n.id
                }
              }
              function o(e, t) {
                for (var r = n(e), i = 0, o = r.length - 1; i <= o;) {
                  var s = i + Math.floor((o - i) / 2), a = r[s],
                      l = a.getBoundingClientRect();
                  if (l.top > t)
                    o = s - 1;
                  else {
                    if (!(l.bottom < t)) return a;
                    i = s + 1
                  }
                }
              }
              function s(e, t) {
                for (var r, i = n(e), o = 0, s = i.length - 1; o <= s;) {
                  var a = o + Math.floor((s - o) / 2), l = i[a];
                  l.getBoundingClientRect().top > t ? (s = a - 1, r = l) :
                                                      o = a + 1
                }
                return r
              }
              function a(e, t) {
                var n = h(e);
                if (n) {
                  if (t) {
                    var i = e.getItemRootNodeById(t);
                    if (i) {
                      var s = i.getBoundingClientRect();
                      if (s.height > 0 && s.top <= n.top && s.bottom >= n.top)
                        return t
                    }
                  }
                  var a = o(e, n.top);
                  return a ? r(a).attr('expr-id') : c(e)
                }
              }
              function l(e, t) {
                var n = h(e);
                if (n) {
                  var s = i(e);
                  if (s) {
                    if (t) {
                      var a = e.getItemRootNodeById(t);
                      if (a) {
                        var l = a.getBoundingClientRect();
                        if (l.height > 0 && l.top <= n.bottom &&
                            l.bottom >= n.bottom)
                          return t;
                        if (t === s && l.bottom <= n.bottom) return t
                      }
                    }
                    var c = o(e, n.bottom);
                    return c && r(c).attr('expr-id') || s
                  }
                }
              }
              function c(e) {
                var t = h(e);
                if (t) {
                  var n = s(e, t.top - 2);
                  if (n) return r(n).attr('expr-id')
                }
              }
              function u(e) {
                return e.find$('.dcg-exppanel')[0]
              }
              function d(e) {
                var t = u(e);
                if (t) return r(t)
              }
              function p(e) {
                var t = e.find$('.dcg-exppanel-outer')[0];
                if (t) return t.getBoundingClientRect()
              }
              function h(e) {
                var t = u(e);
                if (t) return t.getBoundingClientRect()
              }
              function f(e) {
                var t = u(e);
                if (t) {
                  var r = t.getBoundingClientRect(), n = t.scrollTop;
                  return r.top - n
                }
              }
              function g(e) {
                var t = e.find$('.dcg-expressionlist');
                if (1 === t.length) return t.height()
              }
              function m(e) {
                var t = d(e);
                return t ? t.find('.dcg-drag-container').height() : 0
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.getFirstVisibleItemId = a, t.getLastVisibleItemId = l,
                  t.getFirstFullyVisibleItemId = c, t.getExppanelElt = u,
                  t.getExppanelSelector = d, t.getOuterExppanelRect = p,
                  t.getExppanelRect = h, t.getExppanelScrolledTop = f,
                  t.getExpListHeight = g, t.getDragContainerHeight = m
            });
          r('animation-frame-src', ['require'], function(e) {
            var t = 0, r = function(e, r) {
              var n = (new Date).getTime(), i = Math.max(0, 16 - (n - t)),
                  o = window.setTimeout(function() {
                    e(n + i)
                  }, i);
              return t = n + i, o
            };
            return window.requestAnimationFrame && window.cancelAnimationFrame ?
                {
                  requestAnimationFrame:
                      window.requestAnimationFrame.bind(window),
                  cancelAnimationFrame: window.cancelAnimationFrame.bind(window)
                } :
                {
                  requestAnimationFrame: r,
                  cancelAnimationFrame: window.clearTimeout.bind(window)
                }
          });
          r('lib/animation-frame',
            ['require', 'exports', 'animation-frame-src'], function(e, t, r) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.requestAnimationFrame = r.requestAnimationFrame,
                  t.cancelAnimationFrame = r.cancelAnimationFrame
            });
          r('jquery.handleevent', ['require', 'jquery'], function(e) {
            var t = e('jquery');
            t.Event.prototype.wasHandled = function(e) {
              e = e || '_*_';
              var r = this.originalEvent, n = r && r.handledBy;
              if (n && n[e]) return !0;
              if ('_*_' !== e) return !1;
              var i = t(this.target).closest('[handleEvent]');
              return !(!i.length || i[0] === this.currentTarget) &&
                  'false' !== i.attr('handleEvent')
            }, t.Event.prototype.handle = function(e) {
              e = e || '_*_';
              var t = this.originalEvent;
              if (t) {
                var r = t.handledBy;
                r || (r = t.handledBy = {}), r[e] = !0
              }
            }
          });
          r('expressions/dragdrop_expressions',
            [
              'require', 'exports', 'tslib', 'jquery',
              'expressions/measure-expressions', 'lib/animation-frame',
              'jquery.handleevent'
            ],
            function(e, t, r, n, i, o) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var s = function() {
                function e(e) {
                  this.active = !1, this.controller = e;
                  var t = i.getExppanelSelector(e);
                  t && (this.$exppanel = t)
                }
                return e.prototype.startDragging = function(e) {
                  this.active = !0, this.mouseY = e, this.setupEventListeners()
                }, e.prototype.applyDrag = function() {
                  var e = this.controller.getListModel(), t = e.dragState;
                  if (t) {
                    this.scheduleUpdateScroll();
                    var n = this.measureDOM(t);
                    if (n) {
                      var i = n.floatingPreviewRect,
                          o = this.controller.getItemModel(t.firstItemId);
                      if (o) {
                        for (var s = o.index, a = 0, l = n.visibleRects;
                             a < l.length; a++) {
                          var c = l[a], u = c.id, d = c.rect;
                          if (u !== o.id) {
                            var p = this.controller.getItemModel(u);
                            if (!p) return;
                            if (p.index < o.index) {
                              if (i.top < d.top + d.height / 2) {
                                s = p.index;
                                break
                              }
                            } else
                              i.bottom > d.top + d.height / 2 &&
                                  (s = p.index,
                                   'folder' === p.type && p.collapsed &&
                                       (s +=
                                        this.controller
                                            .getNumberOfItemsInFolder(p.id)))
                          }
                        }
                        var h, f;
                        s > o.index     ? (h = s, f = s + 1) :
                            s < o.index ? (h = s - 1, f = s) :
                                          (h = s - 1, f = s + 1);
                        var g = this.controller.getItemModelByIndex(h),
                            m = this.controller.getItemModelByIndex(f), y = '',
                            v = '';
                        g && (y = 'folder' === g.type ? g.id : g.folderId),
                            m && (v = 'folder' === m.type ? m.id : m.folderId);
                        var b = '';
                        return y &&
                                   (v === y ? 'folder' === o.type ?
                                              s = o.index :
                                              b = y :
                                              'folder' !== o.type &&
                                            this.isPreviewTopContainedInFolder(
                                                n, y) &&
                                            (b = y)),
                        {
                          dragState: r.__assign({}, n.dragState), newIndex: s,
                              folderId: b
                        }
                      }
                    }
                  }
                }, e.prototype.measureDOM = function(e) {
                  var t = i.getExppanelScrolledTop(this.controller),
                      n = i.getExpListHeight(this.controller);
                  if (void 0 !== t && void 0 !== n) {
                    var o = i.getDragContainerHeight(this.controller),
                        s = e.mouseY - e.grabOffset + 2, a = s - t;
                    a = Math.max(a, -o / 2), a = Math.min(a, n - o);
                    var l = {top: s, bottom: s + o, height: o},
                        c = this.controller.findFirstVisibleItem(),
                        u = this.controller.findLastVisibleItem();
                    if (c && u) {
                      for (var d = [], p = c.index; p <= u.index; p++) {
                        var h = this.controller.getItemModelByIndex(p);
                        if (h) {
                          var f = this.controller.getItemRootNodeById(h.id);
                          if (f && h.id !== e.firstItemId) {
                            var g = f.getBoundingClientRect();
                            d.push({id: h.id, rect: g})
                          }
                        }
                      }
                      if (0 !== d.length) return {
                          dragState: r.__assign(
                              r.__assign({}, e), {itemTop: a}),
                              floatingPreviewRect: l, visibleRects: d
                        }
                    }
                  }
                }, e.prototype.isPreviewTopContainedInFolder = function(e, t) {
                  for (var r = e.visibleRects, n = e.floatingPreviewRect, i = 0,
                           o = r;
                       i < o.length; i++) {
                    var s = o[i], a = s.id, l = s.rect;
                    if (l.top <= n.top && l.bottom >= n.top) {
                      var c = this.controller.getItemModel(a);
                      if (!c) return !1;
                      if ('folder' === c.type && c.id === t) return !0;
                      if ('folder' !== c.type && c.folderId === t) return !0
                    }
                  }
                  return !1
                }, e.prototype.scheduleUpdateScroll = function() {
                  var e = this;
                  this.updateScrollScheduled ||
                      (this.updateScrollScheduled = !0,
                       o.requestAnimationFrame(function() {
                         e.updateScroll(), e.updateScrollScheduled = !1
                       }))
                }, e.prototype.stop = function() {
                  this.active = !1, this.tearDownEventListeners(),
                  this.controller.dispatch({type: 'stop-dragdrop'})
                }, e.prototype.setupEventListeners = function() {
                  var e = this;
                  n(document).on('dcg-tapmove.dragdrop', function(t) {
                    e.mouseY = t.changedTouches[0].clientY,
                    e.controller.dispatch(
                        {type: 'update-dragdrop', mouseY: e.mouseY})
                  }), n(document).on('dcg-tapend.dragdrop', function(t) {
                    e.stop(), t.handle('dragdrop')
                  })
                }, e.prototype.tearDownEventListeners = function() {
                  n(document).off('.dragdrop')
                }, e.prototype.updateScroll = function() {
                  if (this.active) {
                    var e = this.$exppanel[0].getBoundingClientRect(), t = 0;
                    t = Math.min(t, this.mouseY - e.top),
                    t = Math.max(t, this.mouseY - e.bottom + 30),
                    t = t * e.height / 900,
                    t &&
                        this.$exppanel.scrollTop(this.$exppanel.scrollTop() + t)
                  }
                }, e
              }();
              t.default = s
            });
          r('keypad/mq-commands', ['require', 'exports'], function(e, t) {
            'use strict';
            function r(e, t) {
              n[t](e)
            }
            Object.defineProperty(t, '__esModule', {value: !0});
            var n = {
              loga: function(e) {
                e.write('\\log_{}'), e.typedText('('), e.keystroke('Left'),
                    e.keystroke('Down')
              },
              nthroot: function(e) {
                e.write('\\sqrt[]{}'), e.keystroke('Left'), e.keystroke('Left')
              },
              ddx: function(e) {
                e.write('\\frac{d}{dx}')
              },
              arcsin: function(e) {
                e.write('sin^{-1}'), e.typedText('(')
              },
              arccos: function(e) {
                e.write('cos^{-1}'), e.typedText('(')
              },
              arctan: function(e) {
                e.write('tan^{-1}'), e.typedText('(')
              },
              arcsec: function(e) {
                e.write('sec^{-1}'), e.typedText('(')
              },
              arccsc: function(e) {
                e.write('csc^{-1}'), e.typedText('(')
              },
              arccot: function(e) {
                e.write('cot^{-1}'), e.typedText('(')
              },
              'A^T': function(e) {
                e.typedText('^T'), e.keystroke('Right')
              },
              'A^-1': function(e) {
                e.typedText('^-1'), e.keystroke('Right')
              },
              'A^2': function(e) {
                e.typedText('^2'), e.keystroke('Right')
              },
              'a^2': function(e) {
                e.typedText('^2'), e.keystroke('Right')
              },
              'a^3': function(e) {
                e.typedText('^3'), e.keystroke('Right')
              },
              'a/b': function(e) {
                e.write('\\frac{}{}'), e.keystroke('Left')
              }
            };
            t.execute = r
          });
          r('main/controller',
            [
              'require',
              'exports',
              'main/propagate_selection',
              'tslib',
              'scroll_helpers',
              'browser',
              'core/lib/label',
              'underscore',
              'lib/i18n',
              'flux',
              'core/types/opacity',
              'core/lib/dragmode',
              'core/types/styles',
              'lib/conditional_blur',
              'core/lib/deepCopy',
              'core/lib/number-to-latex',
              'lib/state-stack',
              'graphing/viewport',
              'core/graphing-calc/migrate-state',
              'core/math/expression-types',
              'core/lib/color-helpers',
              'graphing-calc/models/expression',
              'core/graphing-calc/json/expression',
              'graphing-calc/models/expression',
              'graphing-calc/models/table',
              'graphing-calc/models/image',
              'graphing-calc/models/folder',
              'graphing-calc/models/text',
              'graphing-calc/models/list',
              'graphing-calc/models/abstract-item',
              'graphing-calc/models/focus',
              'graphing-calc/actions/keyboard',
              'main/expression-zoom-helpers',
              'core/math/evaluate-single-expression',
              './layout-model',
              './settings-view-model',
              'jquery',
              'bugsnag',
              'dcgview-helpers/mathquill-braille-wrapper',
              'expressions/list_move_controller',
              './blank_state',
              'dcgview-helpers/mathquill-view',
              'expressions/measure-expressions',
              'expressions/dragdrop_expressions',
              'keypad/mq-commands',
              'core/lib/random-seed'
            ],
            function(
                e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g, m, y, v, b, x,
                w, _, E, S, M, I, k, C, T, L, P, A, D, O, F, q, N, R, B, j, V,
                U, z, G, K) {
              'use strict';
              function W(e) {
                return e ? n.__assign(n.__assign({}, e), {
                  wasCompleteSetState: void 0,
                  layoutModel: void 0,
                  settingsViewModel: void 0
                }) :
                           e
              }
              function H(e, t) {
                return a.isEqual(W(e), W(t))
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var Y = function() {
                function e(e) {
                  var t = this;
                  this.__nextItemId = 0, this.__pendingImageUploads = {},
                  this.__waitingForClickableObjectWorkerResponse = !1,
                  this.nextSubscription = 0, this.subscriptions = {},
                  this._queuedCallbacks = [], this._hasUnsavedChanges = !1,
                  this.shouldScrollSelectedItemIntoViewAfterDispatch = !1,
                  this.lastParsableObjects = {}, this.toastData = {},
                  this.t =
                      function(e, r) {
                    var n = t.graphSettings.config.language;
                    return l.t(e, r, n)
                  },
                  this.raw =
                      function(e, t) {
                    return l.raw(e, t)
                  },
                  this.unpack =
                      function(e) {
                    var r = t.graphSettings.config.language;
                    return l.unpack(e, r)
                  },
                  this.dispatch =
                      function(e) {
                    if ('blur-focus-location' === e.type &&
                        t.dispatcher.isDispatching())
                      return void t.runAfterDispatch(function() {
                        t.dispatch(e)
                      });
                    if ('set-focus-location' === e.type &&
                        t.dispatcher.isDispatching())
                      return void t.runAfterDispatch(function() {
                        t.dispatch(e)
                      });
                    if ('tick' === e.type && t.dispatcher.isDispatching())
                      return void t.runAfterDispatch(function() {
                        t.dispatch(e)
                      });
                    'tick' === e.type ||
                        ('process-graph-data' === e.type ?
                             N.leaveBreadcrumb(
                                 'dispatch::' + t.bugsnagContext,
                                 {type: e.type}) :
                             N.leaveBreadcrumb(
                                 'dispatch::' + t.bugsnagContext, e)),
                        t.dispatcher.isDispatching() &&
                        N.leaveBreadcrumb(
                            'dispatch-in-dispatch::' + t.bugsnagContext,
                            {type: e.type}),
                        t.dispatcher.dispatch(e),
                        t.onEventsEmitted &&
                        t.onEventsEmitted(t.enqueuedEvents);
                    for (var r; r = t._queuedCallbacks.shift();) r()
                  },
                  this._requiresTickNextFrame = !1,
                  this.updateViews =
                      function() {
                    for (var e in t.subscriptions) t.subscriptions[e]()
                  },
                  this.bugsnagContext = '', this.inPrintMode = !1,
                  this.lastInfiniteScrollFirstDOM = void 0,
                  this.lastInfiniteScrollLastDOM = void 0,
                  this.hasDispatchSinceLastInfiniteScrollUpdate = !1,
                  this.stateStack = new m.default,
                  this.isCurrentlyDoingSetState = !1, this.graphSettings = e,
                  this.listModel = C.init(this),
                  this.layoutModel =
                      O.defaultLayoutModel(this.graphSettings.config),
                  this.layoutMeasurements = {width: 0, height: 0},
                  this.settingsViewModel = F.defaultSettingsViewModel(),
                  this.imageRetryState = {lastAttemptTime: 0, attempts: 0},
                  this.setupDispatcher()
                }
                return e.prototype
                           .hasUnsavedChanges =
                           function() {
                  return this._hasUnsavedChanges
                },
                e.prototype.hasVisibleAndUndoableToast =
                           function() {
                  return 'function' == typeof this.toastData.undoCallback
                },
                e.prototype.getToastData =
                           function() {
                  return this.toastData
                },
                e.prototype.toastUndo =
                           function() {
                  'function' == typeof this.toastData.undoCallback &&
                      (this.toastData.undoCallback(),
                       this.dispatch({type: 'toast/close'}))
                },
                e.prototype.runAfterDispatch =
                           function(e) {
                  this.dispatcher.isDispatching() ?
                      this._queuedCallbacks.push(e) :
                      e()
                },
                e.prototype.enqueueEvent =
                           function(e) {
                  this.enqueuedEvents[e] = !0
                },
                e.prototype.setRandomSeed =
                           function(e) {
                  this.graphSettings.setProperty('randomSeed', e)
                },
                e.prototype.getRandomSeed =
                           function() {
                  return this.graphSettings.randomSeed
                },
                e.prototype.shouldDispatchTickNextFrame =
                           function() {
                  return !!this._requiresTickNextFrame
                },
                e.prototype.markTickRequiredNextFrame =
                           function() {
                  this._requiresTickNextFrame = !0
                },
                e.prototype.setupDispatcher =
                           function() {
                  var e = this;
                  this.dispatcher = new c.Dispatcher,
                  this.dispatcher.register(function(t) {
                    var r = e.getSelectedItem(), n = e.getFocusLocation();
                    e.shouldScrollSelectedItemIntoViewAfterDispatch = !1;
                    var i;
                    e.enqueuedEvents = {
                      change: !1,
                      graphReset: !1,
                      clearUnsavedChanges: !1,
                      openDrawer: !1,
                      userMovedPoint: !1,
                      userClickedObject: !1,
                      userEditedLabel: !1
                    },
                    'tick' === t.type && (e._requiresTickNextFrame = !1),
                    e.isCurrentlyDoingSetState = !1,
                    e.handleDispatchedAction(t), e.updateTheComputedWorld();
                    var o = e.getImageToRetry();
                    (e.getPlayingSliders().length > 0 ||
                     e.hasAnyTableThatRequiresTicks() || e.isDragDropActive() ||
                     o) &&
                        e.markTickRequiredNextFrame(),
                        o && e.retryLoadingFailedImage(o),
                        'undo' === t.type || 'redo' === t.type ||
                        e.isDragDropActive() ||
                        e.commitUndoRedoSynchronously(t.type),
                        e.requestParseForAllItems(),
                        'clickable-item-clicked' === t.type &&
                        (e.__waitingForClickableObjectWorkerResponse = !0,
                         e.evaluator.notifyWhenSynced(function() {
                           e.__waitingForClickableObjectWorkerResponse = !1
                         })),
                        e.isCurrentlyDoingSetState = !1,
                        e.enqueuedEvents.change && e.grapher &&
                        e.grapher.markLabelsDirty(),
                        e.enqueuedEvents.clearUnsavedChanges ?
                        e._hasUnsavedChanges = !1 :
                        e.enqueuedEvents.change && (e._hasUnsavedChanges = !0);
                    var s = e.getSelectedItem();
                    s ? r && r.guid === s.guid ||
                            (e.shouldScrollSelectedItemIntoViewAfterDispatch =
                                 !0) :
                        e.shouldScrollSelectedItemIntoViewAfterDispatch = !1;
                    var l = e.getFocusLocation();
                    if (l && !a.isEqual(l, n)) {
                      e.getFocusedItem() == s &&
                          (e.shouldScrollSelectedItemIntoViewAfterDispatch = !0)
                    }
                    n && r && 'table' === r.type && 'table' === n.type &&
                        (!l || 'table' !== l.type || n.id !== l.id) &&
                        r.isExpanded && (S.setExpanded(r, !1), l || (i = r)),
                        l && s && 'table' === s.type &&
                        S.updateIsCollapsedByFocusLocation(s),
                        e.updateRenderShellsBeforePaint(), e.updateViews(),
                        i ? e.scrollItemIntoView(i) :
                            e.shouldScrollSelectedItemIntoViewAfterDispatch &&
                            e.scrollSelectedItemIntoView(),
                        e.updateDragDrop(), e.updateRenderShellsAfterDispatch()
                  })
                },
                e.prototype.handleDispatchedAction =
                           function(e) {
                  var t = this;
                  switch (e.type) {
                    case 'api-method-called':
                      break;
                    case 'undo':
                      this.undo();
                      break;
                    case 'redo':
                      this.redo();
                      break;
                    case 'clear-undoredo-history':
                      this.clearUndoRedoHistory();
                      break;
                    case 'on-special-key-pressed':
                      'Enter' === e.key         ? P.onEnterPressed(this) :
                          'Up' === e.key        ? P.onUpPressed(this) :
                          'Down' === e.key      ? P.onDownPressed(this) :
                          'Backspace' === e.key ? P.onBackspacePressed(this) :
                                                  'Delete' === e.key &&
                              P.onDeletePressed(this);
                      break;
                    case 'select-previous-expression':
                      C.selectPrevItem(this.listModel);
                      break;
                    case 'select-next-expression':
                      C.selectNextItem(this.listModel);
                      break;
                    case 'upward-delete-selected-expression':
                      P.upwardDeleteSelectedExpression(this);
                      break;
                    case 'downward-delete-selected-expression':
                      P.downwardDeleteSelectedExpression(this);
                      break;
                    case 'table-show-more-rows':
                      var r = this.getItemModel(e.id);
                      if (!r || 'table' !== r.type) return;
                      var i = S.getCollapsedRange(r);
                      if (!i) return;
                      C.setSelected(this.listModel, r), S.setExpanded(r, !0),
                          L.setFocusLocation(this, {
                            type: 'table',
                            id: r.id,
                            location: {row: i.min, column: 0}
                          });
                      break;
                    case 'navigate-table-by-key':
                      P.navigateTableByKey(this, e.id, e.key);
                      break;
                    case 'delete-item-and-animate-out':
                      this._deleteItemAndAnimateOut(
                          e.id, e.setFocusAfterDelete);
                      break;
                    case 'finish-deleting-item-after-animation':
                      this._finishDeletingItemAfterAnimation(
                          e.id, e.setFocusAfterDelete);
                      break;
                    case 'expression-zoom-fit':
                      this._expressionZoomFit(e.id);
                      break;
                    case 'set-expression-properties-from-api':
                      this._setExpressionPropertiesFromAPI(e.id, e.properties);
                      break;
                    case 'add-item-to-end-from-api':
                      this._addItemToEndFromAPI(this.createItemModel(e.state));
                      break;
                    case 'duplicate-expression':
                      var o = this.getItemModel(e.id);
                      if (!o || 'expression' !== o.type) return;
                      var a = E.getState(o, {stripDefaults: !1}),
                          l = this.createItemModel(n.__assign(
                              n.__assign({}, a), {id: this.generateId()}));
                      this._toplevelInsertItemAt(
                          o.index + 1, l, !1, o.folderId);
                      break;
                    case 'insert-item-at-index':
                      var c = this.createItemModel(e.state);
                      this._toplevelInsertItemAt(
                          e.index, c, e.focus, e.folderId);
                      break;
                    case 'new-expression-at-end':
                      var u = this.createItemModel({
                        type: 'expression',
                        id: this.generateId(),
                        color: this.getNextColor()
                      });
                      this.setEditListMode(!1),
                          C.insertItemAtEnd(this.listModel, u),
                          L.moveFocusToItem(this, u.id);
                      break;
                    case 'new-expression':
                      var p = this.createItemModel({
                        type: 'expression',
                        id: this.generateId(),
                        color: this.getNextColor()
                      });
                      this.setEditListMode(!1),
                          this._toplevelNewItemAtSelection(
                              p, {shouldFocus: !0}),
                          this._closeAddExpression();
                      break;
                    case 'new-text':
                      var h = this.createItemModel(
                          {id: this.generateId(), type: 'text'});
                      this._toplevelNewItemAtSelection(h, {shouldFocus: !0}),
                          this._closeAddExpression();
                      break;
                    case 'new-folder':
                      var f = this.createItemModel(
                          {type: 'folder', id: this.generateId()});
                      this._toplevelNewItemAtSelection(f, {shouldFocus: !0}),
                          this._closeAddExpression();
                      break;
                    case 'new-images':
                      this._uploadImagesAndWaitForThemToLoad({files: e.files}),
                          this._closeAddExpression();
                      break;
                    case 'change-image':
                      this._uploadImagesAndWaitForThemToLoad(
                          {files: e.files, id: e.id});
                      break;
                    case 'new-table':
                      var g = this._createTableItem();
                      this._toplevelNewItemAtSelection(g, {shouldFocus: !0}),
                          this._closeAddExpression();
                      break;
                    case 'paste-table':
                      this._pasteTable(e.data);
                      break;
                    case 'insert-several-expressions':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0,
                      this._insertSeveralExpressions(e.expressions);
                      break;
                    case 'append-number-list':
                      this._appendNumberList(e.latex);
                      break;
                    case 'remove-item-by-id':
                      C.removeItemById(this.listModel, e.id);
                      break;
                    case 'replace-item-at-index':
                      var m = this.createItemModel(e.state);
                      this._toplevelReplaceItemAt(e.index, m, e.focus);
                      break;
                    case 'create-sliders-for-item':
                      this.createSlidersForItem(e.id, e.variables);
                      break;
                    case 'start-dragdrop':
                      var r = this.getItemModel(e.id);
                      if (!r) return;
                      var y = this.getItemRootNodeById(r.id);
                      if (!y) return;
                      var v = y.getBoundingClientRect();
                      C.setSelected(this.listModel, void 0);
                      var b = e.grabY - v.top, x = !1, w = 1;
                      'folder' === r.type &&
                          (w += this.getNumberOfItemsInFolder(r.id),
                           r.collapsed || (x = !0, I.setCollapsed(r, !0))),
                          C.setDragState(this.listModel, {
                            firstItemId: r.id,
                            numberOfItems: w,
                            expandFolder: x,
                            grabOffset: b,
                            mouseY: e.mouseY,
                            itemTop: 0
                          }),
                          this.dragdrop_expressions.startDragging(e.mouseY);
                      break;
                    case 'update-dragdrop':
                      var A = this.listModel.dragState;
                      if (!A) return;
                      C.setDragState(
                          this.listModel,
                          n.__assign(n.__assign({}, A), {mouseY: e.mouseY}));
                      break;
                    case 'stop-dragdrop':
                      var A = this.listModel.dragState;
                      if (!A) return;
                      var D = this.getItemModel(A.firstItemId);
                      if (!D) return;
                      C.setSelected(this.listModel, D),
                          'folder' === D.type && A.expandFolder &&
                          I.setCollapsed(D, !1),
                          C.setDragState(this.listModel, void 0);
                      break;
                    case 'set-selected-id':
                      var F = this.getItemModel(e.id);
                      C.setSelected(this.listModel, F);
                      break;
                    case 'set-selected-index':
                      var q = this.getItemModelByIndex(e.index);
                      C.setSelected(this.listModel, q);
                      break;
                    case 'set-none-selected':
                      C.setSelected(this.listModel, void 0);
                      break;
                    case 'set-focus-location':
                      'table' === (e.location ? e.location.type : '') &&
                          (this.layoutModel = n.__assign(
                               n.__assign({}, this.layoutModel),
                               {inEditListMode: !1})),
                          L.setFocusLocation(this, e.location);
                      break;
                    case 'move-focus-to-item':
                      L.moveFocusToItem(this, e.id, e.where);
                      break;
                    case 'blur-focus-location':
                      this.isFocusLocationFocused(e.location) &&
                          L.setFocusLocation(this, void 0);
                      break;
                    case 'set-folder-collapsed':
                      var r = this.getItemModel(e.id);
                      if (!r || 'folder' !== r.type) return;
                      I.setCollapsed(r, e.isCollapsed);
                      break;
                    case 'set-item-secret':
                      var N = this.getItemModel(e.id);
                      if (!N) return;
                      T.setSecret(N, e.isSecret);
                      break;
                    case 'set-tablecolumn-color':
                      var r = this.getItemModel(e.tableId);
                      if (!r || 'table' !== r.type) return;
                      S.setColumnColor(r, e.columnId, e.color);
                      break;
                    case 'set-show-cdf':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setShowCDF(r, e.showCDF);
                      break;
                    case 'set-cdf-min':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setCDFMin(r, e.latex);
                      break;
                    case 'set-cdf-max':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setCDFMax(r, e.latex);
                      break;
                    case 'toggle-item-hidden':
                      this._toggleItemHidden(e.id);
                      break;
                    case 'toggle-tablecolumn-hidden':
                      this._toggleTableColumnHidden(e.tableId, e.columnId);
                      break;
                    case 'toggle-item-settings-menu':
                      this.listModel.openItemMenu&& e.menu.model ===
                              this.listModel.openItemMenu.model ?
                          this.listModel.openItemMenu = void 0 :
                          (this.listModel.openItemMenu = e.menu,
                           e.menu.focusFirstOption && L.setFocusLocation(this, {
                             type: 'expression-menu',
                             id: e.menu.model.id,
                             location: 'start'
                           }));
                      break;
                    case 'close-item-settings-menu':
                      this.listModel.openItemMenu = void 0;
                      break;
                    case 'toggle-fraction-evaluation':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      var R = E.shouldEvaluationDisplayAsFraction(r);
                      E.setEvaluationAsFraction(r, !R);
                      break;
                    case 'set-item-label':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setLabel(r, e.label),
                          this.enqueueEvent('userEditedLabel');
                      break;
                    case 'set-item-showlabel':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setShowLabel(r, e.showLabel),
                          e.showLabel ||
                          (E.setInteractiveLabel(r, !1),
                           E.setEditableLabelMode(r, _.EditableLabelMode.None));
                      break;
                    case 'set-item-color':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setColor(r, e.color);
                      break;
                    case 'set-item-fill':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setFill(r, e.fill),
                          this._setItemHidden(
                              r.id, E.areAllVisibilityPropsOff(r));
                      break;
                    case 'set-image-opacity':
                      var r = this.getItemModel(e.id);
                      if (!r || 'image' !== r.type) return;
                      M.setOpacity(r, e.opacity), this._setItemHidden(r.id, !1);
                      break;
                    case 'set-image-in-foreground':
                      var r = this.getItemModel(e.id);
                      if (!r || 'image' !== r.type) return;
                      M.setForeground(r, e.foreground);
                      break;
                    case 'image-upload-error':
                      this.__pendingImageUploads[e.token] &&
                          (delete this.__pendingImageUploads[e.token],
                           this._showToast(
                               {message: this.t('Image upload failed.')}));
                      break;
                    case 'image-upload-success':
                      if (this.__pendingImageUploads[e.token])
                        if (delete this.__pendingImageUploads[e.token], e.id) {
                          var r = this.getItemModel(e.id);
                          r && 'image' === r.type && M.setImageURL(r, e.url)
                        } else {
                          var j = this.createItemModel({
                            type: 'image',
                            id: this.generateId(),
                            width: e.width,
                            height: e.height,
                            image_url: e.url,
                            name: e.name
                          });
                          this._toplevelNewItemAtSelection(j, {shouldFocus: !1})
                        }
                      this.isUploadingImages() || (this.toastData = {});
                      break;
                    case 'image-load-success':
                      var j = this.getItemModel(e.id);
                      if (!j || 'image' !== j.type) return;
                      M.setLoadStatus(j, 'loaded'), this.imageRetryState = {
                        lastAttemptTime: 0,
                        attempts: 0
                      };
                      break;
                    case 'image-load-error':
                      var j = this.getItemModel(e.id);
                      if (!j || 'image' !== j.type) return;
                      M.setLoadStatus(j, 'failed');
                      break;
                    case 'image-retry-loading':
                      var j = this.getItemModel(e.id);
                      if (!j || 'image' !== j.type) return;
                      M.retryLoading(j);
                      break;
                    case 'set-item-dragmode':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setDragMode(r, e.dragMode),
                          e.dragMode !== d.DragMode.NONE &&
                          this._setItemHidden(e.id, !1);
                      break;
                    case 'set-tablecolumn-dragmode':
                      var r = this.getItemModel(e.tableId);
                      if (!r || 'table' !== r.type) return;
                      S.setColumnDragMode(r, e.columnId, e.dragMode),
                          e.dragMode !== d.DragMode.NONE &&
                          this._setTableColumnHidden(e.tableId, e.columnId, !1);
                      break;
                    case 'set-tablecolumn-points':
                      var r = this.getItemModel(e.tableId);
                      if (!r || 'table' !== r.type) return;
                      S.setColumnPoints(r, e.columnId, e.bool),
                          this._setTableColumnHidden(
                              e.tableId, e.columnId,
                              S.shouldHideColumn(r, e.columnId));
                      break;
                    case 'set-tablecolumn-lines':
                      var r = this.getItemModel(e.tableId);
                      if (!r || 'table' !== r.type) return;
                      S.setColumnLines(r, e.columnId, e.bool),
                          this._setTableColumnHidden(
                              e.tableId, e.columnId,
                              S.shouldHideColumn(r, e.columnId));
                      break;
                    case 'set-tablecolumn-linestyle':
                      var r = this.getItemModel(e.tableId);
                      if (!r || 'table' !== r.type) return;
                      S.setColumnLineStyle(r, e.columnId, e.lineStyle),
                          this._setTableColumnHidden(e.tableId, e.columnId, !1);
                      break;
                    case 'set-tablecolumn-pointstyle':
                      var r = this.getItemModel(e.tableId);
                      if (!r || 'table' !== r.type) return;
                      S.setColumnPointStyle(r, e.columnId, e.pointStyle),
                          this._setTableColumnHidden(e.tableId, e.columnId, !1);
                      break;
                    case 'set-item-points':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setPoints(r, e.points),
                          this._setItemHidden(
                              e.id, E.areAllVisibilityPropsOff(r)),
                          e.points || r.dragMode === d.DragMode.NONE ||
                          E.setDragMode(r, d.DragMode.NONE);
                      break;
                    case 'set-item-pointstyle':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setPointStyle(r, e.pointStyle),
                          this._setItemHidden(e.id, !1);
                      break;
                    case 'set-item-lines':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setLines(r, e.lines),
                          this._setItemHidden(
                              e.id, E.areAllVisibilityPropsOff(r));
                      break;
                    case 'set-item-linestyle':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setLineStyle(r, e.lineStyle),
                          this._setItemHidden(e.id, !1);
                      break;
                    case 'set-item-label-dropdown-open':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setLabelDropdownOpen(r, e.open);
                      break;
                    case 'set-item-fillopacity':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setFillOpacity(r, e.fillOpacity),
                          this._setItemHidden(e.id, !1);
                      break;
                    case 'set-item-linewidth':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setLineWidth(r, e.lineWidth),
                          this._setItemHidden(e.id, !1);
                      break;
                    case 'set-item-labelSize':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setLabelSize(r, e.labelSize);
                      break;
                    case 'set-item-label-orientation':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setLabelOrientation(r, e.labelOrientation);
                      break;
                    case 'set-item-vertical-label':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setVerticalLabel(r, e.verticalLabel);
                      break;
                    case 'set-suppress-text-outline':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setSuppressTextOutline(r, e.suppressTextOutline);
                      break;
                    case 'set-item-interactive-label':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setInteractiveLabel(r, e.interactiveLabel),
                          e.interactiveLabel &&
                          E.setEditableLabelMode(r, _.EditableLabelMode.None);
                      break;
                    case 'set-item-editable-label-mode':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      r.editableLabelMode !== _.EditableLabelMode.None &&
                          e.editableLabelMode !== _.EditableLabelMode.None &&
                          r.editableLabelMode !== e.editableLabelMode &&
                          E.setLabel(r, ''),
                          E.setEditableLabelMode(r, e.editableLabelMode),
                          e.editableLabelMode !== _.EditableLabelMode.None &&
                          E.setInteractiveLabel(r, !1);
                      break;
                    case 'plot-residuals':
                      var U = this.getItemModel(e.id);
                      if (!U || 'expression' !== U.type) return;
                      var z = U.formula.regression, W = z.residualSuggestionId;
                      if (!W) return;
                      var H = this.getItemModel(W);
                      if (!H) return;
                      S.insertBlankColumn(H, H.columnModels.length - 1, {
                        id: this.generateId(),
                        latex: s.identifierToLatex(z.residualVariable),
                        color: this.getNextColor()
                      });
                      break;
                    case 'toggle-logmode':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      var Y = r.isLogModeRegression;
                      E.setLogMode(r, !Y);
                      break;
                    case 'set-item-latex':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var X = this.getItemModel(e.id);
                      if (!X || 'expression' !== X.type) return;
                      var $ = e.latex;
                      if ('"' === $ && this.areNotesEnabled()) {
                        var Q = this.createItemModel(
                            {id: this.generateId(), type: 'text'});
                        this._toplevelReplaceItemAt(X.index, Q, !0)
                      } else if ('' === $)
                        E.blankOutExpressionAfterClearingLatex(X);
                      else if ('folder' === $ && this.areFoldersEnabled()) {
                        var Z = this.createItemModel(
                            {id: this.generateId(), type: 'folder'});
                        this._toplevelReplaceItemAt(X.index, Z, !0)
                      } else if ('table' === $) {
                        var J = this._createTableItem();
                        this._toplevelReplaceItemAt(X.index, J, !0)
                      } else
                        'betchacant' === $ ? this.runAfterDispatch(function() {
                          t.triggerBetchacant && t.triggerBetchacant()
                        }) :
                                             E.setLatex(X, $);
                      break;
                    case 'set-visualization-prop':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setVizProp(r, e.prop, e.latex);
                      break;
                    case 'set-clickableinfo-prop':
                      var r = this.getItemModel(e.id);
                      if (!r) return;
                      'expression' === r.type ?
                          E.setClickableInfoProp(r, e.prop, e.value) :
                          'image' === r.type &&
                              M.setClickableInfoProp(r, e.prop, e.value),
                          !0 === e.value &&
                          (L.setFocusLocation(this, {
                            type: 'clickableinfo-prop',
                            id: e.id,
                            location: 'assignment'
                          }),
                           this.listModel.openItemMenu = void 0);
                      break;
                    case 'set-folder-title':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var r = this.getItemModel(e.id);
                      if (!r || 'folder' !== r.type) return;
                      I.setTitle(r, e.title);
                      break;
                    case 'set-image-mq-attribute':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var r = this.getItemModel(e.id);
                      if (!r || 'image' !== r.type) return;
                      M.setMQAttribute(r, e.attribute, e.latex);
                      break;
                    case 'set-image-name':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var r = this.getItemModel(e.id);
                      if (!r || 'image' !== r.type) return;
                      M.setName(r, e.name);
                      break;
                    case 'set-graph-settings':
                      for (var ee in e)
                        'type' !== ee &&
                            this.graphSettings.setProperty(ee, e[ee]);
                      break;
                    case 'set-polar-domain-minlatex':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setPolarDomainMin(r, e.latex);
                      break;
                    case 'set-polar-domain-maxlatex':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setPolarDomainMax(r, e.latex);
                      break;
                    case 'set-parametric-domain-minlatex':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setParametricDomainMin(r, e.latex);
                      break;
                    case 'set-parametric-domain-maxlatex':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setParametricDomainMax(r, e.latex);
                      break;
                    case 'set-note-text':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var r = this.getItemModel(e.id);
                      if (!r || 'text' !== r.type) return;
                      k.setText(r, e.text);
                      break;
                    case 'set-edit-list-mode':
                      var r = C.getSelected(this.listModel);
                      if (this.setEditListMode(e.isEditListMode),
                          e.focusExpressionList) {
                        if (void 0 === r && (r = this.getItemModelByIndex(0)),
                            !r)
                          return;
                        L.moveFocusToItem(
                            this, r.id,
                            'table' === r.type && e.isEditListMode ?
                                'container' :
                                'start')
                      } else
                        C.setSelected(this.listModel, void 0),
                            L.setFocusLocation(this, void 0);
                      break;
                    case 'set-projector-mode':
                      this.getGraphSettings().config.setProperty(
                          'projectorMode', e.value);
                      break;
                    case 'set-inverted-colors':
                      this.getGraphSettings().config.setProperty(
                          'invertedColors', e.value);
                      break;
                    case 'set-tablecell-latex':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var r = this.getItemModel(e.tableId);
                      if (!r || 'table' !== r.type) return;
                      S.setCellLatex(r, e.cell, e.latex);
                      break;
                    case 'set-state':
                      this.externalSetState(e.state, e.opts);
                      break;
                    case 'set-blank':
                      this.externalSetState(this.getBlankState(), e.opts);
                      break;
                    case 'clear-unsaved-changes':
                      this.enqueueEvent('clearUnsavedChanges');
                      break;
                    case 'reset-graph':
                      var te = this.getState();
                      this.externalSetState(
                          this.graphSettings.defaultState, {}),
                          this._showToast({
                            message: this.t('Graph reset.'),
                            undoCallback: function() {
                              return t.dispatch(
                                  {type: 'set-state', state: te, opts: {}})
                            }
                          }),
                          this.enqueueEvent('graphReset');
                      break;
                    case 'clear-graph':
                      if (this.triggerClearGraph)
                        return void this.runAfterDispatch(function() {
                          return t.triggerClearGraph()
                        });
                      var re = this.getState();
                      this.externalSetState(this.getBlankState(), {});
                      var D = this.getItemModelByIndex(0);
                      D && L.moveFocusToItem(this, D.id, 'end'),
                          this._showToast({
                            message: this.t('Graph cleared.'),
                            undoCallback: function() {
                              return t.dispatch(
                                  {type: 'set-state', state: re, opts: {}})
                            }
                          }),
                          this.enqueueEvent('graphReset');
                      break;
                    case 'on-evaluator-changes':
                      C.onEvaluatorFormulaUpdates(this.listModel, e.changes);
                      break;
                    case 'process-graph-data':
                      var ne;
                      for (ne in e.graphData.addedGraphs) {
                        var ie = e.graphData.addedGraphs[ne];
                        this.grapher && this.grapher.updateSketch(ne, ie),
                            C.onGraphComputed(this.listModel, ne, ie)
                      }
                      for (ne in e.graphData.removedGraphs)
                        this.grapher && this.grapher.hide(ne);
                      for (ne in e.graphData.intersections)
                        this.grapher && '2d' === this.grapher.type &&
                            this.grapher.updateIntersections(
                                ne, e.graphData.intersections[ne]);
                      this.grapher && this.grapher.poiController &&
                          this.grapher.poiController.handleTraceUpdate();
                      break;
                    case 'add-helper-expression':
                      C.addHelperExpression(this.listModel, e.state);
                      break;
                    case 'tick':
                      this._tickSliders(e.time);
                      break;
                    case 'adjust-slider-by-keyboard':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.adjustSliderByKeyboard(r, e.adjustment);
                      break;
                    case 'adjust-slider-by-dragging-thumb':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.adjustSliderByDraggingThumb(r, e.target);
                      break;
                    case 'set-slider-minlatex':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setSliderMin(r, e.latex);
                      break;
                    case 'set-slider-maxlatex':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setSliderMax(r, e.latex);
                      break;
                    case 'set-slider-steplatex':
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setSliderStep(r, e.latex);
                      break;
                    case 'set-slider-dragging':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setSliderDragging(r, e.dragging);
                      break;
                    case 'play-slider-from-min':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      var oe = E.getSliderMin(r);
                      if (isNaN(oe)) return;
                      var se = E.computeNewSliderLatex(r.latex, oe);
                      E.setSliderIsPlaying(r, !1), E.setLatex(r, se),
                          E.setSliderIsPlaying(r, !0);
                      break;
                    case 'set-slider-isplaying':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setSliderIsPlaying(r, e.isPlaying);
                      break;
                    case 'set-slider-loopmode':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setSliderLoopMode(r, e.loopMode);
                      break;
                    case 'set-slider-animationperiod':
                      var r = this.getItemModel(e.id);
                      if (!r || 'expression' !== r.type) return;
                      E.setSliderAnimationPeriod(r, e.animationPeriod);
                      break;
                    case 'show-expressions-list':
                      this._showExpressions();
                      break;
                    case 'hide-expressions-list':
                      this._hideExpressions();
                      break;
                    case 'open-drawer':
                      this.enqueueEvent('openDrawer');
                      break;
                    case 're-randomize':
                      this.setRandomSeed(K.default());
                      break;
                    case 'resize-exp-list':
                      this._setExpListWidth(e.expListWidth);
                      break;
                    case 'toast/show':
                      this._showToast(e.toast);
                      break;
                    case 'toast/close':
                      var ae = this.toastData.onHide;
                      ae && this.runAfterDispatch(ae), this.toastData = {};
                      break;
                    case 'toast/undo':
                      var le = this.toastData.undoCallback;
                      le && this.runAfterDispatch(le), this.toastData = {};
                      break;
                    case 'toast/learn-more':
                      var ce = this.toastData.undoCallback;
                      ce && this.runAfterDispatch(ce), this.toastData = {};
                      break;
                    case 'start-moving-point':
                      B.onStartMovingPoint(this, this.listModel, e.pointInfo);
                      break;
                    case 'stop-moving-point':
                      B.onStopMovingPoint(this, e.pointInfo);
                      break;
                    case 'on-move-point':
                      B.onMovePoint(
                          this, e.pointInfo, e.screenPt, e.projection,
                          e.keyboardDirection) &&
                          this.enqueueEvent('userMovedPoint');
                      break;
                    case 'commit-user-requested-viewport':
                      this._commitUserRequestedViewport(e.viewport);
                      break;
                    case 'set-viewport':
                      this._setAxisLimitLatex('xmin', e.viewport.xmin + ''),
                          this._setAxisLimitLatex('xmax', e.viewport.xmax + ''),
                          this._setAxisLimitLatex('ymin', e.viewport.ymin + ''),
                          this._setAxisLimitLatex('ymax', e.viewport.ymax + '');
                      break;
                    case 'set-axis-limit-latex':
                      this._setAxisLimitLatex(e.limit, e.latex);
                      break;
                    case 'toggle-graph-settings':
                      this.layoutModel =
                          n.__assign(n.__assign({}, this.layoutModel), {
                            graphSettingsOpen:
                                !this.layoutModel.graphSettingsOpen
                          }),
                      e.focusOnOpen && this.layoutModel.graphSettingsOpen &&
                          L.setFocusLocation(
                              this,
                              {type: 'settings', location: 'projector-mode'});
                      break;
                    case 'close-graph-settings':
                      this.layoutModel = n.__assign(
                          n.__assign({}, this.layoutModel),
                          {graphSettingsOpen: !1}),
                      e.focusIconAfterClose &&
                          L.setFocusLocation(
                              this, {type: 'settings', location: 'icon'});
                      break;
                    case 'toggle-add-expression':
                      this.layoutModel =
                          n.__assign(n.__assign({}, this.layoutModel), {
                            addExpressionOpen:
                                !this.layoutModel.addExpressionOpen
                          }),
                      e.focusOnOpen && this.layoutModel.addExpressionOpen &&
                          L.setFocusLocation(
                              this, {type: 'add-expression-btn'});
                      break;
                    case 'close-add-expression':
                      this._closeAddExpression(),
                          e.focusIconAfterClose &&
                          L.setFocusLocation(this, {type: 'add-item-btn'});
                      break;
                    case 'ui/container-resized':
                      this.layoutMeasurements = {
                        width: e.size.width,
                        height: e.size.height
                      },
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0;
                      break;
                    case 'enter-printmode':
                      this.inPrintMode = !0;
                      break;
                    case 'exit-printmode':
                      this.inPrintMode = !1;
                      break;
                    case 'expression-size-exceeded':
                      this._showToast({
                        message: this.t(
                            'Expression size cannot exceed 100 characters.')
                      });
                      break;
                    case 'keypad/set-layout':
                      this.layoutModel = n.__assign(
                          n.__assign({}, this.layoutModel),
                          {keypadLayout: e.layout, keypadFunctionsOpen: !1});
                      break;
                    case 'keypad/set-functions-tab':
                      this.layoutModel = n.__assign(
                          n.__assign({}, this.layoutModel),
                          {keypadFunctionsTab: e.tab});
                      break;
                    case 'keypad/set-minimized':
                      this.layoutModel =
                          n.__assign(n.__assign({}, this.layoutModel), {
                            keypadMinimized: e.minimized,
                            keypadLayout: 'mainNumbers'
                          }),
                      this.shouldScrollSelectedItemIntoViewAfterDispatch = !0,
                      this.needsFakeKeypad() || L.addFocusForKeypad(this);
                      break;
                    case 'keypad/type-text':
                      this.layoutModel = n.__assign(
                          n.__assign({}, this.layoutModel),
                          {keypadFunctionsOpen: !1}),
                      this.runAfterDispatch(function() {
                        var r = V.default.getFocusedMathquill();
                        r &&
                            V.default.canAcceptText(
                                r, t.getCapExpressionSize(), e.text) &&
                            (r.typedText(e.text),
                             V.default.simulateUserChangedLatex(r))
                      });
                      break;
                    case 'keypad/press-key':
                      this.layoutModel = n.__assign(
                          n.__assign({}, this.layoutModel),
                          {keypadFunctionsOpen: !1}),
                      this.runAfterDispatch(function() {
                        var t = V.default.getFocusedMathquill();
                        t && V.default.simulateKeypress(t, e.key)
                      });
                      break;
                    case 'keypad/custom-command':
                      this.layoutModel = n.__assign(
                          n.__assign({}, this.layoutModel),
                          {keypadFunctionsOpen: !1}),
                      this.runAfterDispatch(function() {
                        var t = V.default.getFocusedMathquill();
                        t &&
                            (G.execute(t, e.command),
                             V.default.simulateUserChangedLatex(t))
                      });
                      break;
                    case 'keypad/shift':
                      this.layoutModel =
                          n.__assign(n.__assign({}, this.layoutModel), {
                            keypadLayout: O.getShiftedLayoutForCurrentLayout(
                                this.getKeypadLayout()),
                            keypadFunctionsOpen: !1
                          });
                      break;
                    case 'keypad/123':
                      this.layoutModel =
                          n.__assign(n.__assign({}, this.layoutModel), {
                            keypadLayout: 'mainNumbers',
                            keypadFunctionsOpen: !1
                          });
                      break;
                    case 'keypad/abc':
                      this.isQwertyKeyboardEnabled() ?
                          this.layoutModel =
                              n.__assign(n.__assign({}, this.layoutModel), {
                                keypadLayout: 'letters',
                                keypadFunctionsOpen: !1
                              }) :
                          this.layoutModel =
                              n.__assign(n.__assign({}, this.layoutModel), {
                                keypadLayout: 'noQwertyLetters',
                                keypadFunctionsOpen: !1
                              });
                      break;
                    case 'keypad/functions':
                      this.layoutModel =
                          n.__assign(n.__assign({}, this.layoutModel), {
                            keypadFunctionsOpen:
                                !this.isKeypadFunctionsPopoverOpen()
                          });
                      break;
                    case 'open-on-web':
                      this._openOnWeb();
                      break;
                    case 'file-is-dragged-over':
                      this.listModel.openItemMenu = void 0,
                      this.layoutModel = n.__assign(
                          n.__assign({}, this.layoutModel),
                          {isFileDraggedOver: !0});
                      break;
                    case 'file-is-not-dragged-over':
                      this.layoutModel = n.__assign(
                          n.__assign({}, this.layoutModel),
                          {isFileDraggedOver: !1});
                      break;
                    case 'zoom':
                      this.grapher &&
                          this.grapher.viewportController.zoom(e.direction);
                      break;
                    case 'set-hovered-image':
                      var r = this.getItemModel(e.id);
                      if (!r || 'image' !== r.type) return;
                      M.setClickableInfoProp(r, 'hoveredImage', e.url);
                      break;
                    case 'set-depressed-image':
                      var r = this.getItemModel(e.id);
                      if (!r || 'image' !== r.type) return;
                      M.setClickableInfoProp(r, 'depressedImage', e.url);
                      break;
                    case 'clickable-item-clicked':
                      var r = this.getItemModel(e.id);
                      if (!r) return;
                      var ue;
                      if ('expression' === r.type ?
                              ue = E.getClickableInfoUpdateLatex(r) :
                              'image' === r.type &&
                                  (ue = M.getClickableInfoUpdateLatex(r)),
                          !ue)
                        return;
                      var de;
                      if ('expression' === r.type ?
                              de = E.getClickableInfoUpdateIdentifier(r) :
                              'image' === r.type &&
                                  (de = M.getClickableInfoUpdateIdentifier(r)),
                          de) {
                        var pe = C.getItemsByIdentifier(this.listModel, de);
                        if (1 === pe.length) {
                          var he = pe[0];
                          he.slider.isPlaying ?
                              (E.setSliderIsPlaying(he, !1), E.setLatex(he, ue),
                               E.setSliderIsPlaying(he, !0)) :
                              E.setLatex(he, ue)
                        }
                        this.enqueueEvent('userClickedObject')
                      }
                      break;
                    case 'update-ide-search-str':
                      this.updateIDESearchStr(e.str);
                      break;
                    case 'set-braille-mode':
                      this.setBrailleMode(e.mode);
                      break;
                    case 'set-six-key-input':
                      this.setSixKeyInput(e.useSixKeyInput);
                      break;
                    default:
                      return e
                  }
                },
                e.prototype.updateIDESearchStr =
                           function(e) {
                  this.ideSearchStr = e,
                  C.filterItemsBySearch(this.listModel, e)
                },
                e.prototype.getIDESearchStr =
                           function() {
                  return this.ideSearchStr || ''
                },
                e.prototype.areClickableObjectsTemporarilyDisabled =
                           function() {
                  return this.__waitingForClickableObjectWorkerResponse
                },
                e.prototype.getBrailleMode =
                           function() {
                  return this.graphSettings.config.brailleMode
                },
                e.prototype.setBrailleMode =
                           function(e) {
                  this.graphSettings.config.setProperty('brailleMode', e)
                },
                e.prototype.getSixKeyInput =
                           function() {
                  return this.graphSettings.config.sixKeyInput
                },
                e.prototype.setSixKeyInput =
                           function(e) {
                  this.graphSettings.config.setProperty('sixKeyInput', e)
                },
                e.prototype.getBrailleControls =
                           function() {
                  return this.graphSettings.config.brailleControls
                },
                e.prototype.setBrailleControls =
                           function(e) {
                  this.graphSettings.config.setProperty('brailleControls', e)
                },
                e.prototype.setEditListMode =
                           function(e) {
                  this.layoutModel = n.__assign(
                      n.__assign({}, this.layoutModel), {inEditListMode: e})
                },
                e.prototype._createTableItem =
                           function() {
                  var e = C.findAvailableColumnSubscript(this.listModel),
                      t = S.makeTableState(e, [[''], ['']], this);
                  return this.createItemModel(t)
                },
                e.prototype._populateSettingsViewLimitLatex =
                           function() {
                  this.grapher &&
                      (this.settingsViewModel =
                           n.__assign(n.__assign({}, this.settingsViewModel), {
                             limitLatex: F.limitLatex(
                                 this.grapher.getCurrentViewport(),
                                 this.getGraphSettings().xAxisStep,
                                 this.getGraphSettings().yAxisStep)
                           }))
                },
                e.prototype.getSettingsViewModel =
                           function() {
                  return this.settingsViewModel
                },
                e.prototype.getListModel =
                           function() {
                  return this.listModel
                },
                e.prototype.hasBackgroundColor =
                           function() {
                  return '#ffffff' !== this.getBackgroundColor()
                },
                e.prototype.getBackgroundColor =
                           function() {
                  return this.getGraphSettings().getBackgroundColor()
                },
                e.prototype.getTextColor =
                           function() {
                  return this.getGraphSettings().getTextColor()
                },
                e.prototype.getPillboxBackgroundColor =
                           function() {
                  return x.shadeColor(this.getBackgroundColor(), -.07)
                },
                e.prototype.subToChanges =
                           function(e) {
                  var t = this, r = this.nextSubscription;
                  return this.nextSubscription += 1, this.subscriptions[r] = e,
                                                     function() {
                                                       delete t.subscriptions[r]
                                                     }
                },
                e.prototype.updateTheComputedWorld =
                           function() {
                  var e = this;
                  C.reindex(this.listModel), C.updateDrawOrder(this.listModel),
                      this.grapher &&
                      this.grapher.setSketchOrder(this.listModel.drawOrder);
                  for (var t = 0, r = this.getAllItemModels(); t < r.length;
                       t++) {
                    var i = r[t];
                    switch (i.type) {
                      case 'expression':
                        E.onControllerUpdate(i);
                        break;
                      case 'image':
                        M.onControllerUpdate(i);
                        break;
                      case 'table':
                        S.onControllerUpdate(i);
                        break;
                      case 'folder':
                        I.onControllerUpdate(i);
                        break;
                      case 'text':
                        k.onControllerUpdate(i);
                        break;
                      default:
                        return i
                    }
                  }
                  if (this.isCurrentFocusLocationValid() ||
                          L.setFocusLocation(this, void 0),
                      this.listModel.openItemMenu) {
                    document.body &&
                            document.body.contains(
                                this.listModel.openItemMenu.icon) ||
                        (this.listModel.openItemMenu = void 0)
                  }
                  var o = this.getSelectedItem();
                  o && !this.getItemModel(o.id) &&
                      C.setSelected(this.listModel, void 0),
                      this.layoutModel.graphSettingsOpen ||
                      this._populateSettingsViewLimitLatex(),
                      this.propagateSelection(),
                      this.isKeypadOpen() ||
                      (this.layoutModel = n.__assign(
                           n.__assign({}, this.layoutModel),
                           {keypadFunctionsOpen: !1})),
                      this.runAfterDispatch(function() {
                        e.grapher && '2d' === e.grapher.type &&
                            e.grapher.audioGraph.checkIfSelectedItemChanged(
                                o ? o.id : void 0),
                            e.grapher && '2d' === e.grapher.type &&
                            e.focusLocation &&
                            e.grapher.audioGraph.exitAudioTrace()
                      })
                },
                e.prototype.propagateSelection =
                           function() {
                  this.grapher&& this.evaluator ?
                      this.__lastSelectedId = r.propagateSelection(
                          this, this.grapher, this.evaluator,
                          this.__lastSelectedId) :
                      this.__lastSelectedId = void 0
                },
                e.prototype.getIntersectId =
                           function() {
                  return this.__lastSelectedId
                },
                e.prototype.areParsableObjectsEqual =
                           function(e, t) {
                  return e === t ||
                      a.isEqual(
                          n.__assign(
                              n.__assign({}, e),
                              {regressionParameters: void 0}),
                          n.__assign(
                              n.__assign({}, t),
                              {regressionParameters: void 0}))
                },
                e.prototype.requestParseForAllItems =
                           function() {
                  this.isCurrentlyDoingSetState &&
                      this.evaluator.clearStatementsAndStartCompleteState();
                  for (var e = {}, t = this.lastParsableObjects, r = 0,
                           n = this.getAllItemModels();
                       r < n.length; r++) {
                    var i = n[r];
                    switch (i.type) {
                      case 'expression':
                      case 'image':
                      case 'table':
                        e[i.id] = i.cachedParsableState;
                        break;
                      case 'folder':
                      case 'text':
                        break;
                      default:
                        return i
                    }
                  }
                  for (var o = 0, s = C.getAllHelperItemModels(this.listModel);
                       o < s.length; o++) {
                    var i = s[o];
                    e[i.id] = i.cachedParsableState
                  }
                  for (var a in e) {
                    var l = e[a], c = t[a];
                    if ('image' === l.type &&
                        (!c || l.type !== c.type || l.guid !== c.guid) &&
                        this.grapher) {
                      var i = this.getItemModel(a);
                      i && 'image' === i.type && this.grapher.addGraphImage(i)
                    }
                    this.areParsableObjectsEqual(l, c) ||
                        (this.grapher && 'statement' === l.type &&
                             '' === l.latex &&
                             this.grapher.removeGraphSketch(l.id),
                         this.evaluator.addStatement(l))
                  }
                  for (var a in t) {
                    var c = t[a], l = e[a];
                    if ('image' !== c.type ||
                            l && l.type === c.type && l.guid === c.guid ||
                            this.grapher && this.grapher.removeGraphImage(a),
                        !l &&
                            (this.evaluator.removeStatement(a),
                             'table' === c.type))
                      for (var u = 0, d = c.columns; u < d.length; u++) {
                        var p = d[u];
                        this.evaluator.removeStatement(p.id)
                      }
                  }
                  this.lastParsableObjects = e
                },
                e.prototype.getViewState =
                           function() {
                  if (this.grapher) {
                    var e = this.grapher.getProjection();
                    return {
                      viewport: e.viewport.toObject(), screen: e.screen
                    }
                  }
                },
                e.prototype.setEvaluator =
                           function(e) {
                  this.evaluator = e
                },
                e.prototype.setGrapher =
                           function(e) {
                  this.grapher = e
                },
                e.prototype.getGrapher =
                           function() {
                  return this.grapher
                },
                e.prototype.shouldExpressionZoomFit =
                           function(e) {
                  return !!this.grapher &&
                      (!!this.isZoomFitEnabled() &&
                       (('expression' === e.type || 'table' === e.type) &&
                        (!!('expression' !== e.type ||
                            !e.error && e.shouldGraph &&
                                e.formula.is_graphable) &&
                         (!(!e.boundingBoxes || !e.boundingBoxes.length) &&
                          A.shouldExpressionZoomFit(
                              e.boundingBoxes,
                              this.grapher.viewportController
                                  .getProjection())))))
                },
                e.prototype.setBugsnagContext =
                           function(e) {
                  this.bugsnagContext = e
                },
                e.prototype.getItemRootNodeById =
                           function(e) {
                  var t = this.getItemModel(e);
                  return t && t.dcgView ? t.dcgView.findRootNode() : void 0
                },
                e.prototype.getItemSelectorById =
                           function(e) {
                  var t = this.getItemRootNodeById(e);
                  return t ? q(t) : void 0
                },
                e.prototype.generateId =
                           function() {
                  var e = this.__nextItemId;
                  return this.__nextItemId += 1, e + ''
                },
                e.prototype.getNextColor =
                           function() {
                  return C.getNextColor(this.listModel)
                },
                e.prototype.getNextDisplayIndex =
                           function() {
                  return this.listModel.nextDisplayIndex
                },
                e.prototype._clearPendingImageUploads =
                           function() {
                  this.__pendingImageUploads = {}
                },
                e.prototype.isUploadingImages =
                           function() {
                  return Object.keys(this.__pendingImageUploads).length > 0
                },
                e.prototype.getExpressionAnalysis =
                           function() {
                  return this.listModel.expressionAnalysis
                },
                e.prototype.createItemModel =
                           function(e) {
                  return C.modelFromSpec(this.listModel, e)
                },
                e.prototype.getItemModel =
                           function(e) {
                  return C.getItemById(this.listModel, e)
                },
                e.prototype.getItemModelByIndex =
                           function(e) {
                  return C.getItemByIndex(this.listModel, e)
                },
                e.prototype.getItemCount =
                           function() {
                  return C.getItemCount(this.listModel)
                },
                e.prototype.getItemEditableLabelMode =
                           function(e) {
                  var t = this.getItemModel(e);
                  if (t && 'expression' === t.type)
                    return E.getEditableLabelMode(t)
                },
                e.prototype.isItemSecret =
                           function(e) {
                  var t = this.getItemModel(e);
                  return !!t && C.isItemSecret(t)
                },
                e.prototype.isItemSelected =
                           function(e) {
                  var t = this.getItemModel(e);
                  return !!t && C.isItemSelected(t)
                },
                e.prototype.isItemSelectable =
                           function(e) {
                  var t = this.getItemModel(e);
                  return !!t && C.isItemSelectable(t)
                },
                e.prototype.anyItemDependsOnRandomSeed =
                           function() {
                  return C.anyItemDependsOnRandomSeed(this.listModel)
                },
                e.prototype.getAllItemModels =
                           function() {
                  return C.getAllItemModels(this.listModel)
                },
                e.prototype.getAllModelsWithSliders =
                           function() {
                  return C.getAllModelsWithSliders(this.listModel)
                },
                e.prototype.getGraphSettings =
                           function() {
                  return this.graphSettings
                },
                e.prototype.getAudioGraph =
                           function() {
                  return void 0 !== this.grapher && '2d' === this.grapher.type ?
                      this.grapher.audioGraph :
                      void 0
                },
                e.prototype.inAudioTraceMode =
                           function() {
                  var e = this.getAudioGraph();
                  return !(!e || !e.audioTraceActive)
                },
                e.prototype.expressionsAreFullWidth =
                           function() {
                  return this.isNarrow() ||
                      !1 === this.graphSettings.config.graphpaper
                },
                e.prototype.getExpListWidthString =
                           function() {
                  return this.expressionsAreFullWidth() ? '100%' :
                      this.rootElt ? this._getExpListWidth() + 'px' :
                                     '0'
                },
                e.prototype.getExpListWidth =
                           function() {
                  return this.rootElt ? this._getExpListWidth() : 0
                },
                e.prototype.findFirstVisibleItem =
                           function() {
                  var e = U.getFirstVisibleItemId(
                      this, this._previousFirstVisibleId);
                  return this._previousFirstVisibleId = e,
                         e ? this.getItemModel(e) : void 0
                },
                e.prototype.findLastVisibleItem =
                           function() {
                  var e =
                      U.getLastVisibleItemId(this, this._previousLastVisibleId);
                  return this._previousLastVisibleId = e,
                         e ? this.getItemModel(e) : void 0
                },
                e.prototype.updateRenderShellsAfterDispatch =
                           function() {
                  if (this.rootElt && this.isListVisible()) {
                    var e = this.findFirstVisibleItem(),
                        t = this.findLastVisibleItem(),
                        r = e && this.getItemRootNodeById(e.id),
                        n = t && this.getItemRootNodeById(t.id);
                    if (r !== this.lastInfiniteScrollFirstDOM ||
                        n !== this.lastInfiniteScrollLastDOM ||
                        this.hasDispatchSinceLastInfiniteScrollUpdate) {
                      this.lastInfiniteScrollFirstDOM = r,
                      this.lastInfiniteScrollLastDOM = n,
                      this.hasDispatchSinceLastInfiniteScrollUpdate = !1;
                      for (var i = !1, o = e ? e.index : 1 / 0,
                               s = t ? t.index : 1 / 0,
                               a = this.listModel.dragState &&
                               this.listModel.dragState.firstItemId,
                               l = 0, c = this.getAllItemModels();
                           l < c.length; l++) {
                        var u = c[l],
                            d =
                                !(u.index >= o && u.index <= s &&
                                  !u.isHiddenFromUI);
                        if (a == u.id && (d = !1),
                            u.renderShell !== d &&
                                (u.renderShell = d, i = !0, d)) {
                          var p = this.getItemRootNodeById(u.id);
                          if (p) {
                            var h = p.getBoundingClientRect().height;
                            h > 0 && (u.cachedRenderHeight = h)
                          }
                        }
                      }
                      i && this.markTickRequiredNextFrame()
                    }
                  }
                },
                e.prototype.updateRenderShellsBeforePaint =
                           function() {
                  if (this.hasDispatchSinceLastInfiniteScrollUpdate = !0,
                      this.inPrintMode)
                    for (var e = 0, t = this.getAllItemModels(); e < t.length;
                         e++) {
                      var r = t[e];
                      r.renderShell = !1
                    }
                  else {
                    for (var n = 0, i = this.getAllItemModels(); n < i.length;
                         n++) {
                      var r = i[n];
                      r.isHiddenFromUI && (r.renderShell = !0)
                    }
                    var o = this.getSelectedItem();
                    o && (o.renderShell = !1)
                  }
                },
                e.prototype.updateDragDrop =
                           function() {
                  var e = this.listModel.dragState;
                  if (e) {
                    var t = this.getItemModel(e.firstItemId);
                    if (t) {
                      var r = this.dragdrop_expressions.applyDrag();
                      r &&
                          (C.setDragState(this.listModel, r.dragState),
                           T.setFolderId(t, r.folderId),
                           t.index !== r.newIndex &&
                               C.moveItemsTo(
                                   this.listModel, t.index, r.newIndex,
                                   e.numberOfItems))
                    }
                  }
                },
                e.prototype._tickSliders =
                           function(e) {
                  this.getPlayingSliders().forEach(function(t) {
                    E.tickSliderStep(t, e)
                  })
                },
                e.prototype.getPlayingSliders =
                           function() {
                  for (var e = this.getAllItemModels(), t = [], r = 0, n = e;
                       r < n.length; r++) {
                    var i = n[r];
                    'expression' === i.type && i.sliderExists &&
                        i.slider.isPlaying && t.push(i)
                  }
                  return t
                },
                e.prototype.hasAnyTableThatRequiresTicks =
                           function() {
                  for (var e = this.getAllItemModels(), t = 0, r = e;
                       t < r.length; t++) {
                    var n = r[t];
                    if (!n.renderShell && 'table' === n.type &&
                        n.rowModels.length >= 25)
                      return !0
                  }
                  return !1
                },
                e.prototype.areAnyImagesLoading =
                           function() {
                  return C.areAnyImagesLoading(this.listModel)
                },
                e.prototype._commitUserRequestedViewport =
                           function(e) {
                  this.grapher && this.grapher.setUserRequestedViewport(e)
                },
                e.prototype._setAxisLimitLatex =
                           function(e, t) {
                  var r, i;
                  this.settingsViewModel =
                      n.__assign(n.__assign({}, this.settingsViewModel), {
                        limitLatex: n.__assign(
                            n.__assign({}, this.settingsViewModel.limitLatex),
                            (r = {}, r[e] = t, r))
                      });
                  var o = '' === t && ('xstep' === e || 'ystep' === e),
                      s = o ? 0 : D.default(t, this.graphSettings.degreeMode);
                  switch (e) {
                    case 'xstep':
                      if (s < 0 || !isFinite(s)) return;
                      this.graphSettings.setProperty('xAxisStep', s);
                      break;
                    case 'ystep':
                      if (s < 0 || !isFinite(s)) return;
                      this.graphSettings.setProperty('yAxisStep', s);
                      break;
                    case 'xmin':
                    case 'xmax':
                    case 'ymin':
                    case 'ymax':
                      if (!this.grapher) return;
                      var a = this.grapher.viewportController.getViewport(),
                          l = 'xmin';
                      'xmin' === e && (l = 'xmax'),
                          'ymax' === e && (l = 'ymin'),
                          'ymin' === e && (l = 'ymax');
                      var c = D.default(
                              this.settingsViewModel.limitLatex[l],
                              this.graphSettings.degreeMode),
                          u = y.Viewport.fromObject(n.__assign(
                              n.__assign({}, a.toObject()),
                              (i = {}, i[e] = s, i[l] = c, i)));
                      if (!u.isValid()) return;
                      this.grapher.viewportController.setViewport(u);
                      var d = 'xmin' === e || 'xmax' === e ? 'x' : 'y';
                      this.graphSettings.setProperty('lastChangedAxis', d);
                      var p = u.isSquare(this.grapher.getProjection().screen);
                      this.graphSettings.setProperty('squareAxes', p)
                  }
                  if (this.grapher) {
                    var h = this.grapher.viewportController.getViewport()
                                .toObject();
                    this._commitUserRequestedViewport(h)
                  }
                },
                e.prototype.canUserAddExpressions =
                           function() {
                  return !!this.graphSettings.config.expressions
                },
                e.prototype.areNotesEnabled =
                           function() {
                  return !!this.graphSettings.config.notes
                },
                e.prototype.areSlidersEnabled =
                           function() {
                  return !!this.graphSettings.config.sliders
                },
                e.prototype.areLinksEnabled =
                           function() {
                  return !!this.graphSettings.config.links
                },
                e.prototype.areImagesEnabled =
                           function() {
                  var e = window.FileReader,
                      t = o.IS_IPAD && o.IOS_VERSION &&
                      8 === o.IOS_VERSION[0] && 0 === o.IOS_VERSION[1] &&
                      0 === o.IOS_VERSION[2];
                  return !(!this.graphSettings.config.images || !e || t)
                },
                e.prototype.areFoldersEnabled =
                           function() {
                  return !!this.graphSettings.config.folders
                },
                e.prototype.isDecimalToFractionEnabled =
                           function() {
                  return !!this.graphSettings.config.decimalToFraction
                },
                e.prototype.isTraceEnabled =
                           function() {
                  return !!this.graphSettings.config.trace
                },
                e.prototype.areFunctionsRestricted =
                           function() {
                  return !!this.graphSettings.config.restrictedFunctions
                },
                e.prototype.areGeometryFunctionsForceEnabled =
                           function() {
                  return !!this.graphSettings.config
                               .forceEnableGeometryFunctions
                },
                e.prototype.isQwertyKeyboardEnabled =
                           function() {
                  return !!this.graphSettings.config.qwertyKeyboard
                },
                e.prototype.isZoomFitEnabled =
                           function() {
                  return !!this.graphSettings.config.zoomFit
                },
                e.prototype.canEditOnWeb =
                           function() {
                  return !!this.graphSettings.config.editOnWeb
                },
                e.prototype.hasTransparentBackground =
                           function() {
                  return !!this.graphSettings.config.transparentBackground
                },
                e.prototype.shouldAudioTraceReverseExpressions =
                           function() {
                  return !!this.graphSettings.config
                               .audioTraceReverseExpressions
                },
                e.prototype.hasDefaultState =
                           function() {
                  return !!this.graphSettings.defaultState
                },
                e.prototype.getDefaultStateViewport =
                           function() {
                  var e = this.graphSettings.defaultState;
                  if (e && e.graph) return e.graph.viewport
                },
                e.prototype.getColors =
                           function() {
                  return this.graphSettings.config.colors
                },
                e.prototype.getImageOpacities =
                           function() {
                  return ['0.2', '0.4', '0.6', '0.8', '1']
                },
                e.prototype.getUIDragModes =
                           function() {
                  return [d.DragMode.X, d.DragMode.Y, d.DragMode.XY]
                },
                e.prototype.getNumberOfItemsInFolder =
                           function(e) {
                  return C.getNumberOfItemsInFolder(this.listModel, e)
                },
                e.prototype.getEnabledDragModesForItem =
                           function(e) {
                  var t = this.getItemModel(e);
                  if (!t || 'expression' !== t.type) return [];
                  var r = t.formula, n = [];
                  if (!r.move_strategy) return n;
                  var i = 'none' !== r.move_strategy[0].type,
                      o = 'none' !== r.move_strategy[1].type, s = i && o;
                  return i && n.push(d.DragMode.X), o && n.push(d.DragMode.Y),
                         s && n.push(d.DragMode.XY), n
                },
                e.prototype.shouldShowEvaluationForItem =
                           function(e) {
                  var t = this.getItemModel(e);
                  return !!t &&
                      ('expression' === t.type && E.shouldShowEvaluation(t))
                },
                e.prototype.getEvaluationValueForItem =
                           function(e) {
                  var t = this.getItemModel(e);
                  return t ?
                      'expression' !== t.type ? NaN : E.getEvaluationValue(t) :
                      NaN
                },
                e.prototype.canDisplayEvaluationForItemAsFraction =
                           function(e) {
                  if (!this.isDecimalToFractionEnabled()) return !1;
                  var t = this.getItemModel(e);
                  if (!t) return !1;
                  if ('expression' !== t.type) return !1;
                  if (E.isGraphable(t)) return !1;
                  var r = this.getEvaluationValueForItem(e);
                  return !Array.isArray(r) && s.canDisplayAsFraction(r)
                },
                e.prototype.shouldEvaluationForItemDisplayAsFraction =
                           function(e) {
                  if (!this.isDecimalToFractionEnabled()) return !1;
                  var t = this.getItemModel(e);
                  return !!t &&
                      ('expression' === t.type &&
                       E.shouldEvaluationDisplayAsFraction(t))
                },
                e.prototype.getEvaluationLabelOptionsForItem =
                           function(e) {
                  return n.__assign(n.__assign({}, w.EvaluationLabelOptions), {
                    displayAsFraction:
                        this.shouldEvaluationForItemDisplayAsFraction(e)
                  })
                },
                e.prototype.getPointStyles =
                           function() {
                  return [
                    p.PointStyle.POINT, p.PointStyle.OPEN, p.PointStyle.CROSS
                  ]
                },
                e.prototype.getLineStyles =
                           function() {
                  return [
                    p.LineStyle.SOLID, p.LineStyle.DASHED, p.LineStyle.DOTTED
                  ]
                },
                e.prototype.getOpacities =
                           function() {
                  return [u.LOW, u.DEFAULT, u.HIGH]
                },
                e.prototype.isInEditListMode =
                           function() {
                  return this.layoutModel.inEditListMode
                },
                e.prototype.canAdministerSecretFolders =
                           function() {
                  return this.graphSettings.config.administerSecretFolders
                },
                e.prototype.getInvertedColors =
                           function() {
                  return !!this.graphSettings.config.invertedColors
                },
                e.prototype.canUseAdvancedStyling =
                           function() {
                  return this.graphSettings.config.advancedStyling ||
                      this.graphSettings.config.authorIDE
                },
                e.prototype.isAuthorIDE =
                           function() {
                  return this.graphSettings.config.authorIDE
                },
                e.prototype.canAuthorClickableObjects =
                           function() {
                  return this.graphSettings.config.clickableObjects
                },
                e.prototype.isDegreeMode =
                           function() {
                  return this.graphSettings.degreeMode
                },
                e.prototype.areLogModeRegressionsForced =
                           function() {
                  return this.graphSettings.config.forceLogModeRegressions
                },
                e.prototype.setAllRegressionsToLogMode =
                           function() {
                  for (var e = 0, t = this.getAllItemModels(); e < t.length;
                       e++) {
                    var r = t[e];
                    'expression' === r.type && r.formula &&
                        r.formula.is_regression && E.setLogMode(r, !0)
                  }
                },
                e.prototype.isGraphSettingsOpen =
                           function() {
                  return this.layoutModel.graphSettingsOpen
                },
                e.prototype.isAddExpressionOpen =
                           function() {
                  return this.layoutModel.addExpressionOpen
                },
                e.prototype.shouldRenderList =
                           function() {
                  if (this.layoutModel.expressionsVisible) return !0;
                  var e = this.layoutModel.expressionsHiddenTime;
                  return void 0 !== e && Date.now() - e <= 500
                },
                e.prototype.isListVisible =
                           function() {
                  return this.layoutModel.expressionsVisible
                },
                e.prototype.isGrapherEnabled =
                           function() {
                  return !1 !== this.graphSettings.config.graphpaper
                },
                e.prototype.isListEnabled =
                           function() {
                  return !1 !== this.graphSettings.config.expressions
                },
                e.prototype.areDistributionsEnabled =
                           function() {
                  return !0 === this.graphSettings.config.distributions
                },
                e.prototype.needsFakeKeypad =
                           function() {
                  var e = this.getFocusLocation();
                  if (!e) return !1;
                  if ('none' !== this.getBrailleMode() &&
                      R.getFocusedBrailleElement())
                    return !1;
                  switch (e.type) {
                    case 'settings':
                      return 'icon' !== e.location &&
                          'degree-mode' !== e.location;
                    case 'distribution-param':
                    case 'cdf-limit':
                    case 'slider-limit':
                    case 'domain-limit':
                    case 'expression':
                    case 'visualization-prop':
                      return !0;
                    case 'expression-menu':
                      return 'opacity' === e.location ||
                          'linewidth' === e.location;
                    case 'clickableinfo-prop':
                      return 'description' !== e.location;
                    case 'table':
                      if (this.isInEditListMode()) return !1;
                      var t = e.location;
                      if (0 === t.row) return !0;
                      var r = this.getItemModel(e.id);
                      if (!r || 'table' !== r.type) return !1;
                      var n = r.columnModels[t.column];
                      return !!n && !n.disabled;
                    case 'image':
                      return 'name' !== e.location;
                    case 'readonly-expression':
                    case 'braille-output':
                    case 'table-container':
                    case 'text':
                    case 'folder':
                    case 'add-item-btn':
                    case 'add-expression-btn':
                    case 'add-table-btn':
                    case 'add-folder-btn':
                    case 'add-image-btn':
                    case 'change-image-btn':
                    case 'edit-list-toggle':
                      return !1;
                    case 'expression-icon':
                    case 'image-icon':
                    case 'slider-icon':
                    case 'slider-animation-properties-icon':
                    case 'slider-thumb':
                      return !1;
                    case 'editable-label':
                      return this.getItemEditableLabelMode(e.id) ===
                          _.EditableLabelMode.Math;
                    default:
                      return e
                  }
                },
                e.prototype.getBrandingMode =
                           function() {
                  return this.getEditLink() ? 'static-edit-link' :
                      this.getGraphSettings().config.editOnWeb ? 'edit-link' :
                                                                 'powered-by'
                },
                e.prototype.getEditLink =
                           function() {
                  return window.iframeEmbedBrandingLink
                },
                e.prototype._expressionZoomFit =
                           function(e) {
                  var t = this.getItemModel(e);
                  if (this.grapher && this.isZoomFitEnabled() && t &&
                      ('expression' === t.type || 'table' === t.type) &&
                      t.boundingBoxes && t.boundingBoxes.length) {
                    var r = A.getRecommendedViewportForExpression(
                        t.boundingBoxes,
                        this.grapher.viewportController.getProjection());
                    r && this.grapher.viewportController.zoomCustom(r)
                  }
                },
                e.prototype._deleteItemAndAnimateOut =
                           function(e, t) {
                  var r = this, n = this.getItemSelectorById(e);
                  n &&
                      (n.css({
                        transition: '0.2s',
                        opacity: '0',
                        transform: 'scale(.1, .1)'
                      }),
                       setTimeout(function() {
                         r.dispatch({
                           type: 'finish-deleting-item-after-animation',
                           id: e,
                           setFocusAfterDelete: t
                         })
                       }, 200))
                },
                e.prototype._finishDeletingItemAfterAnimation =
                           function(e, t) {
                  var r = this.getItemModel(e);
                  if (r) {
                    var n = this.getItemSelectorById(e),
                        i = n && document.activeElement &&
                        q(document.activeElement).closest(n).length > 0,
                        o = C.findPrevSelectableItem(this.listModel, r.index);
                    if (this._removeExpressionSynchronously(r), t && i) {
                      if (!o) {
                        var s = C.getFirstSelectableItem(this.listModel);
                        s && (o = s)
                      }
                      o && L.moveFocusToItem(this, o.id, 'end')
                    }
                  }
                },
                e.prototype._removeExpressionSynchronously =
                           function(e) {
                  if (C.removeItemAtIndex(this.listModel, e.index),
                      C.hasNoVisibleExpressions(this.listModel)) {
                    var t = this.createItemModel({
                      type: 'expression',
                      id: this.generateId(),
                      color: this.getNextColor()
                    });
                    C.insertItemAtEnd(this.listModel, t)
                  }
                },
                e.prototype.setRootElt =
                           function(e) {
                  this.rootElt = e,
                  this.dragdrop_expressions = new z.default(this)
                },
                e.prototype._hideExpressions =
                           function() {
                  this.graphSettings.config.expressions &&
                      (C.setSelected(this.listModel, void 0),
                       this.layoutModel =
                           n.__assign(n.__assign({}, this.layoutModel), {
                             expressionsVisible: !1,
                             expressionsHiddenTime: Date.now()
                           }),
                       h.default())
                },
                e.prototype._showExpressions =
                           function() {
                  this.graphSettings.config.expressions &&
                      (this.layoutModel = n.__assign(
                           n.__assign({}, this.layoutModel),
                           {expressionsVisible: !0}),
                       h.default())
                },
                e.prototype._showToast =
                           function(e) {
                  var t = this;
                  if (this.toastData = e,
                      this.toastData.hasOwnProperty('undoCallback') &&
                          !o.IS_MOBILE) {
                    var r = o.IS_APPLE ? this.t('Press CMD+Z to undo.') :
                                         this.t('Press CTRL+Z to undo.');
                    this.toastData.message += ' ' + r
                  }
                  clearTimeout(this._hideToastTimeout);
                  var n = 'number' == typeof e.hideAfter ? e.hideAfter : 6e3;
                  n > 0 &&
                      (this._hideToastTimeout = setTimeout(function() {
                         t.dispatch(
                             {type: 'toast/close', onHide: t.toastData.onHide})
                       }, n))
                },
                e.prototype._setExpressionPropertiesFromAPI =
                           function(e, t) {
                  var r = this.getItemModel(e);
                  if (r)
                    if ('table' === r.type && t.columns) {
                      t = f.default(t);
                      var n = S.cloneTableAndExtendWithProperties(r, t),
                          i = C.modelFromSpec(this.listModel, n);
                      this._toplevelReplaceItemAt(r.index, i, !1)
                    } else {
                      var o = this.getItemModel(e);
                      if (!o) return;
                      for (var s in t)
                        if (t.hasOwnProperty(s)) switch (s) {
                            case 'slider':
                              if ('expression' !== o.type) continue;
                              var a = t[s];
                              a.hasOwnProperty('min') &&
                                  E.setSliderMin(o, a.min),
                                  a.hasOwnProperty('max') &&
                                  E.setSliderMax(o, a.max),
                                  a.hasOwnProperty('step') &&
                                  E.setSliderStep(o, a.step);
                              break;
                            case 'polarDomain':
                              if ('expression' !== o.type) continue;
                              E.setPolarDomainMin(
                                  o, g.default(t.polarDomain.min)),
                                  E.setPolarDomainMax(
                                      o, g.default(t.polarDomain.max));
                              break;
                            case 'parametricDomain':
                              if ('expression' !== o.type) continue;
                              E.setParametricDomainMin(
                                  o, g.default(t.parametricDomain.min)),
                                  E.setParametricDomainMax(
                                      o, g.default(t.parametricDomain.max));
                              break;
                            case 'hidden':
                              this._setItemHidden(e, t.hidden);
                              break;
                            case 'secret':
                              T.setSecret(o, t.secret);
                              break;
                            case 'color':
                              if ('expression' !== o.type) continue;
                              E.setColor(o, t.color);
                              break;
                            case 'dragMode':
                              if ('expression' !== o.type) continue;
                              E.setDragMode(o, t.dragMode);
                              break;
                            case 'label':
                              if ('expression' !== o.type) continue;
                              E.setLabel(o, t.label);
                              break;
                            case 'showLabel':
                              if ('expression' !== o.type) continue;
                              E.setShowLabel(o, t.showLabel);
                              break;
                            case 'labelSize':
                              if ('expression' !== o.type) continue;
                              E.setLabelSize(o, t.labelSize);
                              break;
                            case 'labelOrientation':
                              if ('expression' !== o.type) continue;
                              E.setLabelOrientation(o, t.labelOrientation);
                              break;
                            case 'verticalLabel':
                              if ('expression' !== o.type) continue;
                              E.setVerticalLabel(o, t.verticalLabel);
                              break;
                            case 'latex':
                              if ('expression' !== o.type) continue;
                              E.setLatex(o, t.latex);
                              break;
                            case 'points':
                              if ('expression' !== o.type) continue;
                              E.setPoints(o, !!t.points);
                              break;
                            case 'lines':
                              if ('expression' !== o.type) continue;
                              E.setLines(o, !!t.lines);
                              break;
                            case 'pointStyle':
                              if ('expression' !== o.type) continue;
                              E.setPointStyle(o, t.pointStyle);
                              break;
                            case 'lineStyle':
                              if ('expression' !== o.type) continue;
                              E.setLineStyle(o, t.lineStyle);
                              break;
                            case 'fill':
                              if ('expression' !== o.type) continue;
                              E.setFill(o, t.fill);
                              break;
                            case 'fillOpacity':
                              if ('expression' !== o.type) continue;
                              E.setFillOpacity(o, t.fillOpacity);
                              break;
                            case 'id':
                            case 'type':
                            case 'domain':
                              break;
                            default:
                              throw new Error(
                                  'trying to call setProperty for: ' + s)
                          }
                    }
                },
                e.prototype._isParentFolderHidden =
                           function(e) {
                  var t = this.getItemModel(e);
                  if (!t) return !1;
                  var r = C.getParentFolderModel(t);
                  return !!r && r.hidden
                },
                e.prototype._toggleItemHidden =
                           function(e) {
                  if (this._isParentFolderHidden(e))
                    this._setItemHidden(e, !1);
                  else {
                    var t = this.getItemModel(e);
                    if (!t) return;
                    switch (t.type) {
                      case 'expression':
                      case 'image':
                      case 'folder':
                        this._setItemHidden(e, !t.hidden);
                        break;
                      case 'table':
                      case 'text':
                        break;
                      default:
                        return t
                    }
                  }
                },
                e.prototype._toggleTableColumnHidden =
                           function(e, t) {
                  if (this._isParentFolderHidden(e))
                    this._setTableColumnHidden(e, t, !1);
                  else {
                    var r = this.getItemModel(e);
                    if (!r || 'table' !== r.type) return;
                    var n = S.getColumnModel(r, t);
                    if (!n) return;
                    this._setTableColumnHidden(e, t, !n.hidden)
                  }
                },
                e.prototype._setTableColumnHidden =
                           function(e, t, r) {
                  var n = this.getItemModel(e);
                  if (n && 'table' === n.type) {
                    var i = S.shouldHideColumn(n, t);
                    !r && this._isParentFolderHidden(e) &&
                        this._setItemHidden(n.folderId, !1),
                        S.setColumnHidden(n, t, r),
                        !r && i && S.setColumnPoints(n, t, !0)
                  }
                },
                e.prototype._setItemHidden =
                           function(e, t) {
                  var r = this.getItemModel(e);
                  if (r)
                    switch (!t && 'folder' !== r.type &&
                                this._isParentFolderHidden(r.id) &&
                                this._setItemHidden(r.folderId, !1),
                            r.type) {
                      case 'expression':
                        E.setHidden(r, t);
                        break;
                      case 'folder':
                        I.setHidden(r, t);
                        break;
                      case 'image':
                        M.setHidden(r, t);
                        break;
                      case 'table':
                      case 'text':
                        break;
                      default:
                        return r
                    }
                },
                e.prototype._addItemToEndFromAPI =
                           function(e) {
                  var t = C.getLastSelectableItem(this.listModel);
                  !e.secret && t && 'expression' === t.type && '' === t.latex &&
                      C.removeItemAtIndex(this.listModel, t.index),
                      C.insertItemAtEnd(this.listModel, e)
                },
                e.prototype._toplevelInsertItemAt =
                           function(e, t, r, n) {
                  var i = t;
                  C.insertItemAtIndex(this.listModel, i, e),
                      n && T.setFolderId(i, n),
                      r && L.moveFocusToItem(this, i.id)
                },
                e.prototype._toplevelNewItemAtSelection =
                           function(e, t) {
                  var r = this.getSelectedItem();
                  if (r) {
                    var n = 'expression' === r.type && !r.latex;
                    if (n && !r.folderId &&
                        ('expression' !== e.type || e.latex))
                      return this._toplevelReplaceItemAt(
                          r.index, e, t.shouldFocus);
                    if (n && r.folderId && 'expression' !== e.type &&
                        'folder' !== e.type)
                      return this._toplevelReplaceItemAt(
                          r.index, e, t.shouldFocus);
                    if ('folder' !== r.type && !r.folderId) {
                      return this._toplevelInsertItemAt(
                          r.index + 1, e, t.shouldFocus, void 0)
                    }
                    if ('folder' !== r.type && r.folderId &&
                        'folder' !== e.type)
                      return this._toplevelInsertItemAt(
                          r.index + 1, e, t.shouldFocus, r.folderId);
                    if ('folder' === r.type && !r.collapsed &&
                        'folder' !== e.type)
                      return this._toplevelInsertItemAt(
                          r.index + 1, e, t.shouldFocus, r.id)
                  }
                  var i = this.getFirstFullyVisibleItem();
                  for (i && 'folder' === i.type &&
                           (i = this.getItemModelByIndex(i.index + 1));
                       i && 'folder' !== i.type && i.folderId;)
                    i = this.getItemModelByIndex(i.index + 1);
                  var o = i ? i.index : this.getItemCount();
                  return this._toplevelInsertItemAt(o, e, t.shouldFocus, void 0)
                },
                e.prototype.getFirstFullyVisibleItem =
                           function() {
                  var e = U.getFirstFullyVisibleItemId(this);
                  if (e) return C.getItemById(this.listModel, e)
                },
                e.prototype.find$ =
                           function(e) {
                  return q(this.rootElt).find(e)
                },
                e.prototype.getExppanelSelectorOrThrow =
                           function() {
                  var e = U.getExppanelElt(this);
                  if (e) return q(e);
                  throw new Error('expected to find $exppanel but could not')
                },
                e.prototype.scrollItemIntoView =
                           function(e) {
                  if (this.rootElt && this.isListVisible()) {
                    var t = this.getItemSelectorById(e.id),
                        r = U.getExppanelSelector(this);
                    if (t && r) {
                      if ('table' === e.type) {
                        var n = t.find('.dcg-row .dcg-selected');
                        if (1 === n.length)
                          return void i.scrollVisible(n, r, 60)
                      }
                      i.scrollVisible(t, r, 90)
                    }
                  }
                },
                e.prototype.scrollSelectedItemIntoView =
                           function() {
                  var e = this.getSelectedItem();
                  e && this.scrollItemIntoView(e)
                },
                e.prototype._pasteTable =
                           function(e) {
                  var t = this;
                  if (this.grapher) {
                    var r = C.findAvailableColumnSubscript(this.listModel),
                        n = S.makeTableState(r, e, this),
                        i = this.createItemModel(n);
                    this._toplevelNewItemAtSelection(i, {shouldFocus: !0}),
                        this._closeAddExpression();
                    var o = this.grapher.viewportController.getViewport(),
                        s = a.map(e[0], function(e) {
                          return parseFloat(e)
                        }), l = a.map(e[1], function(e) {
                          return parseFloat(e)
                        }), c = {
                          xmin: a.min(s),
                          xmax: a.max(s),
                          ymin: a.min(l),
                          ymax: a.max(l),
                          type: 'table'
                        };
                    if (isFinite(c.xmin) && isFinite(c.xmax) &&
                        isFinite(c.ymin) && isFinite(c.ymax) &&
                        (c.xmax > o.xmax || c.xmin < o.xmin ||
                         c.ymax > o.ymax || c.ymin < o.ymin)) {
                      var u = A.getRecommendedViewportForExpression([c], o);
                      if (u) {
                        var d = new y.Viewport(u.xmin, u.xmax, u.ymin, u.ymax);
                        this.grapher.viewportController.setViewport(d),
                            this._showToast({
                              message: this.t('We zoomed to fit your data.'),
                              undoCallback: function() {
                                t.dispatch({type: 'undo'})
                              }
                            })
                      }
                    }
                  }
                },
                e.prototype._insertSeveralExpressions =
                           function(e) {
                  for (var t = 0; t < e.length; t++) {
                    var r = void 0;
                    r = this.createItemModel(e[t]),
                    this._toplevelNewItemAtSelection(r, {shouldFocus: !0})
                  }
                },
                e.prototype._appendNumberList =
                           function(e) {
                  var t = this.getSelectedItem();
                  if (t && 'expression' === t.type) {
                    var r = t.latex, n = this.createItemModel({
                      type: 'expression',
                      id: this.generateId(),
                      latex: r + e
                    });
                    return this._toplevelReplaceItemAt(t.index, n, !0)
                  }
                },
                e.prototype._openOnWeb =
                           function() {
                  var e = this;
                  this.runAfterDispatch(function() {
                    if (e.grapher) {
                      var t = JSON.stringify(e.getState()),
                          r = e.grapher.screenshot({width: 100, height: 100}),
                          n = e.getGraphSettings().config.crossOriginSaveTest,
                          i = n ? '/' : 'https://www.desmos.com/',
                          o = i + 'api/v1/calculator/cross_origin_save',
                          s = q('<input type="text" name="calc_state" />')
                                  .val(t),
                          a = q('<input type="text" name="thumb_data" />')
                                  .val(r),
                          l = q('<form target="_blank" method="POST" style="display:none;"></form>')
                                  .attr('action', o)
                                  .append(q(
                                      '<input type="text" name="is_open_on_web" value="true" />'))
                                  .append(q(
                                      '<input type="text" name="my_graphs" value="false" />'))
                                  .append(q(
                                      '<input type="text" name="is_update" value="false" />'))
                                  .append(s)
                                  .append(a);
                      q(e.rootElt).append(l), l.submit().remove()
                    }
                  })
                },
                e.prototype.notifyBugsnagAboutMissingSelectedItem =
                           function(e, t) {
                  var r = C.getSelected(this.listModel), n = '';
                  try {
                    n = r ? JSON.stringify(r.cachedUndoRedoState, null, 2) :
                            'undefined'
                  } catch (e) {
                    n = '[[could not stringify]]'
                  }
                  var i = '';
                  try {
                    if (r) {
                      var o = {
                        id: r.id,
                        index: r.index,
                        displayIndex: r.index,
                        secretIndex: r.secretIndex,
                        guid: r.guid,
                        renderShell: r.renderShell,
                        isHiddenFromUI: r.isHiddenFromUI,
                        hasDCGView: !!r.dcgView,
                        cachedRenderHeight: r.cachedRenderHeight
                      };
                      i = JSON.stringify(o, null, 2)
                    } else
                      i = 'undefined'
                  } catch (e) {
                    i = '[[could not stringify]]'
                  }
                  var s = '';
                  try {
                    s = JSON.stringify(
                        C.getUndoRedoState(this.listModel), null, 2)
                  } catch (e) {
                    s = '[[could not stringify]]'
                  }
                  N.notify('ReplaceItemAtError: no item at index', {
                    metaData: {
                      index: e,
                      shouldFocus: t,
                      selectedModelJSON: i,
                      selectedItemJSON: n,
                      listStateJSON: s
                    }
                  })
                },
                e.prototype._toplevelReplaceItemAt = function(e, t, r) {
                  var n = t, i = this.getItemModelByIndex(e);
                  i || this.notifyBugsnagAboutMissingSelectedItem(e, r);
                  var o = 'folder' !== i.type && i.folderId;
                  C.removeItemAtIndex(this.listModel, e),
                      C.insertItemAtIndex(this.listModel, n, e),
                      o && T.setFolderId(n, o),
                      r && L.moveFocusToItem(this, n.id)
                }, e.prototype.createSlidersForItem = function(e, t) {
                  var r = this, n = this.getItemModel(e);
                  if (n) {
                    for (var i = 'folder' !== n.type && n.folderId,
                             o = n.index + 1, a = t.map(function(e) {
                               var t = e ? s.identifierToLatex(e) + '=1' : '';
                               return {
                                 type: 'expression', id: r.generateId(),
                                     latex: t, color: r.getNextColor(),
                                     hidden: !!t
                               }
                             }),
                             l = a.length - 1;
                         l >= 0; l--) {
                      var c = this.createItemModel(a[l]);
                      C.insertItemAtIndex(this.listModel, c, o),
                          i && T.setFolderId(c, i)
                    }
                    var u = a[a.length - 1];
                    '' === u.latex ? L.moveFocusToItem(this, u.id) :
                                     L.setFocusLocation(this, void 0)
                  }
                }, e.prototype._uploadImagesAndWaitForThemToLoad = function(e) {
                  var t = this, r = e.files, n = e.id;
                  if (!r || 0 === r.length)
                    return void this._showToast(
                        {message: this.t('You did not select a file')});
                  if (n && r.length > 1)
                    return void this._showToast({
                      message: this.t(
                          'You can only choose one file as a replacement')
                    });
                  var i = M.uploadImages({controller: this, files: r, id: n}),
                      o = i.errors[0];
                  o && this._showToast({message: o});
                  for (var s = 0, a = i.tokens; s < a.length; s++) {
                    var l = a[s];
                    this.__pendingImageUploads[l] = !0
                  }
                  this.isUploadingImages() && this._showToast({
                    message: this.t('Uploading images...'),
                    onHide: function() {
                      t._clearPendingImageUploads()
                    }
                  })
                }, e.prototype.getImageToRetry = function() {
                  for (var e, t = 0, r = this.getAllItemModels(); t < r.length;
                       t++) {
                    var n = r[t];
                    'image' === n.type && 'failed' === n.loadStatus &&
                        (!e || e.failures > n.failures) && (e = n)
                  }
                  return e
                }, e.prototype.retryLoadingFailedImage = function(e) {
                  var t = Date.now(),
                      r = t - this.imageRetryState.lastAttemptTime,
                      n = 1e3 * Math.pow(2, this.imageRetryState.attempts);
                  this.imageRetryState.attempts > 0 && r < n ||
                      (M.retryLoading(e), this.imageRetryState = {
                        lastAttemptTime: t,
                        attempts: this.imageRetryState.attempts + 1
                      })
                }, e.prototype.getSelectedItem = function() {
                  return C.getSelected(this.listModel)
                }, e.prototype.getOpenItemMenu = function() {
                  return this.listModel.openItemMenu
                }, e.prototype.getFocusedItem = function() {
                  return L.getFocusedItem(this)
                }, e.prototype.getFocusLocation = function() {
                  return this.focusLocation
                }, e.prototype.isFocusLocationFocused = function(e) {
                  var t = this.focusLocation, r = e;
                  return !(!t || !r) && a.isEqual(t, r)
                }, e.prototype.isCurrentFocusLocationValid = function() {
                  var e = this.focusLocation;
                  if (!e) return !0;
                  if ('settings' === e.type)
                    return 'icon' === e.location || this.isGraphSettingsOpen();
                  if ('add-item-btn' === e.type ||
                      'edit-list-toggle' === e.type)
                    return !0;
                  if ('add-expression-btn' === e.type ||
                      'add-table-btn' === e.type)
                    return this.layoutModel.addExpressionOpen;
                  if ('add-folder-btn' === e.type)
                    return this.layoutModel.addExpressionOpen &&
                        this.areFoldersEnabled();
                  if ('add-image-btn' === e.type)
                    return this.layoutModel.addExpressionOpen &&
                        this.areImagesEnabled();
                  var t = this.getItemModel(e.id);
                  if (!t) return !1;
                  if ('change-image-btn' === e.type)
                    return 'image' === t.type &&
                        (!(!this.listModel || !this.listModel.openItemMenu) &&
                         this.listModel.openItemMenu.model === t);
                  if ('expression-menu' === e.type) {
                    if ('start' === e.location || 'end' === e.location ||
                        'anywhere' === e.location)
                      return !0;
                    if ('expression' !== t.type) return !1;
                    var r = t.points, n = t.lines, i = t.fill,
                        o = b.getReconciledExpressionProps(
                            t.formula.expression_type,
                            {points: r, lines: n, fill: i});
                    return !(!o.fill && !o.lines)
                  }
                  if (!this.isItemSelected(e.id) && 'editable-label' !== e.type)
                    return !1;
                  switch (e.type) {
                    case 'domain-limit':
                      return 'expression' === t.type && !!E.hasDomain(t);
                    case 'expression-icon':
                      return !0;
                    case 'image-icon':
                      return 'image' === t.type && 'loading' !== t.loadStatus &&
                          'failed' !== t.loadStatus && !t.error;
                    case 'slider-icon':
                    case 'slider-animation-properties-icon':
                    case 'slider-thumb':
                    case 'slider-limit':
                      return 'expression' === t.type && !!E.hasSlider(t);
                    case 'visualization-prop':
                      return 'expression' === t.type && !!E.isVisualization(t);
                    case 'clickableinfo-prop':
                      return 'expression' === t.type ?
                          !!E.isClickableAllowed(t) && t.clickableInfo.enabled :
                          'image' === t.type && t.clickableInfo.enabled;
                    case 'distribution-param':
                      if ('expression' !== t.type) return !1;
                      var s = E.parseToplevelFunction(t);
                      return !!s && e.location in s.values;
                    case 'cdf-limit':
                      return 'expression' === t.type &&
                          E.shouldShowCDFFooter(t);
                    case 'image':
                      return 'image' === t.type;
                    case 'folder':
                      return 'folder' === t.type;
                    case 'text':
                      return 'text' === t.type;
                    case 'expression':
                      return 'expression' === t.type &&
                          !this.isInEditListMode();
                    case 'readonly-expression':
                      return 'expression' === t.type && this.isInEditListMode();
                    case 'braille-output':
                      return 'expression' === t.type &&
                          'none' !== this.getBrailleMode();
                    case 'table':
                      return 'table' === t.type &&
                          !!S.doesCellExist(t, e.location);
                    case 'table-container':
                      return 'table' === t.type && this.isInEditListMode();
                    case 'editable-label':
                      return 'expression' === t.type && E.hasEditableLabel(t);
                    default:
                      return e
                  }
                }, e.prototype.isDragDropActive = function() {
                  return !!this.listModel.dragState
                }, e.prototype.isItemBeingDragged = function(e) {
                  var t = this.listModel.dragState;
                  return !(!t || t.firstItemId !== e)
                }, e.prototype.getDraggedItemId = function() {
                  var e = this.listModel.dragState;
                  return e && e.firstItemId
                }, e.prototype.getRawDragState = function() {
                  return this.listModel.dragState
                }, e.prototype.initStateStack = function() {
                  this.stateStack = new m.default,
                  this.stateStack.addState(this.getUndoRedoState())
                }, e.prototype.getUndoRedoState = function() {
                  return {
                    randomSeed: this.getRandomSeed(),
                        layoutModel: this.layoutModel,
                        settingsViewModel: this.settingsViewModel,
                        graph: this.grapher ? this.grapher.getUndoRedoState() :
                                              void 0,
                        expressions: C.getUndoRedoState(this.listModel),
                        wasCompleteSetState: this.isCurrentlyDoingSetState
                  }
                }, e.prototype.getState = function(e) {
                  var t = {stripDefaults: !0};
                  e && e.hasOwnProperty('stripDefaults') &&
                      (t.stripDefaults = !!e.stripDefaults);
                  var r = {
                    version: v.currentVersion,
                    randomSeed: this.getRandomSeed(),
                    graph: this.grapher ? this.grapher.getState(t) :
                                          this.getBlankState().graph,
                    expressions: C.getState(this.listModel, t)
                  };
                  return e && e.avoidBackMigration ?
                      f.default(r) :
                      v.migrateToPersisted(f.default(r))
                }, e.prototype.getBlankState = function() {
                  return this.graphSettings.config.clearIntoDegreeMode ?
                      n.__assign(n.__assign({}, j.default), {
                        graph: n.__assign(
                            n.__assign({}, j.default.graph), {degreeMode: !0})
                      }) :
                      j.default
                }, e.prototype.externalSetState = function(e, t) {
                  this._clearPendingImageUploads(), t || (t = {}),
                      e || (e = this.getBlankState()),
                      'string' == typeof e && (e = JSON.parse(e)),
                      e && (e = v.migrateToLatest(e));
                  var r = this.layoutModel;
                  this.setState(e, t),
                      this.layoutModel = n.__assign(
                          n.__assign(
                              {},
                              O.defaultLayoutModel(this.graphSettings.config)),
                          {
                            keypadMinimized: r.keypadMinimized,
                            keypadLayout: r.keypadLayout,
                            keypadFunctionsTab: r.keypadFunctionsTab,
                            keypadFunctionsOpen: r.keypadFunctionsOpen,
                            expressionsVisible:
                                !!this.graphSettings.config.expressions &&
                                (this.isListVisible() ||
                                 !!t.forceExpressionsOpen)
                          }),
                      this.settingsViewModel = F.defaultSettingsViewModel(),
                      L.setFocusLocation(this, void 0),
                      this.enqueueEvent('clearUnsavedChanges')
                }, e.prototype.setState = function(e, t) {
                  if (this.lastParsableObjects = {},
                      this.isCurrentlyDoingSetState = !0,
                      'graph' in e && this.grapher &&
                          this.grapher.setGrapherState(e.graph),
                      'expressions' in e) {
                    C.setSelected(this.listModel, void 0);
                    var r = C.getLargestIntegerId(e.expressions);
                    r >= this.__nextItemId && (this.__nextItemId = r + 1),
                        C.setListState(this.listModel, e.expressions, t || {})
                  }
                  e.layoutModel && (this.layoutModel = e.layoutModel),
                      e.settingsViewModel &&
                      (this.settingsViewModel = e.settingsViewModel),
                      t && t.allowUndo || this.clearUndoRedoHistory(),
                      this.setRandomSeed(e.randomSeed || K.default())
                }, e.prototype.updateToState = function(e) {
                  'graph' in e && this.grapher &&
                      this.grapher.setGrapherState(e.graph, {doNotClear: !0}),
                      'expressions' in e &&
                      C.restoreListState(this.listModel, e.expressions),
                      e.layoutModel && (this.layoutModel = e.layoutModel),
                      e.settingsViewModel &&
                      (this.settingsViewModel = e.settingsViewModel)
                }, e.prototype.commitUndoRedoSynchronously = function(e) {
                  var t = this.getUndoRedoState();
                  H(this.stateStack.getState(), t) ||
                      (this.stateStack.addState(t), this.enqueueEvent('change'))
                }, e.prototype.undo = function() {
                  if (this.canUndo()) {
                    this.stateStack.undo();
                    var e = this.stateStack.getState();
                    e.wasCompleteSetState ? this.setState(e, {allowUndo: !0}) :
                                            this.updateToState(e),
                        this.enqueueEvent('change')
                  }
                }, e.prototype.redo = function() {
                  if (this.canRedo()) {
                    this.stateStack.redo();
                    var e = this.stateStack.getState();
                    e.wasCompleteSetState ? this.setState(e, {allowUndo: !0}) :
                                            this.updateToState(e),
                        this.enqueueEvent('change')
                  }
                }, e.prototype.clearUndoRedoHistory = function() {
                  this.stateStack.clear()
                }, e.prototype.canUndo = function() {
                  return this.stateStack.canUndo()
                }, e.prototype.canRedo = function() {
                  return this.stateStack.canRedo()
                }, e.prototype._closeAddExpression = function() {
                  this.layoutModel = n.__assign(
                      n.__assign({}, this.layoutModel), {addExpressionOpen: !1})
                }, e.prototype.doesDOMHaveSize = function() {
                  return this.layoutMeasurements.width > 0 &&
                      this.layoutMeasurements.height > 0
                }, e.prototype._getExpListWidth = function() {
                  var e;
                  if (void 0 !== this.userSpecifiedExpListWidth)
                    e = Math.max(
                        280,
                        Math.min(
                            this.layoutMeasurements.width - 200,
                            this.userSpecifiedExpListWidth));
                  else {
                    if (!(e = this.layoutMeasurements.width)) return 356;
                    var t = .2 * e + 160;
                    e = Math.min(500, Math.max(280, t))
                  }
                  var r = this.layoutMeasurements.width -
                      this.layoutMeasurements.height;
                  return Math.abs(r - e) <= 10 ? r : e
                }, e.prototype._setExpListWidth = function(e) {
                  this.userSpecifiedExpListWidth !== e &&
                      (this.userSpecifiedExpListWidth = e)
                }, e.prototype.getKeypadHeight = function() {
                  return this.computeMajorLayout().keypad.height
                }, e.prototype.isKeypadEnabled = function() {
                  return !!this.graphSettings.config.keypad
                }, e.prototype.isKeypadOpen = function() {
                  var e = this.layoutModel.keypadMinimized && !this.isNarrow();
                  return this.needsFakeKeypad() && !e
                }, e.prototype.isKeypadFunctionsPopoverOpen = function() {
                  return !!this.layoutModel.keypadFunctionsOpen
                }, e.prototype.getKeypadLayout = function() {
                  return this.layoutModel.keypadLayout
                }, e.prototype.isLetterKeypadOpen = function() {
                  var e = this.getKeypadLayout();
                  return this.isKeypadOpen() &&
                      ('letters' === e || 'noQwertyLetters' === e ||
                       'capitalLetters' === e || 'noQwertyCapitalLetters' === e)
                }, e.prototype.getKeypadFunctionsTab = function() {
                  return this.layoutModel.keypadFunctionsTab
                }, e.prototype.isFileDraggedOver = function() {
                  return this.layoutModel.isFileDraggedOver
                }, e.prototype.computeMajorLayout = function() {
                  var e = this.layoutMeasurements.width,
                      t = this.layoutMeasurements.height, r = this.isNarrow(),
                      n = this.isListVisible(), i = this.isKeypadOpen(),
                      o = !this.isGrapherEnabled(), s = !this.isListEnabled(),
                      a = !!this.getGraphSettings().config.projectorMode,
                      l = {left: 0, top: 0, width: 0, height: 0},
                      c = {left: 0, top: 0, width: 0, height: 0}, u = {
                        left: 0,
                        top: t,
                        width: e,
                        height: a ? r ? 185 : 193 : 169
                      };
                  return s     ? (c.width = e, c.height = t) :
                             o ? (l.width = e, l.height = t) :
                             n ? r ?
                                 (l.width = e, l.height = Math.round(.58 * t),
                                  l.top = t - l.height, c.width = e,
                                  c.height = t - l.height) :
                                 (l.width = this.getExpListWidth(),
                                  l.height = t, c.left = l.width,
                                  c.width = e - c.left, c.height = t) :
                                 n ||
                                 (r ? (l.width = e,
                                       l.height = Math.round(.58 * t),
                                       l.top = t, c.width = e, c.height = t) :
                                      (l.width = this.getExpListWidth(),
                                       l.height = t, l.left = -l.width,
                                       c.width = e, c.height = t)),
                         i && (u.top -= u.height, s || (l.height -= u.height)),
                  {
                    list: l, grapher: c, keypad: u
                  }
                }, e.prototype.isNarrow = function() {
                  return this.layoutMeasurements.width < 450
                }, e.prototype.getCapExpressionSize = function() {
                  return !!this.getGraphSettings().config.capExpressionSize
                }, e
              }();
              t.default = Y
            });
          r('lib/aria', ['require', 'exports', 'browser', 'jquery'],
            function(e, t, r, n) {
              'use strict';
              function i(e) {
                a.push(e)
              }
              function o(e) {
                if (void 0 !== e && i(e), void 0 !== s && a.length > 0) {
                  var t = a.join(' ').replace(/ +(?= )/g, '');
                  s.attr(
                      'aria-relevant',
                      l === t && r.IS_APPLE ? 'all' : 'additions text'),
                      s.empty().text(t), l = t
                }
                a.length = 0
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var s, a = [], l = '';
              t.queue = i, t.alert = o, n(document).ready(function() {
                var e = '.dcg-aria-alert';
                0 === n(e).length &&
                    n('body').append(
                        '<p aria-live=\'assertive\' aria-atomic=\'true\' class=\'dcg-aria-alert\'></p>'),
                    s = n(e)
              })
            });
          r('main/instancehotkeys',
            [
              'require', 'exports', 'keys', 'lib/aria', 'jquery',
              'graphing-calc/models/expression', 'browser', 'touchtracking'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function() {
                function e(e) {
                  this.controller = e
                }
                return e.prototype.handleKeydown = function(e) {
                  var t = this;
                  if (r.isUndo(e))
                    e.stopPropagation(), e.preventDefault(),
                        this.controller.hasVisibleAndUndoableToast() ?
                        this.controller.toastUndo() :
                        this.controller.dispatch({type: 'undo'});
                  else if (r.isRedo(e))
                    e.stopPropagation(), e.preventDefault(),
                        this.controller.dispatch({type: 'redo'});
                  else if (
                      e.ctrlKey && (e.altKey || e.metaKey) && !e.shiftKey) {
                    if ('E' === r.lookupChar(e)) {
                      e.preventDefault(), e.stopPropagation(),
                          this.controller.getSelectedItem() ||
                          this.controller.dispatch(
                              {type: 'set-selected-index', index: 0});
                      var l = this.controller.getSelectedItem();
                      l ? (n.alert(this.controller.t('Expression list')),
                           this.controller.dispatch(
                               {type: 'move-focus-to-item', id: l.id})) :
                          n.alert(this.controller.t(
                              'Unable to focus expression list'))
                    } else if ('X' === r.lookupChar(e))
                      e.preventDefault(), e.stopPropagation(),
                          this.controller.canUserAddExpressions() ?
                          (n.alert(this.controller.t('Add expression')),
                           this.controller.dispatch({type: 'new-expression'})) :
                          n.alert(
                              this.controller.t('Unable to add expression'));
                    else if ('O' === r.lookupChar(e))
                      e.preventDefault(), e.stopPropagation(),
                          this.controller.canUserAddExpressions() &&
                              this.controller.areNotesEnabled() ?
                          (n.alert(this.controller.t('Add note')),
                           this.controller.dispatch({type: 'new-text'})) :
                          n.alert(this.controller.t('Unable to add note'));
                    else if (
                        'F' === r.lookupChar(e) &&
                        this.controller.canUserAddExpressions() &&
                        this.controller.areFoldersEnabled())
                      e.preventDefault(), e.stopPropagation(),
                          n.alert(this.controller.t('Add folder')),
                          this.controller.dispatch({type: 'new-folder'});
                    else if (
                        'I' === r.lookupChar(e) &&
                        this.controller.canUserAddExpressions() &&
                        this.controller.areImagesEnabled())
                      e.preventDefault(), e.stopPropagation(),
                          this.controller.dispatch(
                              {type: 'toggle-add-expression', focusOnOpen: !1}),
                          this.controller.runAfterDispatch(function() {
                            t.controller
                                .find$(
                                    '.dcg-add-expression-container input[type=file]')
                                .click(),
                                n.alert(t.controller.t('Add image'))
                          });
                    else if ('T' === r.lookupChar(e))
                      e.preventDefault(), e.stopPropagation(),
                          this.controller.canUserAddExpressions() ?
                          (n.alert(this.controller.t('Add table')),
                           this.controller.dispatch({type: 'new-table'})) :
                          n.alert(this.controller.t('Unable to add table'));
                    else if ('G' === r.lookupChar(e))
                      e.preventDefault(), e.stopPropagation(),
                          this.controller.dispatch(
                              {type: 'toggle-graph-settings', focusOnOpen: !0});
                    else if ('P' === r.lookupChar(e)) {
                      e.preventDefault(), e.stopPropagation();
                      var c = this.controller.find$('.dcg-tabbable-point')
                                  .filter('[tabindex=0]');
                      0 === c.length &&
                          (c = this.controller
                                   .find$('.dcg-editable-label-border')
                                   .find('input, textarea, [role="textbox"]')),
                          this.focusElement(
                              c.first(),
                              this.controller.t(
                                  'No interactive points on screen'))
                    } else if ('Z' === r.lookupChar(e)) {
                      var u = this.controller.getSelectedItem();
                      u && u.id &&
                          this.controller.dispatch(
                              {type: 'expression-zoom-fit', id: u.id})
                    } else if (
                        'D' === r.lookupChar(e) &&
                        this.controller.canUserAddExpressions()) {
                      e.preventDefault(), e.stopPropagation();
                      var d = !this.controller.isInEditListMode();
                      this.controller.dispatch({
                        type: 'set-edit-list-mode',
                        isEditListMode: d,
                        focusExpressionList: !0
                      })
                    }
                  } else if (
                      (e.altKey || e.metaKey) && !e.ctrlKey && e.shiftKey &&
                      'F' === r.lookupChar(e) &&
                      this.controller.isDecimalToFractionEnabled()) {
                    var p = this.controller.getSelectedItem();
                    p && 'expression' === p.type &&
                        (e.preventDefault(), e.stopPropagation(),
                         this.controller.dispatch(
                             {type: 'toggle-fraction-evaluation', id: p.id}),
                         this.controller.runAfterDispatch(function() {
                           o.shouldEvaluationDisplayAsFraction(p) ?
                               n.alert(t.controller.t('Show as Fraction')) :
                               n.alert(t.controller.t('Show as Decimal'))
                         }))
                  } else if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) {
                    if (!e.metaKey && !e.shiftKey && e.ctrlKey === s.IS_APPLE &&
                        e.altKey === !s.IS_APPLE) {
                      var h = r.lookupChar(e);
                      if ('N' === h) {
                        if (!this.controller.getBrailleControls()) return;
                        e.preventDefault(), e.stopPropagation(),
                            this.controller.dispatch(
                                {type: 'set-braille-mode', mode: 'nemeth'}),
                            n.alert(this.controller.t('Braille mode Nemeth'))
                      } else if ('U' === h) {
                        if (!this.controller.getBrailleControls()) return;
                        e.preventDefault(), e.stopPropagation(),
                            this.controller.dispatch(
                                {type: 'set-braille-mode', mode: 'ueb'}),
                            n.alert(this.controller.t('Braille mode UEB'))
                      } else if ('Q' === h || 'X' === h) {
                        if (!this.controller.getBrailleControls()) return;
                        e.preventDefault(), e.stopPropagation(),
                            this.controller.dispatch(
                                {type: 'set-braille-mode', mode: 'none'}),
                            n.alert(this.controller.t('Braille mode off'))
                      } else if ('6' === h) {
                        if (!this.controller.getBrailleControls()) return;
                        e.preventDefault(), e.stopPropagation();
                        var f = !this.controller.getSixKeyInput();
                        this.controller.dispatch(
                            {type: 'set-six-key-input', useSixKeyInput: f}),
                            n.alert(
                                f ? this.controller.t(
                                        'Six Key Braille Input on') :
                                    this.controller.t(
                                        'Six Key Braille Input off'))
                      }
                    }
                  } else
                    r.lookup(e) === r.BACKSPACE ? document.activeElement &&
                                a.elIsFocusable(i(document.activeElement)) ||
                            e.preventDefault() :
                                                  r.lookup(e) === r.ESCAPE &&
                            this.controller.isInEditListMode() &&
                            0 ===
                                this.controller.find$('.dcg-options-menu')
                                    .length &&
                            (e.preventDefault(), e.stopPropagation(),
                             this.controller.dispatch({
                               type: 'set-edit-list-mode',
                               isEditListMode: !1,
                               focusExpressionList: !0
                             }))
                }, e.prototype.focusElement = function(e, t) {
                  e.length ? e.focus() : t && n.alert(t)
                }, e
              }();
              t.default = l
            });
          r('lib/defocus-mobile',
            ['require', 'exports', 'jquery', 'touchtracking'],
            function(e, t, r, n) {
              'use strict';
              function i() {
                if (document.activeElement) {
                  var e = r(document.activeElement);
                  n.elIsFocusable(e) &&
                      r('<input />')
                          .prependTo('body')
                          .focus()
                          .attr({readonly: 'readonly', disabled: 'true'})
                          .blur()
                          .remove()
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}), t.default = i
            });
          r('ipad.scrollfix', ['require', 'jquery'], function(e) {
            var t = e('jquery'), r = !1, n = function() {
              i(document), r = !0
            }, i = function(e) {
              r || t(e).bind('touchstart', function(e) {
                var r = t(e.target), n = 0, i = null;
                if (!r.closest('[disablescroll]').length)
                  for (; 0 === n && r.length && void 0 !== r[0].tagName;) {
                    var o = r.css('overflow'), s = r.css('overflow-y');
                    if ('hidden' !== o && 'visible' !== o && 'hidden' !== s &&
                        'hidden' !== s) {
                      var a = r.scrollTop();
                      0 !== a && (n = 2), r.scrollTop(a + 1),
                          r.scrollTop() !== a && (n |= 1, r.scrollTop(a))
                    }
                    r = r.parent()
                  }
                if (0 !== n) {
                  i = [];
                  for (var l = e.originalEvent.touches, c = 0; c < l.length;
                       c++) {
                    var u = {};
                    for (var d in l[c])
                      l[c].hasOwnProperty(d) && (u[d] = l[c][d]);
                    i.push(u)
                  }
                }
                t(document).on('touchmove.scrollfix', function(e) {
                  if (i) {
                    var t = i[0], r = e.originalEvent.touches[0],
                        o = r.screenY - t.screenY;
                    o > 0 && !(2 & n) ? n = 0 : o < 0 && !(1 & n) && (n = 0),
                                        o && (i = null)
                  }
                  0 === n && e.preventDefault()
                }), t(document).on('touchend.scrollfix', function() {
                  t(document).off('.scrollfix')
                })
              })
            };
            return {
              limitScrollOnElement: i, limitScrollOnDocument: n
            }
          });
          r('expressions/abstract-item-view',
            ['require', 'exports', 'tslib', 'dcgview', 'jquery.handleevent'],
            function(e, t, r, n) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var i = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller(),
                  this.model = this.props.model(), this.id = this.model.id,
                  this._isFirstRender = !0,
                  this._isDragCopy = this.props.isDragCopy()
                }, t.prototype.onItemViewMounted = function() {
                  this._isDragCopy || (this.model.dcgView = this),
                      this._isFirstRender = !1
                }, t.prototype.onItemViewUnmounted = function() {
                  this._isDragCopy || (this.model.dcgView = void 0)
                }, t.prototype.isFirstRender = function() {
                  return this._isFirstRender
                }, t.prototype.onMouseSelect = function(e) {
                  if (this.controller.isInEditListMode())
                    return void this.exitEditListMode();
                  'dcg-tap' === e.type && 'mouse' === e.device ||
                      'dcg-tapstart' === e.type && 'touch' === e.device ||
                      e.wasHandled() ||
                      (e.handle(),
                       this.controller.dispatch(
                           {type: 'set-selected-id', id: this.id}))
                }, t.prototype.onDelete = function() {
                  this.controller.dispatch({
                    type: 'delete-item-and-animate-out',
                    id: this.id,
                    setFocusAfterDelete: !this.controller.isInEditListMode()
                  })
                }, t.prototype.onDragPending = function(e) {
                  this.props.onDragPending(e)
                }, t.prototype.exitEditListMode = function() {
                  this.controller.dispatch({
                    type: 'set-edit-list-mode',
                    isEditListMode: !1,
                    focusExpressionList: !0
                  })
                }, t
              }(n.Class);
              t.default = i
            });
          r('loadcss!dcgview-helpers/tooltipped-error', function() {});
          r('dcgview-helpers/tooltipped-error',
            [
              'require', 'exports', 'tslib', 'dcgview', 'lib/tooltip',
              'loadcss!./tooltipped-error'
            ],
            function(e, t, r, n, i) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var o = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      i.Tooltip, {
                        tooltip: this.props.error,
                        targetClickBehavior: this.const('stick'),
                        gravity: this.props.gravity
                      },
                      n.createElement(
                          'div', {
                            class: function() {
                              return {
                                'dcg-tooltipped-error': !0,
                                    'dcg-white': e.props.isWhite &&
                                    e.props.isWhite(),
                                    'dcg-small': e.props.size &&
                                    'small' === e.props.size()
                              }
                            }
                          },
                          n.createElement(
                              'i', {class: n.const('dcg-icon-error')})))
                }, t
              }(n.Class);
              t.TooltippedError = o
            });
          r('loadcss!expressions/circular-icon-view', function() {});
          r('expressions/circular-icon-view',
            [
              'require', 'exports', 'tslib', 'dcgview',
              'loadcss!./circular-icon-view'
            ],
            function(e, t, r, n) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var i = n.Components.If, o = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'span', {
                        class: function() {
                          var t;
                          return t = {
                            'dcg-do-not-blur': !0,
                            'dcg-circular-icon': !0,
                            'dcg-thick-outline': e.isThickOutline(),
                            'dcg-white-icon':
                                !!e.props.whiteIcon && e.props.whiteIcon(),
                            'dcg-hidden': e.isHidden(),
                            'dcg-semi-transparent': e.props.semiTransparent &&
                                e.props.semiTransparent(),
                            'dcg-colored-icon': !e.isThickOutline() &&
                                !e.isHidden() && !e.hasBackgroundImage() &&
                                'loading' !== e.props.iconType(),
                            'dcg-has-background-image': e.hasBackgroundImage()
                          },
                                 t[e.iconModifier()] =
                                     e.iconModifier().length > 0,
                                 t
                        },
                        style: function() {
                          return {
                            background: e.getBackgroundColor()
                          }
                        }
                      },
                      n.createElement(
                          i, {predicate: this.bindFn(this.hasBackgroundImage)},
                          function() {
                            return n.createElement('span', {
                              class: n.const('dcg-background-image'),
                              style: function() {
                                return {
                                  'background-image': e.props.backgroundImage &&
                                      e.props.backgroundImage(),
                                      opacity: e.props.backgroundOpacity &&
                                      e.props.backgroundOpacity()
                                }
                              }
                            })
                          }),
                      n.createElement(
                          i, {
                            predicate: function() {
                              return !!e.backgroundIcon()
                            }
                          },
                          function() {
                            return n.createElement('i', {
                              class: function() {
                                var t;
                                return t = {}, t[e.backgroundIcon()] = !0,
                                       t['dcg-layered-icon'] = !0, t
                              },
                              style: function() {
                                return {
                                  opacity: e.backgroundOpacity()
                                }
                              }
                            })
                          }),
                      n.createElement(
                          i, {
                            predicate: function() {
                              return !!e.primaryIcon()
                            }
                          },
                          function() {
                            return n.createElement('i', {
                              class: function() {
                                var t;
                                return t = {}, t[e.primaryIcon()] = !0,
                                       t['dcg-layered-icon'] = !0, t
                              },
                              style: function() {
                                return {
                                  color: e.props.foregroundColor &&
                                      e.props.foregroundColor()
                                }
                              }
                            })
                          }),
                      n.createElement(
                          i, {
                            predicate: function() {
                              return 'loading' === e.props.iconType()
                            }
                          },
                          function() {
                            return n.createElement(
                                'span', {class: n.const('dcg-spinner')})
                          }))
                }, t.prototype.iconModifier = function() {
                  if (!this.props.iconModifier) return '';
                  switch (this.props.iconModifier()) {
                    case 'medium':
                      return 'dcg-modifier-size-medium';
                    case 'large':
                      return 'dcg-modifier-size-large';
                    case 'small':
                      return 'dcg-modifier-size-small';
                    case 'rotated':
                      return 'dcg-modifier-rotated';
                    case 'none':
                      return ''
                  }
                }, t.prototype.getBackgroundColor = function() {
                  if (!this.isHidden() && this.props.backgroundColor)
                    return this.props.backgroundColor()
                }, t.prototype.isHidden = function() {
                  return 'hidden' === this.props.iconType()
                }, t.prototype.isThickOutline = function() {
                  var e = this.props.iconType();
                  return 'folder' === e || 'pause' === e || 'play' === e ||
                      'fraction' === e
                }, t.prototype.hasBackgroundImage = function() {
                  return !!this.props.backgroundImage && !this.isHidden() &&
                      !!this.props.backgroundImage()
                }, t.prototype.primaryIcon = function() {
                  var e = this.props.iconType();
                  switch (e) {
                    case 'folder':
                      return 'dcg-icon-folder';
                    case 'pause':
                      return 'dcg-icon-pause';
                    case 'play':
                      return 'dcg-icon-play';
                    case 'polygon-dashed':
                    case 'polygon-dashed-filled':
                      return 'dcg-icon-polygon-dashed';
                    case 'polygon-dotted':
                    case 'polygon-dotted-filled':
                      return 'dcg-icon-polygon-dotted';
                    case 'polygon-default':
                    case 'polygon-default-filled':
                      return 'dcg-icon-polygon-solid';
                    case 'graph-dashed':
                    case 'parametric-dashed-filled':
                      return 'dcg-icon-parametric-dashed';
                    case 'graph-dotted':
                    case 'parametric-dotted-filled':
                      return 'dcg-icon-parametric-dotted';
                    case 'graph-default':
                    case 'parametric-default-filled':
                      return 'dcg-icon-parametric-solid';
                    case 'movable-vertical':
                      return 'dcg-icon-move-vertical';
                    case 'movable-both':
                      return 'dcg-icon-move';
                    case 'movable-horizontal':
                      return 'dcg-icon-move-horizontal';
                    case 'point-open':
                      return 'dcg-icon-open';
                    case 'point-cross':
                      return 'dcg-icon-cross';
                    case 'point-default':
                      return 'dcg-icon-point';
                    case 'table-points':
                    case 'table-points-and-lines':
                      return 'dcg-icon-points';
                    case 'table-lines':
                      return 'dcg-icon-lines-solid';
                    case 'shaded-inequality':
                    case 'inequality':
                      return 'dcg-icon-shaded-inequality-dash';
                    case 'check':
                      return 'dcg-icon-check';
                    case 'none':
                    case 'background':
                    case 'hidden':
                    case 'polygon-none-filled':
                    case 'parametric-none-filled':
                    case 'loading':
                      return '';
                    case 'fraction':
                      return 'dcg-icon-fraction';
                    case 'boxplot':
                      return 'dcg-icon-boxplot';
                    case 'dotplot-cross':
                      return 'dcg-icon-dotplot-cross';
                    case 'dotplot-default':
                      return 'dcg-icon-dotplot-default';
                    case 'dotplot-open':
                      return 'dcg-icon-dotplot-open';
                    case 'histogram':
                      return 'dcg-icon-histogram';
                    case 'unfilled-distribution':
                    case 'filled-distribution':
                      return 'dcg-icon-distribution';
                    default:
                      return e
                  }
                }, t.prototype.backgroundOpacity = function() {
                  var e = this.backgroundIcon();
                  return 'dcg-icon-polygon-filled' === e ||
                          'dcg-icon-parametric-filled' === e ||
                          'dcg-icon-shaded-inequality-shade2' === e ||
                          'dcg-icon-distribution-fill' === e ||
                          'dcg-icon-histogram-fill' === e ?
                      .5 :
                      1
                }, t.prototype.backgroundIcon = function() {
                  var e = this.props.iconType();
                  return 'filled-distribution' === e ?
                                          'dcg-icon-distribution-fill' :
                      'histogram' === e ? 'dcg-icon-histogram-fill' :
                      'polygon-dashed-filled' === e ||
                          'polygon-dotted-filled' === e ||
                          'polygon-default-filled' === e ||
                          'polygon-none-filled' === e ?
                                          'dcg-icon-polygon-filled' :
                      'parametric-dashed-filled' === e ||
                          'parametric-dotted-filled' === e ||
                          'parametric-default-filled' === e ||
                          'parametric-none-filled' === e ?
                                          'dcg-icon-parametric-filled' :
                      'table-points-and-lines' === e ?
                                          'dcg-icon-lines-solid' :
                      'shaded-inequality' === e ?
                                          'dcg-icon-shaded-inequality-shade2' :
                                          ''
                }, t
              }(n.Class);
              t.CircularIconView = o
            });
          r('main/manage-focus-helper', ['require', 'exports', 'underscore'],
            function(e, t, r) {
              'use strict';
              function n(e) {
                return {
                  shouldBeFocused: function() {
                    return i(e)
                  }, onFocusedChanged: function(t) {
                    o(e, t)
                  }
                }
              }
              function i(e) {
                var t = e.controller.getFocusLocation();
                return t && r.isEqual(t, e.location)
              }
              function o(e, t) {
                t ? e.controller.dispatch(
                        {type: 'set-focus-location', location: e.location}) :
                    e.controller.dispatch(
                        {type: 'blur-focus-location', location: e.location})
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.manageFocusHelper = n, t.defaultShouldBeFocused = i,
                  t.defaultOnFocusChanged = o
            });
          r('loadcss!expressions/play-pause-icon-view', function() {});
          r('expressions/play-pause-icon-view',
            [
              'require', 'exports', 'tslib', 'dcgview', 'lib/aria',
              './circular-icon-view', 'main/manage-focus-helper',
              'graphing-calc/models/expression', 'core/types/slider-loop-modes',
              '../lib/tooltip', 'jquery.handleevent',
              'loadcss!./play-pause-icon-view'
            ],
            function(e, t, r, n, i, o, s, a, l, c) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var u = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller(),
                  this.model = this.props.model()
                }, t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {class: n.const('dcg-play-pause-icon-view')},
                      n.createElement(
                          'div', {
                            class: n.const('dcg-circular-icon-container'),
                            'aria-label': this.bindFn(this.getAriaLabel),
                            role: n.const('button'),
                            tabindex: n.const('0'),
                            onTap: function(t) {
                              t.wasHandled('dragdrop') ||
                                  e.toggleSliderIsPlaying()
                            },
                            manageFocus: this.const(s.manageFocusHelper({
                              controller: this.controller,
                              location: {type: 'slider-icon', id: this.model.id}
                            }))
                          },
                          n.createElement(o.CircularIconView, {
                            iconType: function() {
                              return e.getIconType()
                            },
                            whiteIcon: function() {
                              return !e.controller.isInEditListMode() &&
                                  e.controller.isItemSelected(e.model.id) ||
                                  e.controller.isItemBeingDragged(e.model.id)
                            }
                          })),
                      n.createElement(
                          'div', {
                            class: n.const('dcg-slider-menu-container'),
                            didMount: function(t) {
                              return e.rootElt = t
                            }
                          },
                          n.createElement(
                              c.Tooltip, {
                                tooltip: function() {
                                  return e.controller.t('Animation Properties')
                                },
                                gravity: this.const('e'),
                                offset: this.const({left: 5})
                              },
                              n.createElement(
                                  'div', {
                                    class: function() {
                                      return {
                                        'dcg-slider-menu-opener': !0,
                                            'dcg-menu-open': e.myOptionsOpen()
                                      }
                                    },
                                    tabindex: n.const(0),
                                    role: n.const('button'),
                                    'aria-label': function() {
                                      return e.myOptionsOpen() ?
                                          e.controller.t(
                                              'Hide Animation Properties') :
                                          e.controller.t(
                                              'Show Animation Properties')
                                    },
                                    onTap: function(t) {
                                      t.wasHandled('dragdrop') ||
                                          t.wasLongheld() || e.toggleOptions(t)
                                    },
                                    manageFocus:
                                        this.const(s.manageFocusHelper({
                                          controller: this.controller,
                                          location: {
                                            type:
                                                'slider-animation-properties-icon',
                                            id: this.model.id
                                          }
                                        }))
                                  },
                                  n.createElement(
                                      'i',
                                      {class: this.bindFn(this.getIcon)})))))
                }, t.prototype.getIcon = function() {
                  return l.getSliderIcon(this.model.slider.loopMode)
                }, t.prototype.getIconType = function() {
                  return this.model.slider.isPlaying ?
                      a.isSliderAtEndOfPlayOnce(this.model) ? 'play' : 'pause' :
                      'play'
                }, t.prototype.myOptionsOpen = function() {
                  var e = this.controller.getOpenItemMenu();
                  return !!e && e.model === this.model
                }, t.prototype.toggleOptions = function(e) {
                  this.controller.dispatch({
                    type: 'toggle-item-settings-menu',
                    menu: {
                      type: 'slider',
                      model: this.model,
                      icon: this.rootElt,
                      focusFirstOption: 'keyboard' === e.device
                    }
                  })
                }, t.prototype.getAriaLabel = function() {
                  if (!this.model.sliderExists) return '';
                  var e = this.model.dependent;
                  return e ?
                      this.model.slider.isPlaying ?
                      this.controller.t(
                          'Pause __variable__ Animation', {variable: e}) :
                      this.controller.t(
                          'Play __variable__ Animation', {variable: e}) :
                      ''
                }, t.prototype.toggleSliderIsPlaying = function() {
                  if (this.model.sliderExists) {
                    var e = '', t = this.model.dependent;
                    a.isSliderAtEndOfPlayOnce(this.model) ?
                        (e = this.controller.t(
                             '__variable__ restarted', {variable: t}),
                         this.controller.dispatch({
                           type: 'play-slider-from-min',
                           id: this.model.id
                         })) :
                        this.model.slider.isPlaying ?
                        (e = this.controller.t(
                             '__variable__ playing', {variable: t}),
                         this.controller.dispatch({
                           type: 'set-slider-isplaying',
                           id: this.model.id,
                           isPlaying: !1
                         })) :
                        (e = this.controller.t(
                             '__variable__ paused', {variable: t}),
                         this.controller.dispatch({
                           type: 'set-slider-isplaying',
                           id: this.model.id,
                           isPlaying: !0
                         })),
                        i.alert(e)
                  }
                }, t
              }(n.Class);
              t.PlayPauseIconView = u
            });
          r('expressions/expression-icon-view',
            [
              'require', 'exports', 'tslib', 'dcgview', 'core/lib/dragmode',
              'core/types/styles', 'core/math/comparators',
              'core/math/expression-types', 'graphing-calc/models/expression',
              '../dcgview-helpers/tooltipped-error', './play-pause-icon-view',
              './circular-icon-view', 'main/manage-focus-helper',
              'jquery.handleevent'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d, p) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var h = n.Components.SwitchUnion, f = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.model = this.props.model(),
                  this.controller = this.props.controller()
                }, t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {class: n.const('dcg-expression-icon-container')},
                      h(this.bindFn(this.getIconMode), {
                        error: function() {
                          return n.createElement(c.TooltippedError, {
                            error: function() {
                              return e.controller.unpack(e.model.error)
                            },
                            isWhite: function() {
                              return e.controller.isItemSelected(e.model.id) ||
                                  e.controller.isItemBeingDragged(e.model.id)
                            },
                            gravity: e.const('se')
                          })
                        },
                        none: function() {
                          return n.createElement('span', null)
                        },
                        slider: function() {
                          return n.createElement(u.PlayPauseIconView, {
                            controller: e.props.controller,
                            model: e.props.model
                          })
                        },
                        icon: function() {
                          return n.createElement(
                              'div', {
                                class: n.const('dcg-circular-icon-container'),
                                role: n.const('button'),
                                tabindex: n.const('0'),
                                'aria-label': e.bindFn(e.getIconAriaLabel),
                                onTap: function(t) {
                                  if (!t.wasHandled('dragdrop') &&
                                      !t.wasLongheld())
                                    return e.myOptionsOpen() ?
                                        e.toggleOptions(t) :
                                        e.controller.isInEditListMode() &&
                                            !e.isFraction() ?
                                        e.toggleOptions(t) :
                                        e.isFraction() ?
                                        e.onToggleFractionDisplay() :
                                        void e.toggleGraphShown()
                                },
                                didMount: function(t) {
                                  return e.rootElt = t
                                },
                                onLongHold: function(t) {
                                  t.handle('dcg-longhold'), t.handle('dcg-tap'),
                                      e.isFraction() || e.toggleOptions(t)
                                },
                                manageFocus: e.const(p.manageFocusHelper({
                                  controller: e.controller,
                                  location:
                                      {type: 'expression-icon', id: e.model.id}
                                }))
                              },
                              n.createElement(d.CircularIconView, {
                                iconType: e.bindFn(e.getIconType),
                                backgroundColor: e.bindFn(e.getBackgroundColor),
                                whiteIcon: e.bindFn(e.isSelected),
                                foregroundColor: e.bindFn(e.getForegroundColor),
                                iconModifier: e.bindFn(e.getIconModifier)
                              }))
                        }
                      }))
                }, t.prototype.myOptionsOpen = function() {
                  var e = this.controller.getOpenItemMenu();
                  return !!e && e.model === this.model
                }, t.prototype.toggleOptions = function(e) {
                  this.controller.dispatch({
                    type: 'toggle-item-settings-menu',
                    menu: {
                      type: 'expression',
                      model: this.model,
                      icon: this.rootElt,
                      focusFirstOption: 'keyboard' === e.device
                    }
                  })
                }, t.prototype.isSelected = function() {
                  return this.controller.isItemSelected(this.model.id) ||
                      this.controller.isItemBeingDragged(this.model.id)
                }, t.prototype.isFraction = function() {
                  return this.controller.canDisplayEvaluationForItemAsFraction(
                      this.model.id)
                }, t.prototype.getIconMode = function() {
                  return this.hasError() ?
                      'error' :
                      this.controller.getGraphSettings().config.graphpaper ?
                      this.model.isGraphable && !this.model.loading ? 'icon' :
                          this.hasSlider()                          ? 'slider' :
                          this.isFraction()                         ? 'icon' :
                                                                      'none' :
                      'none'
                }, t.prototype.toggleGraphShown = function() {
                  this.controller.dispatch(
                      {type: 'toggle-item-hidden', id: this.model.id})
                }, t.prototype.hasError = function() {
                  return !!this.model.error && !l.isEmpty(this.model) &&
                      'none' === this.controller.getBrailleMode()
                }, t.prototype.hasSlider = function() {
                  return !!this.model.sliderExists
                }, t.prototype.getDisplayProps = function() {
                  var e = this.model, t = e.points, r = e.lines, n = e.fill;
                  return a.getReconciledExpressionProps(
                      this.model.formula.expression_type,
                      {points: t, lines: r, fill: n})
                }, t.prototype.getBackgroundColor = function() {
                  if (!this.isFraction()) return this.model.color;
                  var e = this.isSelected();
                  return this.controller
                             .shouldEvaluationForItemDisplayAsFraction(
                                 this.model.id) ?
                      e ? '#fff' : '#000' :
                      ''
                }, t.prototype.getForegroundColor = function() {
                  if (!this.isFraction()) return '';
                  var e = this.isSelected();
                  return e !==
                          this.controller
                              .shouldEvaluationForItemDisplayAsFraction(
                                  this.model.id) ?
                          '#fff' :
                      e ? '#6399cb' :
                          '#000'
                }, t.prototype.onToggleFractionDisplay = function() {
                  this.controller.dispatch(
                      {type: 'toggle-fraction-evaluation', id: this.model.id})
                }, t.prototype.getIconModifier = function() {
                  return l.isBoxPlot(this.model) &&
                          'y' === l.getVizPropLatex(this.model, 'alignedAxis') ?
                      'rotated' :
                      'none'
                }, t.prototype.getIconType = function() {
                  if (this.isFraction()) return 'fraction';
                  if (!this.model.shouldGraph) return 'hidden';
                  if (this.controller.isInEditListMode()) return 'none';
                  var e = this.model.pointStyle, t = this.model.lineStyle,
                      r = this.getDisplayProps(), n = this.model.formula;
                  if (l.isBoxPlot(this.model)) return 'boxplot';
                  if (l.isDotPlot(this.model)) {
                    if ('POINT' === this.model.pointStyle)
                      return 'dotplot-default';
                    if ('CROSS' === this.model.pointStyle)
                      return 'dotplot-cross';
                    if ('OPEN' === this.model.pointStyle) return 'dotplot-open'
                  }
                  if (l.isHistogram(this.model)) return 'histogram';
                  if (l.isToplevelDistribution(this.model))
                    return l.shouldShowCDFFooter(this.model) ?
                        'filled-distribution' :
                        'unfilled-distribution';
                  if (this.model.reconciledDragMode === i.DragMode.X)
                    return 'movable-horizontal';
                  if (this.model.reconciledDragMode === i.DragMode.Y)
                    return 'movable-vertical';
                  if (this.model.reconciledDragMode === i.DragMode.XY)
                    return 'movable-both';
                  if (l.isPointOrPointList(this.model))
                    return l.isSinglePoint(this.model) ?
                        e === o.PointStyle.OPEN      ? 'point-open' :
                            e === o.PointStyle.CROSS ? 'point-cross' :
                                                       'point-default' :
                        r.lines && r.points ? 'table-points-and-lines' :
                        r.lines             ? 'table-lines' :
                                              'table-points';
                  var a = this.getDisplayProps().fill;
                  if (l.isPolygon(this.model))
                    return a    ? r.lines ? t === o.LineStyle.DASHED ?
                                            'polygon-dashed-filled' :
                                   t === o.LineStyle.DOTTED ?
                                            'polygon-dotted-filled' :
                                            'polygon-default-filled' :
                                            'polygon-none-filled' :
                        r.lines ? t === o.LineStyle.DASHED ? 'polygon-dashed' :
                            t === o.LineStyle.DOTTED       ? 'polygon-dotted' :
                                                             'polygon-default' :
                                  'none';
                  if (l.isParametric(this.model))
                    return a    ? r.lines ? t === o.LineStyle.DASHED ?
                                            'parametric-dashed-filled' :
                                   t === o.LineStyle.DOTTED ?
                                            'parametric-dotted-filled' :
                                            'parametric-default-filled' :
                                            'parametric-none-filled' :
                        r.lines ? t === o.LineStyle.DASHED ? 'graph-dashed' :
                            t === o.LineStyle.DOTTED       ? 'graph-dotted' :
                                                             'graph-default' :
                                  'none';
                  var c = n.operator, u = 0 !== s.table[c].direction,
                      d = !1 === s.table[c].inclusive;
                  return n.is_shade_between    ? 'shaded-inequality' :
                      !d && u                  ? 'shaded-inequality' :
                      d && !u                  ? 'inequality' :
                      d && u                   ? 'shaded-inequality' :
                      t === o.LineStyle.DASHED ? 'graph-dashed' :
                      t === o.LineStyle.DOTTED ? 'graph-dotted' :
                                                 'graph-default'
                }, t.prototype.getIconAriaLabel = function() {
                  return this.isFraction() ?
                      l.shouldEvaluationDisplayAsFraction(this.model) ?
                      this.controller.t(
                          'Displaying as fraction. Press Enter to display as Decimal') :
                      this.controller.t(
                          'Displaying as decimal. Press Enter to display as Fraction') :
                      this.controller.isInEditListMode() ?
                      this.myOptionsOpen() ? this.controller.t('Hide Options') :
                                             this.controller.t('Show Options') :
                      this.model.hidden ? this.controller.t('Show Expression') :
                                          this.controller.t('Hide Expression')
                }, t
              }(n.Class);
              t.default = f
            });
          r('loadcss!expressions/evaluation-view', function() {});
          r('expressions/evaluation-view',
            [
              'require', 'exports', 'tslib', 'dcgview', 'core/lib/label',
              '../dcgview-helpers/mathquill-braille-wrapper',
              'dcgview-helpers/static-mathquill-view',
              'loadcss!./evaluation-view'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              function a(e, t) {
                return i.numericLabel(e, t)
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = n.Components, c = l.If, u = l.SwitchUnion, d = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller()
                }, t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {class: n.const('dcg-evaluation-container')},
                      n.createElement(
                          'div', {
                            class: function() {
                              return {
                                'dcg-evaluation': !0, 'dcg-do-blur': !0,
                                    'dcg-hidden':
                                        e.props.controller().isInEditListMode()
                              }
                            },
                            handleEvent: n.const('true'),
                            tabindex: function() {
                              return e.props.focusable() &&
                                      'none' === e.controller.getBrailleMode() ?
                                  '0' :
                                  '-1'
                            }
                          },
                          n.createElement(
                              o.default, {
                                latex: this.bindFn(this.getBrailleEvaluation),
                                tooltipOptions: function() {
                                  return {
                                    gravity: 'sw'
                                  }
                                },
                                ariaLabel: this.const(''),
                                brailleShouldFocus: function() {
                                  var t = e.controller.getFocusLocation();
                                  return !!t &&
                                      ('braille-output' === t.type &&
                                       t.id === e.props.id())
                                },
                                onBrailleInput: function() {},
                                controller: this.props.controller,
                                isStatic: this.const(!0),
                                onBrailleFocusedChanged: function(t) {
                                  t ? e.controller.dispatch({
                                    type: 'set-focus-location',
                                    location: {
                                      type: 'braille-output',
                                      id: e.props.id()
                                    }
                                  }) :
                                      e.controller.dispatch({
                                        type: 'blur-focus-location',
                                        location: {
                                          type: 'braille-output',
                                          id: e.props.id()
                                        }
                                      })
                                }
                              },
                              n.createElement(
                                  'div', {
                                    class: n.const(
                                        'dcg-evaluation-label-container'),
                                    onTap: this.bindFn(this.onSelectEvaluation)
                                  },
                                  n.createElement(
                                      c, {
                                        predicate: function() {
                                          return !!e.props.dependent()
                                        }
                                      },
                                      function() {
                                        return n.createElement(
                                            s.default, {
                                              latex: function() {
                                                return i.identifierToLatex(
                                                    e.props.dependent())
                                              }
                                            },
                                            n.createElement('span', null))
                                      }),
                                  n.createElement(
                                      'span', {class: n.const('dcg-equals')},
                                      n.createElement(
                                          s.default,
                                          {latex: this.const('=')}))),
                              n.createElement(
                                  'span', {
                                    class: n.const(
                                        'dcg-text-selectable dcg-evaluation-html'),
                                    didMount:
                                        this.bindFn(this.didMountEvaluation)
                                  },
                                  u(
                                      function() {
                                        return e.getEvaluationType()
                                      },
                                      {
                                        list: function() {
                                          return n.createElement(
                                              'span', null, function() {
                                                return e.controller.t(
                                                    '__count__ element list', {
                                                      count:
                                                          e.props.val().length
                                                    })
                                              })
                                        },
                                        fraction: function() {
                                          return n.createElement(s.default, {
                                            latex: function() {
                                              return i.truncatedLatexLabel(
                                                  e.props.val(),
                                                  e.getLabelOptions())
                                            }
                                          })
                                        },
                                        undefined: function() {
                                          return n.createElement(
                                              'span', null,
                                              n.const('undefined'))
                                        },
                                        scientific: function() {
                                          return n.createElement(s.default, {
                                            latex: function() {
                                              return e.getNumberLabel()
                                                         .mantissa +
                                                  '\\times10^{' +
                                                  e.getNumberLabel().exponent +
                                                  '}'
                                            }
                                          })
                                        },
                                        decimal: function() {
                                          return n.createElement(s.default, {
                                            latex: function() {
                                              return e.getNumberLabel().value
                                            }
                                          })
                                        }
                                      })))),
                      n.createElement('div', {class: n.const('dcg-clear')}))
                }, t.prototype.getNumberLabel = function() {
                  return a(this.props.val(), this.getLabelOptions())
                }, t.prototype.getEvaluationType = function() {
                  var e = this.props.val();
                  return Array.isArray(e) ? 'list' : this.getNumberLabel().type
                }, t.prototype.getLabelOptions = function() {
                  return this.props.controller()
                      .getEvaluationLabelOptionsForItem(this.props.id())
                }, t.prototype.didMountEvaluation = function(e) {
                  this.evaluationNode = e
                }, t.prototype.onSelectEvaluation = function() {
                  var e = document.createRange();
                  e.selectNodeContents(this.evaluationNode);
                  var t = window.getSelection();
                  t &&
                      (t.removeAllRanges(),
                       (t = window.getSelection()) && t.addRange(e))
                }, t.prototype.getBrailleEvaluation = function() {
                  var e = '';
                  this.props.dependent() &&
                      (e = i.identifierToLatex(this.props.dependent())),
                      e += '=';
                  var t = this.getEvaluationType();
                  switch (t) {
                    case 'list':
                      e += this.controller.t(
                          '__count__ element list',
                          {count: this.props.val().length});
                      break;
                    case 'fraction':
                      e += i.truncatedLatexLabel(
                          this.props.val(), this.getLabelOptions());
                      break;
                    case 'undefined':
                      e = 'undefined';
                      break;
                    case 'scientific':
                      e += this.getNumberLabel().mantissa + '\\times10^{' +
                          this.getNumberLabel().exponent + '}';
                      break;
                    case 'decimal':
                      e += this.getNumberLabel().value;
                      break;
                    default:
                      return t
                  }
                  return e
                }, t
              }(n.Class);
              t.default = d
            });
          r('expressions/unresolved_view',
            ['require', 'exports', 'tslib', 'dcgview'], function(e, t, r, n) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var i = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return this.controller = this.props.controller(),
                         n.createElement(
                             'div', {class: n.const('dcg-unresolved')},
                             n.createElement(
                                 'i', {class: n.const('dcg-icon-error')}),
                             n.const(' '),
                             function() {
                               return e.controller.t(
                                   'This equation contains fine detail that has not been fully resolved.')
                             },
                             n.createElement(
                                 'a', {
                                   href: n.const(
                                       'http://support.desmos.com/entries/29577773-Unresolved-Detail-In-Plotted-Functions'),
                                   target: n.const('_blank')
                                 },
                                 function() {
                                   return e.controller.t('Learn more.')
                                 }))
                }, t
              }(n.Class);
              t.default = i
            });
          r('loadcss!domain', function() {});
          r('expressions/domain_view',
            [
              'require', 'exports', 'tslib', 'dcgview', 'jquery', 'keys',
              'dcgview-helpers/mathquill-braille-wrapper',
              'dcgview-helpers/static-mathquill-view',
              'dcgview-helpers/mathquill-view',
              'graphing-calc/models/expression', 'core/lib/label', 'bugsnag',
              'loadcss!domain'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var p = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller(),
                  this.model = this.props.model(), this.id = this.model.id
                }, t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {
                        class: n.const('dcg-domain dcg-do-blur'),
                        handleEvent: n.const('true')
                      },
                      n.createElement(
                          'div', {
                            class: n.const('dcg-display-domain dcg-do-blur'),
                            handleEvent: n.const('true')
                          },
                          n.createElement(
                              'div', {
                                class:
                                    n.const('dcg-editable-mathquill-container')
                              },
                              n.createElement(
                                  s.default, {
                                    latex: function() {
                                      return e.getMinLatex()
                                    },
                                    ariaLabel: function() {
                                      return e.controller.raw('dmin')
                                    },
                                    placeholder: function() {
                                      return u.value(c.getDomainMin(e.model))
                                          .string
                                    },
                                    brailleShouldFocus: function() {
                                      return 'min' === e.getFocusedInput()
                                    },
                                    selectOnFocus: this.const(!0),
                                    onBrailleInput: function(t) {
                                      return e.dispatchMinLatexIfChanged(t)
                                    },
                                    controller: this.props.controller,
                                    hasError: function() {
                                      return !c.isDomainMinValid(e.model)
                                    },
                                    onBrailleFocusedChanged: function(t) {
                                      return e.handleFocusedChanged('min', t)
                                    },
                                    onBrailleKeydown: function(t) {
                                      return e.handleBrailleKeydown('min', t)
                                    },
                                    dataLabelAttributeValue:
                                        this.const('domain-min')
                                  },
                                  n.createElement(l.default, {
                                    latex: function() {
                                      return e.getMinLatex()
                                    },
                                    placeholder: function() {
                                      return u.value(c.getDomainMin(e.model))
                                          .string
                                    },
                                    isFocused: function() {
                                      return 'min' === e.getFocusedInput()
                                    },
                                    capExpressionSize: function() {
                                      return e.controller.getCapExpressionSize()
                                    },
                                    selectOnFocus: this.const(!0),
                                    config: this.const({}),
                                    getAriaLabel: function() {
                                      return e.controller.t('domain Minimum: ')
                                    },
                                    getAriaPostLabel: this.const(''),
                                    hasError: function() {
                                      return !c.isDomainMinValid(e.model)
                                    },
                                    onUserPressedKey: function(t, r) {
                                      e.handlePressedKey('min', t, r)
                                    },
                                    onUserChangedLatex: function(t) {
                                      return e.dispatchMinLatexIfChanged(t)
                                    },
                                    onExpressionSizeExceeded: function() {
                                      return e.controller.dispatch(
                                          {type: 'expression-size-exceeded'})
                                    },
                                    onFocusedChanged: function(t) {
                                      return e.handleFocusedChanged('min', t)
                                    },
                                    dataLabelAttributeValue:
                                        this.const('domain-min'),
                                    needsSystemKeypad: function() {
                                      return !e.controller.isKeypadEnabled()
                                    }
                                  })),
                              n.createElement(
                                  'span',
                                  {class: n.const('dcg-interval-interior')},
                                  n.createElement(
                                      a.default, {
                                        latex: function() {
                                          return e.getDomainVariableLatex()
                                        }
                                      },
                                      n.createElement('span', null))),
                              n.createElement(
                                  s.default, {
                                    latex: function() {
                                      return e.getMaxLatex()
                                    },
                                    ariaLabel: function() {
                                      return e.controller.raw('dmax')
                                    },
                                    placeholder: function() {
                                      return u.value(c.getDomainMax(e.model))
                                          .string
                                    },
                                    brailleShouldFocus: function() {
                                      return 'max' === e.getFocusedInput()
                                    },
                                    selectOnFocus: this.const(!0),
                                    onBrailleInput: function(t) {
                                      return e.dispatchMaxLatexIfChanged(t)
                                    },
                                    controller: this.props.controller,
                                    hasError: function() {
                                      return !c.isDomainMaxValid(e.model)
                                    },
                                    onBrailleFocusedChanged: function(t) {
                                      return e.handleFocusedChanged('max', t)
                                    },
                                    onBrailleKeydown: function(t) {
                                      return e.handleBrailleKeydown('max', t)
                                    },
                                    dataLabelAttributeValue:
                                        this.const('domain-max')
                                  },
                                  n.createElement(l.default, {
                                    latex: function() {
                                      return e.getMaxLatex()
                                    },
                                    placeholder: function() {
                                      return u.value(c.getDomainMax(e.model))
                                          .string
                                    },
                                    isFocused: function() {
                                      return 'max' === e.getFocusedInput()
                                    },
                                    capExpressionSize: function() {
                                      return e.controller.getCapExpressionSize()
                                    },
                                    selectOnFocus: this.const(!0),
                                    config: this.const({}),
                                    getAriaLabel: function() {
                                      return e.controller.t('domain Maximum: ')
                                    },
                                    getAriaPostLabel: this.const(''),
                                    hasError: function() {
                                      return !c.isDomainMaxValid(e.model)
                                    },
                                    onUserPressedKey: function(t, r) {
                                      e.handlePressedKey('max', t, r)
                                    },
                                    onUserChangedLatex: function(t) {
                                      return e.dispatchMaxLatexIfChanged(t)
                                    },
                                    onExpressionSizeExceeded: function() {
                                      return e.controller.dispatch(
                                          {type: 'expression-size-exceeded'})
                                    },
                                    onFocusedChanged: function(t) {
                                      return e.handleFocusedChanged('max', t)
                                    },
                                    dataLabelAttributeValue:
                                        this.const('domain-max'),
                                    needsSystemKeypad: function() {
                                      return !e.controller.isKeypadEnabled()
                                    }
                                  })))))
                }, t.prototype.handleBrailleKeydown = function(e, t) {
                  var r = o.lookup(t);
                  r && this.handlePressedKey(e, r, i.Event(t))
                }, t.prototype.handlePressedKey = function(e, t, r) {
                  if (!this.controller.isInEditListMode()) {
                    if ('Esc' === t)
                      return void this.controller.dispatch(
                          {type: 'set-focus-location', location: void 0});
                    if ('Enter' === t)
                      return this.controller.dispatch(
                          {type: 'on-special-key-pressed', key: 'Enter'})
                  }
                  var n = l.default.getFocusedMathquill(),
                      o = s.getFocusedBrailleElement();
                  if ('Left' === t || 'Right' === t || 'Down' === t ||
                      'Up' === t) {
                    return void (
                        (n ? l.default.applyArrowKeyAndReturnIfWasAtBounds(
                                 n, t, r) :
                             !(!o ||
                               !(0 === o.selectionStart && 'Left' === t ||
                                 o.selectionStart === i(o).val().length &&
                                     'Right' === t ||
                                 'Up' === t || 'Down' === t))) &&
                        (r && r.preventDefault(),
                         'Left' === t ?
                             'max' === e && this.controller.dispatch({
                               type: 'set-focus-location',
                               location: {
                                 type: 'domain-limit',
                                 id: this.model.id,
                                 location: 'min'
                               }
                             }) :
                             'Right' === t ?
                             'min' === e && this.controller.dispatch({
                               type: 'set-focus-location',
                               location: {
                                 type: 'domain-limit',
                                 id: this.model.id,
                                 location: 'max'
                               }
                             }) :
                             'Down' === t ?
                             this.controller.dispatch({
                               type: 'on-special-key-pressed',
                               key: 'Down'
                             }) :
                             'Up' === t && this.controller.dispatch({
                               type: 'set-focus-location',
                               location: {type: 'expression', id: this.model.id}
                             })))
                  }
                  n &&
                      (n.keystroke(t, r),
                       'min' === e ? this.dispatchMinLatexIfChanged(n.latex()) :
                                     'max' === e &&
                               this.dispatchMaxLatexIfChanged(n.latex()))
                }, t.prototype.handleFocusedChanged = function(e, t) {
                  t ? this.controller.dispatch({
                    type: 'set-focus-location',
                    location: {type: 'domain-limit', id: this.id, location: e}
                  }) :
                      this.controller.dispatch({
                        type: 'blur-focus-location',
                        location:
                            {type: 'domain-limit', id: this.id, location: e}
                      })
                }, t.prototype.dispatchMinLatexIfChanged = function(e) {
                  if (this.getMinLatex() !== e) {
                    var t = this.getDomainType();
                    if ('unknown' === t)
                      return void d.notify(
                          'DomainView is in use for a non-parametric, non-polar expression',
                          {
                            severity: 'error',
                            metaData: {
                              expression:
                                  c.getState(this.model, {stripDefaults: !0})
                            }
                          });
                    this.controller.dispatch(
                        'polar' === t ?
                            {
                              type: 'set-polar-domain-minlatex',
                              id: this.id,
                              latex: e
                            } :
                            {
                              type: 'set-parametric-domain-minlatex',
                              id: this.id,
                              latex: e
                            })
                  }
                }, t.prototype.dispatchMaxLatexIfChanged = function(e) {
                  if (this.getMaxLatex() !== e) {
                    var t = this.getDomainType();
                    if ('unknown' === t)
                      return void d.notify(
                          'DomainView is in use for a non-parametric, non-polar expression',
                          {
                            severity: 'error',
                            metaData: {
                              expression:
                                  c.getState(this.model, {stripDefaults: !0})
                            }
                          });
                    this.controller.dispatch(
                        'polar' === t ?
                            {
                              type: 'set-polar-domain-maxlatex',
                              id: this.id,
                              latex: e
                            } :
                            {
                              type: 'set-parametric-domain-maxlatex',
                              id: this.id,
                              latex: e
                            })
                  }
                }, t.prototype.getFocusedInput = function() {
                  var e = this.controller.getFocusLocation();
                  if (e && 'domain-limit' === e.type && e.id === this.id)
                    return e.location
                }, t.prototype.getMinLatex = function() {
                  switch (this.getDomainType()) {
                    case 'parametric':
                      return c.getParametricDomainMin(this.model);
                    case 'polar':
                      return c.getPolarDomainMin(this.model);
                    default:
                      return ''
                  }
                }, t.prototype.getMaxLatex = function() {
                  switch (this.getDomainType()) {
                    case 'parametric':
                      return c.getParametricDomainMax(this.model);
                    case 'polar':
                      return c.getPolarDomainMax(this.model);
                    default:
                      return ''
                  }
                }, t.prototype.getDomainVariableLatex = function() {
                  switch (this.getDomainType()) {
                    case 'parametric':
                      return '\\le t \\le';
                    case 'polar':
                      return '\\le \\theta \\le';
                    default:
                      return ''
                  }
                }, t.prototype.getDomainType = function() {
                  return c.isPolar(this.model)   ? 'polar' :
                      c.isParametric(this.model) ? 'parametric' :
                                                   'unknown'
                }, t
              }(n.Class);
              t.default = p
            });
          r('loadcss!regression', function() {});
          r('expressions/regression_view',
            [
              'require', 'exports', 'tslib', 'dcgview', 'core/lib/label',
              'dcgview-helpers/static-mathquill-view', 'lib/tooltip',
              'loadcss!regression'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              function a(e, t) {
                return i.truncatedLatexLabel(e.parameters[t], {
                  zeroCutoff: 1e-15,
                  digits: 6,
                  smallCutoff: 1e-6,
                  bigCutoff: 1e9
                })
              }
              function l(e, t) {
                return i.truncatedLatexLabel(e.statistics[t], {
                  zeroCutoff: 1e-15,
                  digits: 4,
                  smallCutoff: 1e-6,
                  bigCutoff: 1e9
                })
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var c = n.Components, u = c.If, d = c.For, p = c.IfElse, h = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e),
                       t.prototype
                           .template =
                           function() {
                         var e = this;
                         return this.controller = this.props.controller(),
                                this.model = this.props.model(),
                                this.id = this.model.id,
                                n.createElement(
                                    u, {
                                      predicate: this.bindFn(this.getRegression)
                                    },
                                    function() {
                                      return n
                                          .createElement(
                                              'div', {
                                                class: n.const(
                                                    'dcg-regression-container')
                                              },
                                              n.createElement(
                                                  'div', {
                                                    class: n.const(
                                                        'dcg-handle-event'),
                                                    handleEvent: n.const('true')
                                                  },
                                                  n.createElement(
                                                      u, {
                                                        predicate: e.bindFn(
                                                            e.getShouldSuggestLogMode)
                                                      },
                                                      function() {
                                                        return n
                                                            .createElement(
                                                                'div', {
                                                                  class: n.const(
                                                                      'dcg-log-mode-toggle')
                                                                },
                                                                p(
                                                                    function() {
                                                                      return e
                                                                          .areLogModeRegressionsForced()
                                                                    },
                                                                    {
                                                                      true: function() {
                                                                        return n.createElement(
                                                                            'div',
                                                                            {
                                                                              class:
                                                                                  n.const(
                                                                                      'dcg-action-log-mode-toggle dcg-no-hover-styling')
                                                                            },
                                                                            function() {
                                                                              return e
                                                                                  .controller
                                                                                  .t('Log Mode')
                                                                            })
                                                                      },
                                                                      false:
                                                                          function() {
                                                                            return n
                                                                                .createElement(
                                                                                    'div',
                                                                                    null,
                                                                                    n.createElement(
                                                                                        'div',
                                                                                        {
                                                                                          class: function() {
                                                                                            return {
                                                                                              'dcg-action-log-mode-toggle':
                                                                                                  !0,
                                                                                                  'dcg-toggled-on':
                                                                                                      e.getIsLogModeRegression()
                                                                                            }
                                                                                          },
                                                                                          onTap: e.bindFn(
                                                                                              e.onTapLogMode)
                                                                                        },
                                                                                        n.createElement(
                                                                                            'span',
                                                                                            {
                                                                                              class: n.const(
                                                                                                  'dcg-log-mode-checkbox'),
                                                                                              role: n.const(
                                                                                                  'checkbox'),
                                                                                              'aria-checked':
                                                                                                  function() {
                                                                                                    return e
                                                                                                        .getIsLogModeRegression()
                                                                                                  },
                                                                                              tabindex:
                                                                                                  n.const(
                                                                                                      '0'),
                                                                                              'aria-label':
                                                                                                  function() {
                                                                                                    return e
                                                                                                        .controller
                                                                                                        .t('Log Mode')
                                                                                                  }
                                                                                            },
                                                                                            n.createElement('i', {
                                                                                              class:
                                                                                                  n.const(
                                                                                                      'dcg-icon-check')
                                                                                            })),
                                                                                        function() {
                                                                                          return e
                                                                                              .controller
                                                                                              .t('Log Mode')
                                                                                        }),
                                                                                    n.createElement(
                                                                                        s.Tooltip,
                                                                                        {
                                                                                          tooltip: function() {
                                                                                            return e
                                                                                                .controller
                                                                                                .t('Log mode help')
                                                                                          },
                                                                                          gravity:
                                                                                              e.const(
                                                                                                  'e')
                                                                                        },
                                                                                        n.createElement(
                                                                                            'a',
                                                                                            {
                                                                                              'aria-label':
                                                                                                  function() {
                                                                                                    return e
                                                                                                        .controller
                                                                                                        .t('Log mode help')
                                                                                                  },
                                                                                              class: n.const(
                                                                                                  'dcg-log-mode-toggle-help'),
                                                                                              target:
                                                                                                  n.const(
                                                                                                      '_blank'),
                                                                                              href: n.const(
                                                                                                  'https://support.desmos.com/hc/en-us/articles/204349605')
                                                                                            },
                                                                                            n.createElement('i', {
                                                                                              class:
                                                                                                  n.const(
                                                                                                      'dcg-icon-question-sign')
                                                                                            }))))
                                                                          }
                                                                    }))
                                                      }),
                                                  n
                                                      .createElement(
                                                          'div', {
                                                            class: n.const(
                                                                'dcg-statistics'),
                                                            role: n.const(
                                                                'group'),
                                                            'aria-label':
                                                                function() {
                                                                  return e
                                                                      .controller
                                                                      .t('Statistics')
                                                                }
                                                          },
                                                          n
                                                              .createElement(
                                                                  'div', {
                                                                    class: n.const(
                                                                        'dcg-expression-footer-title')
                                                                  },
                                                                  function() {
                                                                    return e
                                                                        .controller
                                                                        .t('Statistics')
                                                                  },
                                                                  n.createElement(
                                                                      u, {
                                                                        predicate: function() {
                                                                          return e
                                                                              .getRegression()
                                                                              .statistics
                                                                              .hasOwnProperty(
                                                                                  'RMSE')
                                                                        }
                                                                      },
                                                                      function() {
                                                                        return n.createElement(
                                                                            'a',
                                                                            {
                                                                              class: n.const(
                                                                                  'dcg-expression-footer-title-help'),
                                                                              target:
                                                                                  n.const(
                                                                                      '_blank'),
                                                                              href: n.const(
                                                                                  'http://support.desmos.com/entries/60176149-What-is-RMSE-'),
                                                                              'aria-label':
                                                                                  function() {
                                                                                    return e
                                                                                        .controller
                                                                                        .t('What is RMSE?')
                                                                                  }
                                                                            },
                                                                            n.createElement(
                                                                                'i',
                                                                                {
                                                                                  class:
                                                                                      n.const(
                                                                                          'dcg-icon-question-sign')
                                                                                }))
                                                                      }),
                                                                  n
                                                                      .createElement(
                                                                          u, {
                                                                            predicate: function() {
                                                                              return e.getRegression()
                                                                                         .statistics
                                                                                         .Rsquared <
                                                                                  0
                                                                            }
                                                                          },
                                                                          function() {
                                                                            return n
                                                                                .createElement(
                                                                                    'a',
                                                                                    {
                                                                                      'aria-label': function() {
                                                                                        return e
                                                                                            .controller
                                                                                            .t('Why am I seeing a negative R Squared value?')
                                                                                      },
                                                                                      class: n.const(
                                                                                          'dcg-expression-footer-title-help'),
                                                                                      target:
                                                                                          n.const(
                                                                                              '_blank'),
                                                                                      href: n.const(
                                                                                          'http://support.desmos.com/entries/60460125-Why-am-I-seeing-a-negative-R-2-value-')
                                                                                    },
                                                                                    n.createElement('i', {
                                                                                      class:
                                                                                          n.const(
                                                                                              'dcg-icon-question-sign')
                                                                                    }))
                                                                          })),
                                                          n.createElement(
                                                              'div', {
                                                                class: n.const(
                                                                    'dcg-statistics-values')
                                                              },
                                                              n.createElement(
                                                                  u, {
                                                                    predicate: function() {
                                                                      return e
                                                                          .getRegression()
                                                                          .statistics
                                                                          .hasOwnProperty(
                                                                              'Rsquared')
                                                                    }
                                                                  },
                                                                  function() {
                                                                    return n.createElement(
                                                                        'div',
                                                                        null,
                                                                        n.createElement(
                                                                            o.default,
                                                                            {
                                                                              latex: function() {
                                                                                return 'R^2=' +
                                                                                    l(e.getRegression(),
                                                                                      'Rsquared')
                                                                              }
                                                                            },
                                                                            n.createElement(
                                                                                'span',
                                                                                {
                                                                                  tabindex:
                                                                                      n.const(
                                                                                          '0')
                                                                                })))
                                                                  }),
                                                              n.createElement(
                                                                  u, {
                                                                    predicate: function() {
                                                                      return e
                                                                          .getRegression()
                                                                          .statistics
                                                                          .hasOwnProperty(
                                                                              'rsquared')
                                                                    }
                                                                  },
                                                                  function() {
                                                                    return n.createElement(
                                                                        'div',
                                                                        null,
                                                                        n.createElement(
                                                                            o.default,
                                                                            {
                                                                              latex: function() {
                                                                                return 'r^2=' +
                                                                                    l(e.getRegression(),
                                                                                      'rsquared')
                                                                              }
                                                                            },
                                                                            n.createElement(
                                                                                'span',
                                                                                {
                                                                                  tabindex:
                                                                                      n.const(
                                                                                          '0')
                                                                                })))
                                                                  }),
                                                              n.createElement(
                                                                  u, {
                                                                    predicate: function() {
                                                                      return e
                                                                          .getRegression()
                                                                          .statistics
                                                                          .hasOwnProperty(
                                                                              'r')
                                                                    }
                                                                  },
                                                                  function() {
                                                                    return n.createElement(
                                                                        'div',
                                                                        null,
                                                                        n.createElement(
                                                                            o.default,
                                                                            {
                                                                              latex: function() {
                                                                                return 'r=' +
                                                                                    l(e.getRegression(),
                                                                                      'r')
                                                                              }
                                                                            },
                                                                            n.createElement('span', {
                                                                              class: n.const(
                                                                                  'dcg-r-value'),
                                                                              tabindex:
                                                                                  n.const(
                                                                                      '0')
                                                                            })))
                                                                  }),
                                                              n.createElement(
                                                                  u, {
                                                                    predicate: function() {
                                                                      return e
                                                                          .getRegression()
                                                                          .statistics
                                                                          .hasOwnProperty(
                                                                              'RMSE')
                                                                    }
                                                                  },
                                                                  function() {
                                                                    return n.createElement(
                                                                        'div',
                                                                        null,
                                                                        n.createElement(
                                                                            o.default,
                                                                            {
                                                                              latex: function() {
                                                                                return '\\operatorname{RMSE}=' +
                                                                                    l(e.getRegression(),
                                                                                      'RMSE')
                                                                              }
                                                                            },
                                                                            n.createElement(
                                                                                'span',
                                                                                {
                                                                                  tabindex:
                                                                                      n.const(
                                                                                          '0')
                                                                                })))
                                                                  }))),
                                                  n.createElement(
                                                      'div', {
                                                        role: n.const('group'),
                                                        'aria-label':
                                                            function() {
                                                              return e
                                                                  .controller
                                                                  .t('Residuals')
                                                            },
                                                        class: n.const(
                                                            'dcg-residuals')
                                                      },
                                                      n.createElement(
                                                          'div', {
                                                            class: n.const(
                                                                'dcg-expression-footer-title')
                                                          },
                                                          function() {
                                                            return e.controller
                                                                .t('Residuals')
                                                          }),
                                                      n.createElement(
                                                          o.default, {
                                                            latex: e.bindFn(
                                                                e.getResidualVariable)
                                                          },
                                                          n.createElement('span', {
                                                            class: n.const(
                                                                'dcg-residuals-variable'),
                                                            tabindex:
                                                                n.const('0')
                                                          })),
                                                      n.createElement(
                                                          'div', {
                                                            class: function() {
                                                              return {
                                                                'dcg-residual-suggestion':
                                                                    !0,
                                                                    'dcg-action-plot-residual':
                                                                        !0,
                                                                    'dcg-btn':
                                                                        !0,
                                                                    'dcg-btn-light-gray':
                                                                        !0,
                                                                    'dcg-visible':
                                                                        e.getResidualSuggestionVisible()
                                                              }
                                                            },
                                                            'aria-hidden':
                                                                function() {
                                                                  return !e.getResidualSuggestionVisible()
                                                                },
                                                            role: n.const(
                                                                'button'),
                                                            tabindex: function() {
                                                              return e.getResidualSuggestionVisible() ?
                                                                  '0' :
                                                                  void 0
                                                            },
                                                            onTap: e.bindFn(
                                                                e.onTapResidualsSuggestion)
                                                          },
                                                          function() {
                                                            return e.controller
                                                                .t('plot')
                                                          })),
                                                  n
                                                      .createElement(
                                                          u, {
                                                            predicate: function() {
                                                              return Object
                                                                         .keys(
                                                                             e.getRegression()
                                                                                 .parameters)
                                                                         .length >
                                                                  0
                                                            }
                                                          },
                                                          function() {
                                                            return n.createElement(
                                                                'div', {
                                                                  class: n.const(
                                                                      'dcg-parameters-container')
                                                                },
                                                                n.createElement(
                                                                    'div', {
                                                                      class: n.const(
                                                                          'dcg-expression-footer-title')
                                                                    },
                                                                    function() {
                                                                      return e
                                                                          .controller
                                                                          .t('Parameters')
                                                                    }),
                                                                n.createElement(
                                                                    d, {
                                                                      each: function() {
                                                                        return Object
                                                                            .keys(
                                                                                e.getRegression()
                                                                                    .parameters)
                                                                      }
                                                                    },
                                                                    n.createElement(
                                                                        'div', {
                                                                          role: n.const(
                                                                              'group'),
                                                                          'aria-label':
                                                                              function() {
                                                                                return e
                                                                                    .controller
                                                                                    .t('Parameters')
                                                                              },
                                                                          class:
                                                                              n.const(
                                                                                  'dcg-parameters')
                                                                        },
                                                                        function(
                                                                            t) {
                                                                          return n
                                                                              .createElement(
                                                                                  o.default,
                                                                                  {
                                                                                    latex: function() {
                                                                                      return t +
                                                                                          '=' +
                                                                                          a(e.getRegression(),
                                                                                            t)
                                                                                    }
                                                                                  },
                                                                                  n.createElement('span', {
                                                                                    class: n.const(
                                                                                        'dcg-parameter'),
                                                                                    tabindex:
                                                                                        n.const(
                                                                                            '0')
                                                                                  }))
                                                                        })))
                                                          }),
                                                  n.createElement('div', {
                                                    class: n.const('dcg-clear')
                                                  })))
                                    })
                       },
                t.prototype.onTapResidualsSuggestion = function() {
                  this.controller.dispatch(
                      {type: 'plot-residuals', id: this.id})
                }, t.prototype.onTapLogMode = function() {
                  this.controller.dispatch(
                      {type: 'toggle-logmode', id: this.id})
                }, t.prototype.getRegression = function() {
                  return this.model.formula.regression
                }, t.prototype.getResidualVariable = function() {
                  return this.getRegression().residualVariable || ''
                }, t.prototype.getResidualSuggestionVisible = function() {
                  return void 0 !== this.getRegression().residualSuggestionId
                }, t.prototype.areLogModeRegressionsForced = function() {
                  return this.controller.areLogModeRegressionsForced()
                }, t.prototype.getShouldSuggestLogMode = function() {
                  return !!this.getRegression().shouldSuggestLogMode
                }, t.prototype.getIsLogModeRegression = function() {
                  return !!this.model.isLogModeRegression
                }, t
              }(n.Class);
              t.default = h, t.getRoundedParam = a, t.getRoundedStat = l
            });
          (function() {
            r('dcgview-helpers/dragdrop',
              [
                'require', 'underscore', 'underscore_model', 'jquery', 'pjs',
                'lib/animation-frame'
              ],
              function(e) {
                var t, r, n, i;
                return e('underscore'),
                       i = e('underscore_model').UnderscoreModel,
                       t = e('jquery'), n = e('pjs'),
                       r = e('lib/animation-frame'), n(i, function(e, n) {
                         return {
                           init: function(e) {
                             return this.options = null != e ? e : {},
                                    n.init.call(this), this.dragging = !1
                           }, _evt2pt: function(e) {
                             return {
                               x: e.changedTouches[0].pageX - this._offsetPt.x,
                                   y: e.changedTouches[0].pageY -
                                   this._offsetPt.y
                             }
                           }, _dispatch: function(e, t) {
                             var r;
                             if (!this._destroyed)
                               return r = this._evt2pt(t),
                                      this.triggerEvent(e, {
                                        x: r.x,
                                        y: r.y,
                                        dx: r.x - this._startPt.x,
                                        dy: r.y - this._startPt.y,
                                        evt: t
                                      })
                           }, destroy: function() {
                             return t(document).off('.' + this.guid),
                                    this._destroyed = !0
                           }, startDrag: function(e, n) {
                             if (null == n && (n = {}), !this.dragging)
                               return t(document).on(
                                          'dcg-tapmove.' + this.guid,
                                          function(e) {
                                            return function(t) {
                                              if (t.originalEvent
                                                      .preventDefault(),
                                                  !e.options.doNotThrottle)
                                                return r.cancelAnimationFrame(
                                                           e.frameThrottle),
                                                       e.frameThrottle =
                                                           r.requestAnimationFrame(
                                                               function() {
                                                                 return e
                                                                     .doDrag(t)
                                                               });
                                              e.doDrag(t)
                                            }
                                          }(this)),
                                      t(document).on(
                                          'dcg-tapend.' + this.guid +
                                              ' dcg-tapcancel.' + this.guid,
                                          function(e) {
                                            return function(t) {
                                              return e.endDrag(t)
                                            }
                                          }(this)),
                                      this._offsetPt = {x: 0, y: 0},
                                      null != n.origin && (this._offsetPt = {
                                        x: this._evt2pt(e).x - n.origin.x,
                                        y: this._evt2pt(e).y - n.origin.y
                                      }),
                                      this._startPt = this._evt2pt(e),
                                      this.setProperty('dragging', !0),
                                      this._dispatch('onGrab', e)
                           }, doDrag: function(e) {
                             if (this.dragging)
                               return this._dispatch('onDrag', e)
                           }, endDrag: function(e) {
                             if (this.dragging)
                               return t(document).off('.' + this.guid),
                                      this.doDrag(e),
                                      this.setProperty('dragging', !1),
                                      this._dispatch('onDrop', e)
                           }
                         }
                       })
              })
          })(this);
          r('loadcss!dcgview-helpers/slider', function() {});
          r('dcgview-helpers/slider',
            [
              'require', 'exports', './dragdrop', 'lib/rounding', 'tslib',
              'keys', 'dcgview', 'jquery', 'lib/conditional_blur',
              'loadcss!./slider'
            ],
            function(e, t, r, n, i, o, s, a, l) {
              'use strict';
              function c(e, t, r) {
                return Math.min(Math.max(e, t), r)
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var u = s.Components.If, d = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return i.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return s.createElement(
                      'div', {
                        class: function() {
                          return {
                            'dcg-slider-interior': !0,
                                'dcg-disable-slider': e.shouldDisableSlider()
                          }
                        },
                        didMount: this.bindFn(this.didMountRoot),
                        onTapStart: this.bindFn(this.onStartDrag),
                        style: s.const({'touch-action': 'none'})
                      },
                      s.createElement(
                          'div', {class: s.const('dcg-track')},
                          s.createElement('div', {
                            class: s.const('dcg-ticks'),
                            onMount: this.bindFn(this.didMountTickMarks)
                          }),
                          s.createElement(
                              'div', {class: s.const('dcg-graphic')})),
                      s.createElement(
                          u,
                          {predicate: this.bindFn(this.shouldShowZeroMarker)},
                          function() {
                            return s.createElement('div', {
                              class: s.const('dcg-zeroMarker'),
                              style: function() {
                                return {
                                  left: e.getZeroMarkerPercent() + '%'
                                }
                              }
                            })
                          }),
                      s.createElement(
                          'div', {
                            class: function() {
                              return {
                                'dcg-thumb': !0, 'dcg-down': e.isDragging
                              }
                            },
                            role: s.const('slider'),
                            tabindex: s.const('0'),
                            disablescroll: s.const('true'),
                            style: function() {
                              return {
                                left: e.getThumbPercent() + '%'
                              }
                            },
                            onKeyDown: this.bindFn(this.onKeyDown),
                            'aria-label': this.props.ariaLabel,
                            'aria-valuemin': this.props.min,
                            'aria-valuemax': this.props.max,
                            'aria-valuenow': this.props.value,
                            manageFocus: this.buildFocusManager()
                          },
                          s.createElement(
                              'div', {class: s.const('dcg-graphic')}),
                          s.createElement(
                              'div', {class: s.const('dcg-center')})))
                }, t.prototype.willUnmount = function() {
                  this.dragDrop.destroy()
                }, t.prototype.didMountRoot = function(e) {
                  var t = this;
                  this.rootNode = e, this.dragDrop = r(), this.isMounted = !0,
                  this.dragDrop.observeEvent('onDrop', function() {
                    t.isDragging = !1, t.update(),
                    t.props.onDrop && t.props.onDrop()
                  }), this.dragDrop.observeEvent('onGrab', function() {
                    t.isDragging = !0, t.update(),
                    t.props.onGrab && t.props.onGrab()
                  }), this.dragDrop.observeEvent('onDrag', function(e, r) {
                    t.props.onDragUpdate(t.valueFromPixels(r.x))
                  })
                }, t.prototype.didMountTickMarks = function(e) {
                  this.tickMarksNode = e, this.renderTickMarks()
                }, t.prototype.didUpdate = function() {
                  this.renderTickMarks()
                }, t.prototype.shouldDisableSlider = function() {
                  return this.props.min() === this.props.max()
                }, t.prototype.renderTickMarks = function() {
                  if (this.tickMarksNode) {
                    var e, t = this.props.step(), r = this.props.min(),
                           n = this.props.max();
                    if (e = void 0 === t ? 0 : 100 * t / (n - r),
                        e < 3 && (e = 0), e > 100 && (e = 0),
                        isNaN(e) && (e = 0), this.lastTickMarksPercent !== e) {
                      this.lastTickMarksPercent = e;
                      var i = '';
                      if (e > 0 && e < 100)
                        for (var o = e; o < 100; o += e)
                          i += '<div class="dcg-tick" style="left:' + o +
                              '%"></div>';
                      this.tickMarksNode.innerHTML = i
                    }
                  }
                }, t.prototype.shouldShowZeroMarker = function() {
                  return this.props.min() <= 0 && this.props.max() >= 0
                }, t.prototype.getZeroMarkerPercent = function() {
                  var e = this.props.min();
                  return 100 * (0 - e) / (this.props.max() - e)
                }, t.prototype.getThumbPercent = function() {
                  return 100 * this.percentFromValue(this.props.value())
                }, t.prototype.valueFromPixels = function(e) {
                  if (!this.isMounted) return 0;
                  var t = this.props.min(), r = this.props.max(),
                      i = this.rootNode.getBoundingClientRect().width,
                      o = c(e / i, 0, 1), s = t + (r - t) * o, a = (r - t) / i;
                  return n.shortestDecimalBetween(s - a, s + a)
                }, t.prototype.percentFromValue = function(e) {
                  var t = this.props.min();
                  return c((e - t) / (this.props.max() - t), 0, 1)
                }, t.prototype.pixelsFromValue = function(e) {
                  if (!this.isMounted) return 0;
                  var t = this.percentFromValue(e);
                  return this.rootNode.getBoundingClientRect().width * t
                }, t.prototype.onKeyDown = function(e) {
                  switch (o.lookup(e)) {
                    case o.UP:
                      this.props.onUpPress &&
                          (this.props.onUpPress(), e.preventDefault());
                      break;
                    case o.DOWN:
                      this.props.onDownPress &&
                          (this.props.onDownPress(), e.preventDefault());
                      break;
                    case o.ENTER:
                      this.props.onEnterPress &&
                          (this.props.onEnterPress(), e.preventDefault());
                      break;
                    case o.ESCAPE:
                      document.activeElement &&
                          a(document.activeElement).blur();
                      break;
                    case o.LEFT:
                      this.props.onKeyboardUpdate('down'), e.preventDefault();
                      break;
                    case o.RIGHT:
                      this.props.onKeyboardUpdate('up'), e.preventDefault();
                      break;
                    case o.PAGEDOWN:
                      this.props.onKeyboardUpdate('bigdown'),
                          e.preventDefault();
                      break;
                    case o.PAGEUP:
                      this.props.onKeyboardUpdate('bigup'), e.preventDefault();
                      break;
                    case o.HOME:
                      this.props.onKeyboardUpdate('min'), e.preventDefault();
                      break;
                    case o.END:
                      this.props.onKeyboardUpdate('max'), e.preventDefault()
                  }
                }, t.prototype.onStartDrag = function(e) {
                  if ('keyboard' !== e.device && e.target) {
                    e.preventDefault(), l.default();
                    var t = {x: 0, y: 0};
                    1 === a(e.target).closest('.dcg-thumb').length ?
                        t.x = this.pixelsFromValue(this.props.value()) :
                        t.x = e.changedTouches[0].clientX -
                            this.rootNode.getBoundingClientRect().left,
                        this.dragDrop.startDrag(e, {origin: t})
                  }
                }, t.prototype.buildFocusManager = function() {
                  return this.props.onFocusedChanged && this.props.isFocused ?
                      this.const({
                        shouldBeFocused: this.props.isFocused,
                        onFocusedChanged: this.props.onFocusedChanged
                      }) :
                      this.const(void 0)
                }, t
              }(s.Class);
              t.default = d
            });
          r('expressions/slider_limits_view',
            [
              'require', 'exports', 'tslib', 'jquery', 'dcgview',
              'dcgview-helpers/mathquill-braille-wrapper',
              'dcgview-helpers/static-mathquill-view',
              'dcgview-helpers/mathquill-view', 'keys',
              'graphing-calc/models/expression', 'core/lib/label',
              'core/types/slider-loop-modes'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var p = i.Components.If, h = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller(),
                  this.model = this.props.model(), this.id = this.model.id
                }, t.prototype.template = function() {
                  var e = this;
                  return i.createElement(
                      'div', {
                        class: i.const('dcg-slider_menu dcg-do-blur'),
                        handleEvent: i.const('true'),
                        didMount: function(t) {
                          return e.node = t
                        }
                      },
                      i.createElement(
                          'div',
                          {class: i.const('dcg-editable-mathquill-container')},
                          i.createElement(
                              p, {
                                predicate: function() {
                                  return !e.shouldOnlyShowStep()
                                }
                              },
                              function() {
                                return i.createElement(
                                    'span', null,
                                    i.createElement(
                                        o.default, {
                                          latex: function() {
                                            return e.model.slider.hardMin ?
                                                e.model.slider.min :
                                                ''
                                          },
                                          ariaLabel: function() {
                                            return e.controller.raw('sldrmin')
                                          },
                                          brailleShouldFocus: function() {
                                            return 'min' === e.getFocusedInput()
                                          },
                                          onBrailleInput: function(t) {
                                            return e.handleLatexChanged(
                                                'min', t)
                                          },
                                          controller: e.props.controller,
                                          hasError: function() {
                                            return !c.isSliderMinValid(e.model)
                                          },
                                          onBrailleFocusedChanged: function(
                                              t, r) {
                                            return e.handleFocusedChanged(
                                                'min', t, r)
                                          },
                                          onBrailleKeydown: function(t) {
                                            return e.handleBrailleKeydown(
                                                'min', t)
                                          },
                                          selectOnFocus: e.const(!0),
                                          dataDCGLimit: e.const('slidermin')
                                        },
                                        i.createElement(
                                            a.default, {
                                              latex: function() {
                                                return e.model.slider.hardMin ?
                                                    e.model.slider.min :
                                                    ''
                                              },
                                              isFocused: function() {
                                                return 'min' ===
                                                    e.getFocusedInput()
                                              },
                                              capExpressionSize: function() {
                                                return e.controller
                                                    .getCapExpressionSize()
                                              },
                                              selectOnFocus: e.const(!0),
                                              config: e.const({}),
                                              getAriaLabel: function() {
                                                return e.controller.t(
                                                    'Slider Minimum: ')
                                              },
                                              getAriaPostLabel: e.const(''),
                                              hasError: e.const(!1),
                                              onUserPressedKey: function(t, r) {
                                                return e.handlePressedKey(
                                                    'min', t, r)
                                              },
                                              onUserChangedLatex: function(t) {
                                                return e.handleLatexChanged(
                                                    'min', t)
                                              },
                                              onExpressionSizeExceeded: function() {
                                                return e.controller.dispatch({
                                                  type:
                                                      'expression-size-exceeded'
                                                })
                                              },
                                              onFocusedChanged: function(t, r) {
                                                return e.handleFocusedChanged(
                                                    'min', t, r)
                                              },
                                              needsSystemKeypad: function() {
                                                return !e.controller
                                                            .isKeypadEnabled()
                                              }
                                            },
                                            i.createElement('span', {
                                              class: function() {
                                                return {
                                                  'dcg-math-field': !0,
                                                      'dcg-focus': 'min' ===
                                                      e.getFocusedInput(),
                                                      'dcg-invalid':
                                                          !c.isSliderMinValid(
                                                              e.model)
                                                }
                                              },
                                              'data-dcg-limit':
                                                  i.const('slidermin')
                                            }))),
                                    i.createElement(
                                        'span', {
                                          class:
                                              i.const('dcg-interval-interior')
                                        },
                                        i.createElement(
                                            s.default, {
                                              latex:
                                                  e.bindFn(e.getDependentLatex)
                                            },
                                            i.createElement('span', null))),
                                    i.createElement(
                                        o.default, {
                                          latex: function() {
                                            return e.model.slider.hardMax ?
                                                e.model.slider.max :
                                                ''
                                          },
                                          ariaLabel: function() {
                                            return e.controller.raw('sldrmax')
                                          },
                                          brailleShouldFocus: function() {
                                            return 'max' === e.getFocusedInput()
                                          },
                                          onBrailleInput: function(t) {
                                            return e.handleLatexChanged(
                                                'max', t)
                                          },
                                          controller: e.props.controller,
                                          hasError: function() {
                                            return !c.isSliderMaxValid(e.model)
                                          },
                                          onBrailleFocusedChanged: function(
                                              t, r) {
                                            return e.handleFocusedChanged(
                                                'max', t, r)
                                          },
                                          onBrailleKeydown: function(t) {
                                            return e.handleBrailleKeydown(
                                                'max', t)
                                          },
                                          selectOnFocus: e.const(!0),
                                          dataDCGLimit: e.const('slidermax')
                                        },
                                        i.createElement(
                                            a.default, {
                                              latex: function() {
                                                return e.model.slider.hardMax ?
                                                    e.model.slider.max :
                                                    ''
                                              },
                                              isFocused: function() {
                                                return 'max' ===
                                                    e.getFocusedInput()
                                              },
                                              capExpressionSize: function() {
                                                return e.controller
                                                    .getCapExpressionSize()
                                              },
                                              selectOnFocus: e.const(!0),
                                              config: e.const({}),
                                              getAriaLabel: function() {
                                                return e.controller.t(
                                                    'Slider Maximum: ')
                                              },
                                              getAriaPostLabel: e.const(''),
                                              hasError: e.const(!1),
                                              onUserPressedKey: function(t, r) {
                                                return e.handlePressedKey(
                                                    'max', t, r)
                                              },
                                              onUserChangedLatex: function(t) {
                                                return e.handleLatexChanged(
                                                    'max', t)
                                              },
                                              onExpressionSizeExceeded: function() {
                                                return e.controller.dispatch({
                                                  type:
                                                      'expression-size-exceeded'
                                                })
                                              },
                                              onFocusedChanged: function(t, r) {
                                                return e.handleFocusedChanged(
                                                    'max', t, r)
                                              },
                                              needsSystemKeypad: function() {
                                                return !e.controller
                                                            .isKeypadEnabled()
                                              }
                                            },
                                            i.createElement('span', {
                                              class: function() {
                                                return {
                                                  'dcg-math-field': !0,
                                                      'dcg-focus': 'max' ===
                                                      e.getFocusedInput(),
                                                      'dcg-invalid':
                                                          !c.isSliderMaxValid(
                                                              e.model)
                                                }
                                              },
                                              'data-dcg-limit':
                                                  i.const('slidermax')
                                            }))))
                              }),
                          i.createElement(
                              'span', {
                                class: function() {
                                  return {
                                    'dcg-slider-step-container':
                                        !e.shouldOnlyShowStep()
                                  }
                                }
                              },
                              i.createElement(
                                  'span', {
                                    class: i.const('dcg-slider-step-label'),
                                    'aria-hidden': i.const('true')
                                  },
                                  function() {
                                    return e.controller.t('Step:')
                                  }),
                              i.createElement(
                                  o.default, {
                                    latex: function() {
                                      return e.model.slider.step
                                    },
                                    ariaLabel: function() {
                                      return e.controller.raw('sldrstp')
                                    },
                                    brailleShouldFocus: function() {
                                      return 'step' === e.getFocusedInput()
                                    },
                                    onBrailleInput: function(t) {
                                      return e.handleLatexChanged('step', t)
                                    },
                                    controller: this.props.controller,
                                    hasError: function() {
                                      return !c.isSliderStepValid(e.model)
                                    },
                                    onBrailleFocusedChanged: function(t, r) {
                                      return e.handleFocusedChanged(
                                          'step', t, r)
                                    },
                                    onBrailleKeydown: function(t) {
                                      return e.handleBrailleKeydown('step', t)
                                    },
                                    selectOnFocus: this.const(!0),
                                    dataDCGLimit: this.const('sliderstep')
                                  },
                                  i.createElement(
                                      a.default, {
                                        latex: function() {
                                          return e.model.slider.step
                                        },
                                        isFocused: function() {
                                          return 'step' === e.getFocusedInput()
                                        },
                                        capExpressionSize: function() {
                                          return e.controller
                                              .getCapExpressionSize()
                                        },
                                        selectOnFocus: this.const(!0),
                                        config: this.const({}),
                                        getAriaLabel: function() {
                                          return e.controller.t(
                                              'Slider Step Size: ')
                                        },
                                        getAriaPostLabel: this.const(''),
                                        hasError: this.const(!1),
                                        onUserPressedKey: function(t, r) {
                                          return e.handlePressedKey(
                                              'step', t, r)
                                        },
                                        onUserChangedLatex: function(t) {
                                          return e.handleLatexChanged('step', t)
                                        },
                                        onExpressionSizeExceeded: function() {
                                          return e.controller.dispatch({
                                            type: 'expression-size-exceeded'
                                          })
                                        },
                                        onFocusedChanged: function(t, r) {
                                          return e.handleFocusedChanged(
                                              'step', t, r)
                                        },
                                        needsSystemKeypad: function() {
                                          return !e.controller.isKeypadEnabled()
                                        }
                                      },
                                      i.createElement('span', {
                                        class: function() {
                                          return {
                                            'dcg-math-field': !0,
                                                'dcg-focus': 'step' ===
                                                e.getFocusedInput(),
                                                'dcg-invalid':
                                                    !c.isSliderStepValid(
                                                        e.model)
                                          }
                                        },
                                        'data-dcg-limit': i.const('sliderstep')
                                      }))))))
                }, t.prototype.handleBrailleKeydown = function(e, t) {
                  var r = l.lookup(t);
                  r && this.handlePressedKey(e, r, n.Event(t))
                }, t.prototype.handlePressedKey = function(e, t, r) {
                  if (!(this.controller.isInEditListMode() ||
                        this.shouldOnlyShowStep() ||
                        'Esc' !== t && 'Enter' !== t))
                    return void this.controller.dispatch({
                      type: 'set-focus-location',
                      location: {type: 'slider-thumb', id: this.id}
                    });
                  var i = a.default.getFocusedMathquill(),
                      s = o.getFocusedBrailleElement();
                  if ('Left' === t || 'Right' === t || 'Down' === t ||
                      'Up' === t) {
                    return void (
                        (i ? a.default.applyArrowKeyAndReturnIfWasAtBounds(
                                 i, t, r) :
                             !(!s ||
                               !(0 === s.selectionStart && 'Left' === t ||
                                 s.selectionStart === n(s).val().length &&
                                     'Right' === t ||
                                 'Up' === t || 'Down' === t))) &&
                        (r && r.preventDefault(),
                         'Left' !== t || this.shouldOnlyShowStep() ?
                             'Right' !== t || this.shouldOnlyShowStep() ?
                             'Down' === t ?
                             this.controller.dispatch({
                               type: 'on-special-key-pressed',
                               key: 'Down'
                             }) :
                             'Up' === t && this.controller.dispatch({
                               type: 'set-focus-location',
                               location: {type: 'expression', id: this.model.id}
                             }) :
                                 'min' === e ?
                             this.controller.dispatch({
                               type: 'set-focus-location',
                               location: {
                                 type: 'slider-limit',
                                 id: this.model.id,
                                 location: 'max'
                               }
                             }) :
                             'max' === e && this.controller.dispatch({
                               type: 'set-focus-location',
                               location: {
                                 type: 'slider-limit',
                                 id: this.model.id,
                                 location: 'step'
                               }
                             }) :
                             'max' === e ?
                             this.controller.dispatch({
                               type: 'set-focus-location',
                               location: {
                                 type: 'slider-limit',
                                 id: this.model.id,
                                 location: 'min'
                               }
                             }) :
                             'step' === e && this.controller.dispatch({
                               type: 'set-focus-location',
                               location: {
                                 type: 'slider-limit',
                                 id: this.model.id,
                                 location: 'max'
                               }
                             })))
                  }
                  i &&
                      (i.keystroke(t, r), this.handleLatexChanged(e, i.latex()))
                }, t.prototype.shouldOnlyShowStep = function() {
                  return this.model.slider.loopMode ===
                      d.SliderLoopMode.PLAY_INDEFINITELY
                }, t.prototype.handleLatexChanged = function(e, t) {
                  'min' === e     ? this.dispatchMinLatexIfChanged(t) :
                      'max' === e ? this.dispatchMaxLatexIfChanged(t) :
                                    'step' === e &&
                          this.dispatchStepLatexIfChanged(t)
                }, t.prototype.handleFocusedChanged = function(e, t, r) {
                  t && this.getFocusedInput() !== e ? this.controller.dispatch({
                    type: 'set-focus-location',
                    location: {type: 'slider-limit', id: this.id, location: e}
                  }) :
                                                      this.getFocusedInput() !==
                              e ||
                          'none' !== this.controller.getBrailleMode() ||
                          r.relatedTarget &&
                              this.node.contains(r.relatedTarget) ||
                          this.controller.dispatch({
                            type: 'blur-focus-location',
                            location:
                                {type: 'slider-limit', id: this.id, location: e}
                          })
                }, t.prototype.dispatchMinLatexIfChanged = function(e) {
                  this.model.slider.min !== e &&
                      this.controller.dispatch(
                          {type: 'set-slider-minlatex', id: this.id, latex: e})
                }, t.prototype.dispatchMaxLatexIfChanged = function(e) {
                  this.model.slider.max !== e &&
                      this.controller.dispatch(
                          {type: 'set-slider-maxlatex', id: this.id, latex: e})
                }, t.prototype.dispatchStepLatexIfChanged = function(e) {
                  this.model.slider.step !== e &&
                      this.controller.dispatch(
                          {type: 'set-slider-steplatex', id: this.id, latex: e})
                }, t.prototype.getDependentLatex = function() {
                  var e = this.model.dependent || '';
                  return ' \\le ' + u.identifierToLatex(e) + ' \\le '
                }, t.prototype.getFocusedInput = function() {
                  var e = this.controller.getFocusLocation();
                  if (e && 'slider-limit' === e.type && e.id === this.id)
                    return e.location
                }, t
              }(i.Class);
              t.default = h
            });
          r('loadcss!expressions/slider-view', function() {});
          r('expressions/slider_view',
            [
              'require', 'exports', 'tslib', 'jquery', 'keys', 'dcgview',
              'dcgview-helpers/slider', './slider_limits_view',
              'dcgview-helpers/static-mathquill-view',
              'graphing-calc/models/expression', 'core/types/slider-loop-modes',
              'loadcss!./slider-view'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var d = o.Components.If, p = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller(),
                  this.model = this.props.model(), this.id = this.model.id
                }, t.prototype.template = function() {
                  var e = this;
                  return o.createElement(
                      'span', {
                        class: o.const('dcg-slider-container'),
                        tapboundary: o.const('true'),
                        onKeydown: function(t) {
                          'Tab' !== i.lookup(t) || t.altKey || t.metaKey ||
                              t.ctrlKey ||
                              (t.shiftKey ?
                                   e.isSliderMinFocused() &&
                                           e.controller.isInEditListMode() ?
                                   (null !== t.target &&
                                        n(t.target)
                                            .closest('.dcg-expressionitem')
                                            .find(
                                                '[tabindex="0"]:visible:first')
                                            .focus(),
                                    t.preventDefault(), t.stopPropagation()) :
                                   e.isSliderThumbFocused() &&
                                           (e.controller.dispatch({
                                             type: 'set-focus-location',
                                             location: {
                                               type: 'slider-limit',
                                               id: e.id,
                                               location: 'step'
                                             }
                                           }),
                                            t.preventDefault(),
                                            t.stopPropagation()) :
                                   !t.shiftKey && e.isSliderStepFocused() &&
                                       (e.controller.isInEditListMode() ?
                                            e.controller.dispatch({
                                              type: 'set-focus-location',
                                              location: {
                                                type: 'slider-icon',
                                                id: e.id
                                              }
                                            }) :
                                            e.controller.dispatch({
                                              type: 'set-focus-location',
                                              location: {
                                                type: 'slider-thumb',
                                                id: e.id
                                              }
                                            }),
                                        t.preventDefault(),
                                        t.stopPropagation()))
                        }
                      },
                      o.createElement(
                          d, {
                            predicate: function() {
                              return e.shouldShowSlider()
                            }
                          },
                          function() {
                            return o.createElement(
                                'div', {
                                  class: o.const('dcg-do-blur dcg-slider'),
                                  handleEvent: o.const('true')
                                },
                                o.createElement(
                                    'div', {
                                      class: o.const(
                                          'dcg-minLabel dcg-template-minlabelhtml'),
                                      role: o.const('button'),
                                      tabindex: o.const('0'),
                                      'aria-label': function() {
                                        return e.controller.t(
                                            'Edit __variable__ Limits', {
                                              variable: 'none' ===
                                                      e.controller
                                                          .getBrailleMode() ?
                                                  '"' + e.model.dependent +
                                                      '"' :
                                                  '' + e.model.dependent
                                            })
                                      },
                                      onTap: function() {
                                        return e.onEditLimit('min')
                                      }
                                    },
                                    o.createElement(l.default, {
                                      latex: function() {
                                        return c.getDisplaySliderMin(e.model)
                                      }
                                    })),
                                o.createElement(s.default, {
                                  min: function() {
                                    return c.getSliderMin(e.model)
                                  },
                                  max: function() {
                                    return c.getSliderMax(e.model)
                                  },
                                  step: function() {
                                    return c.getSliderStep(e.model)
                                  },
                                  value: function() {
                                    return c.getSliderValue(e.model)
                                  },
                                  ariaLabel: function() {
                                    return 'none' ===
                                            e.controller.getBrailleMode() ?
                                        '"' + e.model.dependent + '"' :
                                        '' + e.model.dependent
                                  },
                                  onGrab: e.bindFn(e.onGrab),
                                  onDrop: e.bindFn(e.onDrop),
                                  onDragUpdate: e.bindFn(e.onDragUpdate),
                                  onKeyboardUpdate:
                                      e.bindFn(e.onKeyboardUpdate),
                                  onUpPress: function() {
                                    return e.controller.dispatch({
                                      type: 'on-special-key-pressed',
                                      key: 'Up'
                                    })
                                  },
                                  onDownPress: function() {
                                    return e.controller.dispatch({
                                      type: 'on-special-key-pressed',
                                      key: 'Down'
                                    })
                                  },
                                  onEnterPress: function() {
                                    return e.controller.dispatch({
                                      type: 'on-special-key-pressed',
                                      key: 'Enter'
                                    })
                                  },
                                  isFocused: e.bindFn(e.isSliderThumbFocused),
                                  onFocusedChanged: function(t) {
                                    t ? e.controller.dispatch({
                                      type: 'set-focus-location',
                                      location: {type: 'slider-thumb', id: e.id}
                                    }) :
                                        e.controller.dispatch({
                                          type: 'blur-focus-location',
                                          location:
                                              {type: 'slider-thumb', id: e.id}
                                        })
                                  }
                                }),
                                o.createElement(
                                    'div', {
                                      class: o.const(
                                          'dcg-maxLabel dcg-template-maxlabelhtml'),
                                      onTap: function() {
                                        return e.onEditLimit('max')
                                      }
                                    },
                                    o.createElement(l.default, {
                                      latex: function() {
                                        return c.getDisplaySliderMax(e.model)
                                      }
                                    })))
                          }),
                      o.createElement(
                          d, {
                            predicate: function() {
                              return e.shouldShowLimitInputs()
                            }
                          },
                          function() {
                            return o.createElement(a.default, {
                              model: e.props.model,
                              controller: e.props.controller
                            })
                          }))
                }, t.prototype.onGrab = function() {
                  this.dispatchIsDraggingIfChanged(!0)
                }, t.prototype.onDrop = function() {
                  this.controller.dispatch({type: 'set-none-selected'}),
                      this.dispatchIsPlayingIfChanged(!1),
                      this.dispatchIsDraggingIfChanged(!1)
                }, t.prototype.onKeyboardUpdate = function(e) {
                  this.controller.dispatch({
                    type: 'adjust-slider-by-keyboard',
                    id: this.id,
                    adjustment: e
                  })
                }, t.prototype.onDragUpdate = function(e) {
                  this.controller.dispatch({
                    type: 'adjust-slider-by-dragging-thumb',
                    id: this.model.id,
                    target: e
                  })
                }, t.prototype.onEditLimit = function(e) {
                  this.controller.dispatch({
                    type: 'set-focus-location',
                    location: {type: 'slider-limit', id: this.id, location: e}
                  })
                }, t.prototype.dispatchIsPlayingIfChanged = function(e) {
                  this.model.slider.isPlaying !== e &&
                      this.controller.dispatch({
                        type: 'set-slider-isplaying',
                        id: this.id,
                        isPlaying: e
                      })
                }, t.prototype.dispatchIsDraggingIfChanged = function(e) {
                  this.model.sliderDragging !== e && this.controller.dispatch({
                    type: 'set-slider-dragging',
                    id: this.id,
                    dragging: e
                  })
                }, t.prototype.shouldShowLimitInputs = function() {
                  if (this.controller.isInEditListMode()) return !0;
                  if (!c.isSliderMinValid(this.model)) return !0;
                  if (!c.isSliderMaxValid(this.model)) return !0;
                  if (!c.isSliderStepValid(this.model)) return !0;
                  if (this.model.slider.loopMode ===
                      u.SliderLoopMode.PLAY_INDEFINITELY)
                    return !0;
                  var e = this.controller.getFocusLocation();
                  return !(
                      !e ||
                      'slider-limit' !== e.type && 'expression' !== e.type ||
                      e.id !== this.id)
                }, t.prototype.shouldShowSlider = function() {
                  return !this.shouldShowLimitInputs()
                }, t.prototype.isSliderThumbFocused = function() {
                  var e = this.controller.getFocusLocation();
                  return !(!e || 'slider-thumb' !== e.type || e.id !== this.id)
                }, t.prototype.isSliderMinFocused = function() {
                  var e = this.controller.getFocusLocation();
                  return !(
                      !e || 'slider-limit' !== e.type || e.id !== this.id ||
                      'min' !== e.location)
                }, t.prototype.isSliderStepFocused = function() {
                  var e = this.controller.getFocusLocation();
                  return !(
                      !e || 'slider-limit' !== e.type || e.id !== this.id ||
                      'step' !== e.location)
                }, t
              }(o.Class);
              t.default = p
            });
          r('loadcss!prompt-sliders', function() {});
          r('expressions/promptslider_view',
            [
              'require', 'exports', 'tslib', 'core/lib/label', 'jquery',
              'lib/aria', 'dcgview', 'loadcss!prompt-sliders'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = s.Components, l = a.For, c = a.If, u = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller(),
                  this.model = this.props.model()
                }, t.prototype.template = function() {
                  var e = this;
                  return s.createElement(
                      'div', {
                        class: s.const(
                            'dcg-create-sliders dcg-action-createslider'),
                        handleEvent: s.const('true'),
                        onTap: this.bindFn(this.onCreateSlider)
                      },
                      s.createElement(
                          'span', {class: s.const('dcg-msg')},
                          function() {
                            return e.controller.t('add slider:')
                          }),
                      s.createElement(
                          'span', {class: s.const('btns')},
                          s.createElement(
                              l, {
                                each: function() {
                                  return e.model.missingVariables.slice(0, 4)
                                }
                              },
                              s.createElement(
                                  'span', null,
                                  function(t) {
                                    return s.createElement(
                                        'div', {
                                          class: s.const(
                                              'dcg-slider-btn-container'),
                                          var_name: e.const(t)
                                        },
                                        s.createElement('div', {
                                          role: s.const('button'),
                                          tabindex: s.const('0'),
                                          class: function() {
                                            return {
                                              'dcg-btn-slider': !0,
                                                  'dcg-btn-blue': 1 ===
                                                  e.model.missingVariables
                                                      .length,
                                                  'dcg-btn-light-gray': 1 !==
                                                  e.model.missingVariables
                                                      .length
                                            }
                                          },
                                          didMount: function(e) {
                                            e.innerHTML = n.identifierToHTML(t)
                                          }
                                        }))
                                  })),
                          s.createElement(
                              c, {
                                predicate: function() {
                                  return e.model.missingVariables.length > 1
                                }
                              },
                              function() {
                                return s.createElement(
                                    'div', {
                                      class: s.const(
                                          'dcg-slider-btn-container dcg-all')
                                    },
                                    s.createElement(
                                        'div', {
                                          role: s.const('button'),
                                          tabindex: s.const('0'),
                                          class: s.const(
                                              'dcg-btn-slider dcg-btn-blue')
                                        },
                                        function() {
                                          return e.controller.t('all')
                                        }))
                              })))
                }, t.prototype.onCreateSlider = function(e) {
                  if (this.controller.dispatch({type: 'set-none-selected'}),
                      e.target) {
                    var t = i(e.target).closest('.dcg-slider-btn-container');
                    if (t.length) {
                      var r = !1;
                      if (t.hasClass('dcg-all'))
                        this.controller.dispatch({
                          type: 'create-sliders-for-item',
                          id: this.model.id,
                          variables: this.model.missingVariables
                        }),
                            r = !0;
                      else {
                        var n = [t.attr('var_name')];
                        this.controller.dispatch({
                          type: 'create-sliders-for-item',
                          id: this.model.id,
                          variables: n
                        }),
                            r = 1 == this.model.missingVariables.length
                      }
                      if ('keyboard' === e.device) {
                        var o = this.model.id,
                            s = this.props.controller().getItemSelectorById(o);
                        if (!s) return;
                        r ? this.controller.dispatch(
                                {type: 'move-focus-to-item', id: o}) :
                            s.find('.dcg-btn-blue').focus()
                      }
                    }
                  }
                }, t.prototype.didMount = function() {
                  var e = this;
                  this.promptAlertTimeout &&
                      clearTimeout(this.promptAlertTimeout),
                      this.promptAlertTimeout = setTimeout(function() {
                        for (var t = [], r = e.model.missingVariables, n = 0;
                             n < r.length; n++)
                          t.push('"' + r[n] + '"');
                        o.alert(e.controller.t(
                            'Add slider for __vars__', {vars: t.join(',')})),
                            e.promptAlertTimeout = 0
                      }, 2e3)
                }, t.prototype.didUnmount = function() {
                  this.promptAlertTimeout &&
                      clearTimeout(this.promptAlertTimeout)
                }, t
              }(s.Class);
              t.default = u
            });
          r('loadcss!dcgview-helpers/checkbox', function() {});
          r('dcgview-helpers/checkbox',
            [
              'require', 'exports', 'tslib', 'dcgview', 'jquery',
              'loadcss!./checkbox'
            ],
            function(e, t, r, n, i) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var o = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {
                        class: function() {
                          return {
                            'dcg-component-checkbox': !0,
                                'dcg-checked': e.props.checked(),
                                'dcg-disabled': e.props.disabled &&
                                e.props.disabled(),
                                'dcg-small': e.props.small && e.props.small(),
                                'dcg-green': e.props.green && e.props.green()
                          }
                        },
                        onTap: this.bindFn(this.onChange)
                      },
                      n.createElement(
                          'span', {
                            tabindex: n.const(0),
                            class: n.const('dcg-checkbox'),
                            role: n.const('checkbox'),
                            'aria-label': this.props.ariaLabel,
                            'aria-disabled': function() {
                              return e.props.disabled && e.props.disabled()
                            },
                            'aria-checked': this.props.checked
                          },
                          n.createElement('i', {
                            class: n.const('dcg-icon-check'),
                            'aria-hidden': n.const('true')
                          })),
                      n.createElement(
                          'span', {class: n.const('dcg-checkbox-children')},
                          this.children))
                }, t.prototype.onChange = function(e) {
                  e.target && i(e.target).attr('href') ||
                      this.props.disabled && this.props.disabled() ||
                      this.props.onChange(!this.props.checked())
                }, t
              }(n.Class);
              t.Checkbox = o
            });
          r('loadcss!expressions/label-dropdown-view', function() {});
          r('expressions/label-dropdown-view',
            [
              'require', 'exports', 'tslib', 'dcgview',
              'graphing-calc/models/expression',
              'core/graphing-calc/json/expression', 'core/types/label-sizes',
              'core/lib/dragmode', 'core/types/label-orientations',
              'dcgview-helpers/checkbox', 'core/math/interpolatedlabel',
              'loadcss!./label-dropdown-view'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var d = n.Components, p = d.For, h = d.IfElse, f = d.If,
                  g = function(e) {
                    function t() {
                      return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                           t.prototype
                               .template =
                               function() {
                             var e = this;
                             return this.controller = this.props.controller(),
                                    this.model = this.props.model(),
                                    this.id = this.model.id,
                                    n.createElement(
                                        'div', {
                                          class: n.const(
                                              'dcg-label-dropdown-view dcg-popover dcg-left')
                                        },
                                        n.createElement(
                                            'div',
                                            {class: n.const('dcg-arrow')}),
                                        n
                                            .createElement(
                                                'div', {
                                                  class: n.const(
                                                      'dcg-label-group-container')
                                                },
                                                n.createElement(
                                                    'div', {
                                                      class: n.const(
                                                          'dcg-label-group')
                                                    },
                                                    n.createElement(
                                                        'div', {
                                                          role: n.const(
                                                              'heading'),
                                                          'aria-level':
                                                              n.const('2'),
                                                          class: n.const(
                                                              'dcg-label-group-title')
                                                        },
                                                        function() {
                                                          return e.controller.t(
                                                              'Label Position')
                                                        }),
                                                    n.createElement(
                                                        p, {
                                                          each: this.bindFn(
                                                              this.getLabelOrientations)
                                                        },
                                                        n.createElement(
                                                            'div', {
                                                              role: n.const(
                                                                  'group'),
                                                              'aria-label':
                                                                  function() {
                                                                    return e
                                                                        .controller
                                                                        .t('Label Position')
                                                                  },
                                                              class: n.const(
                                                                  'dcg-label-options')
                                                            },
                                                            function(t) {
                                                              return n.createElement(
                                                                  'a', {
                                                                    role: n.const(
                                                                        'button'),
                                                                    tabindex:
                                                                        n.const(
                                                                            0),
                                                                    class: function() {
                                                                      return {
                                                                        'dcg-menu-option':
                                                                            !0,
                                                                            'dcg-label-position':
                                                                                !0,
                                                                            'dcg-menu-option-selected':
                                                                                e.isorientationSelected(
                                                                                    t)
                                                                      }
                                                                    },
                                                                    'aria-pressed':
                                                                        function() {
                                                                          return e
                                                                              .isorientationSelected(
                                                                                  t)
                                                                        },
                                                                    onTap: function() {
                                                                      return e
                                                                          .setorientation(
                                                                              t)
                                                                    },
                                                                    'aria-label':
                                                                        function() {
                                                                          return e
                                                                              .getOrientationText(
                                                                                  t)
                                                                        }
                                                                  },
                                                                  n.createElement(
                                                                      'span', {
                                                                        class: n.const(
                                                                            'dcg-menu-option-icon')
                                                                      },
                                                                      n.createElement(
                                                                          'i', {
                                                                            class:
                                                                                n.const(
                                                                                    'dcg-icon-position-arrows')
                                                                          }),
                                                                      n.createElement(
                                                                          'span',
                                                                          {
                                                                            class: function() {
                                                                              var r;
                                                                              return r = {
                                                                                'dcg-position-direction-icon':
                                                                                    !0
                                                                              },
                                                                                     r[e.getPositionIconClass(
                                                                                         t)] =
                                                                                         !0,
                                                                                     r
                                                                            }
                                                                          },
                                                                          h(
                                                                              function() {
                                                                                return 'default' ===
                                                                                    t
                                                                              },
                                                                              {
                                                                                true: function() {
                                                                                  return n
                                                                                      .createElement('div', {
                                                                                        class:
                                                                                            n.const(
                                                                                                'dcg-default-position')
                                                                                      })
                                                                                },
                                                                                false: function() {
                                                                                  return n
                                                                                      .createElement('i', {
                                                                                        class:
                                                                                            n.const(
                                                                                                'dcg-icon-position-arrows-single')
                                                                                      })
                                                                                }
                                                                              }))),
                                                                  n.createElement(
                                                                      'span', {
                                                                        class: n.const(
                                                                            'dcg-menu-option-label')
                                                                      },
                                                                      function() {
                                                                        return e
                                                                            .getOrientationText(
                                                                                t)
                                                                      }))
                                                            }))),
                                                n
                                                    .createElement(
                                                        'div', {
                                                          class: n.const(
                                                              'dcg-label-group')
                                                        },
                                                        n.createElement(
                                                            'div', {
                                                              role: n.const(
                                                                  'heading'),
                                                              'aria-level':
                                                                  n.const('2'),
                                                              class: n.const(
                                                                  'dcg-label-group-title')
                                                            },
                                                            function() {
                                                              return e
                                                                  .controller
                                                                  .t('Font Size')
                                                            }),
                                                        n
                                                            .createElement(
                                                                p, {
                                                                  each:
                                                                      this.bindFn(this.getLabelSizes)
                                                                },
                                                                n
                                                                    .createElement(
                                                                        'div', {
                                                                          role:
                                                                              n.const('group'),
                                                                          'aria-label':
                                                                              function() {
                                                                                return e
                                                                                    .controller
                                                                                    .t('Font Size')
                                                                              },
                                                                          class:
                                                                              n.const('dcg-label-options')
                                                                        },
                                                                        function(
                                                                            t) {
                                                                          return n
                                                                              .createElement(
                                                                                  'a',
                                                                                  {
                                                                                    role: n.const(
                                                                                        'button'),
                                                                                    tabindex:
                                                                                        n.const(
                                                                                            0),
                                                                                    class: function() {
                                                                                      var r;
                                                                                      return r = {
                                                                                        'dcg-menu-option':
                                                                                            !0,
                                                                                        'dcg-menu-option-selected':
                                                                                            e.isSizeSelected(
                                                                                                t),
                                                                                        'dcg-label-size':
                                                                                            !0
                                                                                      },
                                                                                             r[e.getSizeClass(
                                                                                                 t)] =
                                                                                                 !0,
                                                                                             r
                                                                                    },
                                                                                    'aria-pressed':
                                                                                        function() {
                                                                                          return e
                                                                                              .isSizeSelected(
                                                                                                  t)
                                                                                        },
                                                                                    onTap: function() {
                                                                                      return e
                                                                                          .setLabelSize(
                                                                                              t)
                                                                                    },
                                                                                    'aria-label':
                                                                                        function() {
                                                                                          return e
                                                                                              .getSizeText(
                                                                                                  t)
                                                                                        }
                                                                                  },
                                                                                  n.createElement(
                                                                                      'span',
                                                                                      {
                                                                                        class:
                                                                                            n.const(
                                                                                                'dcg-menu-option-icon')
                                                                                      },
                                                                                      n.const(
                                                                                          'A')),
                                                                                  n.createElement(
                                                                                      'span',
                                                                                      {
                                                                                        class:
                                                                                            n.const(
                                                                                                'dcg-menu-option-label')
                                                                                      },
                                                                                      function() {
                                                                                        return e
                                                                                            .getSizeText(
                                                                                                t)
                                                                                      }))
                                                                        })),
                                                        n
                                                            .createElement(
                                                                'div', {
                                                                  class:
                                                                      n.const('dcg-label-group dcg-additional-group-in-column')
                                                                },
                                                                n
                                                                    .createElement(
                                                                        'div', {
                                                                          role:
                                                                              n.const('heading'),
                                                                          'aria-level':
                                                                              n.const('2'),
                                                                          class:
                                                                              n.const('dcg-label-group-title')
                                                                        },
                                                                        function() {
                                                                          return e
                                                                              .controller
                                                                              .t('Orientation')
                                                                        }),
                                                                n
                                                                    .createElement(
                                                                        'div', {
                                                                          role:
                                                                              n.const('group'),
                                                                          'aria-label':
                                                                              function() {
                                                                                return e
                                                                                    .controller
                                                                                    .t('Orientation')
                                                                              }
                                                                        },
                                                                        n
                                                                            .createElement(
                                                                                c.Checkbox, {
                                                                                  checked:
                                                                                      this.bindFn(this.getVerticalLabel),
                                                                                  onChange:
                                                                                      this.bindFn(this.setVerticalLabel),
                                                                                  ariaLabel:
                                                                                      this.const(
                                                                                          this.controller
                                                                                              .t('Vertical'))
                                                                                },
                                                                                function() {
                                                                                  return e
                                                                                      .controller
                                                                                      .t('Vertical')
                                                                                }))),
                                                        n.createElement(
                                                            f, {
                                                              predicate:
                                                                  function() {
                                                                    return e
                                                                        .controller
                                                                        .canUseAdvancedStyling()
                                                                  }
                                                            },
                                                            function() {
                                                              return n.createElement(
                                                                  'div', {
                                                                    class: n.const(
                                                                        'dcg-label-group dcg-additional-group-in-column')
                                                                  },
                                                                  n.createElement(
                                                                      'div', {
                                                                        role: n.const(
                                                                            'heading'),
                                                                        'aria-level':
                                                                            n.const(
                                                                                '2'),
                                                                        class: n.const(
                                                                            'dcg-label-group-title')
                                                                      },
                                                                      function() {
                                                                        return e
                                                                            .controller
                                                                            .t('Advanced')
                                                                      }),
                                                                  n.createElement(
                                                                      c.Checkbox,
                                                                      {
                                                                        checked: e.bindFn(
                                                                            e.getWhiteTextOutline),
                                                                        onChange:
                                                                            e.bindFn(
                                                                                e.setWhiteTextOutline),
                                                                        ariaLabel:
                                                                            e.const(
                                                                                'Text outline'),
                                                                        disabled:
                                                                            function() {
                                                                              return e
                                                                                  .getEditable()
                                                                            }
                                                                      },
                                                                      n.const(
                                                                          'Text outline')),
                                                                  n.createElement(
                                                                      'div', {
                                                                        role: n.const(
                                                                            'group'),
                                                                        'aria-label':
                                                                            function() {
                                                                              return e
                                                                                  .controller
                                                                                  .t('Advanced')
                                                                            }
                                                                      },
                                                                      n.createElement(
                                                                          f, {
                                                                            predicate:
                                                                                function() {
                                                                                  return e
                                                                                      .shouldShowInteractiveLabelCheckbox()
                                                                                }
                                                                          },
                                                                          function() {
                                                                            return n
                                                                                .createElement(
                                                                                    c.Checkbox,
                                                                                    {
                                                                                      checked: e.bindFn(
                                                                                          e.getInteractiveLabel),
                                                                                      onChange:
                                                                                          e.bindFn(
                                                                                              e.setInteractiveLabel),
                                                                                      ariaLabel:
                                                                                          e.const(
                                                                                              'Interactive Label')
                                                                                    },
                                                                                    n.const(
                                                                                        'Show on hover'))
                                                                          }),
                                                                      n.createElement(
                                                                          f, {
                                                                            predicate:
                                                                                e.bindFn(
                                                                                    e.shouldShowEditableLabelToggle)
                                                                          },
                                                                          function() {
                                                                            return n
                                                                                .createElement(
                                                                                    c.Checkbox,
                                                                                    {
                                                                                      checked: e.bindFn(
                                                                                          e.getEditable),
                                                                                      onChange:
                                                                                          e.bindFn(
                                                                                              e.setEditable),
                                                                                      ariaLabel:
                                                                                          e.const(
                                                                                              'Editable')
                                                                                    },
                                                                                    n.const(
                                                                                        'Editable'))
                                                                          })))
                                                            }))))
                           },
                    t.prototype.getLabelOrientations =
                               function() {
                      return [
                        l.LabelOrientation.DEFAULT, l.LabelOrientation.LEFT,
                        l.LabelOrientation.RIGHT, l.LabelOrientation.ABOVE,
                        l.LabelOrientation.BELOW
                      ]
                    },
                    t.prototype.getOrientationText =
                               function(e) {
                      switch (e) {
                        case l.LabelOrientation.DEFAULT:
                          return this.controller.t('Default');
                        case l.LabelOrientation.LEFT:
                          return this.controller.t('Left');
                        case l.LabelOrientation.RIGHT:
                          return this.controller.t('Right');
                        case l.LabelOrientation.ABOVE:
                          return this.controller.t('Above');
                        case l.LabelOrientation.BELOW:
                          return this.controller.t('Below');
                        default:
                          var t = e;
                          throw new Error('Unexpected label orientation: ' + t)
                      }
                    },
                    t.prototype.getLabelSizes =
                               function() {
                      return [
                        s.LabelSize.SMALL, s.LabelSize.MEDIUM, s.LabelSize.LARGE
                      ]
                    },
                    t.prototype.getSizeText =
                               function(e) {
                      switch (e) {
                        case s.LabelSize.SMALL:
                          return this.controller.t('Small');
                        case s.LabelSize.LARGE:
                          return this.controller.t('Large');
                        case s.LabelSize.MEDIUM:
                          return this.controller.t('Medium');
                        default:
                          var t = e;
                          throw new Error('Unexpected label size: ' + t)
                      }
                    },
                    t.prototype.getSizeClass =
                               function(e) {
                      switch (e) {
                        case s.LabelSize.SMALL:
                          return 'dcg-small-label';
                        case s.LabelSize.LARGE:
                          return 'dcg-large-label';
                        case s.LabelSize.MEDIUM:
                          return 'dcg-medium-label';
                        default:
                          var t = e;
                          throw new Error('Unexpected label size: ' + t)
                      }
                    },
                    t.prototype.isSizeSelected =
                               function(e) {
                      return this.model.labelSize === e
                    },
                    t.prototype.isorientationSelected =
                               function(e) {
                      return this.model.labelOrientation === e
                    },
                    t.prototype.getPositionIconClass =
                               function(e) {
                      switch (e) {
                        case l.LabelOrientation.ABOVE:
                          return 'dcg-position-icon-above';
                        case l.LabelOrientation.BELOW:
                          return 'dcg-position-icon-below';
                        case l.LabelOrientation.LEFT:
                          return 'dcg-position-icon-left';
                        case l.LabelOrientation.RIGHT:
                          return 'dcg-position-icon-right';
                        case l.LabelOrientation.DEFAULT:
                          return 'dcg-position-icon-default';
                        default:
                          var t = e;
                          throw new Error('Unexpected label orientation: ' + t)
                      }
                    },
                    t.prototype.setorientation =
                               function(e) {
                      this.controller.dispatch({
                        type: 'set-item-label-orientation',
                        id: this.id,
                        labelOrientation: e
                      })
                    },
                    t.prototype.setVerticalLabel =
                               function(e) {
                      this.controller.dispatch({
                        type: 'set-item-vertical-label',
                        id: this.id,
                        verticalLabel: e
                      })
                    },
                    t.prototype.getWhiteTextOutline =
                               function() {
                      return !this.getEditable() &&
                          !this.model.suppressTextOutline
                    },
                    t.prototype.setWhiteTextOutline =
                               function(e) {
                      this.controller.dispatch({
                        type: 'set-suppress-text-outline',
                        id: this.id,
                        suppressTextOutline: !e
                      })
                    },
                    t.prototype.getVerticalLabel =
                               function() {
                      return !!this.model.verticalLabel
                    },
                    t.prototype.setInteractiveLabel =
                               function(e) {
                      this.controller.dispatch({
                        type: 'set-item-interactive-label',
                        id: this.id,
                        interactiveLabel: e
                      })
                    },
                    t.prototype.getInteractiveLabel =
                               function() {
                      return !!this.model.interactiveLabel
                    },
                    t.prototype.setEditable =
                               function(e) {
                      if (e) {
                        var t = u.isMathLabel(this.model.label) ?
                            o.EditableLabelMode.Math :
                            o.EditableLabelMode.Text;
                        this.controller.dispatch({
                          type: 'set-item-editable-label-mode',
                          id: this.id,
                          editableLabelMode: t
                        })
                      } else
                        this.controller.dispatch({
                          type: 'set-item-editable-label-mode',
                          id: this.id,
                          editableLabelMode: o.EditableLabelMode.None
                        })
                    },
                    t.prototype.getEditable =
                               function() {
                      return this.model.editableLabelMode !==
                          o.EditableLabelMode.None
                    },
                    t.prototype.getEditableLabelMode =
                               function() {
                      return this.model.editableLabelMode
                    },
                    t.prototype.shouldShowEditableLabelToggle =
                               function() {
                      return i.isSinglePoint(this.model)
                    },
                    t.prototype.setLabelSize =
                               function(e) {
                      this.controller.dispatch({
                        type: 'set-item-labelSize',
                        id: this.id,
                        labelSize: e
                      })
                    },
                    t.prototype.getLabelSize =
                               function() {
                      return this.model.labelSize
                    },
                    t.prototype.shouldShowInteractiveLabelCheckbox =
                               function() {
                      return this.model.reconciledDragMode === a.DragMode.NONE
                    },
                    t
                  }(n.Class);
              t.LabelDropdownView = g
            });
          r('loadcss!expressions/label_view', function() {});
          r('loadcss!toggle', function() {});
          r('expressions/label_view',
            [
              'require', 'exports', 'tslib', 'keys', 'dcgview',
              'graphing-calc/models/expression', './label-dropdown-view',
              'jquery', 'core/graphing-calc/json/expression',
              'loadcss!./label_view', 'loadcss!toggle'
            ],
            function(e, t, r, n, i, o, s, a, l) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var c = i.Components, u = c.Input, d = c.If, p = c.IfElse, h = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return this.controller = this.props.controller(),
                         this.model = this.props.model(),
                         this.id = this.model.id,
                         i.createElement(
                             'div', {
                               class: function() {
                                 return {
                                   'dcg-label-visible': e.getShowLabel(),
                                       'dcg-label-container': !0,
                                       'dcg-do-blur': !0
                                 }
                               },
                               tapboundary: i.const('true'),
                               handleEvent: i.const('true')
                             },
                             i.createElement(
                                 'span', {
                                   role: i.const('checkbox'),
                                   'aria-checked':
                                       this.bindFn(this.getShowLabel),
                                   tabindex: i.const('0'),
                                   class: function() {
                                     return {
                                       'dcg-checkbox': !0,
                                           'dcg-checkbox-label-colon':
                                               e.getShowLabel() &&
                                           !e.hasEditableLabel()
                                     }
                                   },
                                   'aria-label': function() {
                                     return e.controller.t('Label')
                                   },
                                   onTap: this.bindFn(this.onCheckboxInput)
                                 },
                                 i.createElement(
                                     'span', {
                                       class: function() {
                                         return {
                                           'dcg-checkbox-box': !0,
                                               'dcg-checked': e.getShowLabel()
                                         }
                                       }
                                     },
                                     i.createElement(
                                         'i',
                                         {class: i.const('dcg-icon-check')})),
                                 i.const(' '),
                                 i.createElement(
                                     'span', {
                                       class: i.const('dcg-checkbox-label'),
                                       'aria-hidden': i.const('true')
                                     },
                                     function() {
                                       return e.controller.t('Label')
                                     })),
                             p(this.bindFn(this.hasEditableLabel), {
                               true: function() {
                                 return i.createElement(
                                     'div', {
                                       class:
                                           i.const('dcg-editable-mode-toggle')
                                     },
                                     i.createElement(
                                         'div', {
                                           class:
                                               i.const('dcg-option-toggle-view')
                                         },
                                         i.createElement(
                                             'div', {
                                               class: i.const(
                                                   'dcg-toggle-container')
                                             },
                                             i.createElement(
                                                 'div',
                                                 {class: i.const('dcg-toggle')},
                                                 i.createElement(
                                                     'div', {
                                                       class: function() {
                                                         return {
                                                           'dcg-toggle-option':
                                                               !0,
                                                               'dcg-selected-toggle': e
                                                                   .model
                                                                   .editableLabelMode ===
                                                               l.EditableLabelMode
                                                                   .Math
                                                         }
                                                       },
                                                       role: i.const('button'),
                                                       tabindex: i.const(0),
                                                       'aria-pressed': function() {
                                                         return e.model
                                                                    .editableLabelMode ===
                                                             l.EditableLabelMode
                                                                 .Math
                                                       },
                                                       'aria-label': function() {
                                                         return e.controller.t(
                                                             'Editable label mode: Editable Math')
                                                       },
                                                       didMount: function(t) {
                                                         void 0 !==
                                                                 e.lastToggleOption &&
                                                             'math' ===
                                                                 e.lastToggleOption &&
                                                             (e.lastToggleOption =
                                                                  void 0,
                                                              t.focus())
                                                       },
                                                       onTap: function() {
                                                         e.lastToggleOption =
                                                             'Editable Math',
                                                         e.controller.dispatch({
                                                           type:
                                                               'set-item-editable-label-mode',
                                                           id: e.id,
                                                           editableLabelMode:
                                                               l.EditableLabelMode
                                                                   .Math
                                                         })
                                                       }
                                                     },
                                                     function() {
                                                       return e.controller.t(
                                                           'Editable Math')
                                                     }),
                                                 i.createElement(
                                                     'div', {
                                                       class: function() {
                                                         return {
                                                           'dcg-toggle-option':
                                                               !0,
                                                               'dcg-selected-toggle': e
                                                                   .model
                                                                   .editableLabelMode ===
                                                               l.EditableLabelMode
                                                                   .Text
                                                         }
                                                       },
                                                       role: i.const('button'),
                                                       tabindex: i.const(0),
                                                       'aria-pressed': function() {
                                                         return e.model
                                                                    .editableLabelMode ===
                                                             l.EditableLabelMode
                                                                 .Text
                                                       },
                                                       'aria-label': function() {
                                                         return e.controller.t(
                                                             'Editable label mode: Editable Text')
                                                       },
                                                       didMount: function(t) {
                                                         void 0 !==
                                                                 e.lastToggleOption &&
                                                             'text' ===
                                                                 e.lastToggleOption &&
                                                             (e.lastToggleOption =
                                                                  void 0,
                                                              t.focus())
                                                       },
                                                       onTap: function() {
                                                         e.lastToggleOption =
                                                             'Editable Text',
                                                         e.controller.dispatch({
                                                           type:
                                                               'set-item-editable-label-mode',
                                                           id: e.id,
                                                           editableLabelMode:
                                                               l.EditableLabelMode
                                                                   .Text
                                                         })
                                                       }
                                                     },
                                                     function() {
                                                       return e.controller.t(
                                                           'Editable Text')
                                                     })))))
                               },
                               false: function() {
                                 return i.createElement(u, {
                                   class: function() {
                                     return {
                                       'dcg-label-input': !0,
                                           'dcg-disabled-input':
                                               e.getIsDisabled(),
                                           'dcg-disabled-editable-input':
                                               e.hasEditableLabel()
                                     }
                                   },
                                   'aria-label': function() {
                                     return e.controller.t('Label Text')
                                   },
                                   'aria-disabled': function() {
                                     return e.getIsDisabled() ||
                                         e.hasEditableLabel()
                                   },
                                   value: e.bindFn(e.getLabel),
                                   onInput: e.bindFn(e.onLabelInput)
                                 })
                               }
                             }),
                             i.createElement(
                                 'span', {
                                   class: function() {
                                     return {
                                       'dcg-dropdown-container': !0,
                                           'dcg-no-label': !e.getShowLabel()
                                     }
                                   },
                                   didMount: function(t) {
                                     return e.$dropdownContainer = a(t)
                                   }
                                 },
                                 i.createElement(
                                     'span', {
                                       class: i.const(
                                           'dcg-dropdown-wrench-container'),
                                       role: i.const('button'),
                                       tabindex: i.const(0),
                                       'aria-label': function() {
                                         return e.controller.t('Label Settings')
                                       },
                                       onTap: this.bindFn(this.toggleDropdown),
                                       selected:
                                           this.bindFn(this.showLabelDropdown),
                                       'aria-expanded':
                                           this.bindFn(this.showLabelDropdown)
                                     },
                                     i.createElement(
                                         'i',
                                         {class: i.const('dcg-icon-wrench')})),
                                 i.createElement(
                                     d, {
                                       predicate:
                                           this.bindFn(this.showLabelDropdown)
                                     },
                                     function() {
                                       return i.createElement(
                                           s.LabelDropdownView, {
                                             controller: e.props.controller,
                                             model: e.props.model
                                           })
                                     })))
                }, t.prototype.showLabelDropdown = function() {
                  return this.model.labelDropdownOpen
                }, t.prototype.showDropdown = function(e) {
                  var t = this, r = a(e.target);
                  a(document).on(
                      'mousedown.dcg-' + this.id + ' touchstart.dcg-' +
                          this.id + ' pointerdown.dcg-' + this.id,
                      function(e) {
                        t.showLabelDropdown() &&
                            (a(e.target).closest(t.$dropdownContainer).length >
                                 0 ||
                             t.hideDropdown())
                      }),
                      a(document).on('keydown.dcg-' + this.id, function(e) {
                        n.lookup(e) === n.ESCAPE &&
                            (t.hideDropdown(), r.focus())
                      }), this.controller.dispatch({
                        type: 'set-item-label-dropdown-open',
                        id: this.id,
                        open: !0
                      })
                }, t.prototype.hideDropdown = function() {
                  a(document).off('.dcg-' + this.id), this.controller.dispatch({
                    type: 'set-item-label-dropdown-open',
                    id: this.id,
                    open: !1
                  })
                }, t.prototype.toggleDropdown = function(e) {
                  this.showLabelDropdown() ? this.hideDropdown() :
                                             this.showDropdown(e)
                }, t.prototype.getLabel = function() {
                  return this.model.label || ''
                }, t.prototype.hasEditableLabel = function() {
                  return o.hasEditableLabel(this.model)
                }, t.prototype.getShowLabel = function() {
                  return !!this.model.showLabel
                }, t.prototype.getIsDisabled = function() {
                  return 0 === this.getLabel().length && !this.getShowLabel()
                }, t.prototype.onLabelInput = function(e) {
                  var t = e;
                  this.controller.dispatch(
                      {type: 'set-item-label', id: this.id, label: t}),
                      this.controller.dispatch({
                        type: 'set-item-showlabel',
                        id: this.id,
                        showLabel: !!t
                      })
                }, t.prototype.onCheckboxInput = function() {
                  this.controller.dispatch({
                    type: 'set-item-showlabel',
                    id: this.id,
                    showLabel: !this.getShowLabel()
                  })
                }, t
              }(i.Class);
              t.default = h
            });
          r('loadcss!expressions/cdf-footer-view', function() {});
          r('expressions/cdf-footer-view',
            [
              'require', 'exports', 'tslib', 'dcgview', 'jquery', 'keys',
              'graphing-calc/models/expression',
              'dcgview-helpers/mathquill-view',
              'dcgview-helpers/mathquill-braille-wrapper', './evaluation-view',
              'dcgview-helpers/checkbox', 'loadcss!./cdf-footer-view'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var d = n.Components.If, p = function(e) {
                function t() {
                  var t = null !== e && e.apply(this, arguments) || this;
                  return t.focusedValues = {}, t
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return this.controller = this.props.controller(),
                         this.model = this.props.model(),
                         this.id = this.model.id,
                         n.createElement(
                             'div', {
                               class: n.const(
                                   'dcg-cdf-footer-container dcg-do-blur'),
                               tapboundary: n.const('true'),
                               handleEvent: n.const('true')
                             },
                             n.createElement(
                                 u.Checkbox, {
                                   checked: function() {
                                     return s.shouldShowCDFFooter(e.model)
                                   },
                                   disabled: function() {
                                     return s.isListValuedDistribution(e.model)
                                   },
                                   onChange: function(t) {
                                     e.controller.dispatch({
                                       type: 'set-show-cdf',
                                       id: e.model.id,
                                       showCDF: t
                                     })
                                   },
                                   ariaLabel: function() {
                                     return e.controller.t(
                                         'Find Cumulative Probability (CDF)')
                                   }
                                 },
                                 function() {
                                   return e.controller.t(
                                       'Find Cumulative Probability (CDF)')
                                 }),
                             n.createElement(
                                 d, {
                                   predicate: function() {
                                     return s.shouldShowCDFFooter(e.model)
                                   }
                                 },
                                 function() {
                                   return n.createElement(
                                       'div', null,
                                       n.createElement(
                                           'span', {
                                             class:
                                                 n.const('dcg-cdf-limit-name')
                                           },
                                           function() {
                                             return e.controller.t('Min:')
                                           }),
                                       n.createElement(
                                           l.default, {
                                             latex: function() {
                                               return s.getCDFMin(e.model)
                                             },
                                             hasError: function() {
                                               return !s.isCDFMinValid(e.model)
                                             },
                                             brailleShouldFocus: function() {
                                               return e.isInputFocused('min')
                                             },
                                             onBrailleFocusedChanged: function(
                                                 t) {
                                               return e.handleFocusedChanged(
                                                   'min', t)
                                             },
                                             ariaLabel: function() {
                                               return e.controller.t('Min')
                                             },
                                             placeholder: function() {
                                               return s.getCDFMinPlaceholder(
                                                   e.model)
                                             },
                                             onBrailleInput:
                                                 e.bindFn(e.updateCDFMin),
                                             controller: e.props.controller,
                                             onBrailleKeydown: function(t) {
                                               return e.handleBraillePressedKey(
                                                   t, 'min')
                                             }
                                           },
                                           n.createElement(a.default, {
                                             latex: function() {
                                               return s.getCDFMin(e.model)
                                             },
                                             hasError: function() {
                                               return !s.isCDFMinValid(e.model)
                                             },
                                             isFocused: function() {
                                               return e.isInputFocused('min')
                                             },
                                             onFocusedChanged: function(t) {
                                               return e.handleFocusedChanged(
                                                   'min', t)
                                             },
                                             config: e.const({}),
                                             getAriaLabel: function() {
                                               return e.controller.t('Min')
                                             },
                                             getAriaPostLabel: function() {
                                               return ''
                                             },
                                             placeholder: function() {
                                               return s.getCDFMinPlaceholder(
                                                   e.model)
                                             },
                                             onUserPressedKey: function(t, r) {
                                               return e.handlePressedKey(
                                                   t, r, 'min')
                                             },
                                             onUserChangedLatex:
                                                 e.bindFn(e.updateCDFMin),
                                             onExpressionSizeExceeded: function() {
                                               return e.controller.dispatch({
                                                 type:
                                                     'expression-size-exceeded'
                                               })
                                             },
                                             capExpressionSize: function() {
                                               return e.model.controller
                                                   .getCapExpressionSize()
                                             },
                                             needsSystemKeypad: function() {
                                               return !e.controller
                                                           .isKeypadEnabled()
                                             }
                                           })),
                                       n.createElement(
                                           'span', {
                                             class:
                                                 n.const('dcg-cdf-limit-name')
                                           },
                                           function() {
                                             return e.controller.t('Max:')
                                           }),
                                       n.createElement(
                                           l.default, {
                                             latex: function() {
                                               return s.getCDFMax(e.model)
                                             },
                                             hasError: function() {
                                               return !s.isCDFMaxValid(e.model)
                                             },
                                             brailleShouldFocus: function() {
                                               return e.isInputFocused('max')
                                             },
                                             onBrailleFocusedChanged: function(
                                                 t) {
                                               return e.handleFocusedChanged(
                                                   'max', t)
                                             },
                                             ariaLabel: function() {
                                               return e.controller.t('Max')
                                             },
                                             placeholder: function() {
                                               return s.getCDFMaxPlaceholder(
                                                   e.model)
                                             },
                                             onBrailleInput:
                                                 e.bindFn(e.updateCDFMax),
                                             controller: e.props.controller,
                                             onBrailleKeydown: function(t) {
                                               return e.handleBraillePressedKey(
                                                   t, 'max')
                                             }
                                           },
                                           n.createElement(a.default, {
                                             latex: function() {
                                               return s.getCDFMax(e.model)
                                             },
                                             hasError: function() {
                                               return !s.isCDFMaxValid(e.model)
                                             },
                                             isFocused: function() {
                                               return e.isInputFocused('max')
                                             },
                                             onFocusedChanged: function(t) {
                                               return e.handleFocusedChanged(
                                                   'max', t)
                                             },
                                             config: e.const({}),
                                             getAriaLabel: function() {
                                               return e.controller.t('Max')
                                             },
                                             getAriaPostLabel: function() {
                                               return ''
                                             },
                                             placeholder: function() {
                                               return s.getCDFMaxPlaceholder(
                                                   e.model)
                                             },
                                             onUserPressedKey: function(t, r) {
                                               return e.handlePressedKey(
                                                   t, r, 'max')
                                             },
                                             onUserChangedLatex:
                                                 e.bindFn(e.updateCDFMax),
                                             onExpressionSizeExceeded: function() {
                                               return e.controller.dispatch({
                                                 type:
                                                     'expression-size-exceeded'
                                               })
                                             },
                                             capExpressionSize: function() {
                                               return e.model.controller
                                                   .getCapExpressionSize()
                                             },
                                             needsSystemKeypad: function() {
                                               return !e.controller
                                                           .isKeypadEnabled()
                                             }
                                           })),
                                       n.createElement(
                                           d, {
                                             predicate:
                                                 e.bindFn(e.showEvaluation)
                                           },
                                           function() {
                                             return n.createElement(
                                                 'div', {
                                                   class: n.const(
                                                       'dcg-cdf-evaluation-container')
                                                 },
                                                 n.createElement(c.default, {
                                                   val: function() {
                                                     return s.getCDFEvaluation(
                                                         e.model)
                                                   },
                                                   controller:
                                                       e.props.controller,
                                                   dependent: e.const(''),
                                                   id: function() {
                                                     return e.model.id
                                                   },
                                                   focusable: e.const(!0)
                                                 }))
                                           }))
                                 }))
                }, t.prototype.handleBraillePressedKey = function(e, t) {
                  var r = o.lookup(e);
                  r && this.handlePressedKey(r, i.Event(e), t)
                }, t.prototype.handlePressedKey = function(e, t, r) {
                  if ('Esc' === e)
                    return void this.controller.dispatch(
                        {type: 'set-focus-location', location: void 0});
                  if ('Enter' === e)
                    return this.controller.dispatch(
                        {type: 'on-special-key-pressed', key: 'Enter'});
                  var n = a.default.getFocusedMathquill();
                  n &&
                      (n.keystroke(e, t),
                       'min' === r && s.getCDFMin(this.model) !== n.latex() &&
                           this.updateCDFMin(n.latex()),
                       'max' === r && s.getCDFMax(this.model) !== n.latex() &&
                           this.updateCDFMax(n.latex()))
                }, t.prototype.updateCDFMax = function(e) {
                  this.controller.dispatch(
                      {type: 'set-cdf-max', id: this.model.id, latex: e})
                }, t.prototype.updateCDFMin = function(e) {
                  this.controller.dispatch(
                      {type: 'set-cdf-min', id: this.model.id, latex: e})
                }, t.prototype.showEvaluation = function() {
                  return !!s.isCDFMaxValid(this.model) &&
                      !!s.isCDFMinValid(this.model)
                }, t.prototype.isInputFocused = function(e) {
                  var t = this.controller.getFocusLocation();
                  return !(!t || 'cdf-limit' !== t.type || t.id !== this.id) &&
                      t.location === e
                }, t.prototype.handleFocusedChanged = function(e, t) {
                  t ? this.controller.dispatch({
                    type: 'set-focus-location',
                    location: {type: 'cdf-limit', id: this.id, location: e}
                  }) :
                      this.controller.dispatch({
                        type: 'blur-focus-location',
                        location: {type: 'cdf-limit', id: this.id, location: e}
                      })
                }, t
              }(n.Class);
              t.default = p
            });
          r('loadcss!expressions/parameter_suggestions_view', function() {});
          r('expressions/parameters_suggestions_view',
            [
              'require', 'exports', 'tslib', 'dcgview',
              'graphing-calc/models/expression',
              'loadcss!./parameter_suggestions_view'
            ],
            function(e, t, r, n, i) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var o = n.Components, s = o.If, a = o.For, l = o.SwitchUnion,
                  c = function(e) {
                    function t() {
                      return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                           t.prototype
                               .init =
                               function() {
                             this.controller = this.props.controller(),
                             this.model = this.props.model(),
                             this.id = this.model.id
                           },
                    t.prototype.template =
                               function() {
                      var e = this;
                      return l(this.bindFn(this.getSuggestionType), {
                        list: function() {
                          return n.createElement(
                              a, {each: e.bindFn(e.getListOfParameters)},
                              n.createElement(
                                  'div', {
                                    class: function() {
                                      return {
                                        'dcg-parameter-suggestion-container':
                                            !0,
                                            'dcg-parameter-suggestion-braille':
                                                'none' !==
                                            e.controller.getBrailleMode()
                                      }
                                    }
                                  },
                                  function(t) {
                                    return n.createElement(
                                        'span',
                                        {class: n.const('dcg-parameter-name')},
                                        function() {
                                          return e.getParamName(t)
                                        })
                                  }))
                        },
                        listWithDefault: function() {
                          return n.createElement(
                              a, {each: e.bindFn(e.getListOfParameters)},
                              n.createElement(
                                  'div', {
                                    class: function() {
                                      return {
                                        'dcg-parameter-suggestion-container':
                                            !0,
                                            'dcg-parameter-suggestion-braille':
                                                'none' !==
                                            e.controller.getBrailleMode()
                                      }
                                    },
                                    onTap: e.bindFn(e.fillInDefaults)
                                  },
                                  function(t) {
                                    return n.createElement(
                                        'span',
                                        {class: n.const('dcg-parameter-name')},
                                        function() {
                                          return e.getParamName(t)
                                        },
                                        n.createElement(
                                            s, {
                                              predicate: function() {
                                                return e.shouldShowDefaultValue(
                                                    t)
                                              }
                                            },
                                            function() {
                                              return n.createElement(
                                                  'span', {
                                                    class: n.const(
                                                        'dcg-default-marker')
                                                  },
                                                  n.const('= '), function() {
                                                    return e.getDefaultValue(t)
                                                  })
                                            }))
                                  }))
                        },
                        individual: function() {
                          return n.createElement(
                              'div', {
                                class: function() {
                                  return {
                                    'dcg-parameter-suggestion-container': !0,
                                        'dcg-parameter-suggestion-braille':
                                            'none' !==
                                        e.controller.getBrailleMode()
                                  }
                                }
                              },
                              e.bindFn(e.getMissingRequiredParamText))
                        },
                        none: function() {}
                      })
                    },
                    t.prototype.getExtractedAndDefaultArgString = function(e) {
                      var t = e.params, r = e.values, n = e.defaults;
                      return t
                          .map(function(e, t) {
                            var i = r[e], o = n[t];
                            return i || o || ''
                          })
                          .join(',')
                    }, t.prototype.fillInDefaults = function() {
                      var e = i.parseToplevelFunction(this.model);
                      if (e) {
                        var t = e.symbol, r = e.span, n = r.input, o = r.start,
                            s = r.end,
                            a = this.getExtractedAndDefaultArgString(e),
                            l = '\\operatorname{' + t + '}\\left(' + a +
                            '\\right)',
                            c = '' + n.slice(0, o) + l + n.slice(s);
                        this.controller.dispatch(
                            {type: 'set-item-latex', id: this.id, latex: c}),
                            this.controller.dispatch({
                              type: 'set-focus-location',
                              location: {type: 'expression', id: this.id}
                            }),
                            this.controller.dispatch(
                                {type: 'keypad/press-key', key: 'Left'})
                      }
                    }, t.prototype.isMissingDefault = function() {
                      if (!i.isPrimaryLatexValid(this.model)) return !1;
                      var e = i.parseToplevelFunction(this.model);
                      if (!e) return !1;
                      for (var t = 0; t < e.params.length; t++)
                        if (this.shouldShowDefaultValue(e.params[t])) return !0;
                      return !1
                    }, t.prototype.getSuggestionType = function() {
                      return this.getListOfParameters().length > 1 ?
                          this.isMissingDefault() ? 'listWithDefault' : 'list' :
                          this.missingRequiredParam() ? 'individual' :
                                                        'none'
                    }, t.prototype.missingRequiredParam = function() {
                      var e = i.parseToplevelFunction(this.model);
                      if (e && 1 === e.params.length) {
                        var t = e.params[0];
                        if (!this.getDefaultValue(t) &&
                            !this.getParameterExtractedValue(t))
                          return t
                      }
                    }, t.prototype.getMissingRequiredParamText = function() {
                      var e = this.missingRequiredParam();
                      return e ? this.controller.t(
                                     'Enter the __param__.',
                                     {param: this.getParamName(e)}) :
                                 ''
                    }, t.prototype.getDefaultValue = function(e) {
                      var t = i.parseToplevelFunction(this.model);
                      if (!t || !t.params) return '';
                      for (var r = 0; r < t.params.length; r++)
                        if (t.params[r] === e) return t.defaults[r] || '';
                      return ''
                    }, t.prototype.getParameterExtractedValue = function(e) {
                      var t = i.parseToplevelFunction(this.model);
                      return t ? t.values[e] || '' : ''
                    }, t.prototype.shouldShowDefaultValue = function(e) {
                      return !this.getParameterExtractedValue(e) &&
                          !!this.getDefaultValue(e)
                    }, t.prototype.getListOfParameters = function() {
                      var e = i.parseToplevelFunction(this.model);
                      return e ? e.params : []
                    }, t.prototype.getParamName = function(e) {
                      switch (e) {
                        case 'mean':
                          return this.controller.t('Mean');
                        case 'stdev':
                          return this.controller.t('Standard Deviation');
                        case 'dof':
                          return this.controller.t('Degrees of Freedom');
                        case 'probsuccess':
                          return this.controller.t('Success Probability');
                        case 'trials':
                          return this.controller.t('Trials');
                        case 'data':
                          return this.controller.t('Data Set');
                        case 'binwidth':
                          return this.controller.t('Bin Width');
                        case 'min':
                          return this.controller.t('Minimum');
                        case 'max':
                          return this.controller.t('Maximum');
                        case 'height':
                        case 'offset':
                        case 'data':
                          return e;
                        default:
                          return e
                      }
                    }, t
                  }(n.Class);
              t.ParametersSuggestionsView = c
            });
          r('loadcss!expressions/distribution_parameters_view', function() {});
          r('expressions/distribution_parameters_view',
            [
              'require', 'exports', 'tslib', 'dcgview',
              'graphing-calc/models/expression', 'expressions/cdf-footer-view',
              './parameters_suggestions_view',
              'loadcss!./distribution_parameters_view'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = n.Components.If, l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return this.controller = this.props.controller(),
                         this.model = this.props.model(),
                         this.id = this.model.id,
                         n.createElement(
                             'div', {
                               class: n.const(
                                   'dcg-distribution-parameters-container dcg-do-blur'),
                               tapboundary: n.const('true'),
                               handleEvent: n.const('true')
                             },
                             n.createElement(s.ParametersSuggestionsView, {
                               model: this.props.model,
                               controller: this.props.controller
                             }),
                             n.createElement(
                                 a, {
                                   predicate: function() {
                                     return i.shouldShowCDFCheckbox(e.model)
                                   }
                                 },
                                 function() {
                                   return n.createElement(o.default, {
                                     model: e.props.model,
                                     controller: e.props.controller
                                   })
                                 }))
                }, t
              }(n.Class);
              t.default = l
            });
          r('loadcss!expressions/visualization_parameters_view', function() {});
          r('expressions/visualization_parameters_view',
            [
              'require', 'exports', 'tslib', 'dcgview', 'jquery', 'keys',
              'graphing-calc/models/expression',
              'dcgview-helpers/mathquill-view',
              'dcgview-helpers/mathquill-braille-wrapper',
              './parameters_suggestions_view',
              'loadcss!./visualization_parameters_view', 'loadcss!toggle'
            ],
            function(e, t, r, n, i, o, s, a, l, c) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var u = n.Components.For, d = n.Components, p = d.SwitchUnion,
                  h = d.If, f = function(e) {
                    function t() {
                      return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e), t.prototype.template = function() {
                      var e = this;
                      return n.createElement(
                          'div', {class: n.const('dcg-toggle-container')},
                          n.createElement(
                              'div',
                              {class: n.const('dcg-expression-footer-title')},
                              this.props.title,
                              n.createElement(
                                  h, {
                                    predicate: function() {
                                      return !!e.props.helpLink
                                    }
                                  },
                                  function() {
                                    return n.createElement(
                                        'a', {
                                          'aria-label': function() {
                                            return e.props.controller().t(
                                                'Help')
                                          },
                                          class: n.const(
                                              'dcg-expression-footer-title-help'),
                                          target: n.const('_blank'),
                                          href: e.props.helpLink
                                        },
                                        n.createElement('i', {
                                          class:
                                              n.const('dcg-icon-question-sign')
                                        }))
                                  })),
                          n.createElement(
                              u, {
                                each: this.props.options,
                                key: function(e) {
                                  return e.name
                                }
                              },
                              n.createElement(
                                  'div', {class: n.const('dcg-toggle')},
                                  function(t) {
                                    return n.createElement(
                                        'div', {
                                          class: function() {
                                            return {
                                              'dcg-toggle-option': !0,
                                                  'dcg-selected-toggle':
                                                      e.isSelected(t.name)
                                            }
                                          },
                                          role: n.const('button'),
                                          tabindex: n.const(0),
                                          'aria-label': function() {
                                            return e.props.title() + ': ' +
                                                t.displayName
                                          },
                                          'aria-pressed': function() {
                                            return e.isSelected(t.name)
                                          },
                                          onTap: function() {
                                            return e.props.controller()
                                                .dispatch({
                                                  type:
                                                      'set-visualization-prop',
                                                  id: e.props.model().id,
                                                  prop: e.props.vizProp(),
                                                  latex: t.name
                                                })
                                          }
                                        },
                                        function() {
                                          return t.displayName
                                        })
                                  })))
                    }, t.prototype.isSelected = function(e) {
                      return s.getVizPropLatex(
                                 this.props.model(), this.props.vizProp()) === e
                    }, t
                  }(n.Class), g = function(e) {
                    function t() {
                      return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e), t.prototype.template = function() {
                      var e = this;
                      return this.controller = this.props.controller(),
                             this.model = this.props.model(),
                             this.id = this.model.id,
                             n.createElement(
                                 'div', {
                                   class: n.const(
                                       'dcg-visualization-parameters-container dcg-do-blur'),
                                   tapboundary: n.const('true'),
                                   handleEvent: n.const('true')
                                 },
                                 n.createElement(
                                     c.ParametersSuggestionsView,
                                     r.__assign({}, this.props)),
                                 n.createElement(
                                     'div',
                                     {class: n.const('dcg-smaller-font')},
                                     p(function() {
                                       return e.getVisualizationType()
                                     }, {
                                       boxplot: function() {
                                         return n.createElement(
                                             'div', null,
                                             n.createElement(
                                                 'div', {
                                                   class: n.const(
                                                       'dcg-expression-footer-title')
                                                 },
                                                 function() {
                                                   return e.controller.t(
                                                       'Display Properties')
                                                 }),
                                             e.makeMQInput({
                                               prop: 'axisOffset',
                                               siblingProps: ['breadth'],
                                               default: '1',
                                               name: function() {
                                                 return e.controller.t('Offset')
                                               }
                                             }),
                                             e.makeMQInput({
                                               prop: 'breadth',
                                               siblingProps: ['axisOffset'],
                                               default: '1',
                                               name: function() {
                                                 return 'y' ===
                                                         s.getVizPropLatex(
                                                             e.model,
                                                             'alignedAxis') ?
                                                     e.controller.t('Width') :
                                                     e.controller.t('Height')
                                               }
                                             }))
                                       },
                                       dotplot: function() {
                                         return n.createElement(
                                             h, {
                                               predicate: function() {
                                                 return s.needsDotplotXMode(
                                                     e.model)
                                               }
                                             },
                                             function() {
                                               return n.createElement(
                                                   'div', {
                                                     class: n.const(
                                                         'dcg-toggles-container')
                                                   },
                                                   n.createElement(
                                                       f,
                                                       r.__assign({}, e.props, {
                                                         vizProp: function() {
                                                           return 'dotplotXMode'
                                                         },
                                                         options: function() {
                                                           return [
                                                             {
                                                               name: 'exact',
                                                               displayName:
                                                                   e.controller.t(
                                                                       'Exact')
                                                             },
                                                             {
                                                               name: 'bin',
                                                               displayName:
                                                                   e.controller.t(
                                                                       'Binned')
                                                             }
                                                           ]
                                                         },
                                                         title: function() {
                                                           return e.controller
                                                               .t('X Values')
                                                         }
                                                       })),
                                                   n.createElement(
                                                       f,
                                                       r.__assign({}, e.props, {
                                                         vizProp: function() {
                                                           return 'binAlignment'
                                                         },
                                                         options: function() {
                                                           return [
                                                             {
                                                               name: 'center',
                                                               displayName:
                                                                   e.controller.t(
                                                                       'Center')
                                                             },
                                                             {
                                                               name: 'left',
                                                               displayName:
                                                                   e.controller
                                                                       .t('Left')
                                                             }
                                                           ]
                                                         },
                                                         title: function() {
                                                           return e.controller.t(
                                                               'Bin Alignment')
                                                         }
                                                       })))
                                             })
                                       },
                                       histogram: function() {
                                         return n.createElement(
                                             'div', {
                                               class: n.const(
                                                   'dcg-toggles-container')
                                             },
                                             n.createElement(
                                                 f, r.__assign({}, e.props, {
                                                   vizProp: function() {
                                                     return 'histogramMode'
                                                   },
                                                   options: function() {
                                                     return [
                                                       {
                                                         name: '',
                                                         displayName:
                                                             e.controller.t(
                                                                 'Count')
                                                       },
                                                       {
                                                         name: 'relative',
                                                         displayName:
                                                             e.controller.t(
                                                                 'Relative')
                                                       },
                                                       {
                                                         name: 'density',
                                                         displayName:
                                                             e.controller.t(
                                                                 'Density')
                                                       }
                                                     ]
                                                   },
                                                   title: function() {
                                                     return e.controller.t(
                                                         'Bar Heights')
                                                   },
                                                   helpLink: e.const(
                                                       'https://support.desmos.com/hc/en-us/articles/360022405991')
                                                 })),
                                             n.createElement(
                                                 f, r.__assign({}, e.props, {
                                                   vizProp: function() {
                                                     return 'binAlignment'
                                                   },
                                                   options: function() {
                                                     return [
                                                       {
                                                         name: 'center',
                                                         displayName:
                                                             e.controller.t(
                                                                 'Center')
                                                       },
                                                       {
                                                         name: 'left',
                                                         displayName:
                                                             e.controller.t(
                                                                 'Left')
                                                       }
                                                     ]
                                                   },
                                                   title: function() {
                                                     return e.controller.t(
                                                         'Bin Alignment')
                                                   }
                                                 })))
                                       },
                                       none: function() {
                                         return n.createElement('span', null)
                                       }
                                     })))
                    }, t.prototype.makeMQInput = function(e) {
                      var t = this;
                      return n.createElement(
                          'span', null,
                          n.createElement(
                              'span', {class: n.const('dcg-parameter-name')},
                              e.name, n.const(':')),
                          n.createElement(
                              l.default, {
                                latex: function() {
                                  return s.getVizPropLatex(t.model, e.prop)
                                },
                                ariaLabel: e.name,
                                placeholder: function() {
                                  return e.default
                                },
                                brailleShouldFocus: function() {
                                  return t.isInputFocused(e.prop)
                                },
                                onBrailleInput: function(r) {
                                  return t.handleLatexChanged(e.prop, r)
                                },
                                controller: this.props.controller,
                                hasError: function() {
                                  return !s.isVizPropValid(t.model, e.prop)
                                },
                                onBrailleFocusedChanged: function(r) {
                                  return t.handleFocusedChanged(e.prop, r)
                                },
                                onBrailleKeydown: function(r) {
                                  return t.handleBraillePressedKey(r, e.prop)
                                }
                              },
                              n.createElement(a.default, {
                                latex: function() {
                                  return s.getVizPropLatex(t.model, e.prop)
                                },
                                hasError: function() {
                                  return !s.isVizPropValid(t.model, e.prop)
                                },
                                isFocused: function() {
                                  return t.isInputFocused(e.prop)
                                },
                                onFocusedChanged: function(r) {
                                  return t.handleFocusedChanged(e.prop, r)
                                },
                                placeholder: function() {
                                  return e.default
                                },
                                config: this.const({}),
                                getAriaLabel: e.name,
                                onUserPressedKey: function(r, n) {
                                  return t.handlePressedKey(r, n, e.prop)
                                },
                                getAriaPostLabel: function() {
                                  return ''
                                },
                                onUserChangedLatex: function(r) {
                                  return t.handleLatexChanged(e.prop, r)
                                },
                                onExpressionSizeExceeded: function() {
                                  return t.controller.dispatch(
                                      {type: 'expression-size-exceeded'})
                                },
                                capExpressionSize: function() {
                                  return t.model.controller
                                      .getCapExpressionSize()
                                },
                                needsSystemKeypad: function() {
                                  return !t.controller.isKeypadEnabled()
                                }
                              })))
                    }, t.prototype.handleBraillePressedKey = function(e, t) {
                      var r = o.lookup(e);
                      r && this.handlePressedKey(r, i.Event(e), t)
                    }, t.prototype.handlePressedKey = function(e, t, r) {
                      if ('Esc' === e)
                        return void this.controller.dispatch(
                            {type: 'set-focus-location', location: void 0});
                      if ('Enter' === e)
                        return this.controller.dispatch(
                            {type: 'on-special-key-pressed', key: 'Enter'});
                      var n = a.default.getFocusedMathquill();
                      n &&
                          (n.keystroke(e, t),
                           this.handleLatexChanged(r, n.latex()))
                    }, t.prototype.isInputFocused = function(e) {
                      var t = this.controller.getFocusLocation();
                      return !(!t || 'visualization-prop' !== t.type ||
                               t.id !== this.id) &&
                          t.location === e
                    }, t.prototype.handleFocusedChanged = function(e, t) {
                      t ? this.controller.dispatch({
                        type: 'set-focus-location',
                        location: {
                          type: 'visualization-prop',
                          id: this.id,
                          location: e
                        }
                      }) :
                          this.controller.dispatch({
                            type: 'blur-focus-location',
                            location: {
                              type: 'visualization-prop',
                              id: this.id,
                              location: e
                            }
                          })
                    }, t.prototype.handleLatexChanged = function(e, t) {
                      s.getVizPropLatex(this.model, e) !== t &&
                          this.controller.dispatch({
                            type: 'set-visualization-prop',
                            id: this.id,
                            prop: e,
                            latex: t
                          })
                    }, t.prototype.getVisualizationType = function() {
                      return s.isPrimaryLatexValid(this.model) ?
                          s.isBoxPlot(this.model)       ? 'boxplot' :
                              s.isDotPlot(this.model)   ? 'dotplot' :
                              s.isHistogram(this.model) ? 'histogram' :
                                                          'none' :
                          'none'
                    }, t
                  }(n.Class);
              t.default = g
            });
          r('loadcss!expressions/ttest_footer_view', function() {});
          r('expressions/ttest_footer_view',
            [
              'require', 'exports', 'tslib', 'dcgview',
              'graphing-calc/models/expression', 'core/lib/number-to-latex',
              'dcgview-helpers/static-mathquill-view',
              'loadcss!./ttest_footer_view'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e),
                       t.prototype.init = function() {
                         this.controller = this.props.controller(),
                         this.model = this.props.model(),
                         this.id = this.model.id
                       }, t.prototype.template = function() {
                         var e = this;
                         return n.createElement(
                             'div', {
                               class: n.const(
                                   'dcg-ttest-footer-container dcg-do-blur'),
                               handleEvent: n.const('true')
                             },
                             n.createElement(
                                 'table', null,
                                 n.createElement(
                                     'tr', null,
                                     n.createElement(
                                         'td', null,
                                         n.createElement(
                                             'div', {
                                               class: n.const('dcg-value'),
                                               role: n.const('textbox'),
                                               'aria-readonly': n.const('true'),
                                               tabindex: n.const('0'),
                                               'aria-label': function() {
                                                 return 'Less than: ' +
                                                     e.getLessThan()
                                               }
                                             },
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-operator')
                                                 },
                                                 n.createElement(
                                                     s.default,
                                                     {latex: this.const('<')})),
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-evaluation')
                                                 },
                                                 n.createElement(s.default, {
                                                   latex: function() {
                                                     return e.getLessThan()
                                                   }
                                                 }))))),
                                 n.createElement(
                                     'tr', null,
                                     n.createElement(
                                         'td', null,
                                         n.createElement(
                                             'div', {
                                               class: n.const('dcg-value'),
                                               role: n.const('textbox'),
                                               'aria-readonly': n.const('true'),
                                               tabindex: n.const('0'),
                                               'aria-label': function() {
                                                 return 'Greater than: ' +
                                                     e.getGreaterThan()
                                               }
                                             },
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-operator')
                                                 },
                                                 n.createElement(
                                                     s.default,
                                                     {latex: this.const('>')})),
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-evaluation')
                                                 },
                                                 n.createElement(s.default, {
                                                   latex: function() {
                                                     return e.getGreaterThan()
                                                   }
                                                 }))))),
                                 n.createElement(
                                     'tr', null,
                                     n.createElement(
                                         'td', null,
                                         n.createElement(
                                             'div', {
                                               class: n.const('dcg-value'),
                                               role: n.const('textbox'),
                                               'aria-readonly': n.const('true'),
                                               tabindex: n.const('0'),
                                               'aria-label': function() {
                                                 return 'Not equal: ' +
                                                     e.getNotEqual()
                                               }
                                             },
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-operator')
                                                 },
                                                 n.createElement(
                                                     s.default,
                                                     {latex: this.const('≠')})),
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-evaluation')
                                                 },
                                                 n.createElement(s.default, {
                                                   latex: function() {
                                                     return e.getNotEqual()
                                                   }
                                                 })))))))
                       }, t.prototype.getLessThan = function() {
                         var e = i.getTTestResults(this.model);
                         return e ?
                             o.numberToStatsConfidenceLatex(e.lessThan, 5) :
                             ''
                       }, t.prototype.getGreaterThan = function() {
                         var e = i.getTTestResults(this.model);
                         return e ?
                             o.numberToStatsConfidenceLatex(e.greaterThan, 5) :
                             ''
                       }, t.prototype.getNotEqual = function() {
                         var e = i.getTTestResults(this.model);
                         return e ?
                             o.numberToStatsConfidenceLatex(e.notEqual, 5) :
                             ''
                       }, t
              }(n.Class);
              t.default = a
            });
          r('loadcss!expressions/stats_footer_view', function() {});
          r('expressions/stats_footer_view',
            [
              'require', 'exports', 'tslib', 'dcgview',
              'graphing-calc/models/expression',
              'dcgview-helpers/static-mathquill-view',
              'core/lib/number-to-latex', 'loadcss!./stats_footer_view'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return this.controller = this.props.controller(),
                         this.model = this.props.model(),
                         this.id = this.model.id,
                         n.createElement(
                             'div', {
                               class: n.const(
                                   'dcg-stats-footer-container dcg-do-blur'),
                               handleEvent: n.const('true')
                             },
                             n.createElement(
                                 'table', null,
                                 n.createElement(
                                     'tr', null,
                                     n.createElement(
                                         'td', null,
                                         n.createElement(
                                             'div', {
                                               class: n.const('dcg-value'),
                                               role: n.const('textbox'),
                                               'aria-readonly': n.const('true'),
                                               tabindex: n.const('0'),
                                               'aria-label': function() {
                                                 return 'Min: ' + e.getMin()
                                               }
                                             },
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-row-header')
                                                 },
                                                 n.const('Min')),
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-evaluation')
                                                 },
                                                 n.createElement(o.default, {
                                                   latex:
                                                       this.bindFn(this.getMin)
                                                 }))))),
                                 n.createElement(
                                     'tr', null,
                                     n.createElement(
                                         'td', null,
                                         n.createElement(
                                             'div', {
                                               class: n.const('dcg-value'),
                                               role: n.const('textbox'),
                                               'aria-readonly': n.const('true'),
                                               tabindex: n.const('0'),
                                               'aria-label': function() {
                                                 return 'Q1: ' + e.getQ1()
                                               }
                                             },
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-row-header')
                                                 },
                                                 n.const('Q1')),
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-evaluation')
                                                 },
                                                 n.createElement(o.default, {
                                                   latex:
                                                       this.bindFn(this.getQ1)
                                                 }))))),
                                 n.createElement(
                                     'tr', null,
                                     n.createElement(
                                         'td', null,
                                         n.createElement(
                                             'div', {
                                               class: n.const('dcg-value'),
                                               role: n.const('textbox'),
                                               'aria-readonly': n.const('true'),
                                               tabindex: n.const('0'),
                                               'aria-label': function() {
                                                 return 'Median: ' +
                                                     e.getMedian()
                                               }
                                             },
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-row-header')
                                                 },
                                                 n.const('Median')),
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-evaluation')
                                                 },
                                                 n.createElement(o.default, {
                                                   latex: this.bindFn(
                                                       this.getMedian)
                                                 }))))),
                                 n.createElement(
                                     'tr', null,
                                     n.createElement(
                                         'td', null,
                                         n.createElement(
                                             'div', {
                                               class: n.const('dcg-value'),
                                               role: n.const('textbox'),
                                               'aria-readonly': n.const('true'),
                                               tabindex: n.const('0'),
                                               'aria-label': function() {
                                                 return 'Q3: ' + e.getQ3()
                                               }
                                             },
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-row-header')
                                                 },
                                                 n.const('Q3')),
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-evaluation')
                                                 },
                                                 n.createElement(o.default, {
                                                   latex:
                                                       this.bindFn(this.getQ3)
                                                 }))))),
                                 n.createElement(
                                     'tr', null,
                                     n.createElement(
                                         'td', null,
                                         n.createElement(
                                             'div', {
                                               class: n.const('dcg-value'),
                                               role: n.const('textbox'),
                                               'aria-readonly': n.const('true'),
                                               tabindex: n.const('0'),
                                               'aria-label': function() {
                                                 return 'Max: ' + e.getMax()
                                               }
                                             },
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-row-header')
                                                 },
                                                 n.const('Max')),
                                             n.createElement(
                                                 'span', {
                                                   class:
                                                       n.const('dcg-evaluation')
                                                 },
                                                 n.createElement(o.default, {
                                                   latex:
                                                       this.bindFn(this.getMax)
                                                 })))))))
                }, t.prototype.getMin = function() {
                  var e = i.getStatsResults(this.model);
                  return e ? s.numberToDecimalString(e.min) : ''
                }, t.prototype.getQ1 = function() {
                  var e = i.getStatsResults(this.model);
                  return e ? s.numberToDecimalString(e.q1) : ''
                }, t.prototype.getMedian = function() {
                  var e = i.getStatsResults(this.model);
                  return e ? s.numberToDecimalString(e.median) : ''
                }, t.prototype.getQ3 = function() {
                  var e = i.getStatsResults(this.model);
                  return e ? s.numberToDecimalString(e.q3) : ''
                }, t.prototype.getMax = function() {
                  var e = i.getStatsResults(this.model);
                  return e ? s.numberToDecimalString(e.max) : ''
                }, t
              }(n.Class);
              t.default = a
            });
          r('loadcss!expressions/expression-edit-actions', function() {});
          r('expressions/expression-edit-actions',
            [
              'require', 'exports', 'tslib', 'dcgview', 'lib/tooltip',
              'core/lib/dragmode', 'core/types/styles',
              'graphing-calc/models/expression', 'lib/aria',
              'loadcss!./expression-edit-actions'
            ],
            function(e, t, r, n, i, o, s, a, l) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var c = n.Components.If, u = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller()
                }, t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      c, {
                        predicate: function() {
                          return e.controller.isInEditListMode()
                        }
                      },
                      function() {
                        return n.createElement(
                            'span', {
                              class: function() {
                                return {
                                  'dcg-expression-edit-actions': !0,
                                      'dcg-limited-height': e.limitedHeight()
                                }
                              },
                              style: function() {
                                return {
                                  background: e.controller.getBackgroundColor()
                                }
                              },
                              didMount: function() {
                                e.controller.isInEditListMode() &&
                                    l.alert(
                                        e.controller.t('Edit list mode on.'))
                              },
                              didUnmount: function() {
                                e.controller.isInEditListMode() ||
                                    l.alert(
                                        e.controller.t('Edit list mode off.'))
                              }
                            },
                            n.createElement(
                                c, {
                                  predicate: function() {
                                    return !e.controller.hasBackgroundColor()
                                  }
                                },
                                function() {
                                  return n.createElement('span', {
                                    class: n.const('dcg-graphic'),
                                    handleEvent: n.const('true ')
                                  })
                                }),
                            n.createElement(
                                c, {predicate: e.bindFn(e.canConvertToTable)},
                                function() {
                                  return n.createElement(
                                      i.Tooltip, {
                                        tooltip: function() {
                                          return e.controller.t(
                                              'Convert to Table')
                                        },
                                        gravity: e.const('s')
                                      },
                                      n.createElement(
                                          'span', {
                                            class: n.const(
                                                'dcg-action-createtable dcg-exp-action-button'),
                                            handleEvent: n.const('true'),
                                            role: n.const('button'),
                                            tabindex: n.const('0'),
                                            'aria-label': function() {
                                              return e.controller.t(
                                                  'Convert to Table')
                                            },
                                            onTap: e.bindFn(e.onCreateTable)
                                          },
                                          n.createElement('i', {
                                            class: n.const('dcg-icon-table')
                                          })))
                                }),
                            n.createElement(
                                c, {predicate: e.bindFn(e.canDuplicate)},
                                function() {
                                  return n.createElement(
                                      i.Tooltip, {
                                        tooltip: function() {
                                          return e.controller.t('Duplicate')
                                        },
                                        gravity: e.const('s')
                                      },
                                      n.createElement(
                                          'span', {
                                            class: n.const(
                                                'dcg-duplicate-btn dcg-exp-action-button'),
                                            handleEvent: n.const('true'),
                                            role: n.const('button'),
                                            tabindex: n.const('0'),
                                            'aria-label': function() {
                                              return e.controller.t('Duplicate')
                                            },
                                            onTap: e.bindFn(
                                                e.onDuplicateWithoutFocus)
                                          },
                                          n.createElement('i', {
                                            class: n.const('dcg-icon-duplicate')
                                          })))
                                }),
                            n.createElement(
                                i.Tooltip, {
                                  tooltip: function() {
                                    return e.controller.t('Delete')
                                  },
                                  gravity: e.const('sw')
                                },
                                n.createElement(
                                    'span', {
                                      class: n.const(
                                          'dcg-delete-btn dcg-exp-action-button'),
                                      handleEvent: n.const('true'),
                                      role: n.const('button'),
                                      tabindex: n.const('0'),
                                      'aria-label': function() {
                                        return e.controller.t('Delete')
                                      },
                                      onTap: e.bindFn(e.onDelete)
                                    },
                                    n.createElement(
                                        'i',
                                        {class: n.const('dcg-icon-remove')}))))
                      })
                }, t.prototype.model = function() {
                  return this.controller.getItemModel(this.props.id())
                }, t.prototype.canConvertToTable = function() {
                  var e = this.model();
                  return !(!e || 'expression' !== e.type || !e.isTableable)
                }, t.prototype.canDuplicate = function() {
                  var e = this.model();
                  return !(!e || 'expression' !== e.type || this.isSlider())
                }, t.prototype.limitedHeight = function() {
                  var e = this.model();
                  return e && ('image' === e.type || this.isSlider())
                }, t.prototype.isSlider = function() {
                  var e = this.model();
                  return e && 'expression' === e.type && e.sliderExists
                }, t.prototype.onCreateTable = function() {
                  var e = this.model();
                  if (e && 'expression' === e.type) {
                    var t = e.formula;
                    if (e.isTableable) {
                      var r, n = t.table_info, i = e.index, l = [], c = [];
                      if (n.values)
                        for (r = 0; r < n.values.length; r++) {
                          var u = n.values[r][0];
                          l.push(isNaN(u) ? '' : u + '');
                          var d = n.values[r][1];
                          c.push(isNaN(d) ? '' : d + '')
                        }
                      else
                        for (r = -2; r <= 2; r++) l.push(r + ''), c.push('');
                      var p = {
                        id: this.controller.generateId(),
                        type: 'table',
                        columns: [
                          {
                            id: this.controller.generateId(),
                            latex: n.independent_variable,
                            color: this.controller.getNextColor(),
                            hidden: !1,
                            values: l,
                            points: !0,
                            lines: !1,
                            dragMode: o.DragMode.NONE,
                            pointStyle: s.PointStyle.POINT,
                            lineStyle: s.LineStyle.SOLID
                          },
                          {
                            id: this.controller.generateId(),
                            latex: n.dependent_column,
                            color: e.color,
                            hidden: !1,
                            values: c,
                            points: !0,
                            lines: !(a.isPointOrPointList(e) || e.hidden),
                            dragMode: o.DragMode.NONE,
                            pointStyle: s.PointStyle.POINT,
                            lineStyle: s.LineStyle.SOLID
                          }
                        ]
                      },
                          h = this.controller;
                      this.controller.dispatch({
                        type: 'set-edit-list-mode',
                        isEditListMode: !1,
                        focusExpressionList: !1
                      }),
                          n.by_reference ? this.controller.dispatch({
                            type: 'insert-item-at-index',
                            index: i + 1,
                            state: p,
                            folderId: e.folderId,
                            focus: !0
                          }) :
                                           this.controller.dispatch({
                                             type: 'replace-item-at-index',
                                             index: i,
                                             state: p,
                                             focus: !0
                                           });
                      var f = function() {
                        h.dispatch({type: 'undo'}), h.dispatch({
                          type: 'set-edit-list-mode',
                          isEditListMode: !0,
                          focusExpressionList: !1
                        })
                      };
                      this.controller.dispatch({
                        type: 'toast/show',
                        toast: {
                          message: this.controller.t('Table created.'),
                          undoCallback: f
                        }
                      })
                    }
                  }
                }, t.prototype.onDelete = function(e) {
                  this.controller.dispatch({
                    type: 'delete-item-and-animate-out',
                    id: this.props.id(),
                    setFocusAfterDelete: 'keyboard' === e.device
                  })
                }, t.prototype.onDuplicateWithoutFocus = function() {
                  this.controller.dispatch(
                      {type: 'duplicate-expression', id: this.props.id()})
                }, t
              }(n.Class);
              t.ExpressionEditActions = u
            });
          r('loadcss!expressions/suggested-zoom-view', function() {});
          r('expressions/suggested-zoom-view',
            [
              'require', 'exports', 'tslib', 'dcgview', 'lib/tooltip',
              'loadcss!./suggested-zoom-view'
            ],
            function(e, t, r, n, i) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var o = n.Components.If, s = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller(),
                  this.model = this.props.model()
                }, t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      o, {
                        predicate: function() {
                          return e.controller.shouldExpressionZoomFit(e.model)
                        }
                      },
                      function() {
                        return n.createElement(
                            'div', {
                              class: n.const(
                                  'dcg-suggested-zoom-view dcg-do-blur'),
                              handleEvent: n.const(!0)
                            },
                            n.createElement(
                                i.Tooltip, {
                                  tooltip: e.bindFn(e.getZoomText),
                                  gravity: function() {
                                    return 'e'
                                  }
                                },
                                n.createElement('i', {
                                  onTap: e.bindFn(e.onZoom),
                                  role: n.const('button'),
                                  'aria-label': e.bindFn(e.getZoomText),
                                  class: n.const('dcg-icon-zoom-fit')
                                })))
                      })
                }, t.prototype.getZoomText = function() {
                  return this.controller.t('Zoom Fit')
                }, t.prototype.onZoom = function() {
                  this.controller.dispatch(
                      {type: 'expression-zoom-fit', id: this.model.id})
                }, t
              }(n.Class);
              t.SuggestedZoomView = s
            });
          r('loadcss!expressions/clickable_info_view', function() {});
          r('expressions/clickable_info_view',
            [
              'require', 'exports', 'tslib', 'dcgview',
              'graphing-calc/models/expression', 'graphing-calc/models/image',
              'dcgview-helpers/mathquill-view', 'loadcss!./clickable_info_view'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = n.Components.Input, l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller(),
                  this.model = this.props.model(), this.id = this.model.id
                }, t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {
                        class:
                            n.const('dcg-clickable-info-container dcg-do-blur'),
                        tapboundary: n.const('true'),
                        handleEvent: n.const('true')
                      },
                      n.createElement(
                          'div', {class: n.const('dcg-smaller-font')},
                          n.createElement(
                              'div', {
                                role: n.const('group'),
                                'aria-label': function() {
                                  return e.controller.t('Clickable Properties')
                                }
                              },
                              n.createElement(
                                  'div', {
                                    role: n.const('heading'),
                                    'aria-level': n.const('2'),
                                    class:
                                        n.const('dcg-expression-footer-title')
                                  },
                                  function() {
                                    return e.controller.t(
                                        'Clickable Properties')
                                  }),
                              this.const(this.controller.t('set')),
                              this.makeMQInput({
                                prop: 'assignment',
                                name: function() {
                                  return e.controller.t('Assignment')
                                }
                              }),
                              this.const(this.controller.t('to')),
                              this.makeMQInput({
                                prop: 'expression',
                                name: function() {
                                  return e.controller.t('Expression')
                                }
                              })),
                          n.createElement(a, {
                            'aria-label': function() {
                              return e.controller.t('Screen reader label')
                            },
                            placeholder: function() {
                              return e.controller.t('Add screen reader label')
                            },
                            value: function() {
                              return e.model.clickableInfo.description
                            },
                            onInput: function(t) {
                              return e.controller.dispatch({
                                type: 'set-clickableinfo-prop',
                                id: e.model.id,
                                prop: 'description',
                                value: t
                              })
                            }
                          })))
                }, t.prototype.makeMQInput = function(e) {
                  var t = this;
                  return n.createElement(s.default, {
                    latex: function() {
                      return t.getClickableInfoPropLatex(e.prop)
                    },
                    hasError: function() {
                      return t.isClickableInfoPropInvalid(e.prop)
                    },
                    isFocused: function() {
                      return t.isInputFocused(e.prop)
                    },
                    onFocusedChanged: function(r) {
                      return t.handleFocusedChanged(e.prop, r)
                    },
                    config: this.const({}),
                    getAriaLabel: e.name,
                    onUserPressedKey: function(r, n) {
                      return t.handlePressedKey(r, n, e.prop)
                    },
                    getAriaPostLabel: function() {
                      return ''
                    },
                    onUserChangedLatex: function(r) {
                      return t.handleLatexChanged(e.prop, r)
                    },
                    onExpressionSizeExceeded: function() {
                      return t.controller.dispatch(
                          {type: 'expression-size-exceeded'})
                    },
                    capExpressionSize: function() {
                      return !!t.model.controller.getGraphSettings()
                                   .config.capExpressionSize
                    },
                    needsSystemKeypad: function() {
                      return !t.controller.isKeypadEnabled()
                    }
                  })
                }, t.prototype.handlePressedKey = function(e, t, r) {
                  if ('Esc' === e)
                    return void this.controller.dispatch(
                        {type: 'set-focus-location', location: void 0});
                  if ('Enter' === e)
                    return this.controller.dispatch(
                        {type: 'on-special-key-pressed', key: 'Enter'});
                  var n = s.default.getFocusedMathquill();
                  n &&
                      (n.keystroke(e, t), this.handleLatexChanged(r, n.latex()))
                }, t.prototype.isInputFocused = function(e) {
                  var t = this.controller.getFocusLocation();
                  return !(!t || 'clickableinfo-prop' !== t.type ||
                           t.id !== this.id) &&
                      t.location === e
                }, t.prototype.handleFocusedChanged = function(e, t) {
                  t ? this.controller.dispatch({
                    type: 'set-focus-location',
                    location:
                        {type: 'clickableinfo-prop', id: this.id, location: e}
                  }) :
                      this.controller.dispatch({
                        type: 'blur-focus-location',
                        location: {
                          type: 'clickableinfo-prop',
                          id: this.id,
                          location: e
                        }
                      })
                }, t.prototype.getClickableInfoPropLatex = function(e) {
                  return 'image' === this.model.type ?
                      o.getClickableInfoPropLatex(this.model, e) :
                      i.getClickableInfoPropLatex(this.model, e)
                }, t.prototype.isClickableInfoPropInvalid = function(e) {
                  return 'image' === this.model.type ?
                      !o.isClickableInfoPropValid(this.model, e) :
                      !i.isClickableInfoPropValid(this.model, e)
                }, t.prototype.handleLatexChanged = function(e, t) {
                  if (this.getClickableInfoPropLatex(e) !== t)
                    if ('assignment' === e)
                      this.controller.dispatch({
                        type: 'set-clickableinfo-prop',
                        id: this.id,
                        prop: e,
                        value: t
                      });
                    else {
                      if ('expression' !== e) {
                        var r = e;
                        return r
                      }
                      this.controller.dispatch({
                        type: 'set-clickableinfo-prop',
                        id: this.id,
                        prop: e,
                        value: t
                      })
                    }
                }, t
              }(n.Class);
              t.ClickableInfoView = l
            });
          r('loadcss!expressions/expression-footer', function() {});
          r('expressions/expression_view', ['require', 'exports', 'config', 'tslib', 'browser', 'keys', 'jquery', './abstract-item-view', 'dcgview-helpers/mathquill-view', 'dcgview-helpers/static-mathquill-view', 'lib/conditional_blur', './expression-icon-view', './evaluation-view', 'expressions/unresolved_view', 'expressions/domain_view', 'expressions/regression_view', 'expressions/slider_view', 'expressions/promptslider_view', 'expressions/label_view', 'expressions/distribution_parameters_view', 'expressions/visualization_parameters_view', 'expressions/ttest_footer_view', 'expressions/stats_footer_view', 'graphing-calc/models/expression', 'core/lib/label', './expression-edit-actions', './suggested-zoom-view', 'dcgview', './clickable_info_view', 'main/manage-focus-helper', 'dcgview-helpers/mathquill-braille-wrapper', 'jquery.handleevent', 'loadcss!./expression-footer'], function(e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g, m, y, v, b, x, w, _, E, S, M, I, k, C, T, L) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var P = k.Components
                , A = P.If
                , D = P.SwitchUnion
                , O = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return n.__extends(t, e),
                    t.prototype.didMount = function() {
                        this.onItemViewMounted()
                    }
                    ,
                    t.prototype.didMountRootNode = function(e) {
                        this.rootNode = e
                    }
                    ,
                    t.prototype.willUnmount = function() {
                        this.onItemViewUnmounted()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return k.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-do-not-blur': !0,
                                    'dcg-expressionitem': !0,
                                    'dcg-mathitem': !0,
                                    'dcg-inFolder': !!e.model.folderId,
                                    'dcg-selected': e.controller.isItemSelected(e.id) && !e.controller.isInEditListMode(),
                                    'dcg-dragging': !!e.controller.isItemBeingDragged(e.id),
                                    'dcg-hasSlider': e.hasSlider(),
                                    'dcg-hasEvaluation': e.controller.shouldShowEvaluationForItem(e.id),
                                    'dcg-hasRegression': e.hasRegression(),
                                    'dcg-hasDomain': e.hasDomain(),
                                    'dcg-author-ide': e.controller.isAuthorIDE()
                                }
                            },
                            'expr-id': function() {
                                return e.model.id
                            },
                            didMount: this.bindFn(this.didMountRootNode)
                        }, k.createElement('div', {
                            class: k.const('dcg-fade-container'),
                            onTapStart: this.bindFn(this.onMouseSelect),
                            onTap: this.bindFn(this.onMouseSelect)
                        }, k.createElement('div', {
                            class: k.const('dcg-main')
                        }, k.createElement(A, {
                            predicate: function() {
                                return !e.controller.isInEditListMode()
                            }
                        }, function() {
                            return k.createElement(L.default, {
                                latex: function() {
                                    return E.getDisplayLatex(e.model)
                                },
                                ariaLabel: function() {
                                    return e.getAriaLabel('braille')
                                },
                                brailleShouldFocus: function() {
                                    return e.isFocused()
                                },
                                onBrailleInput: function(t) {
                                    return e.handleLatexChanged(t)
                                },
                                controller: e.props.controller,
                                onBrailleFocusedChanged: function(t, r) {
                                    return e.handleMQFocusedChanged(t, r)
                                },
                                onBrailleKeydown: e.bindFn(e.handleBraillePressedKey)
                            }, k.createElement(l.default, {
                                latex: function() {
                                    return E.getDisplayLatex(e.model)
                                },
                                getAriaLabel: function() {
                                    return e.getAriaLabel('speech')
                                },
                                getAriaPostLabel: e.bindFn(e.getFormulaAria),
                                isFocused: function() {
                                    return e.isFocused()
                                },
                                capExpressionSize: function() {
                                    return e.controller.getCapExpressionSize()
                                },
                                config: e.const({}),
                                hasError: e.const(!1),
                                onUserPressedKey: function(t, r) {
                                    return e.handlePressedKey(t, r)
                                },
                                onUserChangedLatex: function(t) {
                                    return e.handleLatexChanged(t)
                                },
                                onExpressionSizeExceeded: function() {
                                    return e.controller.dispatch({
                                        type: 'expression-size-exceeded'
                                    })
                                },
                                onFocusedChanged: function(t, r) {
                                    return e.handleMQFocusedChanged(t, r)
                                },
                                needsSystemKeypad: function() {
                                    return !e.controller.isKeypadEnabled()
                                }
                            }, k.createElement('div', {
                                class: k.const('dcg-expression-mathquill')
                            })))
                        }), k.createElement(A, {
                            predicate: function() {
                                return e.controller.isInEditListMode()
                            }
                        }, function() {
                            return k.createElement('div', {
                                class: k.const('dcg-edit-list-mathquill'),
                                tabindex: function() {
                                    return 'none' === e.controller.getBrailleMode() ? '0' : '-1'
                                },
                                onTap: e.bindFn(e.exitEditListMode),
                                manageFocus: e.const({
                                    shouldBeFocused: function() {
                                        return 'none' === e.controller.getBrailleMode() && T.defaultShouldBeFocused({
                                            controller: e.controller,
                                            location: {
                                                type: 'readonly-expression',
                                                id: e.model.id
                                            }
                                        })
                                    },
                                    onFocusedChanged: function(t) {
                                        'none' === e.controller.getBrailleMode() && (t ? e.controller.dispatch({
                                            type: 'set-focus-location',
                                            location: {
                                                type: 'readonly-expression',
                                                id: e.model.id
                                            }
                                        }) : e.controller.dispatch({
                                            type: 'blur-focus-location',
                                            location: {
                                                type: 'readonly-expression',
                                                id: e.model.id
                                            }
                                        }))
                                    }
                                })
                            }, k.createElement(L.default, {
                                latex: function() {
                                    return E.getDisplayLatex(e.model)
                                },
                                ariaLabel: function() {
                                    return e.getAriaLabel('braille')
                                },
                                controller: e.props.controller,
                                isStatic: e.const(!0),
                                brailleShouldFocus: function() {
                                    var t = e.controller.getFocusLocation();
                                    return !!t && ('readonly-expression' === t.type && t.id === e.id)
                                },
                                onBrailleFocusedChanged: function(t) {
                                    t ? e.controller.dispatch({
                                        type: 'set-focus-location',
                                        location: {
                                            type: 'readonly-expression',
                                            id: e.model.id
                                        }
                                    }) : e.controller.dispatch({
                                        type: 'blur-focus-location',
                                        location: {
                                            type: 'readonly-expression',
                                            id: e.model.id
                                        }
                                    })
                                }
                            }, k.createElement(c.default, {
                                latex: function() {
                                    return E.getDisplayLatex(e.model)
                                },
                                getAriaLabel: function() {
                                    return e.getAriaLabel('speech')
                                }
                            })))
                        })), k.createElement('i', {
                            class: k.const('dcg-icon-remove dcg-top-level-delete'),
                            handleEvent: k.const('true'),
                            onTap: this.bindFn(this.onDelete)
                        }), k.createElement(A, {
                            predicate: this.bindFn(this.shouldShowFooter)
                        }, function() {
                            return k.createElement('div', {
                                class: e.getFooterClass()
                            }, D(function() {
                                return e.getFooterType()
                            }, {
                                none: function() {},
                                regression: function() {
                                    return k.createElement(g.default, {
                                        model: e.props.model,
                                        controller: e.props.controller
                                    })
                                },
                                label: function() {
                                    return k.createElement(v.default, {
                                        model: e.props.model,
                                        controller: e.props.controller
                                    })
                                },
                                slider: function() {
                                    return k.createElement(m.default, {
                                        model: e.props.model,
                                        controller: e.props.controller
                                    })
                                },
                                domain: function() {
                                    return k.createElement(f.default, {
                                        model: e.props.model,
                                        controller: e.props.controller
                                    })
                                },
                                evaluation: function() {
                                    return k.createElement(p.default, {
                                        id: function() {
                                            return e.props.model().id
                                        },
                                        dependent: function() {
                                            return e.model.dependent || ''
                                        },
                                        val: function() {
                                            return e.controller.getEvaluationValueForItem(e.id)
                                        },
                                        controller: e.props.controller,
                                        focusable: e.const(!1)
                                    })
                                },
                                distribution: function() {
                                    return k.createElement(b.default, {
                                        model: e.props.model,
                                        controller: e.props.controller
                                    })
                                },
                                visualization: function() {
                                    return k.createElement(x.default, {
                                        model: e.props.model,
                                        controller: e.props.controller
                                    })
                                },
                                ttest: function() {
                                    return k.createElement(w.default, {
                                        model: e.props.model,
                                        controller: e.props.controller
                                    })
                                },
                                stats: function() {
                                    return k.createElement(_.default, {
                                        model: e.props.model,
                                        controller: e.props.controller
                                    })
                                },
                                unresolved: function() {
                                    return k.createElement(h.default, {
                                        controller: e.props.controller
                                    })
                                }
                            }), k.createElement(A, {
                                predicate: e.bindFn(e.shouldShowClickableProperties)
                            }, function() {
                                return k.createElement(C.ClickableInfoView, {
                                    controller: function() {
                                        return e.props.controller()
                                    },
                                    model: function() {
                                        return e.model
                                    }
                                })
                            }), k.createElement(A, {
                                predicate: e.bindFn(e.shouldShowBrailleError)
                            }, function() {
                                return k.createElement('div', {
                                    tabindex: k.const(0),
                                    class: k.const('dcg-expression-braille-error'),
                                    'aria-roledescription': k.const('error'),
                                    'aria-label': function() {
                                        return e.controller.unpack(e.model.error)
                                    }
                                }, k.createElement('i', {
                                    class: k.const('dcg-icon-error')
                                }), function() {
                                    return e.controller.unpack(e.model.error)
                                })
                            }), k.createElement(A, {
                                predicate: e.bindFn(e.shouldShowSliderPrompt)
                            }, function() {
                                return k.createElement(y.default, {
                                    model: e.props.model,
                                    controller: e.props.controller
                                })
                            }))
                        })), k.createElement('span', {
                            class: k.const('dcg-tab dcg-action-drag dcg-action-icon-touch'),
                            handleevent: k.const('true'),
                            tapboundary: k.const('true'),
                            disablescroll: k.const('true'),
                            style: k.const('touch-action:none'),
                            onTapStart: this.bindFn(this.onDragPending)
                        }, k.createElement('span', {
                            class: k.const('dcg-num')
                        }, function() {
                            return e.model.displayIndex
                        }), k.createElement('div', {
                            class: k.const('dcg-tab-interior dcg-action-icon-mouse')
                        }, k.createElement(d.default, {
                            model: this.props.model,
                            controller: this.props.controller
                        })), k.createElement(I.SuggestedZoomView, {
                            model: this.props.model,
                            controller: this.props.controller
                        })), k.createElement(M.ExpressionEditActions, {
                            controller: this.props.controller,
                            id: function() {
                                return e.model.id
                            }
                        }))
                    }
                    ,
                    t.prototype.shouldShowFooter = function() {
                        return !!this.shouldShowBrailleError() || (!!this.shouldShowSliderPrompt() || (!!this.shouldShowClickableProperties() || 'none' !== this.getFooterType()))
                    }
                    ,
                    t.prototype.shouldShowClickableProperties = function() {
                        return !!this.controller.canAuthorClickableObjects() && (!!E.isClickableAllowed(this.model) && this.model.clickableInfo.enabled)
                    }
                    ,
                    t.prototype.getFooterType = function() {
                        return this.hasRegression() ? 'regression' : this.shouldShowLabelView() ? 'label' : this.hasSlider() ? 'slider' : this.hasDomain() ? 'domain' : this.isTTest() ? 'ttest' : this.isStats() ? 'stats' : this.controller.shouldShowEvaluationForItem(this.id) ? 'evaluation' : this.isToplevelDistribution() ? 'distribution' : this.isVisualization() ? 'visualization' : this.model.unresolved ? 'unresolved' : 'none'
                    }
                    ,
                    t.prototype.getFooterClass = function() {
                        return this.isFirstRender() ? this.const('dcg-expression-bottom dcg-indent-in-folder') : this.const('dcg-expression-bottom dcg-indent-in-folder dcg-fadein-bottom')
                    }
                    ,
                    t.prototype.onCreateSliders = function(e) {
                        this.controller.dispatch({
                            type: 'create-sliders-for-item',
                            id: this.id,
                            variables: e
                        })
                    }
                    ,
                    t.prototype.shouldShowLabelView = function() {
                        return r.get('labels') && E.isPointOrPointList(this.model)
                    }
                    ,
                    t.prototype.shouldShowSliderPrompt = function() {
                        return !!this.controller.areSlidersEnabled() && this.model.missingVariables.length > 0
                    }
                    ,
                    t.prototype.shouldShowBrailleError = function() {
                        return 'none' !== this.controller.getBrailleMode() && this.hasError()
                    }
                    ,
                    t.prototype.hasRegression = function() {
                        return !(!this.model.formula || !this.model.formula.is_regression)
                    }
                    ,
                    t.prototype.hasDomain = function() {
                        return E.hasDomain(this.model)
                    }
                    ,
                    t.prototype.isToplevelDistribution = function() {
                        return E.isToplevelDistribution(this.model)
                    }
                    ,
                    t.prototype.isVisualization = function() {
                        return E.isVisualization(this.model)
                    }
                    ,
                    t.prototype.isTTest = function() {
                        return E.isTTest(this.model)
                    }
                    ,
                    t.prototype.isStats = function() {
                        return E.isStats(this.model)
                    }
                    ,
                    t.prototype.hasSlider = function() {
                        return !!this.model.sliderExists
                    }
                    ,
                    t.prototype.getLabelOptions = function() {
                        return this.controller.getEvaluationLabelOptionsForItem(this.model.id)
                    }
                    ,
                    t.prototype.getAriaLabel = function(e) {
                        if (this.shouldShowLabelView()) {
                            var t;
                            t = this.model.label && '' !== this.model.label ? this.model.label : 'speech' === e ? this.controller.t('Label') : this.controller.raw('lbl');
                            return this.model.showLabel ? t : 'speech' === e ? this.controller.t('Hidden __label__', {
                                label: t
                            }) : this.controller.raw('h __label__', {
                                label: t
                            })
                        }
                        return 'speech' === e ? this.controller.t('Expression __index__', {
                            index: this.model.displayIndex
                        }) : this.controller.raw('eq__index__', {
                            index: this.model.displayIndex
                        })
                    }
                    ,
                    t.prototype.getFormulaAria = function() {
                        var e = this.model.formula
                        , t = '';
                        if (!e)
                            return t;
                        if (E.isEmpty(this.model))
                            return t;
                        if (this.controller.shouldShowEvaluationForItem(this.id)) {
                            t = 'equals ';
                            var r = e.zero_values && e.zero_values.length ? e.zero_values[0].val : e.constant_value;
                            Array.isArray(r) ? t += r.length + ' element list.' : t += S.truncatedAriaLabel(r, this.getLabelOptions())
                        } else
                            e.error && !this.shouldShowSliderPrompt() ? t = this.controller.unpack(e.error) : E.isToplevelDistribution(this.model) ? t = this.controller.t('is distribution. ') : this.isTTest() && (t = this.controller.t('is T test. To access statistics, press Tab.'));
                        if (this.model.shouldGraph && (e.is_graphable || e.is_regression)) {
                            e.is_graphable && e.is_regression ? t += this.controller.t('Has graph and regression. To access statistics, press Tab.') : e.is_regression ? t += this.controller.t('Has regression. To access statistics, press Tab.') : t += this.controller.t('Has graph.');
                            var n = this.controller.getAudioGraph();
                            n && n.agNavigator.canTrace(this.model) && (i.IS_APPLE ? t += this.controller.t(' To audio trace, press OPTION+T.') : t += this.controller.t(' To audio trace, press ALT+T.'))
                        }
                        return t
                    }
                    ,
                    t.prototype.handleBraillePressedKey = function(e) {
                        var t = o.lookup(e);
                        if (t)
                            if ('Esc' === t)
                                u.default(),
                                this.hasSlider() && this.controller.dispatch({
                                    type: 'set-focus-location',
                                    location: {
                                        type: 'slider-thumb',
                                        id: this.model.id
                                    }
                                });
                            else if ('Up' === t || 'Down' === t || 'Enter' === t)
                                this.controller.dispatch({
                                    type: 'on-special-key-pressed',
                                    key: t
                                });
                            else if ('Del' === t || 'Backspace' === t) {
                                var r = L.getFocusedBrailleElement();
                                E.isEmpty(this.model) && L.brailleInputIsEmpty(r) && (this.controller.dispatch({
                                    type: 'on-special-key-pressed',
                                    key: 'Del' === t ? 'Delete' : t
                                }),
                                e.preventDefault(),
                                e.stopPropagation())
                            }
                    }
                    ,
                    t.prototype.handlePressedKey = function(e, t) {
                        var r = l.default.getFocusedMathquill();
                        if (r) {
                            if ('Esc' === e)
                                return u.default(),
                                void (this.hasSlider() && this.controller.dispatch({
                                    type: 'set-focus-location',
                                    location: {
                                        type: 'slider-thumb',
                                        id: this.model.id
                                    }
                                }));
                            if ('Up' === e || 'Down' === e) {
                                return l.default.applyArrowKeyAndReturnIfWasAtBounds(r, e, t) ? this.controller.dispatch({
                                    type: 'on-special-key-pressed',
                                    key: e
                                }) : void 0
                            }
                            if ('Delete' === e || 'Backspace' === e) {
                                if (E.isEmpty(this.model))
                                    return this.controller.dispatch({
                                        type: 'on-special-key-pressed',
                                        key: e
                                    })
                            } else if ('Enter' === e)
                                return t && (t.preventDefault(),
                                t.stopPropagation()),
                                this.controller.dispatch({
                                    type: 'on-special-key-pressed',
                                    key: 'Enter'
                                });
                            r.keystroke(e, t),
                            this.handleLatexChanged(r.latex())
                        }
                    }
                    ,
                    t.prototype.handleLatexChanged = function(e) {
                        e !== this.model.latex && this.controller.dispatch({
                            type: 'set-item-latex',
                            id: this.id,
                            latex: e
                        })
                    }
                    ,
                    t.prototype.doesNodeBelongToSliderLimit = function(e) {
                        return !!e && (!!this.rootNode.contains(e) && !!s(e).closest('[data-dcg-limit]').length)
                    }
                    ,
                    t.prototype.handleMQFocusedChanged = function(e, t) {
                        e ? this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'expression',
                                id: this.id
                            }
                        }) : this.doesNodeBelongToSliderLimit(t.relatedTarget) || this.controller.dispatch({
                            type: 'blur-focus-location',
                            location: {
                                type: 'expression',
                                id: this.id
                            }
                        })
                    }
                    ,
                    t.prototype.onMouseSelect = function(e) {
                        'keyboard' !== e.device && ('dcg-tap' === e.type && 'mouse' === e.device || 'dcg-tapstart' === e.type && 'touch' === e.device || e.wasHandled() || (e.handle(),
                        this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'expression',
                                id: this.id
                            }
                        })))
                    }
                    ,
                    t.prototype.isFocused = function() {
                        var e = this.controller.getFocusLocation();
                        return !!e && ('expression' === e.type && e.id === this.id)
                    }
                    ,
                    t.prototype.isSliderThumbFocused = function() {
                        var e = this.controller.getFocusLocation();
                        return !!e && ('slider-thumb' === e.type && e.id === this.id)
                    }
                    ,
                    t.prototype.hasError = function() {
                        return !!this.model.error && !E.isEmpty(this.model)
                    }
                    ,
                    t
                }(a.default);
                t.default = O
            }),
            r('loadcss!expressions/smart_textarea', function() {}),
            r('expressions/smart_textarea', ['require', 'exports', 'tslib', 'keys', 'browser', 'dcgview', 'jquery', 'lib/conditional_blur', 'jquery.handleevent', 'loadcss!./smart_textarea'], function(e, t, r, n, i, o, s, a) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var l = o.Components.Textarea
                , c = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return o.createElement('div', {
                            class: o.const('dcg-smart-textarea-container')
                        }, o.createElement('div', {
                            class: o.const('dcg-displayTextarea dcg-fixed-width-element'),
                            didMount: this.bindFn(this.didMountDisplay)
                        }), o.createElement(l, {
                            class: function() {
                                return {
                                    'dcg-do-blur': !0,
                                    'dcg-fixed-width-element': !0,
                                    'dcg-smart-textarea': !0,
                                    'dcg-empty': !e.props.text()
                                }
                            },
                            'aria-label': function() {
                                return e.props.ariaLabel ? e.props.ariaLabel() : void 0
                            },
                            placeholder: this.props.placeholder,
                            readonly: function() {
                                return !!e.props.readonly() || void 0
                            },
                            value: this.props.text,
                            onInput: this.props.onInput,
                            didMount: this.bindFn(this.didMountTextarea),
                            onKeydown: this.bindFn(this.onKeydownEvent)
                        }))
                    }
                    ,
                    t.prototype.getDisplayTextHTML = function() {
                        var e = this.props.text() || '';
                        if (e = e.replace(/</g, '&lt;').replace(/>/g, '&gt;'),
                        !this.props.showLinks())
                            return e;
                        var t = /(\b(https?|ftp):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi;
                        return e = e.replace(t, '<a href=\'$1\' target =\'_blank\'>$1</a>')
                    }
                    ,
                    t.prototype.willUnmount = function() {
                        this.textareaNode = void 0
                    }
                    ,
                    t.prototype.didMountDisplay = function(e) {
                        this.displayNode = e,
                        s(e).on('touchend', function(e) {
                            e.preventDefault()
                        }),
                        s(e).on('dcg-tap dcg-tapstart', 'a', function(e) {
                            e.handle()
                        }),
                        this.renderDisplayText()
                    }
                    ,
                    t.prototype.didMountTextarea = function(e) {
                        var t = this;
                        this.textareaNode = e,
                        s(e).on('dcg-tapstart', function(e) {
                            e.handle()
                        }),
                        s(e).on('focusin focusout', function() {
                            return t.onFocusEvent()
                        }),
                        this.updateFocused()
                    }
                    ,
                    t.prototype.didUpdate = function() {
                        this.updateFocused(),
                        this.renderDisplayText()
                    }
                    ,
                    t.prototype.onFocusEvent = function() {
                        if (this.textareaNode) {
                            var e = document.activeElement === this.textareaNode;
                            this.shouldBeFocused() !== e && this.props.onFocusChange(e)
                        }
                    }
                    ,
                    t.prototype.renderDisplayText = function() {
                        if (this.displayNode) {
                            var e = this.getDisplayTextHTML();
                            this.lastDisplayTextHTML !== e && (this.lastDisplayTextHTML = e,
                            this.displayNode.innerHTML = e)
                        }
                    }
                    ,
                    t.prototype.isFocused = function() {
                        return document.activeElement === this.textareaNode
                    }
                    ,
                    t.prototype.shouldBeFocused = function() {
                        return this.props.shouldFocus()
                    }
                    ,
                    t.prototype.updateFocused = function() {
                        if (this.textareaNode) {
                            var e = this.isFocused()
                            , t = this.shouldBeFocused();
                            if (e !== t)
                                if (t) {
                                    if (i.IS_IPAD && i.IS_IN_IFRAME)
                                        return;
                                    this.textareaNode.focus(),
                                    this.textareaNode.selectionStart = this.textareaNode.selectionEnd = this.textareaNode.value.length
                                } else
                                    this.textareaNode.blur()
                        }
                    }
                    ,
                    t.prototype.onKeydownEvent = function(e) {
                        var t = this.textareaNode;
                        if (t) {
                            var r = n.lookup(e);
                            if (this.props.readonly() && void 0 !== this.props.readonlyAction)
                                return void (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey || r !== n.ENTER && r !== n.SPACEBAR || (e.preventDefault(),
                                this.props.readonlyAction()));
                            r !== n.ENTER || e.metaKey ? r === n.ESCAPE ? a.default() : r === n.UP ? 0 === t.selectionStart && 0 === t.selectionEnd && (e.preventDefault(),
                            this.props.onSpecialKey('Up')) : r === n.DOWN ? t.selectionStart === t.value.length && t.selectionEnd === t.value.length && (e.preventDefault(),
                            this.props.onSpecialKey('Down')) : r === n.BACKSPACE ? 0 === t.value.length && (e.preventDefault(),
                            this.props.onSpecialKey('Backspace')) : r === n.DELETE && 0 === t.value.length && (e.preventDefault(),
                            this.props.onSpecialKey('Delete')) : (e.preventDefault(),
                            this.props.onSpecialKey('Enter')),
                            this.props.onKeydown && this.props.onKeydown(e)
                        }
                    }
                    ,
                    t
                }(o.Class);
                t.default = c
            }),
            r('expressions/text_view', ['require', 'exports', 'tslib', './abstract-item-view', './smart_textarea', 'dcgview', './expression-edit-actions', 'jquery.handleevent'], function(e, t, r, n, i, o, s) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var a = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.didMount = function() {
                        this.onItemViewMounted()
                    }
                    ,
                    t.prototype.willUnmount = function() {
                        this.onItemViewUnmounted()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return o.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-do-not-blur': !0,
                                    'dcg-expressionitem': !0,
                                    'dcg-expressiontext': !0,
                                    'dcg-inFolder': !!e.model.folderId,
                                    'dcg-selected': !!e.controller.isItemSelected(e.id),
                                    'dcg-dragging': !!e.controller.isItemBeingDragged(e.id),
                                    'dcg-author-ide': e.controller.isAuthorIDE()
                                }
                            },
                            'expr-id': function() {
                                return e.model.id
                            },
                            onTapStart: this.bindFn(this.onMouseSelect),
                            onTap: this.bindFn(this.onMouseSelect)
                        }, o.createElement('div', {
                            class: o.const('dcg-fade-container')
                        }, o.createElement('div', {
                            class: o.const('dcg-main')
                        }, o.createElement(i.default, {
                            shouldFocus: this.bindFn(this.isFocused),
                            text: function() {
                                return e.model.text
                            },
                            placeholder: function() {
                                return e.controller.t('Enter a note...')
                            },
                            showLinks: function() {
                                return e.controller.areLinksEnabled()
                            },
                            onInput: this.bindFn(this.onInput),
                            onFocusChange: this.bindFn(this.onFocusChange),
                            onSpecialKey: this.bindFn(this.onSpecialKey),
                            readonly: function() {
                                return e.controller.isInEditListMode()
                            },
                            readonlyAction: this.bindFn(this.exitEditListMode)
                        })), o.createElement('i', {
                            class: o.const('dcg-icon-remove dcg-top-level-delete'),
                            handleEvent: o.const('true'),
                            onTap: this.bindFn(this.onDelete)
                        })), o.createElement('span', {
                            class: o.const('dcg-tab dcg-action-drag'),
                            handleevent: o.const('true'),
                            tapboundary: o.const('true'),
                            disablescroll: o.const('true'),
                            style: o.const('touch-action:none'),
                            onTapStart: this.bindFn(this.onDragPending)
                        }, o.createElement('span', {
                            class: o.const('dcg-num')
                        }, function() {
                            return e.model.displayIndex
                        }), o.createElement('div', {
                            class: o.const('dcg-tab-interior')
                        }), o.createElement('i', {
                            class: o.const('dcg-icon-text')
                        })), o.createElement(s.ExpressionEditActions, {
                            controller: this.props.controller,
                            id: function() {
                                return e.model.id
                            }
                        }))
                    }
                    ,
                    t.prototype.onInput = function(e) {
                        this.controller.dispatch({
                            type: 'set-note-text',
                            id: this.id,
                            text: e
                        })
                    }
                    ,
                    t.prototype.onFocusChange = function(e) {
                        e ? this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'text',
                                id: this.id
                            }
                        }) : this.controller.dispatch({
                            type: 'blur-focus-location',
                            location: {
                                type: 'text',
                                id: this.id
                            }
                        })
                    }
                    ,
                    t.prototype.onSpecialKey = function(e) {
                        return this.controller.dispatch({
                            type: 'on-special-key-pressed',
                            key: e
                        })
                    }
                    ,
                    t.prototype.isFocused = function() {
                        var e = this.controller.getFocusLocation();
                        return !(!e || 'text' !== e.type || e.id !== this.id)
                    }
                    ,
                    t
                }(n.default);
                t.default = a
            }),
            r('expressions/tables/table_icon_view', ['require', 'exports', 'tslib', 'dcgview', 'dcgview-helpers/tooltipped-error', '../circular-icon-view', 'jquery.handleevent'], function(e, t, r, n, i, o) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var s = n.Components.SwitchUnion
                , a = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.model = this.props.model(),
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: n.const('dcg-table-icon-container')
                        }, s(this.bindFn(this.typeOfIcon), {
                            error: function() {
                                return n.createElement(i.TooltippedError, {
                                    error: function() {
                                        return e.controller.unpack(e.model.error)
                                    },
                                    gravity: e.const('se')
                                })
                            },
                            none: function() {
                                return n.createElement('span', null)
                            },
                            icon: function() {
                                return n.createElement('div', {
                                    class: n.const('dcg-circular-icon-container'),
                                    role: n.const('button'),
                                    handleevent: n.const('true'),
                                    onTap: function(t) {
                                        if (!t.wasHandled('dragdrop') && !t.wasLongheld())
                                            return e.myOptionsOpen() ? e.toggleOptions() : e.controller.isInEditListMode() ? e.toggleOptions() : void e.toggleGraphShown()
                                    },
                                    didMount: function(t) {
                                        return e.rootElt = t
                                    },
                                    onLongHold: function(t) {
                                        t.handle('dcg-longhold'),
                                        t.handle('dcg-tap'),
                                        e.toggleOptions()
                                    }
                                }, n.createElement(o.CircularIconView, {
                                    iconType: e.bindFn(e.getIcon),
                                    backgroundColor: function() {
                                        return e.model.color
                                    }
                                }))
                            }
                        }))
                    }
                    ,
                    t.prototype.myOptionsOpen = function() {
                        var e = this.controller.getOpenItemMenu();
                        return !!e && e.model === this.model
                    }
                    ,
                    t.prototype.toggleOptions = function() {
                        this.controller.dispatch({
                            type: 'toggle-item-settings-menu',
                            menu: {
                                type: 'table-column',
                                model: this.model,
                                icon: this.rootElt,
                                focusFirstOption: !1
                            }
                        })
                    }
                    ,
                    t.prototype.didMountRoot = function(e) {
                        this.rootElt = e
                    }
                    ,
                    t.prototype.toggleGraphShown = function() {
                        this.controller.dispatch({
                            type: 'toggle-tablecolumn-hidden',
                            tableId: this.model.table.id,
                            columnId: this.model.id
                        })
                    }
                    ,
                    t.prototype.hasError = function() {
                        return !!this.model.error
                    }
                    ,
                    t.prototype.getIcon = function() {
                        return this.model.shouldGraph ? this.controller.isInEditListMode() ? 'none' : this.model.points && this.model.lines ? 'table-points-and-lines' : this.model.points && !this.model.lines ? 'table-points' : !this.model.points && this.model.lines ? 'table-lines' : 'none' : 'hidden'
                    }
                    ,
                    t.prototype.typeOfIcon = function() {
                        return '' === this.model.latex ? 'none' : this.controller.getGraphSettings().config.graphpaper ? this.model.error ? 'error' : 0 === this.model.index ? 'none' : 'icon' : 'none'
                    }
                    ,
                    t
                }(n.Class);
                t.default = a
            }),
            r('expressions/tables/header-view', ['require', 'exports', 'tslib', 'keys', 'jquery', 'browser', 'dcgview', './table_icon_view', 'dcgview-helpers/mathquill-view', 'dcgview-helpers/static-mathquill-view', 'underscore', 'graphing-calc/models/table', 'core/lib/dragmode', 'dcgview-helpers/mathquill-braille-wrapper'], function(e, t, r, n, i, o, s, a, l, c, u, d, p, h) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var f = s.Components.If
                , g = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.model = this.props.model(),
                        this.controller = this.props.controller(),
                        this.table = this.model.table
                    }
                    ,
                    t.prototype.isRightSide = function() {
                        return this.lookupCellPosition().column >= this.table.columnModels.length - 1
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return s.createElement('div', {
                            role: s.const('columnheader'),
                            class: function() {
                                return {
                                    'dcg-cell': !0,
                                    'dcg-table-header': !0,
                                    'dcg-do-not-blur': !0,
                                    'dcg-left': 0 === e.model.index,
                                    'dcg-right': e.isRightSide(),
                                    'dcg-selected': e.shouldFocus(),
                                    'dcg-error': !!e.model.error
                                }
                            },
                            index: function() {
                                return e.model.index
                            },
                            onTapStart: this.bindFn(this.focusThisCell)
                        }, s.createElement('div', {
                            class: s.const('dcg-inner-border')
                        }), s.createElement(f, {
                            predicate: function() {
                                return !e.isRightSide()
                            }
                        }, function() {
                            return s.createElement(a.default, {
                                model: e.props.model,
                                controller: e.props.controller
                            })
                        }), s.createElement(f, {
                            predicate: function() {
                                return !e.controller.isInEditListMode()
                            }
                        }, function() {
                            return s.createElement(h.default, {
                                latex: function() {
                                    return e.model.latex || ''
                                },
                                tooltipOptions: function() {
                                    return {
                                        gravity: 's'
                                    }
                                },
                                brailleShouldFocus: e.bindFn(e.shouldFocus),
                                ariaLabel: function() {
                                    return e.getAriaLabel('braille')
                                },
                                onBrailleInput: function(t) {
                                    return e.handleLatexChanged(t)
                                },
                                controller: e.props.controller,
                                onBrailleFocusedChanged: e.bindFn(e.handleMQFocusedChanged),
                                selectOnFocus: e.const(!0),
                                onBrailleKeydown: e.bindFn(e.handleKeydownOnBrailleInput)
                            }, s.createElement(l.default, {
                                latex: function() {
                                    return e.model.latex || ''
                                },
                                isFocused: e.bindFn(e.shouldFocus),
                                capExpressionSize: function() {
                                    return e.controller.getCapExpressionSize()
                                },
                                config: e.const({}),
                                getAriaLabel: function() {
                                    return e.getAriaLabel('speech')
                                },
                                getAriaPostLabel: e.bindFn(e.getAriaPostLabel),
                                hasError: e.const(!1),
                                onUserPressedKey: function(t, r) {
                                    return e.handlePressedKey(t, r)
                                },
                                onUserChangedLatex: function(t) {
                                    return e.handleLatexChanged(t)
                                },
                                onExpressionSizeExceeded: function() {
                                    return e.controller.dispatch({
                                        type: 'expression-size-exceeded'
                                    })
                                },
                                onFocusedChanged: e.bindFn(e.handleMQFocusedChanged),
                                selectOnFocus: e.const(!0),
                                needsSystemKeypad: function() {
                                    return !e.controller.isKeypadEnabled()
                                }
                            }, s.createElement('span', {
                                class: s.const('dcg-math-field dcg-cell-math-content')
                            })))
                        }), s.createElement(f, {
                            predicate: function() {
                                return e.controller.isInEditListMode()
                            }
                        }, function() {
                            return s.createElement(h.default, {
                                latex: function() {
                                    return e.model.latex || ''
                                },
                                tooltipOptions: function() {
                                    return {
                                        gravity: 's'
                                    }
                                },
                                ariaLabel: function() {
                                    return e.getAriaLabel('braille')
                                },
                                onBrailleInput: function(t) {
                                    return e.handleLatexChanged(t)
                                },
                                controller: e.props.controller,
                                tabindex: e.const(-1),
                                isStatic: e.const(!0),
                                brailleShouldFocus: e.bindFn(e.shouldFocusNonEditCell),
                                onBrailleFocusedChanged: e.bindFn(e.handleMQFocusedChanged)
                            }, s.createElement(c.default, {
                                latex: function() {
                                    return e.model.latex || ''
                                },
                                getAriaLabel: function() {
                                    return e.getAriaLabel('speech')
                                }
                            }, s.createElement('span', {
                                class: s.const('dcg-math-field dcg-cell-math-content'),
                                role: s.const('textbox'),
                                'aria-roledescription': s.const('cell'),
                                'aria-readonly': s.const('true'),
                                tabindex: s.const('-1')
                            })))
                        }), s.createElement(f, {
                            predicate: function() {
                                return e.model.dragMode !== p.DragMode.NONE && !e.model.error
                            }
                        }, function() {
                            return s.createElement('span', {
                                class: s.const('dcg-drag-icon'),
                                'dcg-drag-mode': function() {
                                    return e.model.dragMode
                                },
                                style: function() {
                                    return {
                                        color: e.model.color
                                    }
                                }
                            }, s.createElement('i', {
                                class: function() {
                                    return {
                                        'dcg-icon-move': e.model.dragMode === p.DragMode.XY,
                                        'dcg-icon-move-horizontal': e.model.dragMode === p.DragMode.X,
                                        'dcg-icon-move-vertical': e.model.dragMode === p.DragMode.Y
                                    }
                                }
                            }))
                        }), s.createElement('div', {
                            class: s.const('dcg-empty-line')
                        }), s.createElement(f, {
                            predicate: function() {
                                return e.isRightSide()
                            }
                        }, function() {
                            return s.createElement('span', {
                                class: s.const('dcg-fade-right')
                            })
                        }))
                    }
                    ,
                    t.prototype.focusThisCell = function(e) {
                        e.wasHandled() || (e.handle(),
                        this.shouldFocus() || this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'table',
                                id: this.table.id,
                                location: this.lookupCellPosition()
                            }
                        }))
                    }
                    ,
                    t.prototype.lookupCellPosition = function() {
                        return {
                            row: 0,
                            column: this.model.index
                        }
                    }
                    ,
                    t.prototype.getAriaLabel = function(e) {
                        var t = this.lookupCellPosition();
                        return 'speech' === e ? this.controller.t('Column header __column__', {
                            column: t.column + 1
                        }) : this.controller.raw('h__column__', {
                            column: t.column + 1
                        })
                    }
                    ,
                    t.prototype.getAriaPostLabel = function() {
                        var e = ''
                        , t = this.model;
                        return t.shouldGraph && (t.points || t.lines) && !d.isColumnEmpty(t) && (e = this.controller.t('Has graph.'),
                        o.IS_APPLE ? e += ' ' + this.controller.t('To audio trace, press OPTION+T.') : e += ' ' + this.controller.t(' To audio trace, press ALT+T.')),
                        e
                    }
                    ,
                    t.prototype.handlePressedKey = function(e, t) {
                        var r = l.default.getFocusedMathquill();
                        if (r) {
                            l.default.handleKeystrokeAndDecideIfSpecialEvent(r, e, t) ? this.controller.dispatch({
                                type: 'navigate-table-by-key',
                                id: this.table.id,
                                key: e
                            }) : this.handleLatexChanged(r.latex())
                        }
                    }
                    ,
                    t.prototype.handleKeydownOnBrailleInput = function(e) {
                        var t = n.lookup(e);
                        if (t) {
                            var r = 'Enter' === t || 'Up' === t || 'Down' === t
                            , o = h.getFocusedBrailleElement()
                            , s = o && 'Left' === t && 0 === o.selectionStart || 'Right' === t && o.selectionStart === i(o).val().length
                            , a = 0 === this.model.latex.length && h.brailleInputIsEmpty(o)
                            , l = 'Del' === t || 'Backspace' === t;
                            (r || s || l && a) && (this.controller.dispatch({
                                type: 'navigate-table-by-key',
                                id: this.table.id,
                                key: 'Del' === t ? 'Delete' : t
                            }),
                            e.preventDefault())
                        }
                    }
                    ,
                    t.prototype.handleLatexChanged = function(e) {
                        this.model.latex !== e && this.controller.dispatch({
                            type: 'set-tablecell-latex',
                            tableId: this.table.id,
                            cell: this.lookupCellPosition(),
                            latex: e
                        })
                    }
                    ,
                    t.prototype.shouldFocus = function() {
                        return !this.controller.isInEditListMode() && u.isEqual(this.lookupCellPosition(), d.getSelectedCell(this.table))
                    }
                    ,
                    t.prototype.shouldFocusNonEditCell = function() {
                        return u.isEqual(this.lookupCellPosition(), d.getSelectedCell(this.table))
                    }
                    ,
                    t.prototype.isNodeWithinTableCell = function(e) {
                        if (!e)
                            return !1;
                        if (0 === i(e).closest('.dcg-cell').length)
                            return !1;
                        var t = this.controller.getItemRootNodeById(this.table.id);
                        return !!t && i.contains(t, e)
                    }
                    ,
                    t.prototype.handleMQFocusedChanged = function(e, t) {
                        e ? this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'table',
                                id: this.table.id,
                                location: this.lookupCellPosition()
                            }
                        }) : this.isNodeWithinTableCell(t.relatedTarget) || this.controller.dispatch({
                            type: 'blur-focus-location',
                            location: {
                                type: 'table',
                                id: this.table.id,
                                location: this.lookupCellPosition()
                            }
                        })
                    }
                    ,
                    t
                }(s.Class);
                t.default = g
            }),
            r('expressions/tables/cell-view', ['require', 'exports', 'tslib', 'keys', 'dcgview', 'jquery', 'dcgview-helpers/mathquill-view', 'dcgview-helpers/static-mathquill-view', 'underscore', 'graphing-calc/models/table', '../../dcgview-helpers/tooltipped-error', 'lib/conditional_blur', 'dcgview-helpers/mathquill-braille-wrapper'], function(e, t, r, n, i, o, s, a, l, c, u, d, p) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var h = i.Components.If
                , f = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.model = this.props.model(),
                        this.controller = this.props.controller(),
                        this.table = this.model.column.table
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return i.createElement('div', {
                            role: i.const('gridcell'),
                            class: function() {
                                return {
                                    'dcg-cell': !0,
                                    'dcg-do-not-blur': !0,
                                    'dcg-empty': e.isEmpty(),
                                    'dcg-non-editable': !!e.model.column.disabled,
                                    'dcg-error': !!e.hasError(),
                                    'dcg-selected': e.shouldFocus()
                                }
                            },
                            onTapStart: this.bindFn(this.focusThisCell)
                        }, i.createElement('div', {
                            class: i.const('dcg-inner-border')
                        }), i.createElement(h, {
                            predicate: this.bindFn(this.hasError)
                        }, function() {
                            return i.createElement('span', {
                                class: i.const('dcg-table-icon-error-container')
                            }, i.createElement(u.TooltippedError, {
                                error: e.bindFn(e.getErrorMessage),
                                gravity: e.const('se'),
                                size: e.const('small')
                            }))
                        }), i.createElement(h, {
                            predicate: function() {
                                return !!e.model.column.disabled || e.controller.isInEditListMode()
                            }
                        }, function() {
                            return i.createElement(p.default, {
                                latex: function() {
                                    return e.getValue()
                                },
                                tooltipOptions: function() {
                                    return {
                                        gravity: 's'
                                    }
                                },
                                brailleShouldFocus: e.bindFn(e.shouldFocusReadonlyCell),
                                ariaLabel: function() {
                                    return e.getAriaLabel('braille')
                                },
                                controller: e.props.controller,
                                tabindex: function() {
                                    return e.controller.isInEditListMode() ? -1 : 0
                                },
                                isStatic: e.const(!0),
                                onBrailleFocusedChanged: e.bindFn(e.handleFocusedChanged),
                                onBrailleKeydown: function(t) {
                                    return e.handleKeydownOnReadonlyCell(t),
                                    !0
                                }
                            }, i.createElement(a.default, {
                                getAriaLabel: function() {
                                    return e.getAriaLabel('speech')
                                },
                                latex: function() {
                                    return e.getValue()
                                }
                            }, i.createElement('span', {
                                class: i.const('dcg-math-field dcg-cell-math-content dcg-mathquill-input-span'),
                                role: i.const('textbox'),
                                'aria-roledescription': i.const('computed cell'),
                                'aria-readonly': i.const('true'),
                                tabindex: function() {
                                    return e.controller.isInEditListMode() || e.isEmpty() ? -1 : 0
                                },
                                onKeyDown: e.bindFn(e.handleKeydownOnReadonlyCell),
                                manageFocus: e.const({
                                    shouldBeFocused: e.bindFn(e.shouldFocusReadonlyCell),
                                    onFocusedChanged: e.bindFn(e.handleFocusedChanged)
                                })
                            })))
                        }), i.createElement(h, {
                            predicate: function() {
                                return !e.model.column.disabled && !e.controller.isInEditListMode()
                            }
                        }, function() {
                            return i.createElement(p.default, {
                                latex: function() {
                                    return e.getValue()
                                },
                                tooltipOptions: function() {
                                    return {
                                        gravity: 's'
                                    }
                                },
                                brailleShouldFocus: e.bindFn(e.shouldFocusEditableCell),
                                ariaLabel: function() {
                                    return e.getAriaLabel('braille')
                                },
                                onBrailleInput: function(t) {
                                    return e.handleLatexChanged(t)
                                },
                                controller: e.props.controller,
                                onBrailleFocusedChanged: e.bindFn(e.handleFocusedChanged),
                                onBrailleKeydown: e.bindFn(e.handleKeydownOnBrailleInput),
                                selectOnFocus: e.const(!0)
                            }, i.createElement(s.default, {
                                latex: function() {
                                    return e.getValue()
                                },
                                isFocused: e.bindFn(e.shouldFocusEditableCell),
                                capExpressionSize: function() {
                                    return e.controller.getCapExpressionSize()
                                },
                                config: e.const({}),
                                getAriaLabel: function() {
                                    return e.getAriaLabel('speech')
                                },
                                getAriaPostLabel: e.bindFn(e.getErrorMessage),
                                hasError: e.const(!1),
                                onUserPressedKey: function(t, r) {
                                    return e.handlePressedKey(t, r)
                                },
                                onUserChangedLatex: function(t) {
                                    return e.handleLatexChanged(t)
                                },
                                onExpressionSizeExceeded: function() {
                                    return e.controller.dispatch({
                                        type: 'expression-size-exceeded'
                                    })
                                },
                                onFocusedChanged: e.bindFn(e.handleFocusedChanged),
                                selectOnFocus: e.const(!0),
                                needsSystemKeypad: function() {
                                    return !e.controller.isKeypadEnabled()
                                }
                            }, i.createElement('span', {
                                class: i.const('dcg-math-field dcg-cell-math-content')
                            })))
                        }), i.createElement('div', {
                            class: i.const('dcg-empty-line')
                        }))
                    }
                    ,
                    t.prototype.focusThisCell = function(e) {
                        e.wasHandled() || (e.handle(),
                        this.shouldFocus() || this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'table',
                                id: this.table.id,
                                location: this.lookupCellPosition()
                            }
                        }))
                    }
                    ,
                    t.prototype.handlePressedKey = function(e, t) {
                        var r = s.default.getFocusedMathquill();
                        if (r) {
                            var i = s.default.handleKeystrokeAndDecideIfSpecialEvent(r, e, t);
                            e === n.ESCAPE && d.default(),
                            i ? this.controller.dispatch({
                                type: 'navigate-table-by-key',
                                id: this.table.id,
                                key: e
                            }) : this.handleLatexChanged(r.latex())
                        }
                    }
                    ,
                    t.prototype.handleKeydownOnBrailleInput = function(e) {
                        var t = n.lookup(e);
                        if (t) {
                            t === n.ESCAPE && d.default();
                            var r = 'Enter' === t || 'Up' === t || 'Down' === t
                            , i = p.getFocusedBrailleElement()
                            , s = i && 'Left' === t && 0 === i.selectionStart || 'Right' === t && i.selectionStart === o(i).val().length
                            , a = 'Del' === t || 'Backspace' === t;
                            (r || s || a && 0 === this.getValue().length) && (this.controller.dispatch({
                                type: 'navigate-table-by-key',
                                id: this.table.id,
                                key: 'Del' === t ? 'Delete' : t
                            }),
                            e.preventDefault())
                        }
                    }
                    ,
                    t.prototype.handleKeydownOnReadonlyCell = function(e) {
                        var t = n.lookup(e);
                        'Tab' !== t && (e.preventDefault(),
                        'Esc' === t && d.default(),
                        t && this.controller.dispatch({
                            type: 'navigate-table-by-key',
                            id: this.table.id,
                            key: t
                        }))
                    }
                    ,
                    t.prototype.handleLatexChanged = function(e) {
                        this.getValue() !== e && this.controller.dispatch({
                            type: 'set-tablecell-latex',
                            tableId: this.table.id,
                            cell: this.lookupCellPosition(),
                            latex: e
                        })
                    }
                    ,
                    t.prototype.shouldFocus = function() {
                        return l.isEqual(this.lookupCellPosition(), c.getSelectedCell(this.table))
                    }
                    ,
                    t.prototype.shouldFocusReadonlyCell = function() {
                        return !this.controller.isInEditListMode() && !!this.model.column.disabled && this.shouldFocus()
                    }
                    ,
                    t.prototype.shouldFocusEditableCell = function() {
                        return !this.model.column.disabled && this.shouldFocus()
                    }
                    ,
                    t.prototype.isNodeWithinTableCell = function(e) {
                        if (!e)
                            return !1;
                        if (0 === o(e).closest('.dcg-cell').length)
                            return !1;
                        var t = this.controller.getItemRootNodeById(this.table.id);
                        return !!t && o.contains(t, e)
                    }
                    ,
                    t.prototype.handleFocusedChanged = function(e, t) {
                        e ? this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'table',
                                id: this.table.id,
                                location: this.lookupCellPosition()
                            }
                        }) : this.isNodeWithinTableCell(t.relatedTarget) || this.controller.dispatch({
                            type: 'blur-focus-location',
                            location: {
                                type: 'table',
                                id: this.table.id,
                                location: this.lookupCellPosition()
                            }
                        })
                    }
                    ,
                    t.prototype.lookupCellPosition = function() {
                        return {
                            row: this.model.row.index,
                            column: this.model.column.index
                        }
                    }
                    ,
                    t.prototype.getPackedError = function() {
                        return this.model.column.packedErrors[this.model.row.index - 1]
                    }
                    ,
                    t.prototype.hasError = function() {
                        return !!this.getPackedError()
                    }
                    ,
                    t.prototype.getErrorMessage = function() {
                        var e = this.getPackedError();
                        return e ? this.controller.unpack(e) : ''
                    }
                    ,
                    t.prototype.getValue = function() {
                        var e = this.model.column.index
                        , t = this.model.row.index - 1;
                        return this.model.column.disabled ? this.model.column.computedValues[t] || '' : this.table.columns[e].values[t] || ''
                    }
                    ,
                    t.prototype.isEmpty = function() {
                        var e = p.getFocusedBrailleElement();
                        return '' === this.getValue() && p.brailleInputIsEmpty(e)
                    }
                    ,
                    t.prototype.getAriaLabel = function(e) {
                        var t = this.lookupCellPosition()
                        , r = t.row
                        , n = t.column + 1;
                        return 'speech' === e ? this.controller.t('Row __row__ Col __column__', {
                            row: r.toString(),
                            column: n.toString()
                        }) : this.controller.raw('r__row__c__column__', {
                            row: r.toString(),
                            column: n.toString()
                        })
                    }
                    ,
                    t
                }(i.Class);
                t.default = f
            }),
            r('loadcss!expressions/table-view', function() {}),
            r('expressions/table-view', ['require', 'exports', 'tslib', 'keys', 'lib/aria', './abstract-item-view', 'dcgview', './tables/header-view', './tables/cell-view', 'graphing-calc/models/table', 'vendor/mathquill', 'jquery', './expression-edit-actions', 'expressions/measure-expressions', './suggested-zoom-view', 'main/manage-focus-helper', 'loadcss!./table-view', 'jquery.handleevent'], function(e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var m = s.Components.For
                , y = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.didMount = function() {
                        this.onItemViewMounted()
                    }
                    ,
                    t.prototype.willUnmount = function() {
                        this.onItemViewUnmounted()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return s.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-expressionitem': !0,
                                    'dcg-expressiontable': !0,
                                    'dcg-inFolder': !!e.model.folderId,
                                    'dcg-selected': !!e.controller.isItemSelected(e.id),
                                    'dcg-dragging': !!e.controller.isItemBeingDragged(e.id),
                                    'dcg-no-faded-h': e.isRightFocused(),
                                    'dcg-no-faded-v': e.isBottomFocused(),
                                    'dcg-author-ide': e.controller.isAuthorIDE()
                                }
                            },
                            'expr-id': function() {
                                return e.model.id
                            },
                            didMount: this.bindFn(this.didMountContainer),
                            onKeydown: this.bindFn(this.onKeydown)
                        }, s.createElement('div', {
                            class: s.const('dcg-fade-container dcg-disable-horizontal-scroll-to-cursor')
                        }, s.createElement('div', {
                            class: s.const('dcg-main')
                        }, s.createElement('div', {
                            class: s.const('dcg-table-container'),
                            tabindex: function() {
                                return e.controller.isInEditListMode() ? 0 : -1
                            },
                            'aria-label': function() {
                                return 'none' === e.controller.getBrailleMode() ? e.controller.t('Expression __index__ table', {
                                    index: e.model.displayIndex
                                }) : e.controller.t('eq__index__ table', {
                                    index: e.model.displayIndex
                                })
                            },
                            didMount: this.bindFn(this.didMountContainer),
                            manageFocus: this.const(g.manageFocusHelper({
                                controller: this.controller,
                                location: {
                                    type: 'table-container',
                                    id: this.model.id
                                }
                            }))
                        }, s.createElement('div', {
                            class: s.const('dcg-table-sliding-container'),
                            style: function() {
                                return {
                                    transform: 'translateX(' + e.computeScrolledX() + 'px)'
                                }
                            }
                        }, s.createElement(m, {
                            each: function() {
                                return e.getVisibleRowModels()
                            },
                            key: function(t) {
                                return 'blank-row' === t.type ? 'blank-row-' + t.guid + '-' + t.rows + '-' + e.getCols() : t.guid
                            }
                        }, s.createElement('div', {
                            role: s.const('grid'),
                            class: function() {
                                return {
                                    'dcg-tabledata': !0,
                                    'dcg-focus-in-bottom-row': e.isBottomFocused(),
                                    'dcg-focus-in-right-column': e.isRightFocused()
                                }
                            }
                        }, function(t) {
                            return 'show-more' === t.type ? s.createElement('tr', {
                                role: s.const('row'),
                                class: s.const('dcg-show-more-row')
                            }, s.createElement('td', {
                                colspan: e.bindFn(e.getCols)
                            }, e.bindFn(e.missingRowMessage), s.createElement('div', {
                                tabindex: s.const(0),
                                role: s.const('button'),
                                class: s.const('dcg-show-more'),
                                onTap: function() {
                                    return e.controller.dispatch({
                                        type: 'table-show-more-rows',
                                        id: e.id
                                    })
                                }
                            }, function() {
                                return e.controller.t('Show all')
                            }))) : 'blank-row' === t.type ? s.createElement('tr', {
                                role: s.const('row'),
                                class: s.const('dcg-blank-row')
                            }, s.createElement('td', {
                                colspan: e.bindFn(e.getCols),
                                style: function() {
                                    return {
                                        height: t.rows * e.getRowHeight() + 'px'
                                    }
                                }
                            })) : s.createElement(m, {
                                each: function() {
                                    return t.cells
                                },
                                key: function(e) {
                                    return e.guid
                                }
                            }, s.createElement('tr', {
                                role: s.const('row'),
                                'aria-rowindex': function() {
                                    return t.index
                                },
                                class: function() {
                                    return {
                                        'dcg-row': t,
                                        'dcg-braille-row': 'none' !== e.controller.getBrailleMode()
                                    }
                                }
                            }, function(t) {
                                return 'header' === t.type ? s.createElement(a.default, {
                                    controller: e.props.controller,
                                    model: e.const(t)
                                }) : s.createElement(l.default, {
                                    controller: e.props.controller,
                                    model: e.const(t)
                                })
                            }))
                        }))))), s.createElement('i', {
                            class: s.const('dcg-icon-remove dcg-top-level-delete'),
                            handleEvent: s.const('true'),
                            onTap: this.bindFn(this.onDelete)
                        })), s.createElement('span', {
                            class: s.const('dcg-tab dcg-action-drag'),
                            handleevent: s.const('true'),
                            tapboundary: s.const('true'),
                            disablescroll: s.const('true'),
                            style: s.const('touch-action:none'),
                            onTapStart: this.bindFn(this.onDragPending)
                        }, s.createElement('span', {
                            class: s.const('dcg-num')
                        }, function() {
                            return e.model.displayIndex
                        }), s.createElement('div', {
                            class: s.const('dcg-tab-interior')
                        }), s.createElement(f.SuggestedZoomView, {
                            model: this.props.model,
                            controller: this.props.controller
                        })), s.createElement(p.ExpressionEditActions, {
                            controller: this.props.controller,
                            id: function() {
                                return e.model.id
                            }
                        }))
                    }
                    ,
                    t.prototype.getCols = function() {
                        return this.model.rowModels[0].cells.length - 1
                    }
                    ,
                    t.prototype.getRowHeight = function() {
                        return this.controller.getGraphSettings().config.projectorMode ? 38 : 33
                    }
                    ,
                    t.prototype.getVisibleRowModels = function() {
                        var e = this.model.rowModels;
                        if (e.length <= 25)
                            return e;
                        var t = c.getCollapsedRange(this.model);
                        if (void 0 !== t) {
                            var r = e.slice(0, t.min);
                            return r = r.concat({
                                type: 'show-more',
                                guid: 'show-more'
                            }),
                            r.concat(e.slice(t.max))
                        }
                        var n = h.getExppanelRect(this.controller)
                        , i = n ? n.height : 0
                        , o = d(this.node).offset()
                        , s = (o ? o.top : 0) - (n ? n.top : 0)
                        , a = d(this.node).find('.dcg-row:eq(0)').height()
                        , l = this.getRowHeight();
                        if (i / l > e.length)
                            return e;
                        for (var u = [], p = (-s - a) / l, f = (i - s) / l, g = 0; g < e.length; g++) {
                            var m = c.getSelectedCell(this.model);
                            if (0 === g || g === e.length - 2 || m && m.row === g)
                                u.push(e[g]);
                            else if (g > f || g < p) {
                                var y = u[u.length - 1];
                                y && 'blank-row' === y.type ? y.rows++ : u.push({
                                    type: 'blank-row',
                                    guid: e[g].guid,
                                    rows: 1
                                })
                            } else
                                u.push(e[g])
                        }
                        return u
                    }
                    ,
                    t.prototype.missingRowMessage = function() {
                        var e = c.getCollapsedRange(this.model);
                        return void 0 === e ? '' : this.controller.t('__rowCount__ more rows', {
                            rowCount: e.max - e.min
                        })
                    }
                    ,
                    t.prototype.didMountContainer = function(e) {
                        this.node = e,
                        d(e).on('scroll', function() {
                            return e.scrollLeft = 0
                        })
                    }
                    ,
                    t.prototype.getSelectedCell = function() {
                        return c.getSelectedCell(this.model)
                    }
                    ,
                    t.prototype.computeScrolledX = function() {
                        if (!this.getSelectedCell() || !this.node)
                            return 0;
                        var e = this.node.children[0]
                        , t = this.node.querySelector('.dcg-selected');
                        if (null === e || null === t)
                            return 0;
                        var r = this.node.getBoundingClientRect()
                        , n = t.getBoundingClientRect()
                        , i = n.left - e.getBoundingClientRect().left
                        , o = r.width - i - n.width - 80
                        , s = Math.min(0, r.width - e.scrollWidth - 30);
                        return o = Math.max(o, s),
                        Math.min(0, o)
                    }
                    ,
                    t.prototype.isBottomFocused = function() {
                        var e = this.getSelectedCell();
                        return !!e && e.row === this.model.columnModels[0].cells.length
                    }
                    ,
                    t.prototype.isRightFocused = function() {
                        var e = this.getSelectedCell();
                        return !!e && e.column === this.model.columnModels.length - 1
                    }
                    ,
                    t.prototype.isFocused = function() {
                        return !!this.getSelectedCell()
                    }
                    ,
                    t.prototype.onKeydown = function(e) {
                        this.controller.isInEditListMode() || !e.ctrlKey || e.shiftKey || e.altKey || e.metaKey || ('Up' === n.lookup(e) ? (e.preventDefault(),
                        e.stopPropagation(),
                        this.moveToFirstCellInColumn()) : 'Down' === n.lookup(e) ? (e.preventDefault(),
                        e.stopPropagation(),
                        this.moveToLastCellInColumn()) : 'Left' === n.lookup(e) ? (e.preventDefault(),
                        e.stopPropagation(),
                        this.moveToFirstCellInRow()) : 'Right' === n.lookup(e) ? (e.preventDefault(),
                        e.stopPropagation(),
                        this.moveToLastCellInRow()) : 'H' === n.lookupChar(e) && (e.preventDefault(),
                        e.stopPropagation(),
                        this.speakColumnHeader()))
                    }
                    ,
                    t.prototype.moveToFirstCellInColumn = function() {
                        var e = this.getSelectedCell();
                        e && this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'table',
                                id: this.id,
                                location: {
                                    row: 0,
                                    column: e.column
                                }
                            }
                        })
                    }
                    ,
                    t.prototype.moveToLastCellInColumn = function() {
                        var e = this.getSelectedCell();
                        e && this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'table',
                                id: this.id,
                                location: {
                                    row: this.model.rowModels.length - 1,
                                    column: e.column
                                }
                            }
                        })
                    }
                    ,
                    t.prototype.moveToFirstCellInRow = function() {
                        var e = this.getSelectedCell();
                        e && this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'table',
                                id: this.id,
                                location: {
                                    row: e.row,
                                    column: 0
                                }
                            }
                        })
                    }
                    ,
                    t.prototype.moveToLastCellInRow = function() {
                        var e = this.getSelectedCell();
                        e && this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'table',
                                id: this.id,
                                location: {
                                    row: e.row,
                                    column: this.model.columnModels[0].cells.length - 1
                                }
                            }
                        })
                    }
                    ,
                    t.prototype.speakColumnHeader = function() {
                        var e = this.controller.t('No column header')
                        , t = this.getSelectedCell();
                        if (t) {
                            var r = this.model.rowModels[0].cells[t.column];
                            if (r && 'header' === r.type && r.latex && '' !== r.latex) {
                                e = u.MQ.StaticMath(d('<span>' + r.latex + '</span>')[0]).mathspeak()
                            }
                        }
                        i.alert(e)
                    }
                    ,
                    t
                }(o.default);
                t.default = y
            }),
            r('loadcss!expressions/folder-view', function() {}),
            r('expressions/folder-view', ['require', 'exports', 'tslib', 'browser', 'keys', 'lib/aria', './expression-edit-actions', './abstract-item-view', './smart_textarea', 'dcgview', './circular-icon-view', 'jquery.handleevent', 'loadcss!./folder-view'], function(e, t, r, n, i, o, s, a, l, c, u) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var d = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.didMount = function() {
                        this.onItemViewMounted()
                    }
                    ,
                    t.prototype.willUnmount = function() {
                        this.onItemViewUnmounted()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return c.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-do-not-blur': !0,
                                    'dcg-expressionitem': !0,
                                    'dcg-expressionfolder': !0,
                                    'dcg-inFolder': !1,
                                    'dcg-selected': e.controller.isItemSelected(e.id),
                                    'dcg-dragging': !!e.controller.isItemBeingDragged(e.id),
                                    'dcg-collapsed': !!e.model.collapsed,
                                    'dcg-hidden': !!e.model.hidden,
                                    'dcg-author-ide': e.controller.isAuthorIDE(),
                                    'dcg-has-items': e.controller.getNumberOfItemsInFolder(e.id) > 0,
                                    'dcg-secretFolder': e.model.secret && !e.controller.canAdministerSecretFolders()
                                }
                            },
                            'expr-id': function() {
                                return e.model.id
                            },
                            onTapStart: this.bindFn(this.onMouseSelect),
                            onTap: this.bindFn(this.onMouseSelect)
                        }, c.createElement('div', {
                            class: c.const('dcg-fade-container')
                        }, c.createElement('div', {
                            class: c.const('dcg-main')
                        }, c.createElement('div', {
                            role: c.const('button'),
                            tabindex: c.const('0'),
                            'aria-pressed': function() {
                                return e.model.collapsed
                            },
                            'aria-label': function() {
                                return e.controller.t('Collapse Folder')
                            },
                            class: c.const('dcg-caret-container dcg-action-toggle-folder-collapsed dcg-do-not-blur'),
                            handleEvent: c.const('true'),
                            onTap: this.bindFn(this.toggleCollapsed)
                        }, c.createElement('i', {
                            class: c.const('dcg-icon-caret-down')
                        })), c.createElement(l.default, {
                            shouldFocus: this.bindFn(this.isFocused),
                            text: function() {
                                return e.model.title
                            },
                            placeholder: function() {
                                return e.controller.t('Enter a note...')
                            },
                            showLinks: function() {
                                return e.controller.areLinksEnabled()
                            },
                            onInput: this.bindFn(this.onInput),
                            onFocusChange: this.bindFn(this.onFocusChange),
                            onSpecialKey: this.bindFn(this.onSpecialKey),
                            ariaLabel: this.bindFn(this.getAriaLabel),
                            readonly: function() {
                                return e.controller.isInEditListMode()
                            },
                            readonlyAction: this.bindFn(this.exitEditListMode)
                        }), c.createElement('div', {
                            role: c.const('checkbox'),
                            'aria-checked': function() {
                                return e.model.secret
                            },
                            'aria-label': function() {
                                return e.controller.t('Hide this folder from students')
                            },
                            class: function() {
                                return {
                                    'dcg-action-toggle-secret-folder': !0,
                                    'dcg-do-not-blur': !0,
                                    'dcg-checked': e.model.secret
                                }
                            },
                            style: function() {
                                return {
                                    display: e.controller.canAdministerSecretFolders() ? void 0 : 'none'
                                }
                            },
                            handleEvent: c.const('true'),
                            onTap: this.bindFn(this.toggleSecret)
                        }, c.createElement('span', {
                            class: c.const('dcg-checkbox-box')
                        }, c.createElement('i', {
                            class: c.const('dcg-icon-check')
                        })), c.createElement('span', {
                            class: c.const('dcg-checkbox-label')
                        }, function() {
                            return e.controller.t('Hide this folder from students.')
                        }))), c.createElement('i', {
                            class: c.const('dcg-icon-remove dcg-top-level-delete'),
                            handleEvent: c.const('true'),
                            onTap: this.bindFn(this.onDelete)
                        })), c.createElement('span', {
                            class: c.const('dcg-tab dcg-action-drag'),
                            handleevent: c.const('true'),
                            tapboundary: c.const('true'),
                            disablescroll: c.const('true'),
                            style: c.const('touch-action:none'),
                            onTapStart: this.bindFn(this.onDragPending)
                        }, c.createElement('span', {
                            class: c.const('dcg-num')
                        }, function() {
                            return e.model.displayIndex
                        }), c.createElement('div', {
                            class: c.const('dcg-tab-interior')
                        }, c.createElement('span', {
                            role: c.const('button'),
                            tabindex: c.const('0'),
                            'aria-pressed': function() {
                                return !!e.model.hidden
                            },
                            'aria-label': function() {
                                return e.controller.t('Hide Folder')
                            },
                            class: c.const('dcg-circular-icon-container dcg-expression-icon-container'),
                            onTap: this.bindFn(this.toggleHidden)
                        }, c.createElement(u.CircularIconView, {
                            iconType: function() {
                                return e.model.hidden ? 'hidden' : 'folder'
                            },
                            whiteIcon: function() {
                                return e.controller.isItemSelected(e.model.id) || e.controller.isItemBeingDragged(e.model.id)
                            }
                        })))), c.createElement(s.ExpressionEditActions, {
                            controller: this.props.controller,
                            id: function() {
                                return e.model.id
                            }
                        }))
                    }
                    ,
                    t.prototype.toggleHidden = function() {
                        this.controller.dispatch({
                            type: 'toggle-item-hidden',
                            id: this.id
                        })
                    }
                    ,
                    t.prototype.toggleSecret = function() {
                        this.controller.dispatch({
                            type: 'set-item-secret',
                            id: this.id,
                            isSecret: !this.model.secret
                        })
                    }
                    ,
                    t.prototype.toggleCollapsed = function() {
                        this.controller.dispatch({
                            type: 'set-folder-collapsed',
                            id: this.id,
                            isCollapsed: !this.model.collapsed
                        })
                    }
                    ,
                    t.prototype.onInput = function(e) {
                        this.controller.dispatch({
                            type: 'set-folder-title',
                            id: this.id,
                            title: e
                        })
                    }
                    ,
                    t.prototype.onFocusChange = function(e) {
                        e ? this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'folder',
                                id: this.id
                            }
                        }) : this.controller.dispatch({
                            type: 'blur-focus-location',
                            location: {
                                type: 'folder',
                                id: this.id
                            }
                        })
                    }
                    ,
                    t.prototype.onSpecialKey = function(e) {
                        return this.controller.dispatch({
                            type: 'on-special-key-pressed',
                            key: e
                        })
                    }
                    ,
                    t.prototype.onKeydown = function(e) {
                        var t = e.altKey && !e.metaKey && !e.ctrlKey && !e.shiftKey
                        , r = e.metaKey && !e.altKey && !e.shiftKey && !e.ctrlKey;
                        (n.IS_APPLE ? r : t) && i.lookup(e) === i.UP && (e.preventDefault(),
                        e.stopPropagation(),
                        this.controller.dispatch({
                            type: 'set-folder-collapsed',
                            id: this.id,
                            isCollapsed: !this.model.collapsed
                        }),
                        this.model.collapsed ? o.alert(this.controller.t('folder collapsed')) : o.alert(this.controller.t('folder expanded')))
                    }
                    ,
                    t.prototype.isFocused = function() {
                        var e = this.controller.getFocusLocation();
                        return !(!e || 'folder' !== e.type || e.id !== this.id)
                    }
                    ,
                    t.prototype.getAriaLabel = function() {
                        var e = '';
                        this.model.hidden || this.model.collapsed || this.model.secret ? !this.model.hidden || this.model.collapsed || this.model.secret ? this.model.hidden || !this.model.collapsed || this.model.secret ? this.model.hidden || this.model.collapsed || !this.model.secret ? this.model.hidden && this.model.collapsed && !this.model.secret ? e = this.controller.t('Hidden Collapsed Folder') : this.model.hidden && !this.model.collapsed && this.model.secret ? e = this.controller.t('Hidden Secret Folder') : !this.model.hidden && this.model.collapsed && this.model.secret ? e = this.controller.t('Collapsed Secret Folder') : this.model.hidden && this.model.collapsed && this.model.secret && (e = this.controller.t('Hidden Collapsed Secret Folder')) : e = this.controller.t('Secret Folder') : e = this.controller.t('Collapsed Folder') : e = this.controller.t('Hidden Folder') : e = this.controller.t('Folder');
                        var t = this.controller.getNumberOfItemsInFolder(this.id);
                        return t > 0 ? this.controller.t('__folder__ has __count__ items', {
                            folder: e,
                            count: t
                        }) : e
                    }
                    ,
                    t
                }(a.default);
                t.default = d
            }),
            r('lib/coerce-url', ['require', 'exports'], function(e, t) {
                'use strict';
                function r(e) {
                    var t = document.createElement('a');
                    return t.href = e,
                    t.href
                }
                Object.defineProperty(t, '__esModule', {
                    value: !0
                }),
                t.coerceURL = r
            }),
            r('loadcss!expressions/image-icon-view', function() {}),
            r('expressions/image-icon-view', ['require', 'exports', 'tslib', 'lib/coerce-url', 'dcgview', 'main/manage-focus-helper', '../dcgview-helpers/tooltipped-error', './circular-icon-view', 'jquery.handleevent', 'loadcss!./image-icon-view'], function(e, t, r, n, i, o, s, a) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var l = i.Components.SwitchUnion
                , c = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.model = this.props.model(),
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return i.createElement('div', {
                            class: i.const('dcg-expression-icon-container dcg-image-icon-container')
                        }, l(this.bindFn(this.typeOfIcon), {
                            error: function() {
                                return i.createElement(s.TooltippedError, {
                                    error: function() {
                                        return e.controller.unpack(e.model.error)
                                    },
                                    isWhite: e.bindFn(e.isSelected),
                                    gravity: e.const('se')
                                })
                            },
                            failed: function() {
                                return i.createElement('span', null)
                            },
                            loading: function() {
                                return i.createElement(a.CircularIconView, {
                                    iconType: e.const('loading')
                                })
                            },
                            hidden: function() {
                                return e.buildIconView()
                            },
                            image: function() {
                                return e.buildIconView()
                            }
                        }))
                    }
                    ,
                    t.prototype.buildIconView = function() {
                        var e = this;
                        return i.createElement('div', {
                            class: i.const('dcg-circular-icon-container'),
                            role: i.const('button'),
                            tabindex: i.const('0'),
                            'aria-label': this.bindFn(this.getIconAriaLabel),
                            onTap: function(t) {
                                if (!t.wasHandled('dragdrop') && !t.wasLongheld())
                                    return e.myOptionsOpen() ? e.toggleOptions(t) : e.controller.isInEditListMode() ? e.toggleOptions(t) : void e.toggleImageShown()
                            },
                            didMount: function(t) {
                                return e.rootElt = t
                            },
                            onLongHold: function(t) {
                                t.handle('dcg-longhold'),
                                t.handle('dcg-tap'),
                                e.toggleOptions(t)
                            },
                            manageFocus: this.const(o.manageFocusHelper({
                                controller: this.controller,
                                location: {
                                    type: 'image-icon',
                                    id: this.model.id
                                }
                            }))
                        }, i.createElement(a.CircularIconView, {
                            iconType: function() {
                                return 'hidden' === e.typeOfIcon() ? 'hidden' : 'background'
                            },
                            backgroundImage: this.bindFn(this.getBackgroundImage),
                            backgroundOpacity: this.const(1),
                            whiteIcon: this.bindFn(this.isSelected)
                        }))
                    }
                    ,
                    t.prototype.isSelected = function() {
                        return this.controller.isItemSelected(this.model.id) || this.controller.isItemBeingDragged(this.model.id)
                    }
                    ,
                    t.prototype.typeOfIcon = function() {
                        return 'loading' === this.model.loadStatus ? 'loading' : 'failed' === this.model.loadStatus ? 'failed' : this.hasError() ? 'error' : this.model.shouldGraph ? 'image' : 'hidden'
                    }
                    ,
                    t.prototype.myOptionsOpen = function() {
                        var e = this.controller.getOpenItemMenu();
                        return !!e && e.model === this.model
                    }
                    ,
                    t.prototype.toggleOptions = function(e) {
                        this.controller.dispatch({
                            type: 'toggle-item-settings-menu',
                            menu: {
                                type: 'image',
                                model: this.model,
                                icon: this.rootElt,
                                focusFirstOption: 'keyboard' === e.device
                            }
                        })
                    }
                    ,
                    t.prototype.hasError = function() {
                        return !!this.model.error && 'none' === this.controller.getBrailleMode()
                    }
                    ,
                    t.prototype.getBackgroundImage = function() {
                        return this.model.image_url === this.lastURL ? this.lastEncodedURL : (this.lastURL = this.model.image_url,
                        this.lastEncodedURL = 'url("' + n.coerceURL(this.model.image_url) + '")',
                        this.lastEncodedURL)
                    }
                    ,
                    t.prototype.toggleImageShown = function() {
                        this.controller.dispatch({
                            type: 'toggle-item-hidden',
                            id: this.model.id
                        }),
                        this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'image-icon',
                                id: this.model.id
                            }
                        })
                    }
                    ,
                    t.prototype.getIconAriaLabel = function() {
                        return this.controller.isInEditListMode() ? this.myOptionsOpen() ? this.controller.t('Hide Options') : this.controller.t('Show Options') : this.model.hidden ? this.controller.t('Show Image') : this.controller.t('Hide Image')
                    }
                    ,
                    t
                }(i.Class);
                t.default = c
            }),
            r('expressions/image-upload-view', ['require', 'exports', 'tslib', 'dcgview', 'jquery', 'main/manage-focus-helper'], function(e, t, r, n, i, o) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var s = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        return n.createElement('div', {
                            class: n.const('dcg-do-not-blur'),
                            onTap: this.bindFn(this.newImage),
                            handleEvent: n.const('true'),
                            role: n.const('button'),
                            tabindex: n.const(0),
                            'aria-label': this.props.ariaLabel,
                            manageFocus: this.const(this.props.location ? o.manageFocusHelper({
                                controller: this.controller,
                                location: this.props.location()
                            }) : void 0)
                        }, this.children, n.createElement('input', {
                            type: n.const('file'),
                            accept: n.const('image/*'),
                            style: n.const('display: none'),
                            didMount: this.bindFn(this.didMountFileInput)
                        }))
                    }
                    ,
                    t.prototype.didMountFileInput = function(e) {
                        var t = this;
                        this.fileInputNode = e,
                        i(e).on('change', function() {
                            t.props.onFileChange(e.files),
                            i(e).val('')
                        })
                    }
                    ,
                    t.prototype.newImage = function() {
                        this.fileInputNode.click()
                    }
                    ,
                    t
                }(n.Class);
                t.ImageUploadView = s
            }),
            r('loadcss!expressions/clickable_image_info_view', function() {}),
            r('expressions/clickable_image_info_view', ['require', 'exports', 'tslib', 'dcgview', './circular-icon-view', '../lib/tooltip', './image-upload-view', './clickable_info_view', 'loadcss!./clickable_image_info_view'], function(e, t, r, n, i, o, s, a) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var l = n.Components.Switch
                , c = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller(),
                        this.model = this.props.model(),
                        this.id = this.model.id
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: n.const('dcg-do-blur dcg-indent-in-folder'),
                            tapboundary: n.const('true'),
                            handleEvent: n.const('true')
                        }, n.createElement(a.ClickableInfoView, {
                            controller: function() {
                                return e.props.controller()
                            },
                            model: function() {
                                return e.model
                            }
                        }), n.createElement('div', {
                            class: n.const('dcg-clickable-image-info-view'),
                            role: n.const('group'),
                            'aria-label': function() {
                                return e.controller.t('Clickable Image Options')
                            }
                        }, n.createElement('div', {
                            role: n.const('heading'),
                            'aria-level': n.const('2'),
                            class: n.const('dcg-clickable-image-label')
                        }, n.const('Hovered:')), n.createElement(o.Tooltip, {
                            tooltip: function() {
                                return e.tooltip('hovered')
                            },
                            gravity: this.const('s')
                        }, n.createElement(s.ImageUploadView, {
                            controller: function() {
                                return e.controller
                            },
                            ariaLabel: function() {
                                return e.tooltip('hovered')
                            },
                            onFileChange: function(t) {
                                return e.updateImage('hovered', t)
                            }
                        }, n.createElement(l, {
                            key: this.bindFn(this.hoveredStatus)
                        }, function() {
                            return n.createElement(i.CircularIconView, {
                                iconType: e.bindFn(e.hoveredStatus),
                                backgroundImage: e.const('background' === e.hoveredStatus() ? 'url(' + e.model.clickableInfo.hoveredImage + ')' : '')
                            })
                        }))), n.createElement('div', {
                            role: n.const('heading'),
                            'aria-level': n.const('2'),
                            class: n.const('dcg-clickable-image-label')
                        }, n.const('Depressed:')), n.createElement(o.Tooltip, {
                            tooltip: function() {
                                return e.tooltip('depressed')
                            },
                            gravity: this.const('s')
                        }, n.createElement(s.ImageUploadView, {
                            controller: function() {
                                return e.controller
                            },
                            ariaLabel: function() {
                                return e.tooltip('depressed')
                            },
                            onFileChange: function(t) {
                                return e.updateImage('depressed', t)
                            }
                        }, n.createElement(l, {
                            key: this.bindFn(this.depressedStatus)
                        }, function() {
                            return n.createElement(i.CircularIconView, {
                                iconType: function() {
                                    return e.depressedStatus()
                                },
                                backgroundImage: e.const('background' === e.depressedStatus() ? 'url(' + e.model.clickableInfo.depressedImage + ')' : '')
                            })
                        })))))
                    }
                    ,
                    t.prototype.hoveredStatus = function() {
                        return this.hoveredUploading ? 'loading' : this.model.clickableInfo.hoveredImage ? 'background' : 'hidden'
                    }
                    ,
                    t.prototype.depressedStatus = function() {
                        return this.depressedUploading ? 'loading' : this.model.clickableInfo.depressedImage ? 'background' : 'hidden'
                    }
                    ,
                    t.prototype.tooltip = function(e) {
                        return ('hovered' === e ? this.model.clickableInfo.hoveredImage : this.model.clickableInfo.depressedImage) ? 'depressed' === e ? this.controller.t('Change Depressed Image') : this.controller.t('Change Hovered Image') : 'depressed' === e ? this.controller.t('Add Depressed Image') : this.controller.t('Add Hovered Image')
                    }
                    ,
                    t.prototype.updateImage = function(e, t) {
                        var r = this;
                        if (t && t[0]) {
                            var n = t[0];
                            'hovered' === e && (this.hoveredUploading = !0),
                            'depressed' === e && (this.depressedUploading = !0),
                            this.controller.getGraphSettings().config.imageUploadCallback(n, function(t, n) {
                                'hovered' === e && (r.hoveredUploading = !1),
                                'depressed' === e && (r.depressedUploading = !1),
                                !t && n && ('hovered' === e ? r.controller.dispatch({
                                    type: 'set-hovered-image',
                                    id: r.model.id,
                                    url: n
                                }) : r.controller.dispatch({
                                    type: 'set-depressed-image',
                                    id: r.model.id,
                                    url: n
                                }))
                            })
                        }
                    }
                    ,
                    t
                }(n.Class);
                t.ClickableImageInfoView = c
            }),
            r('loadcss!expressions/image-view', function() {}),
            r('expressions/image-view', ['require', 'exports', 'tslib', 'keys', 'jquery', 'underscore', './abstract-item-view', './smart_textarea', 'dcgview', 'dcgview-helpers/mathquill-view', 'lib/conditional_blur', 'expressions/promptslider_view', './image-icon-view', './clickable_image_info_view', 'graphing-calc/models/image', './expression-edit-actions', '../dcgview-helpers/mathquill-braille-wrapper', 'jquery.handleevent', 'loadcss!./image-view'], function(e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g, m) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var y = l.Components
                , v = y.If
                , b = y.SwitchUnion
                , x = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.model = this.props.model(),
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return l.createElement('div', {
                            class: l.const('dcg-image-input-mathquill')
                        }, l.createElement(m.default, {
                            latex: function() {
                                return e.model[e.props.name()]
                            },
                            controller: this.props.controller,
                            brailleShouldFocus: function() {
                                return e.props.focusedInput() === e.props.name()
                            },
                            selectOnFocus: this.const(!0),
                            onBrailleInput: this.bindFn(this.handleLatexChanged),
                            onBrailleFocusedChanged: this.bindFn(this.handleMQFocusedChanged),
                            onBrailleKeydown: this.bindFn(this.handleBrailleKeydown),
                            hasError: function() {
                                return f.hasInputError(e.model, e.props.name())
                            },
                            ariaLabel: function() {
                                return e.controller.t(e.props.name())
                            }
                        }, l.createElement(c.default, {
                            latex: function() {
                                return e.model[e.props.name()]
                            },
                            isFocused: function() {
                                return e.props.focusedInput() === e.props.name()
                            },
                            capExpressionSize: function() {
                                return e.controller.getCapExpressionSize()
                            },
                            selectOnFocus: this.const(!0),
                            config: this.const({}),
                            getAriaLabel: function() {
                                return e.controller.t(e.props.name())
                            },
                            getAriaPostLabel: this.const(''),
                            hasError: this.const(!1),
                            onUserPressedKey: function(t, r) {
                                return e.handlePressedKey(t, r)
                            },
                            onUserChangedLatex: this.bindFn(this.handleLatexChanged),
                            onExpressionSizeExceeded: function() {
                                return e.controller.dispatch({
                                    type: 'expression-size-exceeded'
                                })
                            },
                            onFocusedChanged: this.bindFn(this.handleMQFocusedChanged),
                            needsSystemKeypad: function() {
                                return !e.controller.isKeypadEnabled()
                            }
                        }, l.createElement('span', {
                            class: function() {
                                return {
                                    'dcg-focus': e.props.focusedInput() === e.props.name(),
                                    'dcg-invalid': f.hasInputError(e.model, e.props.name())
                                }
                            }
                        }))))
                    }
                    ,
                    t.prototype.getInputs = function() {
                        return this.controller.canUseAdvancedStyling() ? ['center', 'angle', 'opacity', 'width', 'height'] : ['center', 'angle', 'width', 'height']
                    }
                    ,
                    t.prototype.handlePressedKey = function(e, t) {
                        var r = this.props.name()
                        , n = c.default.getFocusedMathquill()
                        , o = this.getInputs()
                        , s = o.indexOf(r);
                        if (!this.controller.isInEditListMode()) {
                            if ('Enter' === e)
                                return this.controller.dispatch({
                                    type: 'on-special-key-pressed',
                                    key: 'Enter'
                                });
                            if ('Esc' === e)
                                return void u.default()
                        }
                        var a = -1;
                        'Up' === e && (a = s - 1),
                        'Down' === e && (a = s + 1),
                        'Left' === e && (a = s - 2),
                        'Right' === e && (a = s + 2);
                        var l = e;
                        if (a >= 0 && a < o.length) {
                            var d = !1;
                            if (n)
                                d = c.default.applyArrowKeyAndReturnIfWasAtBounds(n, l, t);
                            else if ('Up' === e || 'Down' === e)
                                d = !0;
                            else {
                                var p = m.getFocusedBrailleElement();
                                d = p && ('Left' === e && 0 === p.selectionStart || 'Right' === e && p.selectionStart === i(p).val().length)
                            }
                            return void (d && (this.focusInput(o[a]),
                            t && t.preventDefault()))
                        }
                        n && (n.keystroke(e, t),
                        this.handleLatexChanged(n.latex()))
                    }
                    ,
                    t.prototype.handleBrailleKeydown = function(e) {
                        var t = n.lookup(e);
                        t && this.handlePressedKey(t, i.Event(e))
                    }
                    ,
                    t.prototype.focusInput = function(e) {
                        this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'image',
                                id: this.model.id,
                                location: e
                            }
                        })
                    }
                    ,
                    t.prototype.anyInputHasError = function() {
                        var e = this;
                        return o.any(this.getInputs(), function(t) {
                            return f.hasInputError(e.model, t)
                        })
                    }
                    ,
                    t.prototype.handleLatexChanged = function(e) {
                        var t = this.props.name();
                        this.model.draggingOnGraphpaper || f.getMQAttribute(this.model, t) !== e && this.controller.dispatch({
                            type: 'set-image-mq-attribute',
                            id: this.model.id,
                            attribute: t,
                            latex: e
                        })
                    }
                    ,
                    t.prototype.handleMQFocusedChanged = function(e) {
                        var t = this.props.name();
                        e ? this.props.focusedInput() !== t && this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'image',
                                id: this.model.id,
                                location: t
                            }
                        }) : this.controller.dispatch({
                            type: 'blur-focus-location',
                            location: {
                                type: 'image',
                                id: this.model.id,
                                location: t
                            }
                        })
                    }
                    ,
                    t
                }(l.Class)
                , w = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.didMount = function() {
                        this.onItemViewMounted()
                    }
                    ,
                    t.prototype.willUnmount = function() {
                        this.onItemViewUnmounted()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return l.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-do-not-blur': !0,
                                    'dcg-expressionitem': !0,
                                    'dcg-expressionimage': !0,
                                    'dcg-inFolder': !!e.model.folderId,
                                    'dcg-selected': e.controller.isItemSelected(e.id),
                                    'dcg-dragging': !!e.controller.isItemBeingDragged(e.id),
                                    'dcg-input-focused': e.getFocusedInput() && 'name' !== e.getFocusedInput()
                                }
                            },
                            'expr-id': function() {
                                return e.model.id
                            },
                            onTapStart: this.bindFn(this.onMouseSelect),
                            onTap: this.bindFn(this.onMouseSelect)
                        }, l.createElement('div', {
                            class: l.const('dcg-fade-container')
                        }, l.createElement('div', {
                            class: l.const('dcg-main')
                        }, b(function() {
                            return e.model.loadStatus
                        }, {
                            failed: function() {
                                return l.createElement('div', null, l.createElement('div', {
                                    class: l.const('dcg-image-failed')
                                }, function() {
                                    return e.controller.t('Failed to load image.')
                                }), l.createElement('div', {
                                    role: l.const('button'),
                                    tabindex: l.const(0),
                                    class: l.const('dcg-retry-loading-image'),
                                    onTap: e.bindFn(e.onRetryLoad)
                                }, function() {
                                    return e.controller.t('Retry.')
                                }))
                            },
                            loading: function() {
                                return l.createElement('div', null, l.createElement('div', {
                                    class: l.const('dcg-image-loading')
                                }, function() {
                                    return e.controller.t('Loading image...')
                                }), l.createElement('div', {
                                    role: l.const('button'),
                                    tabindex: l.const(0),
                                    class: l.const('dcg-retry-loading-image'),
                                    onTap: e.bindFn(e.onRetryLoad)
                                }, function() {
                                    return e.controller.t('Retry.')
                                }))
                            },
                            loaded: function() {
                                return l.createElement('div', {
                                    class: l.const('dcg-image-loaded')
                                }, l.createElement(a.default, {
                                    shouldFocus: function() {
                                        return 'name' === e.getFocusedInput()
                                    },
                                    text: function() {
                                        return e.model.name
                                    },
                                    placeholder: function() {
                                        return e.controller.t('Enter a note...')
                                    },
                                    showLinks: function() {
                                        return e.controller.areLinksEnabled()
                                    },
                                    onInput: e.bindFn(e.onNameInput),
                                    onFocusChange: e.bindFn(e.onNameFocusChange),
                                    onSpecialKey: e.bindFn(e.onNameSpecialKey),
                                    readonly: e.const(!1)
                                }), l.createElement('div', {
                                    class: function() {
                                        return {
                                            'dcg-do-blur': !0,
                                            'dcg-image-input-grid': !0
                                        }
                                    },
                                    handleEvent: l.const('true')
                                }, l.createElement('div', {
                                    class: l.const('dcg-image-input-name')
                                }, function() {
                                    return e.controller.t('Center:')
                                }), l.createElement(x, {
                                    name: e.const('center'),
                                    controller: function() {
                                        return e.controller
                                    },
                                    model: function() {
                                        return e.model
                                    },
                                    focusedInput: e.bindFn(e.getFocusedInput)
                                }), l.createElement('div', {
                                    class: l.const('dcg-image-input-name')
                                }, function() {
                                    return e.controller.t('Width:')
                                }), l.createElement(x, {
                                    name: e.const('width'),
                                    controller: function() {
                                        return e.controller
                                    },
                                    model: function() {
                                        return e.model
                                    },
                                    focusedInput: e.bindFn(e.getFocusedInput)
                                }), l.createElement('div', {
                                    class: l.const('dcg-image-input-name')
                                }, function() {
                                    return e.controller.t('Angle:')
                                }), l.createElement(x, {
                                    name: e.const('angle'),
                                    controller: function() {
                                        return e.controller
                                    },
                                    model: function() {
                                        return e.model
                                    },
                                    focusedInput: e.bindFn(e.getFocusedInput)
                                }), l.createElement('div', {
                                    class: l.const('dcg-image-input-name')
                                }, function() {
                                    return e.controller.t('Height:')
                                }), l.createElement(x, {
                                    name: e.const('height'),
                                    controller: function() {
                                        return e.controller
                                    },
                                    model: function() {
                                        return e.model
                                    },
                                    focusedInput: e.bindFn(e.getFocusedInput)
                                }), l.createElement(v, {
                                    predicate: function() {
                                        return e.controller.canUseAdvancedStyling()
                                    }
                                }, function() {
                                    return l.createElement('div', {
                                        class: l.const('dcg-image-input-name')
                                    }, function() {
                                        return e.controller.t('Opacity:')
                                    })
                                }), l.createElement(v, {
                                    predicate: function() {
                                        return e.controller.canUseAdvancedStyling()
                                    }
                                }, function() {
                                    return l.createElement(x, {
                                        name: e.const('opacity'),
                                        controller: function() {
                                            return e.controller
                                        },
                                        model: function() {
                                            return e.model
                                        },
                                        focusedInput: e.bindFn(e.getFocusedInput)
                                    })
                                })))
                            }
                        })), l.createElement('span', {
                            class: l.const('dcg-fadeout')
                        }), l.createElement('i', {
                            class: l.const('dcg-icon-remove dcg-top-level-delete'),
                            handleEvent: l.const('true'),
                            onTap: this.bindFn(this.onDelete)
                        }), l.createElement(v, {
                            predicate: function() {
                                return e.shouldShowClickableProperties()
                            }
                        }, function() {
                            return l.createElement(h.ClickableImageInfoView, {
                                controller: function() {
                                    return e.props.controller()
                                },
                                model: function() {
                                    return e.model
                                }
                            })
                        }), l.createElement(v, {
                            predicate: this.bindFn(this.shouldShowBrailleError)
                        }, function() {
                            return l.createElement('div', {
                                class: e.getFooterClass()
                            }, l.createElement('div', {
                                tabindex: l.const(0),
                                class: l.const('dcg-expression-braille-error'),
                                'aria-roledescription': l.const('error'),
                                'aria-label': function() {
                                    return e.controller.unpack(e.model.error)
                                }
                            }, l.createElement('i', {
                                class: l.const('dcg-icon-error')
                            }), function() {
                                return e.controller.unpack(e.model.error)
                            }))
                        }), l.createElement(v, {
                            predicate: function() {
                                return e.model.missingVariables.length > 0 && e.controller.areSlidersEnabled()
                            }
                        }, function() {
                            return l.createElement('div', {
                                class: e.getFooterClass()
                            }, l.createElement(d.default, {
                                model: e.props.model,
                                controller: e.props.controller
                            }))
                        })), l.createElement('span', {
                            class: l.const('dcg-tab dcg-action-drag dcg-action-icon-touch'),
                            handleevent: l.const('true'),
                            tapboundary: l.const('true'),
                            disablescroll: l.const('true'),
                            style: l.const('touch-action:none'),
                            onTapStart: this.bindFn(this.onDragPending)
                        }, l.createElement('span', {
                            class: l.const('dcg-num')
                        }, function() {
                            return e.model.displayIndex
                        }), l.createElement('div', {
                            class: l.const('dcg-tab-interior dcg-action-icon-mouse')
                        }, l.createElement(p.default, {
                            model: this.props.model,
                            controller: this.props.controller
                        }))), l.createElement(g.ExpressionEditActions, {
                            controller: this.props.controller,
                            id: function() {
                                return e.model.id
                            }
                        }))
                    }
                    ,
                    t.prototype.getFooterClass = function() {
                        return this.isFirstRender() ? this.const('dcg-expression-bottom dcg-indent-in-folder') : this.const('dcg-expression-bottom dcg-fadein-bottom dcg-indent-in-folder')
                    }
                    ,
                    t.prototype.onNameInput = function(e) {
                        this.controller.dispatch({
                            type: 'set-image-name',
                            id: this.id,
                            name: e
                        })
                    }
                    ,
                    t.prototype.onNameFocusChange = function(e) {
                        e ? this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'image',
                                id: this.id,
                                location: 'name'
                            }
                        }) : 'name' === this.getFocusedInput() && this.controller.dispatch({
                            type: 'blur-focus-location',
                            location: {
                                type: 'image',
                                id: this.id,
                                location: 'name'
                            }
                        })
                    }
                    ,
                    t.prototype.onNameSpecialKey = function(e) {
                        return this.controller.dispatch({
                            type: 'on-special-key-pressed',
                            key: e
                        })
                    }
                    ,
                    t.prototype.getFocusedInput = function() {
                        var e = this.controller.getFocusLocation();
                        if (e && 'image' === e.type && e.id === this.model.id)
                            return e.location
                    }
                    ,
                    t.prototype.onRetryLoad = function() {
                        this.controller.dispatch({
                            type: 'image-retry-loading',
                            id: this.id
                        })
                    }
                    ,
                    t.prototype.shouldShowClickableProperties = function() {
                        return !!this.controller.canAuthorClickableObjects() && this.model.clickableInfo.enabled
                    }
                    ,
                    t.prototype.shouldShowBrailleError = function() {
                        return 'none' !== this.controller.getBrailleMode() && !!this.model.error
                    }
                    ,
                    t.prototype.onMouseSelect = function(e) {
                        'dcg-tap' === e.type && 'mouse' === e.device || 'dcg-tapstart' === e.type && 'touch' === e.device || e.wasHandled() || (e.handle(),
                        this.controller.dispatch({
                            type: 'set-selected-id',
                            id: this.id
                        }))
                    }
                    ,
                    t
                }(s.default);
                t.default = w
            }),
            r('expressions/shell_view', ['require', 'exports', 'tslib', 'dcgview', './abstract-item-view'], function(e, t, r, n, i) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var o = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.didMount = function() {
                        this.onItemViewMounted()
                    }
                    ,
                    t.prototype.willUnmount = function() {
                        this.onItemViewUnmounted()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = '';
                        return this.model.cachedRenderHeight && (e = 'height:' + this.model.cachedRenderHeight + 'px'),
                        n.createElement('div', {
                            class: n.const('dcg-do-not-blur dcg-expressionitem dcg-shell'),
                            'expr-id': this.const(this.model.id),
                            onTap: this.bindFn(this.onMouseSelect),
                            style: n.const(e)
                        })
                    }
                    ,
                    t
                }(i.default);
                t.default = o
            }),
            r('expressions/drag_container_view', ['require', 'exports', 'tslib', 'dcgview'], function(e, t, r, n) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var i = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: n.const('dcg-drag-container'),
                            style: function() {
                                return {
                                    top: e.getTopPx()
                                }
                            }
                        }, this.children)
                    }
                    ,
                    t.prototype.getTopPx = function() {
                        var e = this.controller.getRawDragState();
                        if (e)
                            return e.itemTop + 'px'
                    }
                    ,
                    t
                }(n.Class);
                t.default = i
            }),
            r('vendor/papaparse', ['require', 'jquery'], function(e) {
                'use strict';
                function t(e, t) {
                    var r = a(t);
                    if ('string' == typeof e) {
                        if (!r.download) {
                            return new o(r).parse(e)
                        }
                        var s = new n(r);
                        s.stream(e)
                    } else if (e instanceof File)
                        if (r.step || r.chunk) {
                            var s = new i(r);
                            s.stream(e)
                        } else {
                            new o(r);
                            reader = new FileReader,
                            reader.onload = function(e) {
                                var t = new o(r);
                                t.parse(e.target.result)
                            }
                            ,
                            reader.onerror = function() {
                                c(r.error) && r.error(reader.error, e)
                            }
                            ,
                            reader.readAsText(e, r.encoding)
                        }
                }
                function r(e, t) {
                    function r(e) {
                        if ('object' != typeof e)
                            return [];
                        var t = [];
                        for (var r in e)
                            t.push(r);
                        return t
                    }
                    function n(e, t) {
                        var r = '';
                        'string' == typeof e && (e = JSON.parse(e)),
                        'string' == typeof t && (t = JSON.parse(t));
                        var n = e instanceof Array && e.length > 0
                        , o = !(t[0]instanceof Array);
                        if (n) {
                            for (var s = 0; s < e.length; s++)
                                s > 0 && (r += a),
                                r += i(e[s], s);
                            t.length > 0 && (r += l)
                        }
                        for (var c = 0; c < t.length; c++) {
                            for (var u = n ? e.length : t[c].length, d = 0; d < u; d++) {
                                d > 0 && (r += a);
                                var p = n && o ? e[d] : d;
                                r += i(t[c][p], d)
                            }
                            c < t.length - 1 && (r += l)
                        }
                        return r
                    }
                    function i(e, t) {
                        return void 0 === e || null === e ? '' : (e = e.toString().replace(/"/g, '""'),
                        'boolean' == typeof s && s || s instanceof Array && s[t] || o(e, p.BAD_DELIMITERS) || e.indexOf(a) > -1 || ' ' == e.charAt(0) || ' ' == e.charAt(e.length - 1) ? '"' + e + '"' : e)
                    }
                    function o(e, t) {
                        for (var r = 0; r < t.length; r++)
                            if (e.indexOf(t[r]) > -1)
                                return !0;
                        return !1
                    }
                    var s = !1
                    , a = ','
                    , l = '\r\n';
                    if (function() {
                        'object' == typeof t && ('string' == typeof t.delimiter && 1 == t.delimiter.length && -1 == p.BAD_DELIMITERS.indexOf(t.delimiter) && (a = t.delimiter),
                        ('boolean' == typeof t.quotes || t.quotes instanceof Array) && (s = t.quotes),
                        'string' == typeof t.newline && (l = t.newline))
                    }(),
                    'string' == typeof e && (e = JSON.parse(e)),
                    e instanceof Array) {
                        if (!e.length || e[0]instanceof Array)
                            return n(null, e);
                        if ('object' == typeof e[0])
                            return n(r(e[0]), e)
                    } else if ('object' == typeof e)
                        return 'string' == typeof e.data && (e.data = JSON.parse(e.data)),
                        e.data instanceof Array && (e.fields || (e.fields = e.data[0]instanceof Array ? e.fields : r(e.data[0])),
                        e.data[0]instanceof Array || 'object' == typeof e.data[0] || (e.data = [e.data])),
                        n(e.fields || [], e.data || []);
                    throw 'exception: Unable to serialize unrecognized input'
                }
                function n(e) {
                    e = e || {},
                    e.chunkSize || (e.chunkSize = p.RemoteChunkSize);
                    var t, r, n = 0, i = 0, s = '', a = '', u = new o(l(e));
                    this.stream = function(o) {
                        function l() {
                            if (t = new XMLHttpRequest,
                            t.onload = d,
                            t.onerror = p,
                            t.open('GET', o, !0),
                            e.step) {
                                var r = n + e.chunkSize - 1;
                                i && r > i && (r = i),
                                t.setRequestHeader('Range', 'bytes=' + n + '-' + r)
                            }
                            t.send(),
                            n += e.chunkSize
                        }
                        function d() {
                            if (4 == t.readyState) {
                                if (t.status < 200 || t.status >= 400)
                                    return void p();
                                s += a + t.responseText,
                                a = '';
                                var i = !e.step || n > h(t);
                                if (!i) {
                                    var o = s.lastIndexOf('\n');
                                    if (o < 0 && (o = s.lastIndexOf('\r')),
                                    !(o > -1))
                                        return void r();
                                    a = s.substring(o + 1),
                                    s = s.substring(0, o)
                                }
                                var l = u.parse(s);
                                s = '',
                                c(e.chunk) && (e.chunk(l),
                                l = void 0),
                                i || l.meta.paused || r()
                            }
                        }
                        function p() {
                            c(e.error) && e.error(t.statusText)
                        }
                        function h(e) {
                            var t = e.getResponseHeader('Content-Range');
                            return parseInt(t.substr(t.lastIndexOf('/') + 1))
                        }
                        (r = function() {
                            l()
                        }
                        )()
                    }
                }
                function i(e) {
                    e = e || {},
                    e.chunkSize || (e.chunkSize = p.LocalChunkSize);
                    var t, r = 0, n = '', i = '', s = new o(l(e)), a = 'function' == typeof FileReader;
                    this.stream = function(o) {
                        function l() {
                            r < o.size && u()
                        }
                        function u() {
                            var n = Math.min(r + e.chunkSize, o.size)
                            , i = t.readAsText(h.call(o, r, n), e.encoding);
                            a || d({
                                target: {
                                    result: i
                                }
                            })
                        }
                        function d(t) {
                            r += e.chunkSize,
                            n += i + t.target.result,
                            i = '';
                            var a = r >= o.size;
                            if (!a) {
                                var u = n.lastIndexOf('\n');
                                if (u < 0 && (u = n.lastIndexOf('\r')),
                                !(u > -1))
                                    return void l();
                                i = n.substring(u + 1),
                                n = n.substring(0, u)
                            }
                            var d = s.parse(n);
                            n = '',
                            c(e.chunk) && (e.chunk(d, o),
                            d = void 0),
                            a || d.meta.paused || l()
                        }
                        function p() {
                            c(e.error) && e.error(t.error, o)
                        }
                        var h = o.slice || o.webkitSlice || o.mozSlice;
                        a ? (t = new FileReader,
                        t.onload = d,
                        t.onerror = p) : t = new FileReaderSync,
                        l()
                    }
                }
                function o(e) {
                    function t() {
                        return b && f && (u('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \'' + p.DefaultDelimiter + '\''),
                        f = !1),
                        r() && n(),
                        i()
                    }
                    function r() {
                        return e.header && 0 == v.length
                    }
                    function n() {
                        if (b) {
                            for (var e = 0; r() && e < b.data.length; e++)
                                for (var t = 0; t < b.data[e].length; t++)
                                    v.push(b.data[e][t]);
                            b.data.splice(0, 1)
                        }
                    }
                    function i() {
                        if (!b || !e.header && !e.dynamicTyping)
                            return b;
                        for (var t = 0; t < b.data.length; t++) {
                            for (var r = {}, n = 0; n < b.data[t].length; n++) {
                                if (e.dynamicTyping) {
                                    var i = b.data[t][n];
                                    b.data[t][n] = 'true' == i || 'false' != i && a(i)
                                }
                                e.header && (n >= v.length ? (r.__parsed_extra || (r.__parsed_extra = []),
                                r.__parsed_extra.push(b.data[t][n])) : r[v[n]] = b.data[t][n])
                            }
                            e.header && (b.data[t] = r,
                            n > v.length ? u('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + v.length + ' fields but parsed ' + n, t) : n < v.length && u('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + v.length + ' fields but parsed ' + n, t))
                        }
                        return e.header && b.meta && (b.meta.fields = v),
                        b
                    }
                    function o(t) {
                        for (var r, n, i, o = [',', '\t', '|', ';', p.RECORD_SEP, p.UNIT_SEP], a = 0; a < o.length; a++) {
                            var l = o[a]
                            , c = 0
                            , u = 0;
                            i = void 0;
                            for (var d = new s({
                                delimiter: l,
                                preview: 10
                            }).parse(t), h = 0; h < d.data.length; h++) {
                                var f = d.data[h].length;
                                u += f,
                                void 0 !== i ? f > 1 && (c += Math.abs(f - i),
                                i = f) : i = f
                            }
                            u /= d.data.length,
                            (void 0 === n || c < n) && u > 1.99 && (n = c,
                            r = l)
                        }
                        return e.delimiter = r,
                        {
                            successful: !!r,
                            bestDelimiter: r
                        }
                    }
                    function a(e) {
                        return g.test(e) ? parseFloat(e) : e
                    }
                    function u(e, t, r, n) {
                        b.errors.push({
                            type: e,
                            code: t,
                            message: r,
                            row: n
                        })
                    }
                    var d, h, f, g = /^\s*-?(\d*\.?\d+|\d+\.?\d*)(e[-+]?\d+)?\s*$/i, m = this, y = !1, v = [], b = {
                        data: [],
                        errors: [],
                        meta: {}
                    };
                    e = l(e),
                    this.parse = function(n) {
                        if (f = !1,
                        !e.delimiter) {
                            var i = o(n);
                            i.successful ? e.delimiter = i.bestDelimiter : (f = !0,
                            e.delimiter = p.DefaultDelimiter),
                            b.meta.delimiter = e.delimiter
                        }
                        if (c(e.step)) {
                            var a = e.step;
                            e.step = function(e) {
                                b = e,
                                r() ? t() : a(t(), m)
                            }
                        }
                        return e.preview && e.header && e.preview++,
                        d = n,
                        h = new s(e),
                        b = h.parse(d),
                        t(),
                        c(e.complete) && !y && e.complete(b),
                        y ? {
                            meta: {
                                paused: !0
                            }
                        } : b
                    }
                    ,
                    this.pause = function() {
                        y = !0,
                        h.abort(),
                        d = d.substr(h.getCharIndex())
                    }
                    ,
                    this.resume = function() {
                        y = !1,
                        h = new s(e),
                        h.parse(d),
                        c(e.complete) && !y && e.complete(b)
                    }
                    ,
                    this.abort = function() {
                        h.abort(),
                        c(e.complete) && e.complete(b),
                        d = ''
                    }
                }
                function s(e) {
                    function t() {
                        for (; P < M.length && !j && !(T > 0 && R >= T); )
                            '"' == L ? i() : A ? o() : s(),
                            r();
                        return n()
                    }
                    function r() {
                        P++,
                        L = M[P]
                    }
                    function n() {
                        if (j && w('Abort', 'ParseAbort', 'Parsing was aborted by the user\'s step function'),
                        A && w('Quotes', 'MissingQuotes', 'Unescaped or mismatched quotes'),
                        f(),
                        !c(C))
                            return S()
                    }
                    function i() {
                        b() && !v() ? A = !A : (u(),
                        A && v() ? P++ : w('Quotes', 'UnexpectedQuotes', 'Unexpected quotes'))
                    }
                    function o() {
                        (m(P) || y(P)) && D++,
                        u()
                    }
                    function s() {
                        L == I ? d() : m(P) ? (h(),
                        r()) : y(P) ? h() : a() ? l() : u()
                    }
                    function a() {
                        return !!k && ((0 == P || y(P - 1) || m(P - 2)) && M[P] === k)
                    }
                    function l() {
                        for (; !m(P) && !y(P) && P < M.length; )
                            r()
                    }
                    function u() {
                        O[q][N] += L
                    }
                    function d() {
                        O[q].push(''),
                        N = O[q].length - 1
                    }
                    function h() {
                        f(),
                        D++,
                        R++,
                        O.push([]),
                        q = O.length - 1,
                        d()
                    }
                    function f() {
                        g(),
                        c(C) && (O[q] && C(S()),
                        E())
                    }
                    function g() {
                        1 == O[q].length && B.test(O[q][0]) && (e.keepEmptyRows ? O[q].splice(0, 1) : O.splice(q, 1),
                        q = O.length - 1)
                    }
                    function m(e) {
                        return e < M.length - 1 && ('\r' == M[e] && '\n' == M[e + 1] || '\n' == M[e] && '\r' == M[e + 1])
                    }
                    function y(e) {
                        return '\r' == M[e] || '\n' == M[e]
                    }
                    function v() {
                        return !b() && P < M.length - 1 && '"' == M[P + 1]
                    }
                    function b() {
                        return !A && x(P - 1) || x(P + 1)
                    }
                    function x(e) {
                        'number' != typeof e && (e = P);
                        var t = M[e];
                        return e <= -1 || e >= M.length || t == I || '\r' == t || '\n' == t
                    }
                    function w(e, t, r) {
                        F.push({
                            type: e,
                            code: t,
                            message: r,
                            line: D,
                            row: q,
                            index: P
                        })
                    }
                    function _(e) {
                        M = e,
                        A = !1,
                        P = 0,
                        R = 0,
                        D = 1,
                        E(),
                        O = [['']],
                        L = M[P]
                    }
                    function E() {
                        O = [],
                        F = [],
                        q = 0,
                        N = 0
                    }
                    function S() {
                        return {
                            data: O,
                            errors: F,
                            meta: {
                                lines: D,
                                delimiter: I,
                                aborted: j,
                                truncated: T > 0 && P < M.length
                            }
                        }
                    }
                    var M, I, k, C, T, L, P, A, D, O, F, q, N, R, B = /^\s*$/, j = !1;
                    e = e || {},
                    I = e.delimiter,
                    k = e.comments,
                    C = e.step,
                    T = e.preview,
                    ('string' != typeof I || 1 != I.length || p.BAD_DELIMITERS.indexOf(I) > -1) && (I = ','),
                    !0 === k ? k = '#' : ('string' != typeof k || 1 != k.length || p.BAD_DELIMITERS.indexOf(k) > -1 || k == I) && (k = !1),
                    this.parse = function(e) {
                        if ('string' != typeof e)
                            throw 'Input must be a string';
                        return _(e),
                        t()
                    }
                    ,
                    this.abort = function() {
                        j = !0
                    }
                    ,
                    this.getCharIndex = function() {
                        return P
                    }
                }
                function a(e) {
                    'object' != typeof e && (e = {});
                    var t = l(e);
                    return ('string' != typeof t.delimiter || 1 != t.delimiter.length || p.BAD_DELIMITERS.indexOf(t.delimiter) > -1) && (t.delimiter = d.delimiter),
                    'boolean' != typeof t.header && (t.header = d.header),
                    'boolean' != typeof t.dynamicTyping && (t.dynamicTyping = d.dynamicTyping),
                    'number' != typeof t.preview && (t.preview = d.preview),
                    'function' != typeof t.step && (t.step = d.step),
                    'function' != typeof t.complete && (t.complete = d.complete),
                    'function' != typeof t.error && (t.error = d.error),
                    'string' != typeof t.encoding && (t.encoding = d.encoding),
                    'boolean' != typeof t.download && (t.download = d.download),
                    'boolean' != typeof t.keepEmptyRows && (t.keepEmptyRows = d.keepEmptyRows),
                    t
                }
                function l(e) {
                    if ('object' != typeof e)
                        return e;
                    var t = e instanceof Array ? [] : {};
                    for (var r in e)
                        t[r] = l(e[r]);
                    return t
                }
                function c(e) {
                    return 'function' == typeof e
                }
                var u = e('jquery')
                , d = {
                    delimiter: '',
                    header: !1,
                    dynamicTyping: !1,
                    preview: 0,
                    step: void 0,
                    encoding: '',
                    comments: !1,
                    complete: void 0,
                    error: void 0,
                    download: !1,
                    chunk: void 0,
                    keepEmptyRows: !1
                }
                , p = {};
                return p.parse = t,
                p.unparse = r,
                p.RECORD_SEP = String.fromCharCode(30),
                p.UNIT_SEP = String.fromCharCode(31),
                p.BYTE_ORDER_MARK = '\ufeff',
                p.BAD_DELIMITERS = ['\r', '\n', '"', p.BYTE_ORDER_MARK],
                p.LocalChunkSize = 10485760,
                p.RemoteChunkSize = 5242880,
                p.DefaultDelimiter = ',',
                p.Parser = s,
                p.ParserHandle = o,
                p.NetworkStreamer = n,
                p.FileStreamer = i,
                u.fn.parse = function(e) {
                    function t() {
                        if (0 != o.length) {
                            var t = o[0];
                            if (c(e.before)) {
                                var i = e.before(t.file, t.inputElem);
                                if ('object' == typeof i) {
                                    if ('abort' == i.action)
                                        return void r('AbortError', t.file, t.inputElem, i.reason);
                                    if ('skip' == i.action)
                                        return void n();
                                    'object' == typeof i.config && (t.instanceConfig = u.extend(t.instanceConfig, i.config))
                                } else if ('skip' == i)
                                    return void n()
                            }
                            var s = t.instanceConfig.complete;
                            t.instanceConfig.complete = function(e) {
                                c(s) && s(e, t.file, t.inputElem),
                                n()
                            }
                            ,
                            p.parse(t.file, t.instanceConfig)
                        }
                    }
                    function r(t, r, n, i) {
                        c(e.error) && e.error({
                            name: t
                        }, r, n, i)
                    }
                    function n() {
                        o.splice(0, 1),
                        t()
                    }
                    var i = e.config || {}
                    , o = [];
                    return this.each(function(e) {
                        if ('INPUT' != u(this).prop('tagName').toUpperCase() || 'file' != u(this).attr('type').toLowerCase() || !window.FileReader || !this.files || 0 == this.files.length)
                            return !0;
                        for (var t = 0; t < this.files.length; t++)
                            o.push({
                                file: this.files[t],
                                inputElem: this,
                                instanceConfig: u.extend({}, i)
                            })
                    }),
                    t(),
                    this
                }
                ,
                p
            }),
            r('geometry/math/isNumber', ['require', 'exports'], function(e, t) {
                'use strict';
                function r(e) {
                    var t;
                    if ('number' == typeof e)
                        t = e + '';
                    else {
                        if ('string' != typeof e)
                            return !1;
                        t = e
                    }
                    return t.trim().match(/^-?[0-9]*\.?[0-9]*$/)
                }
                Object.defineProperty(t, '__esModule', {
                    value: !0
                }),
                t.isNumber = r
            }),
            r('main/data_helpers', ['require', 'exports', 'vendor/papaparse', 'underscore', 'bugsnag', 'geometry/math/isNumber'], function(e, t, r, n, i, o) {
                'use strict';
                function s(e) {
                    var t = e.split(/\r?\n/)
                    , r = []
                    , i = !1;
                    if (!(t.length < 2)) {
                        for (var s = 0; s < t.length; s++) {
                            var a = t[s];
                            if (a.trim()) {
                                s > 0 && !o.isNumber(a.replace(/,(\d{3})/g, '$1')) && (i = !0);
                                var l = {
                                    content: a
                                };
                                r.push(l)
                            }
                        }
                        if (!i) {
                            var c = n.pluck(r, 'content').map(function(e) {
                                return e.replace(/,(\d{3})/g, '$1')
                            });
                            return o.isNumber(c[0]) || (c = c.slice(1)),
                            [{
                                content: '\\left[' + c.join(',') + '\\right]',
                                numberList: !0
                            }]
                        }
                        return r
                    }
                }
                function a(e) {
                    if (!/^\s*$/.test(e)) {
                        var t = r.parse(e, {
                            preview: 1e3
                        })
                        , n = [];
                        if (t.errors.length && !t.data.length)
                            return void i.notify('PapaParse.parse returned errors.', {
                                metaData: {
                                    input: e,
                                    output: t.errors
                                }
                            });
                        if (t.data.length && !(t.data.length < 2)) {
                            for (var o = t.data[0].length, s = 0; s < o; s++)
                                n.push([]);
                            for (var a = 0; a < t.data.length; a++)
                                if (0 !== a || !isNaN(parseFloat(t.data[a][0]))) {
                                    if (t.data[a].length < 2)
                                        return;
                                    if (t.data[a][0] || t.data[a][1])
                                        for (var s = 0; s < o; s++) {
                                            var l = (t.data[a][s] || '').replace(/,(\d{3})/g, '$1');
                                            if (l && isNaN(parseFloat(l)))
                                                return;
                                            n[s].push(l)
                                        }
                                }
                            if (!(n[0].length < 2))
                                return n
                        }
                    }
                }
                Object.defineProperty(t, '__esModule', {
                    value: !0
                }),
                t.getExpressions = s,
                t.parse = a
            }),
            r('loadcss!new_expression', function() {}),
            r('expressions/new_expression_view', ['require', 'exports', 'tslib', 'dcgview', 'loadcss!new_expression'], function(e, t, r, n) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var i = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        return this.controller = this.props.controller(),
                        n.createElement('div', {
                            class: n.const('dcg-expressionitem dcg-new-expression dcg-opened')
                        }, n.createElement('div', {
                            class: n.const('dcg-new-math-div dcg-do-not-blur dcg-action-newmath'),
                            onTap: this.bindFn(this.newMath)
                        }, n.createElement('div', {
                            class: n.const('dcg-new-expression-fade')
                        })), n.createElement('span', {
                            class: n.const('dcg-tab')
                        }, n.createElement('span', {
                            class: n.const('dcg-num dcg-variable-index')
                        }, this.bindFn(this.getIndex)), n.createElement('div', {
                            class: n.const('dcg-tab-interior')
                        })))
                    }
                    ,
                    t.prototype.getIndex = function() {
                        return this.controller.getNextDisplayIndex()
                    }
                    ,
                    t.prototype.newMath = function() {
                        this.controller.dispatch({
                            type: 'new-expression-at-end'
                        })
                    }
                    ,
                    t
                }(n.Class);
                t.default = i
            }),
            r('loadcss!add_expression', function() {}),
            r('expressions/add_expression_view', ['require', 'exports', 'tslib', 'keys', 'browser', 'lib/tooltip', 'dcgview', 'jquery', './image-upload-view', 'main/manage-focus-helper', 'loadcss!add_expression'], function(e, t, r, n, i, o, s, a, l, c) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var u = s.Components.If
                , d = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return s.createElement('div', {
                            class: s.const('dcg-add-expression-container')
                        }, s.createElement(o.Tooltip, {
                            tooltip: function() {
                                return e.controller.t('Add Item')
                            },
                            gravity: function() {
                                return e.controller.isNarrow() ? 'ne' : 'se'
                            }
                        }, s.createElement('span', {
                            class: function() {
                                return {
                                    'dcg-icon-btn': !0,
                                    'dcg-add-expression-btn': !0,
                                    'dcg-action-add-expression': !0,
                                    'dcg-do-blur': !0,
                                    'dcg-active': e.controller.isAddExpressionOpen()
                                }
                            },
                            handleEvent: s.const('true'),
                            role: s.const('button'),
                            tabindex: s.const('0'),
                            'aria-haspopup': s.const('true'),
                            'aria-expanded': function() {
                                return e.controller.isAddExpressionOpen()
                            },
                            'aria-label': function() {
                                return e.controller.t('Add Item')
                            },
                            didMount: function(t) {
                                e.toggleButtonNode = t
                            },
                            onTap: this.bindFn(this.toggleAddExpression),
                            manageFocus: this.const(c.manageFocusHelper({
                                controller: this.controller,
                                location: {
                                    type: 'add-item-btn'
                                }
                            }))
                        }, s.createElement('i', {
                            class: s.const('dcg-icon-plus')
                        }))), s.createElement(u, {
                            predicate: function() {
                                return e.controller.isAddExpressionOpen()
                            }
                        }, function() {
                            return s.createElement('div', {
                                class: function() {
                                    return {
                                        'dcg-add-expression-dropdown': !0,
                                        'dcg-popover': !0,
                                        'dcg-bottom': !e.controller.isNarrow(),
                                        'dcg-right': e.controller.isNarrow()
                                    }
                                },
                                role: s.const('complementary'),
                                'aria-label': s.const('Add Item Menu'),
                                didMount: e.bindFn(e.didMountPopover),
                                didUnmount: e.bindFn(e.didUnmountPopover)
                            }, s.createElement('div', {
                                class: s.const('dcg-popover-interior')
                            }, s.createElement('div', {
                                class: s.const('dcg-new-item dcg-do-not-blur dcg-action-newexpression'),
                                role: s.const('button'),
                                tabindex: s.const(0),
                                'aria-label': function() {
                                    return e.controller.t('Add Expression')
                                },
                                onTap: e.bindFn(e.newExpression),
                                handleEvent: s.const('true'),
                                manageFocus: e.const(c.manageFocusHelper({
                                    controller: e.controller,
                                    location: {
                                        type: 'add-expression-btn'
                                    }
                                }))
                            }, s.createElement('i', {
                                class: s.const('dcg-icon-new-expression dcg-expression-icon')
                            }), function() {
                                return e.controller.t('expression')
                            }), s.createElement(u, {
                                predicate: function() {
                                    return e.controller.areNotesEnabled()
                                }
                            }, function() {
                                return s.createElement('div', {
                                    class: s.const('dcg-new-item dcg-do-not-blur dcg-action-newtext'),
                                    role: s.const('button'),
                                    tabindex: s.const(0),
                                    'aria-label': function() {
                                        return e.controller.t('Add Note')
                                    },
                                    onTap: e.bindFn(e.newText),
                                    handleEvent: s.const('true')
                                }, s.createElement('i', {
                                    class: s.const('dcg-icon-new-text dcg-expression-icon')
                                }), function() {
                                    return e.controller.t('note')
                                })
                            }), s.createElement('div', {
                                class: s.const('dcg-new-item dcg-do-not-blur dcg-action-newtable'),
                                role: s.const('button'),
                                tabindex: s.const(0),
                                'aria-label': function() {
                                    return e.controller.t('Add Table')
                                },
                                onTap: e.bindFn(e.newTable),
                                handleEvent: s.const('true'),
                                manageFocus: e.const(c.manageFocusHelper({
                                    controller: e.controller,
                                    location: {
                                        type: 'add-table-btn'
                                    }
                                }))
                            }, s.createElement('i', {
                                class: s.const('dcg-icon-new-table dcg-expression-icon')
                            }), function() {
                                return e.controller.t('table')
                            }), s.createElement(u, {
                                predicate: function() {
                                    return e.controller.areFoldersEnabled()
                                }
                            }, function() {
                                return s.createElement('div', {
                                    class: s.const('dcg-new-item dcg-do-not-blur dcg-action-newfolder'),
                                    role: s.const('button'),
                                    tabindex: s.const(0),
                                    'aria-label': function() {
                                        return e.controller.t('Add Folder')
                                    },
                                    onTap: e.bindFn(e.newFolder),
                                    handleEvent: s.const('true'),
                                    manageFocus: e.const(c.manageFocusHelper({
                                        controller: e.controller,
                                        location: {
                                            type: 'add-folder-btn'
                                        }
                                    }))
                                }, s.createElement('i', {
                                    class: s.const('dcg-icon-new-folder dcg-expression-icon')
                                }), function() {
                                    return e.controller.t('folder')
                                })
                            }), s.createElement(u, {
                                predicate: function() {
                                    return e.controller.areImagesEnabled()
                                }
                            }, function() {
                                return s.createElement(l.ImageUploadView, {
                                    controller: function() {
                                        return e.controller
                                    },
                                    ariaLabel: function() {
                                        return e.controller.t('Add Image')
                                    },
                                    onFileChange: function(t) {
                                        return e.insertFiles(t)
                                    },
                                    location: e.const({
                                        type: 'add-image-btn'
                                    })
                                }, s.createElement('div', {
                                    class: s.const('dcg-new-item dcg-action-newimage')
                                }, s.createElement('i', {
                                    class: s.const('dcg-icon-new-image dcg-expression-icon')
                                }), function() {
                                    return e.controller.t('image')
                                }))
                            })), s.createElement('span', {
                                class: s.const('dcg-arrow')
                            }))
                        }))
                    }
                    ,
                    t.prototype.didMountPopover = function(e) {
                        var t = this;
                        this.popoverNode = e,
                        a(document).on('dcg-tapstart.add-expression-view wheel.add-expression-view', function(e) {
                            t.eventShouldClosePopover(e) && t.controller.dispatch({
                                type: 'close-add-expression',
                                focusIconAfterClose: 'keyboard' === e.device
                            })
                        }),
                        a(document).on('keydown.add-expression-view', function(e) {
                            if ('Esc' === n.lookup(e) && t.controller.dispatch({
                                type: 'close-add-expression',
                                focusIconAfterClose: !0
                            }),
                            'Tab' === n.lookup(e) && !e.altKey && !e.metaKey && !e.ctrlKey) {
                                var r = t.controller.getFocusLocation();
                                if (!r)
                                    return;
                                var i = void 0;
                                i = t.controller.areImagesEnabled() ? {
                                    type: 'add-image-btn'
                                } : t.controller.areFoldersEnabled() ? {
                                    type: 'add-folder-btn'
                                } : {
                                    type: 'add-table-btn'
                                },
                                e.shiftKey || r.type !== i.type ? e.shiftKey && 'add-item-btn' === r.type && (t.controller.dispatch({
                                    type: 'set-focus-location',
                                    location: i
                                }),
                                e.preventDefault(),
                                e.stopPropagation()) : (t.controller.dispatch({
                                    type: 'set-focus-location',
                                    location: {
                                        type: 'add-item-btn'
                                    }
                                }),
                                e.preventDefault(),
                                e.stopPropagation())
                            }
                        }),
                        i.IS_IPAD && i.IS_IN_IFRAME && a(e).on('dcg-tapstart', function(e) {
                            return e.preventDefault()
                        }),
                        a(e).find('.dcg-new-item').on('touchstart', function(e) {
                            return e.preventDefault()
                        })
                    }
                    ,
                    t.prototype.didUnmountPopover = function() {
                        a(document).off('.add-expression-view')
                    }
                    ,
                    t.prototype.toggleAddExpression = function(e) {
                        this.controller.dispatch({
                            type: 'toggle-add-expression',
                            focusOnOpen: 'keyboard' === e.device
                        })
                    }
                    ,
                    t.prototype.newExpression = function() {
                        this.controller.dispatch({
                            type: 'new-expression'
                        })
                    }
                    ,
                    t.prototype.newText = function() {
                        this.controller.dispatch({
                            type: 'new-text'
                        })
                    }
                    ,
                    t.prototype.newFolder = function() {
                        this.controller.dispatch({
                            type: 'new-folder'
                        })
                    }
                    ,
                    t.prototype.newTable = function() {
                        this.controller.dispatch({
                            type: 'new-table'
                        })
                    }
                    ,
                    t.prototype.insertFiles = function(e) {
                        this.controller.dispatch({
                            type: 'new-images',
                            files: e
                        })
                    }
                    ,
                    t.prototype.eventShouldClosePopover = function(e) {
                        var t = !!a(e.target).closest(this.popoverNode).length
                        , r = !!a(e.target).closest(this.toggleButtonNode).length;
                        return !(t || r)
                    }
                    ,
                    t
                }(s.Class);
                t.default = d
            }),
            r('loadcss!expressions/expressions-header', function() {}),
            r('expressions/expressions-header', ['require', 'exports', 'tslib', './add_expression_view', 'dcgview', 'lib/tooltip', 'main/manage-focus-helper', 'loadcss!./expressions-header'], function(e, t, r, n, i, o, s) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var a = i.Components.If
                , l = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return i.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-expression-top-bar': !0,
                                    'dcg-expressions-scrolled': e.props.expsScrolled()
                                }
                            },
                            role: i.const('toolbar'),
                            'aria-label': function() {
                                return e.controller.t('Expression Bar')
                            },
                            didMount: function(t) {
                                e.node = t
                            },
                            onTapStart: this.bindFn(this.clearSelectionOnMobile),
                            style: function() {
                                return {
                                    background: e.controller.hasBackgroundColor() ? e.controller.getPillboxBackgroundColor() : void 0
                                }
                            }
                        }, i.createElement('div', {
                            class: i.const('dcg-left-buttons')
                        }, i.createElement(a, {
                            predicate: this.bindFn(this.showHamburger)
                        }, function() {
                            return i.createElement('span', {
                                class: i.const('dcg-action-opendrawer dcg-tooltip dcg-icon-btn dcg-in-api-action-opendrawer'),
                                handleEvent: i.const('true'),
                                tooltip: function() {
                                    return e.controller.t('Open Graph (ctrl+o)')
                                },
                                role: i.const('button'),
                                tabindex: i.const('0'),
                                'aria-label': function() {
                                    return e.controller.t('Open Graph')
                                },
                                onTap: function() {
                                    return e.controller.dispatch({
                                        type: 'open-drawer'
                                    })
                                }
                            }, i.createElement('i', {
                                class: i.const('dcg-icon-hamburger')
                            }))
                        }), i.createElement(a, {
                            predicate: function() {
                                return !e.controller.isInEditListMode()
                            }
                        }, function() {
                            return i.createElement(n.default, {
                                controller: function() {
                                    return e.props.controller()
                                }
                            })
                        }), i.createElement(a, {
                            predicate: this.bindFn(this.showRerandomize)
                        }, function() {
                            return i.createElement(o.Tooltip, {
                                tooltip: function() {
                                    return e.controller.t('Randomize')
                                },
                                gravity: function() {
                                    return e.controller.isNarrow() ? 'n' : 's'
                                }
                            }, i.createElement('span', {
                                class: i.const('dcg-icon-btn'),
                                handleEvent: i.const('true'),
                                role: i.const('button'),
                                tabindex: i.const('0'),
                                'aria-label': function() {
                                    return e.controller.t('Randomize')
                                },
                                onTap: function() {
                                    return e.controller.dispatch({
                                        type: 're-randomize'
                                    })
                                }
                            }, i.createElement('i', {
                                class: i.const('dcg-icon-randomize')
                            })))
                        }), i.createElement(a, {
                            predicate: function() {
                                return e.controller.isInEditListMode() && !e.controller.hasDefaultState()
                            }
                        }, function() {
                            return i.createElement('span', {
                                class: i.const('dcg-btn-red dcg-action-clearall'),
                                role: i.const('button'),
                                tabindex: i.const('0'),
                                onTap: function() {
                                    return e.controller.dispatch({
                                        type: 'clear-graph'
                                    })
                                }
                            }, function() {
                                return e.controller.t('Delete All')
                            })
                        }), i.createElement(a, {
                            predicate: function() {
                                return e.controller.isInEditListMode() && e.controller.hasDefaultState()
                            }
                        }, function() {
                            return i.createElement('span', {
                                class: i.const('dcg-btn-red dcg-action-reset'),
                                role: i.const('button'),
                                tabindex: i.const('0'),
                                onTap: function() {
                                    return e.controller.dispatch({
                                        type: 'reset-graph'
                                    })
                                }
                            }, function() {
                                return e.controller.t('Reset')
                            })
                        })), i.createElement('div', {
                            class: i.const('dcg-center-buttons')
                        }, i.createElement(o.Tooltip, {
                            tooltip: function() {
                                return e.controller.t('Undo (ctrl+z)')
                            },
                            gravity: function() {
                                return e.controller.isNarrow() ? 'n' : 's'
                            },
                            disabled: function() {
                                return !e.controller.canUndo()
                            }
                        }, i.createElement('span', {
                            class: function() {
                                return {
                                    'dcg-action-undo': !0,
                                    'dcg-icon-btn': !0,
                                    'dcg-disabled': !e.controller.canUndo()
                                }
                            },
                            role: i.const('button'),
                            tabindex: function() {
                                return e.controller.canUndo() ? 0 : -1
                            },
                            'aria-label': function() {
                                return e.controller.t('Undo')
                            },
                            onTap: function() {
                                return e.controller.dispatch({
                                    type: 'undo'
                                })
                            },
                            'aria-disabled': function() {
                                return !e.controller.canUndo()
                            }
                        }, i.createElement('i', {
                            class: i.const('dcg-icon-undo')
                        }))), i.createElement(o.Tooltip, {
                            tooltip: function() {
                                return e.controller.t('Redo (ctrl+y)')
                            },
                            gravity: function() {
                                return e.controller.isNarrow() ? 'n' : 's'
                            },
                            disabled: function() {
                                return !e.controller.canRedo()
                            }
                        }, i.createElement('span', {
                            class: function() {
                                return {
                                    'dcg-action-redo': !0,
                                    'dcg-icon-btn': !0,
                                    'dcg-disabled': !e.controller.canRedo()
                                }
                            },
                            role: i.const('button'),
                            tabindex: function() {
                                return e.controller.canRedo() ? 0 : -1
                            },
                            'aria-label': function() {
                                return e.controller.t('Redo')
                            },
                            onTap: function() {
                                return e.controller.dispatch({
                                    type: 'redo'
                                })
                            },
                            'aria-disabled': function() {
                                return !e.controller.canRedo()
                            }
                        }, i.createElement('i', {
                            class: i.const('dcg-icon-redo')
                        })))), i.createElement('div', {
                            class: i.const('dcg-right-buttons')
                        }, i.createElement(a, {
                            predicate: function() {
                                return !e.controller.isInEditListMode()
                            }
                        }, function() {
                            return i.createElement(o.Tooltip, {
                                tooltip: function() {
                                    return e.controller.t('Edit List')
                                },
                                gravity: function() {
                                    return e.controller.isNarrow() ? 'n' : 's'
                                }
                            }, i.createElement('span', {
                                class: i.const('dcg-icon-btn dcg-action-toggle-edit'),
                                handleEvent: i.const('true'),
                                role: i.const('button'),
                                tabindex: i.const('0'),
                                'aria-label': function() {
                                    return e.controller.t('Edit Expression List')
                                },
                                onTap: e.bindFn(e.toggleEditListMode),
                                manageFocus: e.const(s.manageFocusHelper({
                                    controller: e.controller,
                                    location: {
                                        type: 'edit-list-toggle'
                                    }
                                }))
                            }, i.createElement('i', {
                                class: i.const('dcg-icon-settings')
                            })))
                        }), i.createElement(a, {
                            predicate: function() {
                                return e.controller.isInEditListMode()
                            }
                        }, function() {
                            return i.createElement('span', {
                                class: i.const('dcg-btn-blue dcg-action-toggle-edit dcg-do-not-blur'),
                                handleEvent: i.const('true'),
                                role: i.const('button'),
                                tabindex: i.const('0'),
                                onTap: e.bindFn(e.toggleEditListMode),
                                manageFocus: e.const(s.manageFocusHelper({
                                    controller: e.controller,
                                    location: {
                                        type: 'edit-list-toggle'
                                    }
                                }))
                            }, function() {
                                return e.controller.t('Done')
                            })
                        }), i.createElement(a, {
                            predicate: function() {
                                return !e.controller.isInEditListMode() && e.controller.getGraphSettings().config.graphpaper
                            }
                        }, function() {
                            return i.createElement(o.Tooltip, {
                                tooltip: function() {
                                    return e.controller.t('Hide Expression List')
                                },
                                gravity: function() {
                                    return e.controller.isNarrow() ? 'nw' : 'sw'
                                }
                            }, i.const(' '), i.createElement('span', {
                                class: function() {
                                    return {
                                        'dcg-resize-list-btn': !0,
                                        'dcg-action-hideexpressions': !0,
                                        'dcg-icon-btn': !0,
                                        'dcg-rotated': e.controller.isNarrow()
                                    }
                                },
                                role: i.const('button'),
                                tabindex: i.const('0'),
                                'aria-label': function() {
                                    return e.controller.t('Hide Expression List')
                                },
                                onTap: function() {
                                    return e.controller.dispatch({
                                        type: 'hide-expressions-list'
                                    })
                                }
                            }, i.createElement('i', {
                                class: i.const('dcg-icon-hide')
                            })))
                        })))
                    }
                    ,
                    t.prototype.showRerandomize = function() {
                        return this.controller.anyItemDependsOnRandomSeed()
                    }
                    ,
                    t.prototype.showHamburger = function() {
                        return !!this.controller.getGraphSettings().config.showHamburger && (!this.controller.isInEditListMode() && !this.controller.isNarrow())
                    }
                    ,
                    t.prototype.clearSelectionOnMobile = function(e) {
                        e.wasHandled() || this.controller.dispatch({
                            type: 'set-none-selected'
                        })
                    }
                    ,
                    t.prototype.toggleEditListMode = function(e) {
                        this.controller.dispatch({
                            type: 'set-edit-list-mode',
                            isEditListMode: !this.controller.isInEditListMode(),
                            focusExpressionList: !1
                        }),
                        'keyboard' === e.device && this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'edit-list-toggle'
                            }
                        })
                    }
                    ,
                    t
                }(i.Class);
                t.default = l
            }),
            r('main/load-graph-from-link', ['require', 'exports', 'core/graphing-calc/migrate-state', 'jquery'], function(e, t, r, n) {
                'use strict';
                function i(e, t, i, o) {
                    var s = !1;
                    e.dispatch({
                        type: 'toast/show',
                        toast: {
                            message: e.t('Importing graph...'),
                            hideAfter: 0,
                            toastStyle: 'cover',
                            onHide: function() {
                                s = !0
                            }
                        }
                    });
                    var a = e.getState()
                    , l = function() {
                        s || e.dispatch({
                            type: 'toast/show',
                            toast: {
                                message: e.t('Error importing graph. Check the URL?'),
                                toastStyle: 'error',
                                hideAfter: 12e3
                            }
                        })
                    }
                    , c = function(e) {
                        if (!e || !e.expressions || !e.expressions.list)
                            return !1;
                        for (var t = e.expressions.list, r = 0; r < t.length; r++)
                            if ('folder' === t[r].type)
                                return !1;
                        return !0
                    }
                    , u = function(t, r) {
                        if (!s) {
                            var n = e.getSelectedItem();
                            if (!c(t))
                                return void e.dispatch({
                                    type: 'toast/show',
                                    toast: {
                                        message: e.t('Only graphs without folders can be inserted into a folder.'),
                                        toastStyle: 'error',
                                        hideAfter: 12e3
                                    }
                                });
                            n && e.dispatch({
                                type: 'set-folder-title',
                                id: n.id,
                                title: r
                            }),
                            t.expressions.list.forEach(function(t) {
                                t.id = e.generateId()
                            }),
                            e.dispatch({
                                type: 'insert-several-expressions',
                                expressions: t.expressions.list
                            }),
                            e.dispatch({
                                type: 'toast/show',
                                toast: {
                                    message: e.t('Graph imported!')
                                }
                            })
                        }
                    }
                    , d = function(t) {
                        s || (e.dispatch({
                            type: 'set-state',
                            state: t
                        }),
                        e.dispatch({
                            type: 'toast/show',
                            toast: {
                                message: e.t('Graph imported!'),
                                undoCallback: function() {
                                    e.dispatch({
                                        type: 'set-state',
                                        state: a
                                    })
                                }
                            }
                        }))
                    };
                    n.getJSON(t).done(function(e) {
                        var t = r.migrateToLatest(e.state);
                        o(t, function(t, r) {
                            t || !r ? l() : 'set-state' === i ? d(r) : u(r, e.title)
                        })
                    }).fail(l)
                }
                Object.defineProperty(t, '__esModule', {
                    value: !0
                }),
                t.default = i
            }),
            r('lib/get-clipboard-data', ['require', 'exports'], function(e, t) {
                'use strict';
                function r(e) {
                    return window.clipboardData && window.clipboardData.getData ? window.clipboardData.getData('Text') : e && e.clipboardData && e.clipboardData.getData ? e.clipboardData.getData('text/plain') : void 0
                }
                Object.defineProperty(t, '__esModule', {
                    value: !0
                }),
                t.default = r
            }),
            r('loadcss!expressions/exp-list-resizer', function() {}),
            r('expressions/exp-list-resizer', ['require', 'exports', 'tslib', 'dcgview', 'jquery', 'underscore', 'loadcss!./exp-list-resizer'], function(e, t, r, n, i, o) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var s = n.Components.If
                , a = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.guid = o.uniqueId('dcg-exp-list-resize')
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement(s, {
                            predicate: this.bindFn(this.isVisible)
                        }, function() {
                            return n.createElement('div', {
                                class: n.const('dcg-exp-list-resizer'),
                                onTapStart: e.bindFn(e.onTapStart)
                            })
                        })
                    }
                    ,
                    t.prototype.isVisible = function() {
                        return !this.props.controller().expressionsAreFullWidth() && this.props.controller().isListVisible()
                    }
                    ,
                    t.prototype.onTapStart = function(e) {
                        var t = this;
                        this.initialWidth = this.props.controller().getExpListWidth(),
                        this.initialLeft = e.changedTouches[0].clientX,
                        i(document).on('dcg-tapmove.' + this.guid, function(e) {
                            if (void 0 !== t.initialLeft && void 0 !== t.initialWidth) {
                                var r = e.changedTouches[0].clientX - t.initialLeft + t.initialWidth;
                                t.props.controller().dispatch({
                                    type: 'resize-exp-list',
                                    expListWidth: r
                                })
                            }
                        }),
                        i(document).on('dcg-tapend.' + this.guid, this.bindFn(this.onTapEnd)),
                        i(document).on('dcg-tapcancel.' + this.guid, this.bindFn(this.onTapEnd))
                    }
                    ,
                    t.prototype.onTapEnd = function() {
                        i(document).off('.' + this.guid),
                        this.initialLeft = void 0,
                        this.initialWidth = void 0
                    }
                    ,
                    t
                }(n.Class);
                t.ExpListResizer = a
            }),
            r('loadcss!expressions/color-menu', function() {}),
            r('expressions/color-menu', ['require', 'exports', 'tslib', 'dcgview', 'underscore', 'core/lib/color-helpers', 'expressions/colors', './circular-icon-view', 'loadcss!./color-menu'], function(e, t, r, n, i, o, s, a) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var l = n.Components
                , c = l.For
                , u = l.If
                , d = l.Input
                , p = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', null, n.createElement(c, {
                            each: function() {
                                return i.values(e.controller.getColors())
                            }
                        }, n.createElement('div', {
                            class: n.const('dcg-color-menu dcg-do-not-blur')
                        }, function(t) {
                            return n.createElement('span', {
                                class: n.const('dcg-color-option'),
                                handleevent: n.const('true'),
                                role: n.const('button'),
                                tabindex: n.const(0),
                                'aria-label': function() {
                                    return s.getColorName(e.controller, t)
                                },
                                'aria-pressed': function() {
                                    return e.props.selectedColor() === t
                                },
                                onTap: function() {
                                    return e.props.onColorSelected(t)
                                }
                            }, n.createElement(a.CircularIconView, {
                                iconType: function() {
                                    return e.props.selectedColor() === t ? 'check' : 'none'
                                },
                                backgroundColor: function() {
                                    return t
                                }
                            }))
                        })), n.createElement(u, {
                            predicate: function() {
                                return e.controller.canUseAdvancedStyling()
                            }
                        }, function() {
                            return n.createElement('div', {
                                class: n.const('dcg-advanced-color-styling')
                            }, n.const('Hex:'), n.createElement(d, {
                                class: function() {
                                    return {
                                        'dcg-error': !o.isValidHexColor(e.props.selectedColor())
                                    }
                                },
                                value: e.props.selectedColor,
                                onInput: function(t) {
                                    e.props.onColorSelected(t)
                                }
                            }))
                        }))
                    }
                    ,
                    t
                }(n.Class);
                t.default = p
            }),
            r('loadcss!expressions/toggle-view', function() {}),
            r('expressions/toggle-view', ['require', 'exports', 'tslib', 'dcgview', 'loadcss!./toggle-view'], function(e, t, r, n) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var i = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-toggle-view': !0,
                                    'dcg-toggled': e.props.toggled()
                                }
                            },
                            'aria-label': function() {
                                return e.props.ariaLabel()
                            },
                            role: n.const('checkbox'),
                            tabindex: n.const('0'),
                            'aria-checked': function() {
                                return e.props.toggled()
                            },
                            toggled: function() {
                                return e.props.toggled()
                            },
                            onTap: this.bindFn(this.props.onChange)
                        }, n.createElement('div', {
                            class: n.const('dcg-toggle-switch')
                        }))
                    }
                    ,
                    t
                }(n.Class);
                t.default = i
            }),
            r('expressions/expression_options_view', ['require', 'exports', 'tslib', 'dcgview', 'underscore', 'core/lib/dragmode', './color-menu', 'core/math/expression-types', 'graphing-calc/models/expression', 'core/types/styles', 'expressions/toggle-view', 'dcgview-helpers/checkbox', './circular-icon-view', 'lib/aria', 'dcgview-helpers/mathquill-view', 'core/types/opacity', 'core/types/line-width'], function(e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g, m) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var y = n.Components
                , v = y.For
                , b = y.If
                , x = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller(),
                        this.model = this.props.model(),
                        this.id = this.model.id
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-exp-options-menu': !0,
                                    'dcg-options-menu': !0,
                                    'dcg-colors-only': 0 === e.sections().length
                                }
                            },
                            role: n.const('group'),
                            'aria-label': function() {
                                return e.controller.t('Options Menu')
                            },
                            didMount: function() {
                                h.alert(e.controller.t('Options menu open.'))
                            },
                            didUnmount: function() {
                                h.alert(e.controller.t('Options menu closed.'))
                            }
                        }, n.createElement('div', {
                            class: n.const('dcg-triangle')
                        }), n.createElement('div', {
                            class: n.const('dcg-options-menu-column-left')
                        }, n.createElement(b, {
                            predicate: function() {
                                return e.sections().indexOf('pointStyles') >= 0
                            }
                        }, function() {
                            return n.createElement('div', {
                                class: n.const('dcg-styles-div dcg-options-menu-section dcg-styles-section')
                            }, n.createElement('div', {
                                class: function() {
                                    return {
                                        'dcg-styles-menu': !0,
                                        'dcg-dividing-line-after': e.hasNextSection('pointStyles')
                                    }
                                },
                                role: n.const('group'),
                                'aria-label': function() {
                                    return e.controller.t('Point Style Options')
                                }
                            }, n.createElement('span', {
                                role: n.const('heading'),
                                'aria-level': n.const('2'),
                                class: n.const('dcg-toggle-title')
                            }, function() {
                                return e.shouldPreventPointsToggle() ? e.controller.t('Style') : e.controller.t('Points')
                            }), n.createElement(b, {
                                predicate: function() {
                                    return !e.shouldPreventPointsToggle()
                                }
                            }, function() {
                                return n.createElement(u.default, {
                                    ariaLabel: function() {
                                        return e.controller.t('Points')
                                    },
                                    toggled: function() {
                                        return e.getDisplayProps().points
                                    },
                                    onChange: e.bindFn(e.onTogglePoints)
                                })
                            }), n.createElement(b, {
                                predicate: function() {
                                    return e.getDisplayProps().points || e.shouldPreventPointsToggle()
                                }
                            }, function() {
                                return n.createElement(v, {
                                    each: e.bindFn(e.getValidPointStyles)
                                }, n.createElement('div', {
                                    class: n.const('dcg-style-icons')
                                }, function(t) {
                                    return n.createElement('div', {
                                        class: n.const('dcg-style-icon-container'),
                                        onTap: function() {
                                            return e.onPointStyleSelected(t)
                                        },
                                        role: n.const('button'),
                                        tabindex: n.const('0'),
                                        'aria-label': function() {
                                            return t
                                        },
                                        'aria-pressed': function() {
                                            return e.model.pointStyle !== t
                                        }
                                    }, n.createElement(p.CircularIconView, {
                                        backgroundColor: function() {
                                            return e.model.color
                                        },
                                        semiTransparent: function() {
                                            return e.model.pointStyle !== t
                                        },
                                        iconType: function() {
                                            return 'CROSS' === t ? 'point-cross' : 'OPEN' === t ? 'point-open' : 'point-default'
                                        }
                                    }))
                                }))
                            })))
                        }), n.createElement(b, {
                            predicate: function() {
                                return e.sections().indexOf('pointSizes') >= 0
                            }
                        }, function() {
                            return n.createElement('div', {
                                class: n.const('dcg-styles-div dcg-options-menu-section dcg-sizes-section')
                            }, n.createElement('div', {
                                class: function() {
                                    return {
                                        'dcg-styles-menu': !0,
                                        'dcg-dividing-line-after': e.hasNextSection('pointSizes')
                                    }
                                },
                                role: n.const('group'),
                                'aria-label': function() {
                                    return e.controller.t('Size Options')
                                }
                            }, n.createElement('span', {
                                role: n.const('heading'),
                                'aria-level': n.const('2'),
                                class: n.const('dcg-toggle-title')
                            }, function() {
                                return e.controller.t('Size')
                            }), n.createElement(v, {
                                each: e.bindFn(e.getValidPointSizes)
                            }, n.createElement('div', {
                                class: n.const('dcg-style-icons')
                            }, function(t) {
                                return n.createElement('div', {
                                    class: n.const('dcg-style-icon-container'),
                                    onTap: function() {
                                        return e.onDotplotPointSizeSelected(t)
                                    },
                                    role: n.const('button'),
                                    tabindex: n.const('0'),
                                    'aria-label': function() {
                                        return t
                                    },
                                    'aria-pressed': function() {
                                        return e.model.vizProps.dotplotSize !== t
                                    }
                                }, n.createElement(p.CircularIconView, {
                                    backgroundColor: function() {
                                        return e.model.color
                                    },
                                    semiTransparent: function() {
                                        return e.model.vizProps.dotplotSize !== t
                                    },
                                    iconType: function() {
                                        return 'CROSS' === e.model.pointStyle ? 'point-cross' : 'OPEN' === e.model.pointStyle ? 'point-open' : 'point-default'
                                    },
                                    iconModifier: function() {
                                        return 'medium' === t ? 'medium' : 'large' === t ? 'large' : 'small'
                                    }
                                }))
                            }))))
                        }), n.createElement(b, {
                            predicate: function() {
                                return e.sections().indexOf('lineStyles') >= 0
                            }
                        }, function() {
                            return n.createElement('div', {
                                class: n.const('dcg-styles-div dcg-options-menu-section dcg-lines-menu')
                            }, n.createElement('div', {
                                class: function() {
                                    return {
                                        'dcg-styles-menu': !0,
                                        'dcg-dividing-line-after': e.hasNextSection('lineStyles')
                                    }
                                },
                                role: n.const('group'),
                                'aria-label': function() {
                                    return e.controller.t('Line Style Options')
                                }
                            }, n.createElement('span', {
                                role: n.const('heading'),
                                'aria-level': n.const('2'),
                                class: n.const('dcg-toggle-title')
                            }, function() {
                                return e.shouldShowLinesToggle() ? e.controller.t('Lines') : e.controller.t('Style')
                            }), n.createElement(b, {
                                predicate: function() {
                                    return e.shouldShowLinesToggle()
                                }
                            }, function() {
                                return n.createElement(u.default, {
                                    ariaLabel: function() {
                                        return e.controller.t('Lines')
                                    },
                                    toggled: function() {
                                        return e.getDisplayProps().lines
                                    },
                                    onChange: e.bindFn(e.onToggleLines)
                                })
                            }), n.createElement(b, {
                                predicate: function() {
                                    return e.shouldShowLineStyles()
                                }
                            }, function() {
                                return n.createElement(v, {
                                    each: e.bindFn(e.getValidLineStyles)
                                }, n.createElement('div', {
                                    class: n.const('dcg-style-icons')
                                }, function(t) {
                                    return n.createElement('div', {
                                        class: n.const('dcg-style-icon-container'),
                                        onTap: function() {
                                            return e.onLineStyleSelected(t)
                                        },
                                        role: n.const('button'),
                                        tabindex: n.const('0'),
                                        'aria-label': function() {
                                            return t
                                        },
                                        'aria-pressed': function() {
                                            return e.model.lineStyle !== t
                                        }
                                    }, n.createElement(p.CircularIconView, {
                                        backgroundColor: function() {
                                            return e.model.color
                                        },
                                        semiTransparent: function() {
                                            return e.model.lineStyle !== t
                                        },
                                        iconType: function() {
                                            return 'DOTTED' === t ? 'graph-dotted' : 'DASHED' === t ? 'graph-dashed' : 'graph-default'
                                        }
                                    }))
                                }))
                            }), n.createElement(b, {
                                predicate: function() {
                                    return e.shouldShowLineStyles() && e.controller.canUseAdvancedStyling() && !e.isRegresssion()
                                }
                            }, function() {
                                return n.createElement('div', {
                                    class: n.const('dcg-variable-width')
                                }, n.const('Width:'), n.createElement(f.default, {
                                    latex: function() {
                                        return e.model.lineWidth
                                    },
                                    placeholder: function() {
                                        return '' + m.DEFAULT
                                    },
                                    isFocused: function() {
                                        return 'linewidth' === e.getFocusedInput()
                                    },
                                    capExpressionSize: function() {
                                        return !!e.controller.getGraphSettings().config.capExpressionSize
                                    },
                                    selectOnFocus: e.const(!0),
                                    config: e.const({}),
                                    getAriaLabel: function() {
                                        return e.controller.t('Line Width: ')
                                    },
                                    getAriaPostLabel: e.const(''),
                                    hasError: function() {
                                        return !l.isLineWidthValid(e.model)
                                    },
                                    onUserChangedLatex: function(t) {
                                        return e.dispatchLineWidthLatexIfChanged(t)
                                    },
                                    onExpressionSizeExceeded: function() {
                                        return e.controller.dispatch({
                                            type: 'expression-size-exceeded'
                                        })
                                    },
                                    onFocusedChanged: function(t) {
                                        return e.handleFocusedChanged(t, 'linewidth')
                                    },
                                    dataLabelAttributeValue: e.const('line-width')
                                }))
                            })))
                        }), n.createElement(b, {
                            predicate: function() {
                                return e.sections().indexOf('dragModes') >= 0
                            }
                        }, function() {
                            return n.createElement('div', {
                                class: function() {
                                    return {
                                        'dcg-styles-menu': !0,
                                        'dcg-dividing-line-after': e.hasNextSection('dragModes')
                                    }
                                },
                                role: n.const('group'),
                                'aria-label': function() {
                                    return e.controller.t('Drag Options')
                                }
                            }, n.createElement('div', {
                                class: n.const('dcg-drag-menu')
                            }, n.createElement('span', {
                                role: n.const('heading'),
                                'aria-level': n.const('2'),
                                class: n.const('dcg-toggle-title')
                            }, function() {
                                return e.controller.t('Drag')
                            }), n.createElement(u.default, {
                                ariaLabel: function() {
                                    return e.controller.t('Drag')
                                },
                                toggled: function() {
                                    return e.model.reconciledDragMode !== o.DragMode.NONE
                                },
                                onChange: e.bindFn(e.onToggleDrag)
                            }), n.createElement(b, {
                                predicate: function() {
                                    return e.model.reconciledDragMode !== o.DragMode.NONE
                                }
                            }, function() {
                                return n.createElement(v, {
                                    each: function() {
                                        return e.getUIDragModes()
                                    }
                                }, n.createElement('div', {
                                    class: n.const('dcg-style-icons')
                                }, function(t) {
                                    return n.createElement('div', {
                                        class: function() {
                                            return {
                                                'dcg-style-icon-container': !0,
                                                'dcg-disabled': e.isDisabled(t)
                                            }
                                        },
                                        onTap: function() {
                                            return e.onDragModeSelected(t)
                                        },
                                        role: n.const('button'),
                                        tabindex: function() {
                                            return e.isDisabled(t) ? -1 : 0
                                        },
                                        'aria-label': function() {
                                            return t
                                        },
                                        'aria-pressed': function() {
                                            return e.model.reconciledDragMode !== t
                                        }
                                    }, n.createElement(p.CircularIconView, {
                                        backgroundColor: function() {
                                            return e.isDisabled(t) ? '#bbb' : e.model.color
                                        },
                                        semiTransparent: function() {
                                            return e.model.reconciledDragMode !== t
                                        },
                                        iconType: function() {
                                            return 'X' === t ? 'movable-horizontal' : 'Y' === t ? 'movable-vertical' : 'movable-both'
                                        }
                                    }))
                                }))
                            })))
                        }), n.createElement(b, {
                            predicate: function() {
                                return e.sections().indexOf('isFillable') >= 0
                            }
                        }, function() {
                            return n.createElement('div', {
                                class: n.const('dcg-styles-div dcg-options-menu-section')
                            }, n.createElement('div', {
                                class: n.const('dcg-styles-menu')
                            }, n.createElement(d.Checkbox, {
                                checked: function() {
                                    return e.getDisplayProps().fill
                                },
                                onChange: e.bindFn(e.onToggleFill),
                                ariaLabel: function() {
                                    return e.controller.t('Fill')
                                }
                            }, function() {
                                return e.controller.t('Fill')
                            }), n.createElement(b, {
                                predicate: function() {
                                    return e.getDisplayProps().fill && e.controller.canUseAdvancedStyling()
                                }
                            }, function() {
                                return n.createElement('div', {
                                    class: n.const('dcg-variable-opacity')
                                }, n.const('Opacity:'), n.createElement(f.default, {
                                    latex: function() {
                                        return e.model.fillOpacity
                                    },
                                    placeholder: function() {
                                        return '' + g.DEFAULT
                                    },
                                    isFocused: function() {
                                        return 'opacity' === e.getFocusedInput()
                                    },
                                    capExpressionSize: function() {
                                        return !!e.controller.getGraphSettings().config.capExpressionSize
                                    },
                                    selectOnFocus: e.const(!0),
                                    config: e.const({}),
                                    getAriaLabel: function() {
                                        return e.controller.t('Fill Opacity: ')
                                    },
                                    getAriaPostLabel: e.const(''),
                                    hasError: function() {
                                        return !l.isFillOpacityValid(e.model)
                                    },
                                    onUserChangedLatex: function(t) {
                                        return e.dispatchOpacityLatexIfChanged(t)
                                    },
                                    onExpressionSizeExceeded: function() {
                                        return e.controller.dispatch({
                                            type: 'expression-size-exceeded'
                                        })
                                    },
                                    onFocusedChanged: function(t) {
                                        return e.handleFocusedChanged(t, 'opacity')
                                    },
                                    dataLabelAttributeValue: e.const('fill-opacity'),
                                    needsSystemKeypad: function() {
                                        return !e.controller.isKeypadEnabled()
                                    }
                                }))
                            })))
                        }), n.createElement(b, {
                            predicate: function() {
                                return e.sections().indexOf('isClickable') >= 0
                            }
                        }, function() {
                            return n.createElement('div', null, n.createElement(d.Checkbox, {
                                checked: function() {
                                    return !!e.model.clickableInfo.enabled
                                },
                                onChange: function(t) {
                                    e.controller.dispatch({
                                        type: 'set-clickableinfo-prop',
                                        id: e.model.id,
                                        prop: 'enabled',
                                        value: t
                                    })
                                },
                                ariaLabel: function() {
                                    return e.controller.t('Clickable')
                                }
                            }, function() {
                                return e.controller.t('Clickable')
                            }))
                        })), n.createElement('div', {
                            class: n.const('dcg-options-menu-column-right')
                        }, n.createElement('div', {
                            class: n.const('dcg-colors-div dcg-options-menu-section'),
                            role: n.const('group'),
                            'aria-label': function() {
                                return e.controller.t('Color Options')
                            }
                        }, n.createElement('div', {
                            role: n.const('heading'),
                            'aria-level': n.const('2'),
                            class: n.const('dcg-title')
                        }, function() {
                            return e.controller.t('Color')
                        }), n.createElement(s.default, {
                            controller: function() {
                                return e.props.controller()
                            },
                            selectedColor: function() {
                                return e.model.color
                            },
                            onColorSelected: this.bindFn(this.onColorSelected)
                        }))))
                    }
                    ,
                    t.prototype.getFocusedInput = function() {
                        var e = this.controller.getFocusLocation();
                        if (e && 'expression-menu' === e.type && e.id === this.id)
                            return e.location
                    }
                    ,
                    t.prototype.handleFocusedChanged = function(e, t) {
                        e ? this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'expression-menu',
                                id: this.id,
                                location: t
                            }
                        }) : this.controller.dispatch({
                            type: 'blur-focus-location',
                            location: {
                                type: 'expression-menu',
                                id: this.id,
                                location: t
                            }
                        })
                    }
                    ,
                    t.prototype.dispatchOpacityLatexIfChanged = function(e) {
                        this.model.fillOpacity !== e && this.controller.dispatch({
                            type: 'set-item-fillopacity',
                            id: this.id,
                            fillOpacity: e
                        })
                    }
                    ,
                    t.prototype.dispatchLineWidthLatexIfChanged = function(e) {
                        this.model.lineWidth !== e && this.controller.dispatch({
                            type: 'set-item-linewidth',
                            id: this.id,
                            lineWidth: e
                        })
                    }
                    ,
                    t.prototype.hasNextSection = function(e) {
                        var t = this.sections();
                        return t.indexOf(e) < t.length - 1
                    }
                    ,
                    t.prototype.sections = function() {
                        if (l.isToplevelDistribution(this.model))
                            return [];
                        var e = [];
                        return this.getValidPointStyles().length > 0 && e.push('pointStyles'),
                        this.shouldShowDotplotPointSizes() && e.push('pointSizes'),
                        this.getValidLineStyles().length > 0 && !l.isSinglePoint(this.model) && e.push('lineStyles'),
                        this.getUIDragModes().length > 0 && e.push('dragModes'),
                        (l.isPolygon(this.model) || l.isParametric(this.model)) && e.push('isFillable'),
                        this.shouldShowClickable() && e.push('isClickable'),
                        e
                    }
                    ,
                    t.prototype.getValidPointStyles = function() {
                        return l.isPointOrPointList(this.model) || l.isDotPlot(this.model) ? [c.PointStyle.POINT, c.PointStyle.OPEN, c.PointStyle.CROSS] : []
                    }
                    ,
                    t.prototype.getValidPointSizes = function() {
                        return l.isDotPlot(this.model) ? ['small', 'medium', 'large'] : []
                    }
                    ,
                    t.prototype.shouldShowDotplotPointSizes = function() {
                        return this.getValidPointSizes().length > 0
                    }
                    ,
                    t.prototype.shouldShowClickable = function() {
                        return !!this.controller.canAuthorClickableObjects() && l.isClickableAllowed(this.model)
                    }
                    ,
                    t.prototype.getUIDragModes = function() {
                        return this.model.formula.move_strategy ? [o.DragMode.X, o.DragMode.Y, o.DragMode.XY] : []
                    }
                    ,
                    t.prototype.getValidLineStyles = function() {
                        return l.isVisualization(this.model) ? [] : this.model.formula.is_inequality || l.isSinglePoint(this.model) ? [] : [c.LineStyle.SOLID, c.LineStyle.DASHED, c.LineStyle.DOTTED]
                    }
                    ,
                    t.prototype.shouldPreventPointsToggle = function() {
                        return l.isSinglePoint(this.model) || l.isDotPlot(this.model)
                    }
                    ,
                    t.prototype.onToggleFill = function() {
                        this.controller.dispatch({
                            type: 'set-item-fill',
                            id: this.id,
                            fill: !this.getDisplayProps().fill
                        })
                    }
                    ,
                    t.prototype.onColorSelected = function(e) {
                        this.controller.dispatch({
                            type: 'set-item-color',
                            id: this.id,
                            color: e
                        })
                    }
                    ,
                    t.prototype.shouldShowLinesToggle = function() {
                        return l.isPointOrPointList(this.model) || l.isParametric(this.model) || l.isPolygon(this.model)
                    }
                    ,
                    t.prototype.shouldShowLineStyles = function() {
                        return this.getDisplayProps().lines || !this.shouldShowLinesToggle()
                    }
                    ,
                    t.prototype.onTogglePoints = function() {
                        this.controller.dispatch({
                            type: 'set-item-points',
                            id: this.id,
                            points: !this.getDisplayProps().points
                        })
                    }
                    ,
                    t.prototype.onPointStyleSelected = function(e) {
                        this.model.pointStyle !== e && this.controller.dispatch({
                            type: 'set-item-pointstyle',
                            id: this.id,
                            pointStyle: e
                        })
                    }
                    ,
                    t.prototype.onDotplotPointSizeSelected = function(e) {
                        this.model.vizProps.dotplotSize !== e && this.controller.dispatch({
                            type: 'set-visualization-prop',
                            id: this.id,
                            prop: 'dotplotSize',
                            latex: e
                        })
                    }
                    ,
                    t.prototype.onToggleLines = function() {
                        this.controller.dispatch({
                            type: 'set-item-lines',
                            id: this.id,
                            lines: !this.getDisplayProps().lines
                        })
                    }
                    ,
                    t.prototype.onLineStyleSelected = function(e) {
                        this.model.lineStyle !== e && this.controller.dispatch({
                            type: 'set-item-linestyle',
                            id: this.id,
                            lineStyle: e
                        })
                    }
                    ,
                    t.prototype.isDisabled = function(e) {
                        var t = this.controller.getEnabledDragModesForItem(this.id);
                        return !i.contains(t, e)
                    }
                    ,
                    t.prototype.getDragMode = function() {
                        return this.model.reconciledDragMode || this.model.dragMode
                    }
                    ,
                    t.prototype.getDisplayProps = function() {
                        var e = this.model
                        , t = e.points
                        , r = e.lines
                        , n = e.fill;
                        return a.getReconciledExpressionProps(this.model.formula.expression_type, {
                            points: t,
                            lines: r,
                            fill: n
                        })
                    }
                    ,
                    t.prototype.onToggleDrag = function() {
                        var e = this.model.reconciledDragMode !== o.DragMode.NONE ? o.DragMode.NONE : o.DragMode.XY;
                        this.controller.dispatch({
                            type: 'set-item-dragmode',
                            id: this.id,
                            dragMode: e
                        })
                    }
                    ,
                    t.prototype.onDragModeSelected = function(e) {
                        this.isDisabled(e) || this.controller.dispatch({
                            type: 'set-item-dragmode',
                            id: this.id,
                            dragMode: e
                        })
                    }
                    ,
                    t.prototype.isRegresssion = function() {
                        return this.model.formula && this.model.formula.is_regression
                    }
                    ,
                    t
                }(n.Class);
                t.ExpressionOptionsMenuView = x
            }),
            r('expressions/image_options_view', ['require', 'exports', 'tslib', 'dcgview', 'dcgview-helpers/checkbox', './circular-icon-view', './image-upload-view', 'lib/coerce-url'], function(e, t, r, n, i, o, s, a) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var l = n.Components
                , c = l.For
                , u = l.If
                , d = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return this.controller = this.props.controller(),
                        this.model = this.props.model(),
                        this.id = this.model.id,
                        n.createElement('div', {
                            class: n.const('dcg-exp-options-menu dcg-image-options-menu dcg-options-menu')
                        }, n.createElement('div', {
                            class: n.const('dcg-triangle')
                        }), n.createElement('div', {
                            class: n.const('dcg-opacities-menu dcg-dividing-line-after')
                        }, n.createElement('div', {
                            role: n.const('heading'),
                            'aria-level': n.const('2'),
                            class: n.const('dcg-title')
                        }, function() {
                            return e.controller.t('Opacity')
                        }), n.createElement(c, {
                            each: function() {
                                return e.controller.getImageOpacities()
                            }
                        }, n.createElement('div', {
                            class: n.const('dcg-opacities-menu'),
                            role: n.const('group'),
                            'aria-label': function() {
                                return e.controller.t('Opacity')
                            }
                        }, function(t) {
                            return n.createElement('span', {
                                class: n.const('dcg-opacity-option'),
                                role: n.const('button'),
                                tabindex: n.const(0),
                                'aria-label': function() {
                                    return 'opacity: ' + t
                                },
                                'aria-pressed': function() {
                                    return e.isOpacitySelected(t)
                                },
                                handleevent: n.const('true'),
                                onTap: function() {
                                    return e.onSelectOpacity(t)
                                }
                            }, n.createElement(o.CircularIconView, {
                                backgroundImage: e.bindFn(e.getBackgroundImage),
                                iconType: function() {
                                    return e.isOpacitySelected(t) ? 'check' : 'none'
                                },
                                backgroundOpacity: function() {
                                    return parseFloat(t)
                                }
                            }))
                        }))), n.createElement('div', {
                            class: n.const('dcg-styles-div dcg-options-menu-section')
                        }, n.createElement('div', {
                            class: n.const('dcg-styles-menu'),
                            role: n.const('group'),
                            'aria-label': function() {
                                return e.controller.t('Styles')
                            }
                        }, n.createElement(i.Checkbox, {
                            checked: function() {
                                return !e.model.foreground
                            },
                            onChange: this.bindFn(this.onToggleForeground),
                            ariaLabel: function() {
                                return e.controller.t('Place behind graphs')
                            }
                        }, function() {
                            return e.controller.t('Place behind graphs')
                        })), n.createElement(u, {
                            predicate: this.bindFn(this.shouldShowClickable)
                        }, function() {
                            return n.createElement('div', null, n.createElement(i.Checkbox, {
                                checked: function() {
                                    return !!e.model.clickableInfo.enabled
                                },
                                onChange: function(t) {
                                    e.controller.dispatch({
                                        type: 'set-clickableinfo-prop',
                                        id: e.model.id,
                                        prop: 'enabled',
                                        value: t
                                    })
                                },
                                ariaLabel: function() {
                                    return e.controller.t('Clickable')
                                }
                            }, function() {
                                return e.controller.t('Clickable')
                            }))
                        }), n.createElement(u, {
                            predicate: function() {
                                return e.controller.canUseAdvancedStyling()
                            }
                        }, function() {
                            return n.createElement(s.ImageUploadView, {
                                controller: function() {
                                    return e.controller
                                },
                                ariaLabel: function() {
                                    return e.controller.t('Change Image')
                                },
                                onFileChange: function(t) {
                                    return e.insertFiles(t)
                                },
                                location: e.const({
                                    type: 'change-image-btn',
                                    id: e.id
                                })
                            }, n.createElement('div', {
                                class: n.const('dcg-action-changeimage')
                            }, function() {
                                return e.controller.t('Change Image')
                            }))
                        })))
                    }
                    ,
                    t.prototype.onToggleForeground = function(e) {
                        this.controller.dispatch({
                            type: 'set-image-in-foreground',
                            id: this.id,
                            foreground: !e
                        })
                    }
                    ,
                    t.prototype.onSelectOpacity = function(e) {
                        this.controller.dispatch({
                            type: 'set-image-opacity',
                            id: this.id,
                            opacity: e
                        })
                    }
                    ,
                    t.prototype.isOpacitySelected = function(e) {
                        return this.model.opacity === e
                    }
                    ,
                    t.prototype.insertFiles = function(e) {
                        this.controller.dispatch({
                            type: 'change-image',
                            files: e,
                            id: this.id
                        })
                    }
                    ,
                    t.prototype.getBackgroundImage = function() {
                        return this.model.image_url === this.lastURL ? this.lastEncodedURL : (this.lastURL = this.model.image_url,
                        this.lastEncodedURL = 'url("' + a.coerceURL(this.model.image_url) + '")',
                        this.lastEncodedURL)
                    }
                    ,
                    t.prototype.shouldShowClickable = function() {
                        return !!this.controller.canAuthorClickableObjects()
                    }
                    ,
                    t
                }(n.Class);
                t.ImageOptionsView = d
            }),
            r('expressions/tables/table_column_menu_view', ['require', 'exports', 'tslib', 'dcgview', 'expressions/color-menu', 'core/lib/dragmode', 'core/types/styles', 'expressions/toggle-view', '../circular-icon-view'], function(e, t, r, n, i, o, s, a, l) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var c = n.Components
                , u = c.For
                , d = c.If
                , p = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return this.controller = this.props.controller(),
                        this.model = this.props.model(),
                        this.columnId = this.model.id,
                        this.tableModel = this.model.table,
                        this.tableId = this.tableModel.id,
                        n.createElement('div', {
                            class: n.const('dcg-table-column-menu dcg-options-menu')
                        }, n.createElement('div', {
                            class: n.const('dcg-triangle')
                        }), n.createElement('div', {
                            class: n.const('dcg-options-menu-column-left')
                        }, n.createElement('div', {
                            class: n.const('dcg-options-menu-section')
                        }, n.createElement('span', {
                            class: n.const('dcg-toggle-title')
                        }, function() {
                            return e.controller.t('Points')
                        }), n.createElement(a.default, {
                            ariaLabel: function() {
                                return e.controller.t('Points')
                            },
                            toggled: function() {
                                return e.model.points
                            },
                            onChange: function() {
                                return e.onTogglePoints(!e.model.points)
                            }
                        }), n.createElement(d, {
                            predicate: function() {
                                return e.model.points
                            }
                        }, function() {
                            return n.createElement(u, {
                                each: function() {
                                    return e.controller.getPointStyles()
                                }
                            }, n.createElement('div', {
                                class: n.const('dcg-style-icons')
                            }, function(t) {
                                return n.createElement('div', {
                                    class: n.const('dcg-style-icon-container'),
                                    onTap: function() {
                                        return e.onPointStyleSelected(t)
                                    }
                                }, n.createElement(l.CircularIconView, {
                                    backgroundColor: function() {
                                        return e.model.color
                                    },
                                    semiTransparent: function() {
                                        return e.model.pointStyle !== t
                                    },
                                    iconType: function() {
                                        return 'CROSS' === t ? 'point-cross' : 'OPEN' === t ? 'point-open' : 'point-default'
                                    }
                                }))
                            }))
                        })), n.createElement('div', {
                            class: n.const('dcg-options-menu-section')
                        }, n.createElement('span', {
                            class: n.const('dcg-toggle-title')
                        }, function() {
                            return e.controller.t('Lines')
                        }), n.createElement(a.default, {
                            ariaLabel: function() {
                                return e.controller.t('Lines')
                            },
                            toggled: function() {
                                return e.model.lines
                            },
                            onChange: function() {
                                return e.onToggleLines(!e.model.lines)
                            }
                        }), n.createElement(d, {
                            predicate: function() {
                                return e.model.lines
                            }
                        }, function() {
                            return n.createElement('div', {
                                class: n.const('dcg-line-options')
                            }, n.createElement(u, {
                                each: function() {
                                    return e.controller.getLineStyles()
                                }
                            }, n.createElement('div', {
                                class: n.const('dcg-style-icons')
                            }, function(t) {
                                return n.createElement('div', {
                                    class: n.const('dcg-style-icon-container'),
                                    onTap: function() {
                                        return e.onLineStyleSelected(t)
                                    }
                                }, n.createElement(l.CircularIconView, {
                                    backgroundColor: function() {
                                        return e.model.color
                                    },
                                    semiTransparent: function() {
                                        return e.model.lineStyle !== t
                                    },
                                    iconType: function() {
                                        return 'DOTTED' === t ? 'graph-dotted' : 'DASHED' === t ? 'graph-dashed' : 'graph-default'
                                    }
                                }))
                            })))
                        })), n.createElement(d, {
                            predicate: function() {
                                return e.model.draggable
                            }
                        }, function() {
                            return n.createElement('div', {
                                class: n.const('dcg-drag-div dcg-options-menu-section')
                            }, n.createElement('span', {
                                class: n.const('dcg-toggle-title')
                            }, function() {
                                return e.controller.t('Drag')
                            }), n.createElement(a.default, {
                                ariaLabel: function() {
                                    return e.controller.t('Drag')
                                },
                                toggled: function() {
                                    return e.model.dragMode !== o.DragMode.NONE
                                },
                                onChange: function() {
                                    return e.onToggleDrag()
                                }
                            }), n.createElement(d, {
                                predicate: function() {
                                    return e.model.dragMode !== o.DragMode.NONE
                                }
                            }, function() {
                                return n.createElement(u, {
                                    each: function() {
                                        return e.controller.getUIDragModes()
                                    }
                                }, n.createElement('div', {
                                    class: n.const('dcg-style-icons')
                                }, function(t) {
                                    return n.createElement('div', {
                                        class: n.const('dcg-style-icon-container'),
                                        onTap: function() {
                                            return e.onDragModeSelected(t)
                                        }
                                    }, n.createElement(l.CircularIconView, {
                                        backgroundColor: function() {
                                            return e.model.color
                                        },
                                        semiTransparent: function() {
                                            return e.model.dragMode !== t
                                        },
                                        iconType: function() {
                                            return 'X' === t ? 'movable-horizontal' : 'Y' === t ? 'movable-vertical' : 'movable-both'
                                        }
                                    }))
                                }))
                            }))
                        })), n.createElement('div', {
                            class: n.const('dcg-options-menu-column-right')
                        }, n.createElement('div', {
                            class: n.const('dcg-colors-div dcg-options-menu-section')
                        }, n.createElement('div', {
                            class: n.const('dcg-toggle-title')
                        }, function() {
                            return e.controller.t('Color')
                        }), n.createElement(i.default, {
                            controller: function() {
                                return e.props.controller()
                            },
                            selectedColor: function() {
                                return e.model.color
                            },
                            onColorSelected: this.bindFn(this.onColorSelected)
                        }))))
                    }
                    ,
                    t.prototype.getPointStyleClass = function(e) {
                        switch (e) {
                        case s.PointStyle.CROSS:
                            return 'dcg-graph-CROSS';
                        case s.PointStyle.OPEN:
                            return 'dcg-graph-OPEN';
                        default:
                            return 'dcg-graph-POINT'
                        }
                    }
                    ,
                    t.prototype.getLineStyleClass = function(e) {
                        switch (e) {
                        case s.LineStyle.DASHED:
                            return 'dcg-graph-DASHED';
                        case s.LineStyle.DOTTED:
                            return 'dcg-graph-DOTTED';
                        default:
                            return 'dcg-graph-SOLID'
                        }
                    }
                    ,
                    t.prototype.onColorSelected = function(e) {
                        this.controller.dispatch({
                            type: 'set-tablecolumn-color',
                            tableId: this.tableId,
                            columnId: this.columnId,
                            color: e
                        })
                    }
                    ,
                    t.prototype.onTogglePoints = function(e) {
                        this.controller.dispatch({
                            type: 'set-tablecolumn-points',
                            tableId: this.tableId,
                            columnId: this.columnId,
                            bool: e
                        })
                    }
                    ,
                    t.prototype.onPointStyleSelected = function(e) {
                        this.controller.dispatch({
                            type: 'set-tablecolumn-pointstyle',
                            tableId: this.tableId,
                            columnId: this.columnId,
                            pointStyle: e
                        })
                    }
                    ,
                    t.prototype.onToggleLines = function(e) {
                        this.controller.dispatch({
                            type: 'set-tablecolumn-lines',
                            tableId: this.tableId,
                            columnId: this.columnId,
                            bool: e
                        })
                    }
                    ,
                    t.prototype.onLineStyleSelected = function(e) {
                        this.controller.dispatch({
                            type: 'set-tablecolumn-linestyle',
                            tableId: this.tableId,
                            columnId: this.columnId,
                            lineStyle: e
                        })
                    }
                    ,
                    t.prototype.onToggleDrag = function() {
                        var e = this.columnId
                        , t = this.tableId
                        , r = this.model.dragMode === o.DragMode.NONE ? o.DragMode.XY : o.DragMode.NONE;
                        this.controller.dispatch({
                            type: 'set-tablecolumn-dragmode',
                            tableId: t,
                            columnId: e,
                            dragMode: r
                        })
                    }
                    ,
                    t.prototype.onDragModeSelected = function(e) {
                        var t = this.columnId
                        , r = this.tableId;
                        this.model.dragMode !== e && this.controller.dispatch({
                            type: 'set-tablecolumn-dragmode',
                            tableId: r,
                            columnId: t,
                            dragMode: e
                        })
                    }
                    ,
                    t
                }(n.Class);
                t.TableColumnMenuView = p
            }),
            r('loadcss!expressions/slider-speed-view', function() {}),
            r('expressions/slider_speed_view', ['require', 'exports', 'tslib', 'underscore', 'lib/aria', 'dcgview', 'core/graphing-calc/json/expression', 'loadcss!./slider-speed-view'], function(e, t, r, n, i, o, s) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var a = [.05, .1, .15, .2, .35, .5, .75, 1, 1.5, 2, 3.5, 5, 7.5, 10, 15, 20]
                , l = n.min(a)
                , c = n.max(a)
                , u = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller(),
                        this.model = this.props.model()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return o.createElement('div', {
                            class: o.const('dcg-slider-speed-container dcg-do-not-blur'),
                            handleEvent: o.const('true')
                        }, o.createElement('span', {
                            class: function() {
                                return {
                                    'dcg-action-slower': !0,
                                    'dcg-disabled': e.isSlowerDisabled()
                                }
                            },
                            onTap: function() {
                                return e.animateSlower()
                            },
                            role: o.const('button'),
                            'aria-label': function() {
                                return e.getSlowerAriaLabel()
                            },
                            tabindex: function() {
                                return e.isSlowerDisabled() ? -1 : 0
                            },
                            'aria-disabled': function() {
                                return e.isSlowerDisabled()
                            }
                        }, o.createElement('i', {
                            class: o.const('dcg-icon-show')
                        })), o.createElement('span', {
                            class: o.const('dcg-variable-speed')
                        }, this.bindFn(this.computeSpeed), o.const('x')), o.createElement('span', {
                            class: function() {
                                return {
                                    'dcg-action-faster': !0,
                                    'dcg-disabled': e.isFasterDisabled()
                                }
                            },
                            onTap: function() {
                                return e.animateFaster()
                            },
                            role: o.const('button'),
                            'aria-label': function() {
                                return e.getFasterAriaLabel()
                            },
                            tabindex: function() {
                                return e.isFasterDisabled() ? -1 : 0
                            },
                            'aria-disabled': function() {
                                return e.isFasterDisabled()
                            }
                        }, o.createElement('i', {
                            class: o.const('dcg-icon-show')
                        })))
                    }
                    ,
                    t.prototype.computeSpeed = function() {
                        var e = s.DEFAULT_SLIDER_PERIOD / this.model.slider.animationPeriod;
                        return e = Number(e.toFixed(3))
                    }
                    ,
                    t.prototype.isSlowerDisabled = function() {
                        return l >= this.computeSpeed()
                    }
                    ,
                    t.prototype.isFasterDisabled = function() {
                        return c <= this.computeSpeed()
                    }
                    ,
                    t.prototype.animateSlower = function() {
                        var e = this.computeSpeed()
                        , t = n.filter(a, function(t) {
                            return t < e
                        });
                        0 !== t.length && this.setPeriodFromSpeed(n.max(t))
                    }
                    ,
                    t.prototype.animateFaster = function() {
                        var e = this.computeSpeed()
                        , t = n.filter(a, function(t) {
                            return t > e
                        });
                        0 !== t.length && this.setPeriodFromSpeed(n.min(t))
                    }
                    ,
                    t.prototype.setPeriodFromSpeed = function(e) {
                        var t = s.DEFAULT_SLIDER_PERIOD / e;
                        this.controller.dispatch({
                            type: 'set-slider-animationperiod',
                            id: this.model.id,
                            animationPeriod: t
                        }),
                        i.alert(this.controller.t('Animating at __speed__x', {
                            speed: e + ''
                        }))
                    }
                    ,
                    t.prototype.getSlowerAriaLabel = function() {
                        return this.controller.t('Animate Slower')
                    }
                    ,
                    t.prototype.getFasterAriaLabel = function() {
                        return this.controller.t('Animate Faster')
                    }
                    ,
                    t
                }(o.Class);
                t.default = u
            }),
            r('loadcss!expressions/slider-options-view', function() {}),
            r('expressions/slider-options-view', ['require', 'exports', 'tslib', 'dcgview', 'core/types/slider-loop-modes', '../lib/tooltip', './slider_speed_view', 'loadcss!toggle', 'loadcss!./slider-options-view'], function(e, t, r, n, i, o, s) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var a = n.Components.For
                , l = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller(),
                        this.model = this.props.model(),
                        this.id = this.model.id
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: n.const('dcg-exp-options-menu dcg-slider-options-view dcg-options-menu')
                        }, n.createElement('div', {
                            class: n.const('dcg-triangle')
                        }), n.createElement('div', {
                            class: n.const('dcg-slider-menu')
                        }, n.createElement('div', {
                            role: n.const('group'),
                            'aria-label': function() {
                                return e.controller.t('Animation Mode')
                            }
                        }, n.createElement('div', {
                            role: n.const('heading'),
                            'aria-level': n.const('2'),
                            class: n.const('dcg-title')
                        }, function() {
                            return e.controller.t('Animation Mode')
                        }), n.createElement(a, {
                            each: this.bindFn(this.getAnimationOptions),
                            key: function(e) {
                                return e.key
                            }
                        }, n.createElement('div', {
                            class: n.const('dcg-toggle')
                        }, function(t) {
                            return n.createElement('div', {
                                class: function() {
                                    return {
                                        'dcg-toggle-option': !0,
                                        'dcg-selected-toggle': e.isSelected(t.key)
                                    }
                                },
                                role: n.const('button'),
                                tabindex: n.const(0),
                                'aria-label': function() {
                                    return t.aria
                                },
                                'aria-pressed': function() {
                                    return e.isSelected(t.key)
                                },
                                onTap: function() {
                                    return e.props.controller().dispatch({
                                        type: 'set-slider-loopmode',
                                        id: e.props.model().id,
                                        loopMode: t.key
                                    })
                                }
                            }, n.createElement(o.Tooltip, {
                                tooltip: function() {
                                    return t.aria
                                },
                                offset: function() {
                                    return {
                                        top: 5
                                    }
                                },
                                gravity: e.getAnimationOptionTooltipGravity(t)
                            }, n.createElement('i', {
                                class: function() {
                                    return i.getSliderIcon(t.key)
                                }
                            })))
                        })))), n.createElement('div', {
                            class: n.const('dcg-slider-menu dcg-slider-speed-menu'),
                            role: n.const('group'),
                            'aria-label': function() {
                                return e.controller.t('Speed')
                            }
                        }, n.createElement('div', {
                            role: n.const('heading'),
                            'aria-level': n.const('2'),
                            class: n.const('dcg-title')
                        }, function() {
                            return e.controller.t('Speed')
                        }), n.createElement('div', {
                            class: n.const('dcg-slider-speed-container')
                        }, n.createElement(s.default, r.__assign({}, this.props)))))
                    }
                    ,
                    t.prototype.getAnimationOptionTooltipGravity = function(e) {
                        return this.getAnimationOptions()[0].key === e.key ? this.const('se') : this.const('s')
                    }
                    ,
                    t.prototype.getAnimationOptions = function() {
                        return [{
                            key: i.SliderLoopMode.LOOP_FORWARD_REVERSE,
                            aria: this.controller.t('Loop forwards and backwards')
                        }, {
                            key: i.SliderLoopMode.LOOP_FORWARD,
                            aria: this.controller.t('Repeat in one direction')
                        }, {
                            key: i.SliderLoopMode.PLAY_ONCE,
                            aria: this.controller.t('Play once')
                        }, {
                            key: i.SliderLoopMode.PLAY_INDEFINITELY,
                            aria: this.controller.t('Play indefinitely')
                        }]
                    }
                    ,
                    t.prototype.isSelected = function(e) {
                        return this.model.slider.loopMode === e
                    }
                    ,
                    t
                }(n.Class);
                t.SliderOptionsView = l
            }),
            r('loadcss!expressions/item-settings-view', function() {}),
            r('expressions/item-settings-view', ['require', 'exports', 'tslib', 'dcgview', 'keys', 'underscore', 'jquery', './expression_options_view', './image_options_view', './tables/table_column_menu_view', './slider-options-view', 'lib/animation-frame', 'loadcss!./item-settings-view'], function(e, t, r, n, i, o, s, a, l, c, u, d) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var p = n.Components.Switch
                , h = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement(p, {
                            key: this.bindFn(this.getActiveGuid)
                        }, function() {
                            var t = e.controller.getOpenItemMenu();
                            return t ? 'expression' === t.type ? n.createElement('div', {
                                class: n.const('dcg-options-menu-container'),
                                didMount: e.bindFn(e.didMountView),
                                didUnmount: e.bindFn(e.didUnmountView)
                            }, n.createElement(a.ExpressionOptionsMenuView, {
                                controller: e.props.controller,
                                model: function() {
                                    return t.model
                                }
                            })) : 'image' === t.type ? n.createElement('div', {
                                class: n.const('dcg-options-menu-container'),
                                didMount: e.bindFn(e.didMountView),
                                didUnmount: e.bindFn(e.didUnmountView)
                            }, n.createElement(l.ImageOptionsView, {
                                controller: e.props.controller,
                                model: function() {
                                    return t.model
                                }
                            })) : 'table-column' === t.type ? n.createElement('div', {
                                class: n.const('dcg-options-menu-container'),
                                didMount: e.bindFn(e.didMountView),
                                didUnmount: e.bindFn(e.didUnmountView)
                            }, n.createElement(c.TableColumnMenuView, {
                                controller: e.props.controller,
                                model: function() {
                                    return t.model
                                }
                            })) : 'slider' === t.type ? n.createElement('div', {
                                class: n.const('dcg-options-menu-container'),
                                didMount: e.bindFn(e.didMountView),
                                didUnmount: e.bindFn(e.didUnmountView)
                            }, n.createElement(u.SliderOptionsView, {
                                controller: e.props.controller,
                                model: function() {
                                    return t.model
                                }
                            })) : t : n.createElement('span', null)
                        })
                    }
                    ,
                    t.prototype.getActiveGuid = function() {
                        var e = this.controller.getOpenItemMenu();
                        if (e)
                            return e.model.guid
                    }
                    ,
                    t.prototype.getActiveIcon = function() {
                        var e = this.controller.getOpenItemMenu();
                        if (e)
                            return s(e.icon)
                    }
                    ,
                    t.prototype.didMountView = function(e) {
                        var t = this;
                        this.guid = o.uniqueId('dcg-item-settings-view'),
                        this.openView = e,
                        this.positionMenu(),
                        this.moveFocusIfAppropriate(),
                        s(document).on('keydown.' + this.guid, function(e) {
                            var r = i.lookup(e);
                            'Esc' === r ? (t.focusIcon(),
                            t.hideOptions()) : 'Tab' !== r || e.altKey || e.ctrlKey || e.metaKey || (e.shiftKey ? e.shiftKey && (t.isIconModelFocused() ? (e.preventDefault(),
                            e.stopPropagation(),
                            t.focusLastOption()) : t.isFirstOptionViewFocused() ? (e.preventDefault(),
                            e.stopPropagation(),
                            t.focusIcon()) : t.focusAnywhere()) : t.isIconModelFocused() ? (e.preventDefault(),
                            e.stopPropagation(),
                            t.focusFirstOption()) : t.isLastOptionViewFocused() ? (e.preventDefault(),
                            e.stopPropagation(),
                            t.focusIcon()) : t.focusAnywhere())
                        }),
                        d.requestAnimationFrame(function() {
                            if (t.openView) {
                                t.controller.getExppanelSelectorOrThrow().on('scroll.' + t.guid, function() {
                                    t.hideOptions()
                                })
                            }
                        }),
                        s(document).on('dcg-tapstart.' + this.guid, function(e) {
                            if (t.openView) {
                                var r = s(e.target);
                                if (!r.closest(t.getActiveIcon()).length) {
                                    if (r.closest(t.openView).length) {
                                        if (!r.is(':input, [role="textbox"], [tabindex="0"]:visible'))
                                            return;
                                        var n = t.getDOMTabStops()
                                        , i = n.$first
                                        , o = n.$last;
                                        return void (void 0 !== i && i.is(r) ? t.focusFirstOption() : void 0 !== o && o.is(r) ? t.focusLastOption() : e.target.hasAttribute('dataLabelAttributeValue') || 'fill-opacity' === e.target.getAttribute('dataLabelAttributeValue') || t.focusAnywhere())
                                    }
                                    r.closest('.dcg-keypad,.dcg-show-keypad-container').length || t.hideOptions()
                                }
                            }
                        })
                    }
                    ,
                    t.prototype.didUnmountView = function() {
                        s(document).off('.' + this.guid),
                        this.openView = void 0
                    }
                    ,
                    t.prototype.didUpdate = function() {
                        this.moveFocusIfAppropriate()
                    }
                    ,
                    t.prototype.moveFocusIfAppropriate = function() {
                        var e = this.getDOMTabStops()
                        , t = e.$first
                        , r = e.$last;
                        void 0 !== t && void 0 !== r && (this.shouldMoveFocusToFirstOption() ? t.focus() : this.shouldMoveFocusToLastOption() && r.focus())
                    }
                    ,
                    t.prototype.open = function() {
                        return !!this.controller.getOpenItemMenu()
                    }
                    ,
                    t.prototype.hideOptions = function() {
                        this.open() && this.controller.dispatch({
                            type: 'close-item-settings-menu'
                        })
                    }
                    ,
                    t.prototype.positionMenu = function() {
                        var e = this.getActiveIcon();
                        if (e && this.openView) {
                            var t = this.controller.getExppanelSelectorOrThrow()
                            , r = e.offset()
                            , n = {
                                top: r.top - t.closest('.dcg-container').offset().top,
                                left: r.left - t.closest('.dcg-container').offset().left
                            };
                            s(this.openView).css({
                                top: n.top + 'px',
                                left: n.left + 'px',
                                display: 'block'
                            })
                        }
                    }
                    ,
                    t.prototype.isIconModelFocused = function() {
                        var e = this.controller.getOpenItemMenu();
                        return void 0 !== e && ('slider' === e.type ? this.controller.isFocusLocationFocused({
                            type: 'slider-animation-properties-icon',
                            id: e.model.id
                        }) : 'image' === e.type ? this.controller.isFocusLocationFocused({
                            type: 'image-icon',
                            id: e.model.id
                        }) : this.controller.isFocusLocationFocused({
                            type: 'expression-icon',
                            id: e.model.id
                        }))
                    }
                    ,
                    t.prototype.focusIcon = function() {
                        var e = this.controller.getOpenItemMenu();
                        e && ('slider' === e.type ? this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'slider-animation-properties-icon',
                                id: e.model.id
                            }
                        }) : 'image' === e.type ? this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'image-icon',
                                id: e.model.id
                            }
                        }) : this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'expression-icon',
                                id: e.model.id
                            }
                        }))
                    }
                    ,
                    t.prototype.isFirstOptionViewFocused = function() {
                        var e = this.getDOMTabStops().$first;
                        return void 0 !== e && e.is(':focus')
                    }
                    ,
                    t.prototype.shouldMoveFocusToFirstOption = function() {
                        var e = this.controller.getOpenItemMenu();
                        return void 0 !== e && !this.isFirstOptionViewFocused() && this.controller.isFocusLocationFocused({
                            type: 'expression-menu',
                            id: e.model.id,
                            location: 'start'
                        })
                    }
                    ,
                    t.prototype.focusFirstOption = function() {
                        var e = this.controller.getOpenItemMenu();
                        e && this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'expression-menu',
                                id: e.model.id,
                                location: 'start'
                            }
                        })
                    }
                    ,
                    t.prototype.isLastOptionViewFocused = function() {
                        var e = this.getDOMTabStops().$last;
                        return void 0 !== e && e.is(':focus')
                    }
                    ,
                    t.prototype.shouldMoveFocusToLastOption = function() {
                        var e = this.controller.getOpenItemMenu();
                        return void 0 !== e && !this.isLastOptionViewFocused() && this.controller.isFocusLocationFocused({
                            type: 'expression-menu',
                            id: e.model.id,
                            location: 'end'
                        })
                    }
                    ,
                    t.prototype.focusLastOption = function() {
                        var e = this.controller.getOpenItemMenu();
                        e && this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'expression-menu',
                                id: e.model.id,
                                location: 'end'
                            }
                        })
                    }
                    ,
                    t.prototype.focusAnywhere = function() {
                        var e = this.controller.getOpenItemMenu();
                        e && this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'expression-menu',
                                id: e.model.id,
                                location: 'anywhere'
                            }
                        })
                    }
                    ,
                    t.prototype.getDOMTabStops = function() {
                        if (void 0 === this.openView)
                            return {};
                        var e = s(this.openView)
                        , t = e.find(':input, [role="textbox"], [tabindex="0"]:visible');
                        return {
                            $first: t.first(),
                            $last: t.last()
                        }
                    }
                    ,
                    t
                }(n.Class);
                t.ItemSettingsView = h
            }),
            r('loadcss!expressions/author-ide-bar-view', function() {}),
            r('expressions/author-ide-bar-view', ['require', 'exports', 'tslib', 'dcgview', 'loadcss!./author-ide-bar-view'], function(e, t, r, n) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var i = n.Components
                , o = i.Input
                , s = i.If
                , a = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: n.const('dcg-author-ide-bar')
                        }, n.const('search:'), n.const(' '), n.createElement(o, {
                            onInput: this.bindFn(this.onChange),
                            value: function() {
                                return e.controller.getIDESearchStr()
                            }
                        }), n.createElement(s, {
                            predicate: function() {
                                return !!e.controller.getIDESearchStr()
                            }
                        }, function() {
                            return n.createElement('i', {
                                onTap: function() {
                                    return e.onChange('')
                                },
                                class: n.const('dcg-icon-remove')
                            })
                        }))
                    }
                    ,
                    t.prototype.onChange = function(e) {
                        this.controller.dispatch({
                            type: 'update-ide-search-str',
                            str: e
                        })
                    }
                    ,
                    t
                }(n.Class);
                t.AuthorIDEBar = a
            }),
            r('loadcss!expressions/list-view', function() {}),
            r('loadcss!expressions', function() {}),
            r('expressions/list-view', ['require', 'exports', 'tslib', 'touchtracking', 'keys', 'dcgview', 'jquery', 'underscore', 'lib/conditional_blur', './expression_view', './text_view', './table-view', './folder-view', './image-view', './shell_view', './drag_container_view', 'main/data_helpers', './new_expression_view', './expressions-header', 'main/load-graph-from-link', 'lib/get-clipboard-data', 'graphing-calc/models/abstract-item', 'graphing-calc/models/list', './exp-list-resizer', './item-settings-view', './author-ide-bar-view', 'loadcss!./list-view', 'loadcss!expressions', 'jquery.handleevent'], function(e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g, m, y, v, b, x, w, _, E, S, M) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var I = o.Components
                , k = I.If
                , C = I.For
                , T = I.Switch
                , L = I.SwitchUnion
                , P = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.guid = a.uniqueId('listView'),
                        t
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return o.createElement('div', {
                            didMount: this.bindFn(this.didMountContainer)
                        }, o.createElement('div', {
                            class: o.const('dcg-exppanel-outer'),
                            onDrop: this.bindFn(this.onDrop),
                            style: function() {
                                return e.computeExppanelOuterStyle()
                            }
                        }, o.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-exppanel-container': !0,
                                    'dcg-add-shadow': e.controller.shouldRenderList()
                                }
                            },
                            style: function() {
                                return {
                                    transform: e.controller.isListVisible() ? void 0 : e.controller.isNarrow() ? 'translate(0, 100%)' : 'translate(-100%, 0)'
                                }
                            }
                        }, o.createElement(k, {
                            predicate: function() {
                                return e.controller.isFileDraggedOver()
                            }
                        }, function() {
                            return o.createElement('div', {
                                class: o.const('dcg-drop-image')
                            }, o.createElement('span', null, function() {
                                return e.controller.t('Drop Image Here')
                            }))
                        }), o.createElement(k, {
                            predicate: function() {
                                return e.controller.shouldRenderList()
                            }
                        }, function() {
                            return o.createElement('div', {
                                class: function() {
                                    return {
                                        'dcg-exppanel': !0,
                                        'dcg-disable-horizontal-scroll-to-cursor': !0,
                                        'dcg-isDragging': e.controller.isDragDropActive(),
                                        'dcg-has-background-color': e.controller.hasBackgroundColor()
                                    }
                                },
                                style: function() {
                                    return {
                                        background: e.controller.getBackgroundColor()
                                    }
                                },
                                onPaste: e.bindFn(e.onPaste),
                                onTapStart: e.bindFn(e.onExppanelTapstart),
                                didMount: e.bindFn(e.didMountExppanel)
                            }, o.createElement(E.ExpListResizer, {
                                controller: e.props.controller
                            }), o.createElement('div', {
                                class: o.const('dcg-expressionlist'),
                                role: o.const('complementary'),
                                'aria-label': o.const('Expression List')
                            }, o.createElement(C, {
                                each: function() {
                                    return e.controller.getAllItemModels()
                                },
                                key: function(e) {
                                    return e.guid
                                }
                            }, o.createElement('span', {
                                class: o.const('dcg-template-expressioneach')
                            }, function(t) {
                                return L(function() {
                                    return w.getDisplayState(t)
                                }, {
                                    shell: function() {
                                        return e.makeShellViewForModel(t)
                                    },
                                    render: function() {
                                        return e.makeViewForModel(t)
                                    },
                                    none: function() {}
                                })
                            })), o.createElement(k, {
                                predicate: function() {
                                    return !e.props.controller().getIDESearchStr()
                                }
                            }, function() {
                                return o.createElement(y.default, {
                                    controller: function() {
                                        return e.props.controller()
                                    }
                                })
                            }), o.createElement(T, {
                                key: function() {
                                    return e.controller.getDraggedItemId()
                                }
                            }, function(t) {
                                if (t) {
                                    var r = e.controller.getItemModel(t);
                                    return o.createElement(g.default, {
                                        controller: e.props.controller
                                    }, e.makeDragCopyViewForModel(r))
                                }
                            }), o.createElement('div', {
                                class: o.const('dcg-expressions-branding'),
                                style: function() {
                                    return {
                                        opacity: e.controller.isKeypadOpen() ? 0 : 1
                                    }
                                }
                            }, o.createElement(k, {
                                predicate: function() {
                                    return e.controller.canEditOnWeb()
                                }
                            }, function() {
                                return o.createElement('span', {
                                    role: o.const('link'),
                                    tabindex: o.const(0),
                                    class: o.const('dcg-edit-branding'),
                                    onTap: function() {
                                        return e.controller.dispatch({
                                            type: 'open-on-web'
                                        })
                                    }
                                }, o.createElement('div', {
                                    class: o.const('dcg-powered-by'),
                                    'aria-label': function() {
                                        return e.controller.t('Edit graph on Desmos')
                                    }
                                }, function() {
                                    return e.controller.t('edit graph on')
                                }), o.createElement('i', {
                                    class: o.const('dcg-icon-desmos')
                                }))
                            }), o.createElement(k, {
                                predicate: function() {
                                    return !e.controller.canEditOnWeb()
                                }
                            }, function() {
                                return o.createElement('span', {
                                    class: o.const('dcg-noedit-branding')
                                }, o.createElement('div', {
                                    class: o.const('dcg-powered-by'),
                                    'aria-label': function() {
                                        return e.controller.t('powered by Desmos')
                                    }
                                }, function() {
                                    return e.controller.t('powered by')
                                }), o.createElement('i', {
                                    class: o.const('dcg-icon-desmos')
                                }))
                            }))))
                        }), o.createElement(k, {
                            predicate: function() {
                                return e.controller.isAuthorIDE()
                            }
                        }, function() {
                            return o.createElement(M.AuthorIDEBar, r.__assign({}, e.props))
                        }), o.createElement(k, {
                            predicate: function() {
                                return e.controller.shouldRenderList()
                            }
                        }, function() {
                            return o.createElement(v.default, {
                                controller: e.props.controller,
                                expsScrolled: function() {
                                    return !!e.exppanel && e.exppanel.scrollTop > 0
                                }
                            })
                        }))), o.createElement(S.ItemSettingsView, {
                            controller: this.props.controller
                        }))
                    }
                    ,
                    t.prototype.makeShellViewForModel = function(e) {
                        return o.createElement(f.default, {
                            controller: this.props.controller,
                            model: function() {
                                return e
                            },
                            onDragPending: function() {},
                            isDragCopy: function() {
                                return !1
                            }
                        })
                    }
                    ,
                    t.prototype.computeExppanelOuterStyle = function() {
                        this.getListBottomAndUpdateLastExpressionPadding();
                        var e = this.controller.computeMajorLayout().list
                        , t = e.top;
                        return e.top > 0 && !this.controller.isListVisible() && (t -= e.height),
                        {
                            position: 'absolute',
                            left: '0px',
                            top: t + 'px',
                            width: e.width + 'px',
                            height: e.height + 'px'
                        }
                    }
                    ,
                    t.prototype.makeDragCopyViewForModel = function(e) {
                        return this.makeViewForModel(e, !0)
                    }
                    ,
                    t.prototype.makeViewForModel = function(e, t) {
                        var r = this;
                        void 0 === t && (t = !1);
                        var n;
                        if ('table' === e.type)
                            n = o.createElement(d.default, {
                                controller: this.props.controller,
                                model: function() {
                                    return e
                                },
                                onDragPending: function(t) {
                                    return r.onDragPending(t, e.id)
                                },
                                isDragCopy: function() {
                                    return t
                                }
                            });
                        else if ('folder' === e.type)
                            n = o.createElement(p.default, {
                                controller: this.props.controller,
                                model: function() {
                                    return e
                                },
                                onDragPending: function(t) {
                                    return r.onDragPending(t, e.id)
                                },
                                isDragCopy: function() {
                                    return t
                                }
                            });
                        else if ('text' === e.type)
                            n = o.createElement(u.default, {
                                controller: this.props.controller,
                                model: function() {
                                    return e
                                },
                                onDragPending: function(t) {
                                    return r.onDragPending(t, e.id)
                                },
                                isDragCopy: function() {
                                    return t
                                }
                            });
                        else if ('image' === e.type)
                            n = o.createElement(h.default, {
                                controller: this.props.controller,
                                model: function() {
                                    return e
                                },
                                onDragPending: function(t) {
                                    return r.onDragPending(t, e.id)
                                },
                                isDragCopy: function() {
                                    return t
                                }
                            });
                        else {
                            if ('expression' !== e.type)
                                return;
                            n = o.createElement(c.default, {
                                controller: this.props.controller,
                                model: function() {
                                    return e
                                },
                                onDragPending: function(t) {
                                    return r.onDragPending(t, e.id)
                                },
                                isDragCopy: function() {
                                    return t
                                }
                            })
                        }
                        return n
                    }
                    ,
                    t.prototype.didUnmount = function() {
                        s(document.documentElement).off('.' + this.guid)
                    }
                    ,
                    t.prototype.didMountContainer = function(e) {
                        this.node = e,
                        s(document.documentElement).on('keydown.' + this.guid, this.bindFn(this.handleKeyDown))
                    }
                    ,
                    t.prototype.didMountExppanel = function(e) {
                        this.exppanel = e
                    }
                    ,
                    t.prototype.getListBottomAndUpdateLastExpressionPadding = function() {
                        var e = this.controller.getKeypadHeight()
                        , t = this.__listBottom || 0;
                        return this.__listBottom = e,
                        0 === e && 0 !== t && n.isTapActive() && this.padLastExpressionUntilTapEnd(t),
                        e
                    }
                    ,
                    t.prototype.padLastExpression = function(e) {
                        s(this.node).find('.dcg-expressionitem.dcg-new-expression').css('margin-bottom', e + 'px')
                    }
                    ,
                    t.prototype.unpadLastExpression = function() {
                        s(this.node).find('.dcg-expressionitem.dcg-new-expression').css('margin-bottom', '0')
                    }
                    ,
                    t.prototype.padLastExpressionUntilTapEnd = function(e) {
                        var t = this;
                        this.padLastExpression(e),
                        s(document).on('dcg-tap.animating-bottom', function() {
                            t.unpadLastExpression(),
                            s(document).off('dcg-tap.animating-bottom')
                        })
                    }
                    ,
                    t.prototype.handleKeyDown = function(e) {
                        if (!this.controller.inAudioTraceMode()) {
                            var t = i.lookup(e);
                            if (!this.controller.isInEditListMode() || e.altKey || e.ctrlKey || e.metaKey) {
                                if ((!document.activeElement || !s.contains(document.body, document.activeElement)) && !s(e.target).closest(this.exppanel).length && s.contains(document.documentElement, e.target)) {
                                    var r = this.controller.getSelectedItem();
                                    if (r)
                                        switch (t) {
                                        case i.UP:
                                            e.preventDefault(),
                                            this.controller.dispatch({
                                                type: 'select-previous-expression'
                                            });
                                            break;
                                        case i.DOWN:
                                            e.preventDefault(),
                                            this.controller.dispatch({
                                                type: 'select-next-expression'
                                            });
                                            break;
                                        case i.ESCAPE:
                                            e.preventDefault(),
                                            this.controller.dispatch({
                                                type: 'set-none-selected'
                                            });
                                            break;
                                        case i.RIGHT:
                                            e.preventDefault(),
                                            r && ('expression' === r.type && r.sliderExists ? (this.controller.dispatch({
                                                type: 'adjust-slider-by-keyboard',
                                                id: r.id,
                                                adjustment: 'up'
                                            }),
                                            this.controller.dispatch({
                                                type: 'set-focus-location',
                                                location: {
                                                    type: 'slider-thumb',
                                                    id: r.id
                                                }
                                            })) : this.controller.dispatch({
                                                type: 'move-focus-to-item',
                                                id: r.id,
                                                where: 'start'
                                            }));
                                            break;
                                        case i.TAB:
                                            e.preventDefault(),
                                            r && this.controller.dispatch({
                                                type: 'move-focus-to-item',
                                                id: r.id,
                                                where: 'start'
                                            });
                                            break;
                                        case i.LEFT:
                                            e.preventDefault(),
                                            r && ('expression' === r.type && r.sliderExists ? (this.controller.dispatch({
                                                type: 'adjust-slider-by-keyboard',
                                                id: r.id,
                                                adjustment: 'down'
                                            }),
                                            this.controller.dispatch({
                                                type: 'set-focus-location',
                                                location: {
                                                    type: 'slider-thumb',
                                                    id: r.id
                                                }
                                            })) : this.controller.dispatch({
                                                type: 'move-focus-to-item',
                                                id: r.id,
                                                where: 'end'
                                            }));
                                            break;
                                        case i.BACKSPACE:
                                            e.preventDefault(),
                                            r && this.controller.dispatch({
                                                type: 'upward-delete-selected-expression'
                                            });
                                            break;
                                        case i.DELETE:
                                            e.preventDefault(),
                                            r && this.controller.dispatch({
                                                type: 'downward-delete-selected-expression'
                                            });
                                            break;
                                        case i.ENTER:
                                            e.wasHandled('create-expression-with-keyboard') || (e.preventDefault(),
                                            e.handle('create-expression-with-keyboard'),
                                            r && this.controller.dispatch({
                                                type: 'on-special-key-pressed',
                                                key: 'Enter'
                                            }));
                                            break;
                                        default:
                                            if (e.metaKey || e.ctrlKey || t === i.SHIFT || t === i.SPACEBAR)
                                                return;
                                            r && ('table' === r.type || this.controller.dispatch({
                                                type: 'move-focus-to-item',
                                                id: r.id,
                                                where: 'end'
                                            }))
                                        }
                                }
                            } else if (t === i.TAB) {
                                var n = this.controller.getItemModelByIndex(0);
                                if (!n)
                                    return;
                                var o = this.controller.getFocusLocation();
                                if (!o)
                                    return;
                                var a = ('readonly-expression' === o.type && 'expression' === n.type || 'table-container' === o.type && 'table' === n.type || o.type === n.type) && o.id === n.id
                                , l = {
                                    type: 'edit-list-toggle'
                                }
                                , c = this.controller.isFocusLocationFocused(l);
                                e.shiftKey && a ? (e.preventDefault(),
                                e.stopPropagation(),
                                this.controller.dispatch({
                                    type: 'set-focus-location',
                                    location: l
                                })) : !e.shiftKey && c && (e.preventDefault(),
                                e.stopPropagation(),
                                this.controller.dispatch({
                                    type: 'move-focus-to-item',
                                    id: n.id,
                                    where: 'table' === n.type ? 'container' : void 0
                                }))
                            } else if (t === i.UP || t === i.DOWN) {
                                var r = this.controller.getSelectedItem();
                                if (!r)
                                    return;
                                var u = this.controller.getListModel()
                                , d = t === i.UP ? _.findPrevSelectableItem(u, r.index) : _.findNextSelectableItem(u, r.index);
                                if (!d)
                                    return;
                                this.controller.dispatch({
                                    type: 'move-focus-to-item',
                                    id: d.id,
                                    where: 'table' === d.type ? 'container' : 'start'
                                })
                            }
                        }
                    }
                    ,
                    t.prototype.onDragPending = function(e, t) {
                        var r = this;
                        e.preventDefault(),
                        l.default();
                        var n = e.touches[0].clientY
                        , i = n
                        , o = setTimeout(function() {
                            s(document).off('.dragpending'),
                            r.onDragStart(e, t, n, i)
                        }, 500);
                        s(document).on('dcg-tapmove.dragpending', function(a) {
                            i = a.touches[0].clientY,
                            Math.abs(i - n) > 3 && (clearTimeout(o),
                            s(document).off('.dragpending'),
                            r.onDragStart(e, t, n, i))
                        }),
                        s(document).on('dcg-tapend.dragpending', function() {
                            clearTimeout(o),
                            s(document).off('.dragpending')
                        })
                    }
                    ,
                    t.prototype.onDragStart = function(e, t, r, n) {
                        1 === e.touches.length && (e.wasHandled('dcg-longhold') || this.controller.dispatch({
                            type: 'start-dragdrop',
                            id: t,
                            grabY: r,
                            mouseY: n
                        }))
                    }
                    ,
                    t.prototype.onExppanelTapstart = function(e) {
                        'mouse' !== e.device && 0 === s(e.target).closest('.dcg-expressionitem').length && l.default()
                    }
                    ,
                    t.prototype.onPaste = function(e) {
                        var t = this
                        , r = this.controller.getGraphSettings().config
                        , n = x.default(e);
                        if (n) {
                            var i = /^\s*https?:\/\/([a-zA-Z0-9]*\.)?desmos\.com(:[0-9]+)?\/calculator\/./.test(n)
                            , o = this.controller.getSelectedItem();
                            if (r.pasteGraphLink && o && 'folder' === o.type && i && '' === o.title && 0 === this.controller.getNumberOfItemsInFolder(o.id))
                                return e.stopPropagation(),
                                e.preventDefault(),
                                void b.default(this.controller, n, 'inject', function(e, t) {
                                    return t(null, e)
                                });
                            if (!o || 'text' !== o.type && 'folder' !== o.type) {
                                if (r.pasteGraphLink && i) {
                                    e.stopPropagation(),
                                    e.preventDefault();
                                    var s = r.pasteGraphLinkCallback ? r.pasteGraphLinkCallback : function(e, t) {
                                        return t(null, e)
                                    }
                                    ;
                                    return void b.default(this.controller, n, 'set-state', s)
                                }
                                if (r.pasteTableData) {
                                    var a = m.parse(n);
                                    if (void 0 !== a)
                                        return e.stopPropagation(),
                                        e.preventDefault(),
                                        this.controller.dispatch({
                                            type: 'paste-table',
                                            data: a
                                        })
                                }
                                var l = m.getExpressions(n);
                                if (void 0 !== l) {
                                    e.stopPropagation(),
                                    e.preventDefault();
                                    var c = [];
                                    return void (1 === l.length && l[0].numberList ? this.controller.dispatch({
                                        type: 'append-number-list',
                                        latex: l[0].content
                                    }) : (l.forEach(function(e) {
                                        c.push({
                                            type: 'expression',
                                            id: t.controller.generateId(),
                                            latex: e.content
                                        })
                                    }),
                                    this.controller.dispatch({
                                        type: 'insert-several-expressions',
                                        expressions: c
                                    })))
                                }
                            }
                        }
                    }
                    ,
                    t.prototype.onDrop = function(e) {
                        if (this.controller.areImagesEnabled()) {
                            var t = e.dataTransfer && e.dataTransfer.files;
                            t && this.controller.dispatch({
                                type: 'new-images',
                                files: t
                            })
                        }
                    }
                    ,
                    t
                }(o.Class);
                t.default = P
            }),
            r('graphing-calc/keypads/dcgview-graphing', ['require', 'exports', 'tslib', 'dcgview'], function(e, t, r, n) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var i = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller(),
                        this.dispatch = this.controller.dispatch
                    }
                    ,
                    t
                }(n.Class);
                t.default = i
            }),
            r('loadcss!keypad/btn', function() {}),
            r('keypad/btn', ['require', 'exports', 'tslib', 'dcgview', 'loadcss!./btn'], function(e, t, r, n) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var i = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-keypad-btn-container': !0,
                                    'dcg-keypad-short-btn': 'popover-short' === e.props.style(),
                                    'dcg-keypad-very-short-btn': 'popover-very-short' === e.props.style(),
                                    'dcg-disabled': e.isDisabled()
                                }
                            },
                            style: function() {
                                return {
                                    'flex-grow': e.getColSpan()
                                }
                            }
                        }, n.createElement('span', {
                            role: n.const('button'),
                            class: this.bindFn(this.getClasses),
                            'dcg-command': this.props.command,
                            'aria-label': this.bindFn(this.getAriaLabel),
                            onTap: this.props.onTap
                        }, n.createElement('span', {
                            class: n.const('dcg-keypad-btn-content')
                        }, this.children)))
                    }
                    ,
                    t.prototype.getClasses = function() {
                        var e = {
                            'dcg-keypad-btn': !0,
                            'dcg-keypad-btn-active': this.isActive()
                        }
                        , t = this.props.style();
                        switch (t) {
                        case 'default':
                            e['dcg-btn-light-on-gray'] = !0;
                            break;
                        case 'highlight':
                            e['dcg-btn-dark-on-gray'] = !0;
                            break;
                        case 'popover-short':
                        case 'popover-very-short':
                        case 'popover':
                            e['dcg-btn-light-gray'] = !0;
                            break;
                        case 'blue':
                            e['dcg-btn-short-blue'] = !0;
                            break;
                        case 'tall-blue':
                            e['dcg-btn-tall-blue'] = !0;
                            break;
                        default:
                            return t
                        }
                        return e
                    }
                    ,
                    t.prototype.isActive = function() {
                        return !!this.props.active && this.props.active()
                    }
                    ,
                    t.prototype.getAriaLabel = function() {
                        return this.props.ariaLabel ? this.props.ariaLabel() : this.props.command()
                    }
                    ,
                    t.prototype.getColSpan = function() {
                        return this.props.colspan ? this.props.colspan() : void 0
                    }
                    ,
                    t.prototype.isDisabled = function() {
                        return this.props.disabled && this.props.disabled()
                    }
                    ,
                    t
                }(n.Class);
                t.default = i
            }),
            r('keypad/keys', ['require', 'exports', './btn', 'dcgview-helpers/static-mathquill-view', 'dcgview', 'lib/i18n'], function(e, t, r, n, i, o) {
                'use strict';
                function s(e, t) {
                    return void 0 === e ? i.const(t) : i.const(e)
                }
                function a(e) {
                    return function(t, o, a) {
                        return void 0 === a && (a = {}),
                        i.createElement(r.default, {
                            command: i.const(e.command || e.typedText || e.keys[0]),
                            ariaLabel: i.const(e.ariaLabel || e.typedText || e.keys[0]),
                            colspan: s(a.colspan, 1),
                            style: function() {
                                return a.style || 'default'
                            },
                            onTap: function() {
                                return o({
                                    type: 'keypad/type-text',
                                    text: e.typedText || e.keys[0]
                                })
                            }
                        }, g(function() {
                            return '{' === e.keys[0] || '[' === e.keys[0]
                        }, {
                            true: function() {
                                return i.createElement('span', {
                                    class: i.const('dcg-mq-math-mode'),
                                    style: i.const('font-size: 120%')
                                }, i.const(e.keys[0]), i.const(' '), i.createElement('span', {
                                    style: i.const('color: #999')
                                }, i.const(e.keys[1])))
                            },
                            false: function() {
                                return i.createElement('span', null, i.createElement(n.default, {
                                    latex: i.const(e.keys[0])
                                }), i.createElement('span', {
                                    style: i.const('color: #999')
                                }, i.createElement(n.default, {
                                    latex: i.const(e.keys[1])
                                })))
                            }
                        }))
                    }
                }
                function l(e) {
                    return function(t, o, a) {
                        return void 0 === a && (a = {}),
                        i.createElement(r.default, {
                            command: i.const(e.command || e.typedText || e.keys[1]),
                            ariaLabel: i.const(e.ariaLabel || e.typedText || e.keys[1]),
                            colspan: s(a.colspan, 1),
                            style: s(a.style, 'default'),
                            onTap: function() {
                                return o({
                                    type: 'keypad/type-text',
                                    text: e.typedText || e.keys[1]
                                })
                            }
                        }, g(function() {
                            return '}' === e.keys[1] || ']' === e.keys[1]
                        }, {
                            true: function() {
                                return i.createElement('span', {
                                    class: i.const('dcg-mq-math-mode'),
                                    style: i.const('font-size: 120%')
                                }, i.createElement('span', {
                                    style: i.const('color: #999')
                                }, i.const(e.keys[0])), i.const(' '), i.const(e.keys[1]))
                            },
                            false: function() {
                                return i.createElement('span', null, i.createElement('span', {
                                    style: i.const('color: #999')
                                }, i.createElement(n.default, {
                                    latex: i.const(e.keys[0])
                                })), i.createElement(n.default, {
                                    latex: i.const(e.keys[1])
                                }))
                            }
                        }))
                    }
                }
                function c(e) {
                    return function(t, o, a) {
                        return void 0 === a && (a = {}),
                        i.createElement(r.default, {
                            command: i.const(e.command || t),
                            ariaLabel: i.const(e.ariaLabel || t),
                            colspan: s(a.colspan, 1),
                            style: function() {
                                return a.style || 'default'
                            },
                            onTap: function() {
                                return o({
                                    type: 'keypad/type-text',
                                    text: e.typedText || t
                                })
                            }
                        }, i.createElement(n.default, {
                            latex: i.const(e.content || t)
                        }))
                    }
                }
                function u(e) {
                    return function(t, n, o) {
                        return void 0 === o && (o = {}),
                        i.createElement(r.default, {
                            command: i.const(e.command || t),
                            ariaLabel: i.const(e.ariaLabel || t),
                            colspan: s(o.colspan, 1),
                            style: function() {
                                return o.style || 'default'
                            },
                            onTap: function() {
                                return n({
                                    type: 'keypad/type-text',
                                    text: e.typedText || t
                                })
                            }
                        }, i.createElement('span', {
                            class: i.const('dcg-mq-math-mode')
                        }, i.const(e.content || t)))
                    }
                }
                function d(e) {
                    return function(t, o, a) {
                        return void 0 === a && (a = {}),
                        i.createElement(r.default, {
                            command: i.const(t),
                            ariaLabel: i.const(e.ariaLabel || t),
                            colspan: s(a.colspan, 1),
                            style: function() {
                                return a.style || 'default'
                            },
                            onTap: function() {
                                return o({
                                    type: 'keypad/type-text',
                                    text: t + '('
                                })
                            }
                        }, i.createElement(n.default, {
                            latex: i.const(t)
                        }))
                    }
                }
                function p(e) {
                    return function(t, o, a) {
                        return void 0 === a && (a = {}),
                        i.createElement(r.default, {
                            command: i.const(e.command),
                            ariaLabel: i.const(e.ariaLabel || e.command),
                            colspan: s(a.colspan, 1),
                            style: function() {
                                return a.style || 'default'
                            },
                            onTap: function() {
                                o({
                                    type: 'keypad/custom-command',
                                    command: e.command
                                })
                            }
                        }, i.createElement(n.default, {
                            latex: i.const(e.content)
                        }))
                    }
                }
                function h(e, t, r) {
                    void 0 === r && (r = {});
                    var n = e.dispatch;
                    return m[t](t, n, r)
                }
                function f(e) {
                    return void 0 === e && (e = 1),
                    i.createElement('div', {
                        style: i.const('flex-grow:' + e)
                    })
                }
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var g = i.Components.IfElse
                , m = {
                    '{': u({
                        ariaLabel: o.t('Left Bracket')
                    }),
                    '}': u({
                        ariaLabel: o.t('Right Bracket')
                    }),
                    '(': c({
                        ariaLabel: o.t('Left Parenthesis')
                    }),
                    ')': c({
                        ariaLabel: o.t('Right Parenthesis')
                    }),
                    sqrt: c({
                        content: '\\sqrt{}',
                        ariaLabel: o.t('Square Root')
                    }),
                    '/': c({
                        content: '÷',
                        ariaLabel: o.t('Divide')
                    }),
                    '*': c({
                        content: '×',
                        ariaLabel: o.t('Times')
                    }),
                    '-': c({
                        ariaLabel: o.t('Minus')
                    }),
                    '+': c({
                        ariaLabel: o.t('Plus')
                    }),
                    '.': c({
                        ariaLabel: o.t('Decimal')
                    }),
                    ans: function(e, t, n) {
                        return void 0 === n && (n = {}),
                        i.createElement(r.default, {
                            command: i.const(e),
                            ariaLabel: function() {
                                return o.t('Answer')
                            },
                            colspan: s(n.colspan, 1),
                            style: function() {
                                return n.style || 'default'
                            },
                            onTap: function() {
                                return t({
                                    type: 'keypad/type-text',
                                    text: e
                                })
                            }
                        }, i.const('ans'))
                    },
                    enter: function(e, t, n) {
                        return void 0 === n && (n = {}),
                        i.createElement(r.default, {
                            command: i.const(e),
                            ariaLabel: function() {
                                return o.t('Enter')
                            },
                            colspan: s(n.colspan, 1),
                            style: function() {
                                return n.style || 'default'
                            },
                            onTap: function() {
                                return t({
                                    type: 'keypad/press-key',
                                    key: 'Enter'
                                })
                            }
                        }, i.createElement('i', {
                            class: i.const('dcg-icon-arrow-enter')
                        }))
                    },
                    shift: function(e, t, n) {
                        return void 0 === n && (n = {}),
                        i.createElement(r.default, {
                            command: i.const(e),
                            ariaLabel: function() {
                                return o.t('Shift')
                            },
                            colspan: s(n.colspan, 1),
                            style: function() {
                                return n.style || 'default'
                            },
                            active: s(n.active, !1),
                            onTap: function() {
                                return t({
                                    type: 'keypad/shift'
                                })
                            }
                        }, i.createElement('i', {
                            class: i.const('dcg-icon-shift')
                        }))
                    },
                    left: function(e, t, n) {
                        return void 0 === n && (n = {}),
                        i.createElement(r.default, {
                            command: i.const(e),
                            ariaLabel: function() {
                                return o.t('Left Arrow')
                            },
                            colspan: s(n.colspan, 1),
                            style: function() {
                                return n.style || 'default'
                            },
                            onTap: function() {
                                return t({
                                    type: 'keypad/press-key',
                                    key: 'Left'
                                })
                            }
                        }, i.createElement('i', {
                            class: i.const('dcg-icon-arrow-left')
                        }))
                    },
                    right: function(e, t, n) {
                        return void 0 === n && (n = {}),
                        i.createElement(r.default, {
                            command: i.const(e),
                            ariaLabel: function() {
                                return o.t('Right Arrow')
                            },
                            colspan: s(n.colspan, 1),
                            style: function() {
                                return n.style || 'default'
                            },
                            onTap: function() {
                                return t({
                                    type: 'keypad/press-key',
                                    key: 'Right'
                                })
                            }
                        }, i.createElement('i', {
                            class: i.const('dcg-icon-arrow-right')
                        }))
                    },
                    123: function(e, t, n) {
                        return void 0 === n && (n = {}),
                        i.createElement(r.default, {
                            command: i.const(e),
                            ariaLabel: function() {
                                return o.t('Toggle Numbers')
                            },
                            colspan: s(n.colspan, 1),
                            style: function() {
                                return n.style || 'default'
                            },
                            onTap: function() {
                                return t({
                                    type: 'keypad/123'
                                })
                            }
                        }, i.const('1 2 3'))
                    },
                    ABC: function(e, t, n) {
                        return void 0 === n && (n = {}),
                        i.createElement(r.default, {
                            command: i.const(e),
                            ariaLabel: function() {
                                return o.t('Toggle Letters')
                            },
                            colspan: s(n.colspan, 1),
                            style: function() {
                                return n.style || 'default'
                            },
                            onTap: function() {
                                return t({
                                    type: 'keypad/abc'
                                })
                            }
                        }, i.const('A B C'))
                    },
                    backspace: function(e, t, n) {
                        return void 0 === n && (n = {}),
                        i.createElement(r.default, {
                            command: i.const(e),
                            ariaLabel: function() {
                                return o.t('Backspace')
                            },
                            colspan: s(n.colspan, 1),
                            style: function() {
                                return n.style || 'default'
                            },
                            onTap: function() {
                                return t({
                                    type: 'keypad/press-key',
                                    key: 'Backspace'
                                })
                            }
                        }, i.createElement('i', {
                            class: i.const('dcg-icon-delete')
                        }))
                    },
                    pi: c({
                        content: '\\pi',
                        ariaLabel: o.t('Pi')
                    }),
                    alpha: c({
                        content: '\\alpha',
                        ariaLabel: o.t('Alpha')
                    }),
                    beta: c({
                        content: '\\beta',
                        ariaLabel: o.t('Beta')
                    }),
                    theta: c({
                        content: '\\theta',
                        ariaLabel: o.t('Theta')
                    }),
                    tau: c({
                        content: '\\tau',
                        ariaLabel: o.t('Tau')
                    }),
                    'a^2': p({
                        command: 'a^2',
                        content: 'a^2',
                        ariaLabel: o.t('Squared')
                    }),
                    'a^3': p({
                        command: 'a^3',
                        content: 'a^3',
                        ariaLabel: o.t('Cubed')
                    }),
                    'x^3': p({
                        command: 'a^3',
                        content: 'x^3',
                        ariaLabel: o.t('Cubed')
                    }),
                    'a^b': c({
                        content: 'a^b',
                        typedText: '^',
                        ariaLabel: o.t('Superscript')
                    }),
                    a_b: c({
                        content: 'a_b',
                        typedText: '_',
                        ariaLabel: o.t('Subscript')
                    }),
                    'a/b': c({
                        content: '\\frac{a}{b}',
                        typedText: '/',
                        ariaLabel: o.t('A over B')
                    }),
                    fraction: p({
                        content: '\\frac{a}{b}',
                        command: 'a/b',
                        ariaLabel: o.t('A over B')
                    }),
                    'x^2': p({
                        command: 'a^2',
                        content: 'x^2',
                        ariaLabel: o.t('Squared')
                    }),
                    'x^y': c({
                        content: 'x^y',
                        typedText: '^',
                        ariaLabel: o.t('Superscript')
                    }),
                    'x/y': c({
                        content: '\\frac{x}{y}',
                        typedText: '/',
                        ariaLabel: o.t('A over B')
                    }),
                    nthroot: p({
                        command: 'nthroot',
                        content: '\\sqrt[n]{}',
                        ariaLabel: o.t('Nth Root')
                    }),
                    ythroot: p({
                        command: 'nthroot',
                        content: '\\sqrt[y]{}',
                        ariaLabel: o.t('Yth Root')
                    }),
                    sin: d({
                        ariaLabel: o.t('Sine')
                    }),
                    cos: d({
                        ariaLabel: o.t('Cosine')
                    }),
                    tan: d({
                        ariaLabel: o.t('Tangent')
                    }),
                    sec: d({
                        ariaLabel: o.t('Secant')
                    }),
                    csc: d({
                        ariaLabel: o.t('Cosecant')
                    }),
                    cot: d({
                        ariaLabel: o.t('Cotangent')
                    }),
                    sinh: d({
                        ariaLabel: o.t('Hyperbolic Sine')
                    }),
                    cosh: d({
                        ariaLabel: o.t('Hyperbolic Cosine')
                    }),
                    tanh: d({
                        ariaLabel: o.t('Hyperbolic Tangent')
                    }),
                    sech: d({
                        ariaLabel: o.t('Hyperbolic Secant')
                    }),
                    csch: d({
                        ariaLabel: o.t('Hyperbolic Cosecant')
                    }),
                    coth: d({
                        ariaLabel: o.t('Hyperbolic Cotangent')
                    }),
                    arcsin: p({
                        command: 'arcsin',
                        content: 'sin^{-1}',
                        ariaLabel: o.t('Inverse Sine')
                    }),
                    arccos: p({
                        command: 'arccos',
                        content: 'cos^{-1}',
                        ariaLabel: o.t('Inverse Cosine')
                    }),
                    arctan: p({
                        command: 'arctan',
                        content: 'tan^{-1}',
                        ariaLabel: o.t('Inverse Tangent')
                    }),
                    arccsc: p({
                        command: 'arccsc',
                        content: 'csc^{-1}',
                        ariaLabel: o.t('Inverse Cosecant')
                    }),
                    arcsec: p({
                        command: 'arcsec',
                        content: 'sec^{-1}',
                        ariaLabel: o.t('Inverse Secant')
                    }),
                    arccot: p({
                        command: 'arccot',
                        content: 'cot^{-1}',
                        ariaLabel: o.t('Inverse Cotangent')
                    }),
                    '|a|': c({
                        typedText: '|',
                        ariaLabel: o.t('Absolute Value')
                    }),
                    '|x|': c({
                        typedText: '|',
                        ariaLabel: o.t('Absolute Value')
                    }),
                    ln: d({
                        ariaLabel: o.t('Natural Log')
                    }),
                    log: d({
                        ariaLabel: o.t('Log')
                    }),
                    quantile: d({
                        ariaLabel: o.t('Quantile')
                    }),
                    quartile: d({
                        ariaLabel: o.t('Quartile')
                    }),
                    var: d({}),
                    varp: d({}),
                    nCr: d({}),
                    loga: p({
                        command: 'loga',
                        content: 'log_a',
                        ariaLabel: o.t('Log A')
                    }),
                    stdev: d({
                        ariaLabel: o.t('Standard Deviation')
                    }),
                    mad: d({}),
                    nPr: d({}),
                    total: d({}),
                    length: d({}),
                    min: d({}),
                    max: d({}),
                    cov: d({
                        ariaLabel: o.t('Co Variance')
                    }),
                    corr: d({
                        ariaLabel: o.t('Correlation')
                    }),
                    spearman: d({
                        ariaLabel: o.t('Spearman Rank Correlation')
                    }),
                    stats: d({
                        ariaLabel: o.t('Summary statistics')
                    }),
                    polygon: d({
                        ariaLabel: o.t('Polygon')
                    }),
                    distance: d({
                        ariaLabel: o.t('Distance')
                    }),
                    midpoint: d({
                        ariaLabel: o.t('Midpoint')
                    }),
                    mean: d({
                        ariaLabel: o.t('Mean')
                    }),
                    stdevp: d({
                        ariaLabel: o.t('Standard Deviation of Population')
                    }),
                    mod: d({}),
                    'e^x': c({
                        typedText: 'e^',
                        ariaLabel: o.t('Exponent')
                    }),
                    '10^n': c({
                        content: '\\times10^{n}',
                        typedText: '*10^',
                        ariaLabel: o.t('Times ten to the power of')
                    }),
                    'a^{-1}': c({
                        typedText: '^-1',
                        ariaLabel: o.t('Reciprocal')
                    }),
                    sum: c({
                        content: '\\sum',
                        ariaLabel: o.t('Sum')
                    }),
                    prod: c({
                        content: '\\prod',
                        ariaLabel: o.t('Product')
                    }),
                    floor: d({
                        ariaLabel: o.t('Floor')
                    }),
                    ceil: d({
                        ariaLabel: o.t('Ceiling')
                    }),
                    round: d({
                        ariaLabel: o.t('Round')
                    }),
                    abs: d({
                        ariaLabel: o.t('Absolute Value')
                    }),
                    '!': c({
                        ariaLabel: o.t('Factorial')
                    }),
                    'n!': c({
                        typedText: '!',
                        ariaLabel: o.t('Factorial')
                    }),
                    median: d({
                        ariaLabel: o.t('Median')
                    }),
                    lcm: d({}),
                    gcd: d({}),
                    gcf: d({}),
                    ddx: p({
                        command: 'ddx',
                        content: '\\frac{d}{dx}'
                    }),
                    int: c({
                        content: '\\int',
                        ariaLabel: o.t('Integral')
                    }),
                    '%': c({
                        content: '\\%',
                        ariaLabel: o.t('Percent Of')
                    }),
                    exp: c({}),
                    sign: d({}),
                    normaldist: d({
                        ariaLabel: o.t('Normal Distribution')
                    }),
                    poissondist: d({
                        ariaLabel: o.t('Poisson Distribution')
                    }),
                    binomialdist: d({
                        ariaLabel: o.t('Binomial Distribution')
                    }),
                    uniformdist: d({
                        ariaLabel: o.t('Uniform Distribution')
                    }),
                    erf: d({
                        ariaLabel: o.t('Error Function')
                    }),
                    histogram: d({
                        ariaLabel: o.t('Histogram')
                    }),
                    boxplot: d({
                        ariaLabel: o.t('Box Plot')
                    }),
                    dotplot: d({
                        ariaLabel: o.t('Dot Plot')
                    }),
                    tscore: d({
                        ariaLabel: o.t('T Score')
                    }),
                    ittest: d({
                        ariaLabel: o.t('Independent T Test')
                    }),
                    ttest: d({
                        ariaLabel: o.t('T Test')
                    }),
                    tdist: d({
                        ariaLabel: o.t('Student-t Distribution')
                    }),
                    pdf: d({
                        ariaLabel: o.t('Probability Density Function')
                    }),
                    cdf: d({
                        ariaLabel: o.t('Cumulative Density Function')
                    }),
                    random: d({
                        ariaLabel: o.t('Random Number')
                    }),
                    inversecdf: d({
                        ariaLabel: o.t('Inverse CDF function')
                    }),
                    'A^-1': p({
                        command: 'A^-1',
                        content: 'A^{-1}',
                        ariaLabel: o.t('Inverse')
                    }),
                    'A^T': p({
                        command: 'A^T',
                        content: 'A^T',
                        ariaLabel: o.t('Transpose')
                    }),
                    'A^2': p({
                        command: 'A^2',
                        content: 'A^2',
                        ariaLabel: o.t('Squared')
                    }),
                    det: d({
                        ariaLabel: 'Determinant'
                    }),
                    'A^n': c({
                        content: 'A^n',
                        typedText: '^',
                        ariaLabel: o.t('Exponent')
                    }),
                    a: c({}),
                    b: c({}),
                    c: c({}),
                    d: c({}),
                    e: c({}),
                    f: c({}),
                    g: c({}),
                    h: c({}),
                    i: c({}),
                    j: c({}),
                    k: c({}),
                    l: c({}),
                    m: c({}),
                    n: c({}),
                    o: c({}),
                    p: c({}),
                    q: c({}),
                    r: c({}),
                    s: c({}),
                    t: c({}),
                    u: c({}),
                    v: c({}),
                    w: c({}),
                    x: c({}),
                    boldX: c({
                        content: 'x',
                        typedText: 'x'
                    }),
                    y: c({}),
                    boldY: c({
                        content: 'y',
                        typedText: 'y'
                    }),
                    z: c({}),
                    A: c({}),
                    B: c({}),
                    C: c({}),
                    D: c({}),
                    E: c({}),
                    F: c({}),
                    G: c({}),
                    H: c({}),
                    I: c({}),
                    J: c({}),
                    K: c({}),
                    L: c({}),
                    M: c({}),
                    N: c({}),
                    O: c({}),
                    P: c({}),
                    Q: c({}),
                    R: c({}),
                    S: c({}),
                    T: c({}),
                    U: c({}),
                    V: c({}),
                    W: c({}),
                    X: c({}),
                    Y: c({}),
                    Z: c({}),
                    0: c({}),
                    1: c({}),
                    2: c({}),
                    3: c({}),
                    4: c({}),
                    5: c({}),
                    6: c({}),
                    7: c({}),
                    8: c({}),
                    9: c({}),
                    ',': c({}),
                    '=': c({}),
                    '[': c({}),
                    ']': c({}),
                    '{}_left': a({
                        keys: ['{', '}']
                    }),
                    '{}_right': l({
                        keys: ['{', '}']
                    }),
                    '()_left': a({
                        keys: ['(', ')']
                    }),
                    '()_right': l({
                        keys: ['(', ')']
                    }),
                    '[]_left': a({
                        keys: ['[', ']']
                    }),
                    '[]_right': l({
                        keys: ['[', ']']
                    }),
                    ',\'_left': a({
                        keys: [',', '′']
                    }),
                    ',\'_right': l({
                        keys: [',', '′'],
                        typedText: '\''
                    }),
                    '"': c({}),
                    '\'': c({}),
                    '~': c({}),
                    ':': c({}),
                    '>': c({}),
                    '<': c({}),
                    '>=': c({
                        content: '\\ge'
                    }),
                    '<=': c({
                        content: '\\le'
                    }),
                    '!%_left': a({
                        keys: ['!', '{}^{%}']
                    }),
                    '!%_right': l({
                        keys: ['!', '{}^{%}'],
                        typedText: '%'
                    }),
                    '~:_left': a({
                        keys: ['~', '{}^{:}']
                    }),
                    '~:_right': l({
                        keys: ['~', '{}^{:}'],
                        typedText: ':'
                    })
                };
                t.view = h,
                t.spacer = f
            }),
            r('keypad/dcgview-keypad', ['require', 'exports', 'tslib', 'dcgview'], function(e, t, r, n) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var i = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t
                }(n.Class);
                t.default = i
            }),
            r('loadcss!keypad/keypad', function() {}),
            r('keypad/keypad', ['require', 'exports', 'tslib', 'dcgview', './dcgview-keypad', 'loadcss!./keypad'], function(e, t, r, n, i) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var o = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        return n.createElement('div', {
                            class: n.const('dcg-basic-keypad dcg-do-not-blur')
                        }, this.children)
                    }
                    ,
                    t
                }(i.default);
                t.default = o
            }),
            r('loadcss!keypad/row', function() {}),
            r('keypad/row', ['require', 'exports', 'tslib', 'dcgview', 'loadcss!./row'], function(e, t, r, n) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var i = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        return n.createElement('div', {
                            class: n.const('dcg-keypad-row')
                        }, this.children)
                    }
                    ,
                    t
                }(n.Class);
                t.default = i
            }),
            r('graphing-calc/keypads/qwerty', ['require', 'exports', 'tslib', 'dcgview', './dcgview-graphing', 'keypad/keys', 'keypad/keypad', 'keypad/row'], function(e, t, r, n, i, o, s, a) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var l = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        return n.createElement(s.default, {
                            controller: this.props.controller
                        }, n.createElement(a.default, null, o.view(this, 'q'), o.view(this, 'w'), o.view(this, 'e'), o.view(this, 'r'), o.view(this, 't'), o.view(this, 'y'), o.view(this, 'u'), o.view(this, 'i'), o.view(this, 'o'), o.view(this, 'p')), n.createElement(a.default, null, o.view(this, 'a'), o.view(this, 's'), o.view(this, 'd'), o.view(this, 'f'), o.view(this, 'g'), o.view(this, 'h'), o.view(this, 'j'), o.view(this, 'k'), o.view(this, 'l'), o.view(this, 'theta')), n.createElement(a.default, null, o.view(this, 'shift', {
                            colspan: 1.364,
                            style: 'highlight'
                        }), o.spacer(.136), o.view(this, 'z'), o.view(this, 'x'), o.view(this, 'c'), o.view(this, 'v'), o.view(this, 'b'), o.view(this, 'n'), o.view(this, 'm'), o.spacer(.136), o.view(this, 'backspace', {
                            colspan: 1.364,
                            style: 'highlight'
                        })), n.createElement(a.default, null, o.view(this, '123', {
                            colspan: 1.818,
                            style: 'highlight'
                        }), o.spacer(.182), o.view(this, 'a_b'), o.view(this, '!%_left'), o.view(this, '[]_left'), o.view(this, '{}_left'), o.view(this, '~:_left'), o.view(this, ',\'_left'), o.spacer(.182), o.view(this, 'enter', {
                            colspan: 1.818,
                            style: 'blue'
                        })))
                    }
                    ,
                    t
                }(i.default);
                t.default = l
            }),
            r('graphing-calc/keypads/qwerty-capital', ['require', 'exports', 'tslib', 'dcgview', './dcgview-graphing', 'keypad/keys', 'keypad/keypad', 'keypad/row'], function(e, t, r, n, i, o, s, a) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var l = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        return n.createElement(s.default, {
                            controller: this.props.controller
                        }, n.createElement(a.default, null, o.view(this, 'Q'), o.view(this, 'W'), o.view(this, 'E'), o.view(this, 'R'), o.view(this, 'T'), o.view(this, 'Y'), o.view(this, 'U'), o.view(this, 'I'), o.view(this, 'O'), o.view(this, 'P')), n.createElement(a.default, null, o.view(this, 'A'), o.view(this, 'S'), o.view(this, 'D'), o.view(this, 'F'), o.view(this, 'G'), o.view(this, 'H'), o.view(this, 'J'), o.view(this, 'K'), o.view(this, 'L'), o.view(this, 'tau')), n.createElement(a.default, null, o.view(this, 'shift', {
                            colspan: 1.364,
                            active: !0,
                            style: 'highlight'
                        }), o.spacer(.136), o.view(this, 'Z'), o.view(this, 'X'), o.view(this, 'C'), o.view(this, 'V'), o.view(this, 'B'), o.view(this, 'N'), o.view(this, 'M'), o.spacer(.136), o.view(this, 'backspace', {
                            colspan: 1.364,
                            style: 'highlight'
                        })), n.createElement(a.default, null, o.view(this, '123', {
                            colspan: 1.818,
                            style: 'highlight'
                        }), o.spacer(.182), o.view(this, 'a^b'), o.view(this, '!%_right'), o.view(this, '[]_right'), o.view(this, '{}_right'), o.view(this, '~:_right'), o.view(this, ',\'_right'), o.spacer(.182), o.view(this, 'enter', {
                            colspan: 1.818,
                            style: 'blue'
                        })))
                    }
                    ,
                    t
                }(i.default);
                t.default = l
            }),
            r('graphing-calc/keypads/numbers', ['require', 'exports', 'tslib', 'dcgview', './dcgview-graphing', 'keypad/keys', 'keypad/keypad', 'keypad/row', 'keypad/btn'], function(e, t, r, n, i, o, s, a, l) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var c = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement(s.default, {
                            controller: this.props.controller
                        }, n.createElement(a.default, null, o.view(this, 'boldX'), o.view(this, 'boldY'), o.view(this, 'a^2'), o.view(this, 'a^b'), o.spacer(.5), o.view(this, '7', {
                            style: 'highlight'
                        }), o.view(this, '8', {
                            style: 'highlight'
                        }), o.view(this, '9', {
                            style: 'highlight'
                        }), o.view(this, '/'), o.spacer(.5), n.createElement(l.default, {
                            command: this.const('functions'),
                            ariaLabel: function() {
                                return e.controller.t('Functions')
                            },
                            colspan: this.const(2),
                            style: this.const('highlight'),
                            active: function() {
                                return e.controller.isKeypadFunctionsPopoverOpen()
                            },
                            onTap: function() {
                                return e.dispatch({
                                    type: 'keypad/functions'
                                })
                            }
                        }, this.bindFn(this.getFuncsBtnText))), n.createElement(a.default, null, o.view(this, '('), o.view(this, ')'), o.view(this, '<'), o.view(this, '>'), o.spacer(.5), o.view(this, '4', {
                            style: 'highlight'
                        }), o.view(this, '5', {
                            style: 'highlight'
                        }), o.view(this, '6', {
                            style: 'highlight'
                        }), o.view(this, '*'), o.spacer(.5), o.view(this, 'left', {
                            style: 'highlight'
                        }), o.view(this, 'right', {
                            style: 'highlight'
                        })), n.createElement(a.default, null, o.view(this, '|a|'), o.view(this, ','), o.view(this, '<='), o.view(this, '>='), o.spacer(.5), o.view(this, '1', {
                            style: 'highlight'
                        }), o.view(this, '2', {
                            style: 'highlight'
                        }), o.view(this, '3', {
                            style: 'highlight'
                        }), o.view(this, '-'), o.spacer(1), o.view(this, 'backspace', {
                            colspan: 1.5,
                            style: 'highlight'
                        })), n.createElement(a.default, null, o.view(this, 'ABC', {
                            colspan: 2,
                            style: 'highlight'
                        }), o.view(this, 'sqrt'), o.view(this, 'pi'), o.spacer(.5), o.view(this, '0', {
                            style: 'highlight'
                        }), o.view(this, '.', {
                            style: 'highlight'
                        }), o.view(this, '='), o.view(this, '+'), o.spacer(.5), o.view(this, 'enter', {
                            colspan: 2,
                            style: 'blue'
                        })))
                    }
                    ,
                    t.prototype.getFuncsBtnText = function() {
                        return this.controller.isNarrow() ? this.controller.t('funcs') : this.controller.t('functions')
                    }
                    ,
                    t
                }(i.default);
                t.default = c
            }),
            r('graphing-calc/keypads/letters', ['require', 'exports', 'tslib', 'dcgview', './dcgview-graphing', 'keypad/keys', 'keypad/keypad', 'keypad/row'], function(e, t, r, n, i, o, s, a) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var l = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        return n.createElement(s.default, {
                            controller: this.props.controller
                        }, n.createElement(a.default, null, o.view(this, 'a'), o.view(this, 'b'), o.view(this, 'c'), o.view(this, 'd'), o.view(this, 'e'), o.view(this, 'f'), o.view(this, 'g'), o.view(this, 'h'), o.view(this, 'i'), o.view(this, 'j')), n.createElement(a.default, null, o.view(this, 'k'), o.view(this, 'l'), o.view(this, 'm'), o.view(this, 'n'), o.view(this, 'o'), o.view(this, 'p'), o.view(this, 'q'), o.view(this, 'r'), o.view(this, 's'), o.view(this, 't')), n.createElement(a.default, null, o.view(this, 'shift', {
                            style: 'highlight'
                        }), o.view(this, 'u'), o.view(this, 'v'), o.view(this, 'w'), o.view(this, 'x'), o.view(this, 'y'), o.view(this, 'z'), o.view(this, 'theta'), o.view(this, 'backspace', {
                            colspan: 2,
                            style: 'highlight'
                        })), n.createElement(a.default, null, o.view(this, '123', {
                            colspan: 2,
                            style: 'highlight'
                        }), o.view(this, 'a_b'), o.view(this, '!%_left'), o.view(this, '[]_left'), o.view(this, '{}_left'), o.view(this, '~:_left'), o.view(this, ',\'_left'), o.view(this, 'enter', {
                            colspan: 2,
                            style: 'blue'
                        })))
                    }
                    ,
                    t
                }(i.default);
                t.default = l
            }),
            r('graphing-calc/keypads/letters-capital', ['require', 'exports', 'tslib', 'dcgview', './dcgview-graphing', 'keypad/keys', 'keypad/keypad', 'keypad/row'], function(e, t, r, n, i, o, s, a) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var l = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        return n.createElement(s.default, {
                            controller: this.props.controller
                        }, n.createElement(a.default, null, o.view(this, 'A'), o.view(this, 'B'), o.view(this, 'C'), o.view(this, 'D'), o.view(this, 'E'), o.view(this, 'F'), o.view(this, 'G'), o.view(this, 'H'), o.view(this, 'I'), o.view(this, 'J')), n.createElement(a.default, null, o.view(this, 'K'), o.view(this, 'L'), o.view(this, 'M'), o.view(this, 'N'), o.view(this, 'O'), o.view(this, 'P'), o.view(this, 'Q'), o.view(this, 'R'), o.view(this, 'S'), o.view(this, 'T')), n.createElement(a.default, null, o.view(this, 'shift', {
                            style: 'highlight'
                        }), o.view(this, 'U'), o.view(this, 'V'), o.view(this, 'W'), o.view(this, 'X'), o.view(this, 'Y'), o.view(this, 'Z'), o.view(this, 'tau'), o.view(this, 'backspace', {
                            colspan: 2,
                            style: 'highlight'
                        })), n.createElement(a.default, null, o.view(this, '123', {
                            colspan: 2,
                            style: 'highlight'
                        }), o.view(this, 'a^b'), o.view(this, '!%_right'), o.view(this, '[]_right'), o.view(this, '{}_right'), o.view(this, '~:_right'), o.view(this, ',\'_right'), o.view(this, 'enter', {
                            colspan: 2,
                            style: 'blue'
                        })))
                    }
                    ,
                    t
                }(i.default);
                t.default = l
            }),
            r('graphing-calc/keypads/trig', ['require', 'exports', 'tslib', 'dcgview', './dcgview-graphing', 'keypad/keys', 'keypad/keypad'], function(e, t, r, n, i, o, s) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var a = n.Components.If
                , l = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement(s.default, {
                            controller: this.props.controller
                        }, this.b('sin'), this.b('arcsin'), this.b('sinh'), this.b('cos'), this.b('arccos'), this.b('cosh'), this.b('tan'), this.b('arctan'), this.b('tanh'), n.createElement(a, {
                            predicate: this.bindFn(this.isNotRestricted)
                        }, function() {
                            return e.b('csc')
                        }), n.createElement(a, {
                            predicate: this.bindFn(this.isNotRestricted)
                        }, function() {
                            return e.b('arccsc')
                        }), n.createElement(a, {
                            predicate: this.bindFn(this.isNotRestricted)
                        }, function() {
                            return e.b('csch')
                        }), n.createElement(a, {
                            predicate: this.bindFn(this.isNotRestricted)
                        }, function() {
                            return e.b('sec')
                        }), n.createElement(a, {
                            predicate: this.bindFn(this.isNotRestricted)
                        }, function() {
                            return e.b('arcsec')
                        }), n.createElement(a, {
                            predicate: this.bindFn(this.isNotRestricted)
                        }, function() {
                            return e.b('sech')
                        }), n.createElement(a, {
                            predicate: this.bindFn(this.isNotRestricted)
                        }, function() {
                            return e.b('cot')
                        }), n.createElement(a, {
                            predicate: this.bindFn(this.isNotRestricted)
                        }, function() {
                            return e.b('arccot')
                        }), n.createElement(a, {
                            predicate: this.bindFn(this.isNotRestricted)
                        }, function() {
                            return e.b('coth')
                        }))
                    }
                    ,
                    t.prototype.b = function(e) {
                        return o.view(this, e, {
                            style: 'popover'
                        })
                    }
                    ,
                    t.prototype.isNotRestricted = function() {
                        return !this.controller.areFunctionsRestricted()
                    }
                    ,
                    t
                }(i.default);
                t.default = l
            }),
            r('graphing-calc/keypads/stats', ['require', 'exports', 'tslib', 'dcgview', './dcgview-graphing', 'keypad/keys', 'keypad/keypad'], function(e, t, r, n, i, o, s) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var a = n.Components.If
                , l = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement(s.default, {
                            controller: this.props.controller
                        }, this.b('total'), this.b('length'), this.b('mean'), this.b('median'), this.b('min'), this.b('max'), this.b('quartile'), this.b('quantile'), this.b('stdev'), this.b('stdevp'), n.createElement(a, {
                            predicate: this.bindFn(this.isNotRestricted)
                        }, function() {
                            return e.b('mad')
                        }), this.b('var'), n.createElement(a, {
                            predicate: this.bindFn(this.isNotRestricted)
                        }, function() {
                            return e.b('cov')
                        }), this.b('corr'), this.b('spearman'), this.b('nCr'), this.b('nPr'), this.b('stats'), n.createElement(a, {
                            predicate: this.bindFn(this.areDistributionsEnabled)
                        }, function() {
                            return e.b('ttest')
                        }), n.createElement(a, {
                            predicate: this.bindFn(this.areDistributionsEnabled)
                        }, function() {
                            return e.b('tscore')
                        }), n.createElement(a, {
                            predicate: this.bindFn(this.areDistributionsEnabled)
                        }, function() {
                            return e.b('ittest')
                        }))
                    }
                    ,
                    t.prototype.b = function(e) {
                        return o.view(this, e, {
                            style: 'popover-short'
                        })
                    }
                    ,
                    t.prototype.isNotRestricted = function() {
                        return !this.controller.areFunctionsRestricted()
                    }
                    ,
                    t.prototype.areDistributionsEnabled = function() {
                        return this.controller.areDistributionsEnabled()
                    }
                    ,
                    t
                }(i.default);
                t.default = l
            }),
            r('graphing-calc/keypads/misc', ['require', 'exports', 'tslib', 'dcgview', './dcgview-graphing', 'keypad/keys', 'keypad/keypad'], function(e, t, r, n, i, o, s) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var a = n.Components.If
                , l = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement(s.default, {
                            controller: this.props.controller
                        }, this.b('lcm'), this.b('gcd'), this.b('mod'), this.b('ceil'), this.b('floor'), this.b('round'), this.b('sign'), this.b('%'), this.b('exp'), this.b('ln'), this.b('nthroot'), this.b('polygon'), this.b('log'), this.b('loga'), this.b('ddx'), this.b('int'), this.b('sum'), this.b('prod'), n.createElement(a, {
                            predicate: this.bindFn(this.shouldShowGeometryButtons)
                        }, function() {
                            return e.b('distance')
                        }), n.createElement(a, {
                            predicate: this.bindFn(this.shouldShowGeometryButtons)
                        }, function() {
                            return e.b('midpoint')
                        }))
                    }
                    ,
                    t.prototype.b = function(e) {
                        return o.view(this, e, {
                            style: 'popover-short'
                        })
                    }
                    ,
                    t.prototype.shouldShowGeometryButtons = function() {
                        return this.controller.areFunctionsRestricted() && this.controller.areGeometryFunctionsForceEnabled()
                    }
                    ,
                    t
                }(i.default);
                t.default = l
            }),
            r('graphing-calc/keypads/distributions', ['require', 'exports', 'tslib', 'dcgview', './dcgview-graphing', 'keypad/keys', 'keypad/keypad'], function(e, t, r, n, i, o, s) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var a = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement(s.default, {
                            controller: this.props.controller
                        }, n.createElement('div', {
                            class: n.const('dcg-section-heading')
                        }, function() {
                            return e.controller.t('Visualizations')
                        }, n.createElement('a', {
                            href: n.const('https://support.desmos.com/hc/en-us/articles/360022405991'),
                            target: n.const('_blank'),
                            'aria-label': function() {
                                return e.controller.t('Visualizations')
                            }
                        }, n.createElement('i', {
                            class: n.const('dcg-icon-question-sign')
                        }))), this.b('histogram'), this.b('dotplot'), this.b('boxplot'), n.createElement('div', {
                            class: n.const('dcg-section-heading')
                        }, function() {
                            return e.controller.t('Distributions')
                        }, n.createElement('a', {
                            href: n.const('https://support.desmos.com/hc/en-us/articles/360022401451#distributions'),
                            target: n.const('_blank'),
                            'aria-label': function() {
                                return e.controller.t('Distributions')
                            }
                        }, n.createElement('i', {
                            class: n.const('dcg-icon-question-sign')
                        }))), this.b('normaldist'), this.b('tdist'), this.b('poissondist'), this.b('binomialdist'), this.b('uniformdist'), n.createElement('div', {
                            class: n.const('dcg-popover-section-separator')
                        }), this.b('pdf'), this.b('cdf'), this.b('inversecdf'), this.b('random'))
                    }
                    ,
                    t.prototype.b = function(e) {
                        return o.view(this, e, {
                            style: 'popover-short'
                        })
                    }
                    ,
                    t
                }(i.default);
                t.default = a
            }),
            r('loadcss!graphing-calc/keypads/functions-popover', function() {}),
            r('graphing-calc/keypads/functions-popover', ['require', 'exports', 'tslib', 'dcgview', './dcgview-graphing', './trig', './stats', './misc', './distributions', 'loadcss!./functions-popover'], function(e, t, r, n, i, o, s, a, l) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var c = n.Components
                , u = c.SwitchUnion
                , d = c.If
                , p = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: n.const('dcg-functions-popover dcg-popover dcg-top')
                        }, n.createElement('div', {
                            class: n.const('dcg-popover-interior')
                        }, n.createElement('div', {
                            class: n.const('dcg-popover-header')
                        }, n.createElement('span', {
                            role: n.const('button'),
                            'dcg-command': n.const('trigTab'),
                            class: function() {
                                return {
                                    'dcg-heading': !0,
                                    'dcg-selected': 'trig' === e.controller.getKeypadFunctionsTab()
                                }
                            },
                            onTap: function() {
                                e.dispatch({
                                    type: 'keypad/set-functions-tab',
                                    tab: 'trig'
                                })
                            }
                        }, function() {
                            return e.controller.t('trig')
                        }), n.createElement('span', {
                            role: n.const('button'),
                            'dcg-command': n.const('statsTab'),
                            class: function() {
                                return {
                                    'dcg-heading': !0,
                                    'dcg-selected': 'stats' === e.controller.getKeypadFunctionsTab()
                                }
                            },
                            onTap: function() {
                                e.dispatch({
                                    type: 'keypad/set-functions-tab',
                                    tab: 'stats'
                                })
                            }
                        }, function() {
                            return e.controller.t('stats')
                        }), n.createElement(d, {
                            predicate: function() {
                                return e.controller.areDistributionsEnabled()
                            }
                        }, function() {
                            return n.createElement('span', {
                                role: n.const('button'),
                                'dcg-command': n.const('distTab'),
                                class: function() {
                                    return {
                                        'dcg-heading': !0,
                                        'dcg-selected': 'dist' === e.controller.getKeypadFunctionsTab()
                                    }
                                },
                                onTap: function() {
                                    e.dispatch({
                                        type: 'keypad/set-functions-tab',
                                        tab: 'dist'
                                    })
                                }
                            }, function() {
                                return e.controller.t('dist')
                            })
                        }), n.createElement('span', {
                            role: n.const('button'),
                            'dcg-command': n.const('miscTab'),
                            class: function() {
                                return {
                                    'dcg-heading': !0,
                                    'dcg-selected': 'misc' === e.controller.getKeypadFunctionsTab()
                                }
                            },
                            onTap: function() {
                                e.dispatch({
                                    type: 'keypad/set-functions-tab',
                                    tab: 'misc'
                                })
                            }
                        }, function() {
                            return e.controller.t('misc')
                        })), n.createElement('div', {
                            class: n.const('dcg-interior-buttons')
                        }, u(function() {
                            return e.controller.getKeypadFunctionsTab()
                        }, {
                            trig: function() {
                                return n.createElement(o.default, {
                                    controller: e.props.controller
                                })
                            },
                            stats: function() {
                                return n.createElement(s.default, {
                                    controller: e.props.controller
                                })
                            },
                            misc: function() {
                                return n.createElement(a.default, {
                                    controller: e.props.controller
                                })
                            },
                            dist: function() {
                                return n.createElement(l.default, {
                                    controller: e.props.controller
                                })
                            }
                        }))), n.createElement('div', {
                            class: n.const('dcg-arrow')
                        }))
                    }
                    ,
                    t
                }(i.default);
                t.default = p
            }),
            r('loadcss!graphing-calc/keypads/graphing-keypad-container', function() {}),
            r('graphing-calc/keypads/main', ['require', 'exports', 'tslib', 'dcgview', './dcgview-graphing', './qwerty', './qwerty-capital', './numbers', './letters', './letters-capital', './functions-popover', 'jquery', 'underscore', '../../lib/tooltip', 'loadcss!./graphing-keypad-container'], function(e, t, r, n, i, o, s, a, l, c, u, d, p, h) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var f = n.Components
                , g = f.SwitchUnion
                , m = f.If
                , y = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: n.const('dcg-keypad'),
                            role: n.const('complementary'),
                            'aria-label': n.const('Keypad')
                        }, n.createElement('div', {
                            class: n.const('dcg-keys-container'),
                            style: this.bindFn(this.computeStyles),
                            didMount: this.bindFn(this.didMountContainer)
                        }, n.createElement('div', {
                            class: n.const('dcg-keys-background dcg-do-not-blur'),
                            style: function() {
                                return {
                                    background: e.controller.getPillboxBackgroundColor()
                                }
                            }
                        }, n.createElement('div', {
                            class: n.const('dcg-keys')
                        }, g(function() {
                            return e.controller.getKeypadLayout()
                        }, {
                            letters: function() {
                                return n.createElement(o.default, {
                                    controller: e.props.controller
                                })
                            },
                            capitalLetters: function() {
                                return n.createElement(s.default, {
                                    controller: e.props.controller
                                })
                            },
                            mainNumbers: function() {
                                return n.createElement(a.default, {
                                    controller: e.props.controller
                                })
                            },
                            noQwertyLetters: function() {
                                return n.createElement(l.default, {
                                    controller: e.props.controller
                                })
                            },
                            noQwertyCapitalLetters: function() {
                                return n.createElement(c.default, {
                                    controller: e.props.controller
                                })
                            }
                        }), n.createElement(m, {
                            predicate: function() {
                                return e.controller.isKeypadFunctionsPopoverOpen()
                            }
                        }, function() {
                            return n.createElement(u.default, {
                                controller: e.props.controller
                            })
                        })), n.createElement(m, {
                            predicate: this.bindFn(this.isHideKeypadButtonVisible)
                        }, function() {
                            return n.createElement('div', {
                                class: n.const('dcg-minimize-keypad-container')
                            }, n.createElement(h.Tooltip, {
                                tooltip: function() {
                                    return e.controller.t('Hide Keypad')
                                },
                                gravity: e.const('ne'),
                                offset: e.const({
                                    left: 6
                                })
                            }, n.createElement('div', {
                                role: n.const('button'),
                                'aria-label': function() {
                                    return e.controller.t('Hide Keypad')
                                },
                                class: n.const('dcg-minimize-keypad'),
                                style: function() {
                                    return {
                                        'border-bottom-color': e.controller.getPillboxBackgroundColor(),
                                        background: e.controller.getPillboxBackgroundColor()
                                    }
                                },
                                onTap: function() {
                                    e.controller.dispatch({
                                        type: 'keypad/set-minimized',
                                        minimized: !0
                                    })
                                }
                            }, n.createElement('i', {
                                class: n.const('dcg-icon-keyboard')
                            }), n.createElement('i', {
                                class: n.const('dcg-icon-caret-down')
                            }))))
                        }))), n.createElement(m, {
                            predicate: this.bindFn(this.isShowKeypadButtonVisible)
                        }, function() {
                            return n.createElement('div', {
                                class: n.const('dcg-show-keypad-container')
                            }, n.createElement(h.Tooltip, {
                                tooltip: function() {
                                    return e.controller.t('Show Keypad')
                                },
                                gravity: e.const('ne')
                            }, n.createElement('div', {
                                role: n.const('button'),
                                'aria-label': function() {
                                    return e.controller.t('Show Keypad')
                                },
                                class: n.const('dcg-btn-flat-gray dcg-show-keypad dcg-do-not-blur'),
                                style: function() {
                                    return {
                                        background: e.controller.getPillboxBackgroundColor()
                                    }
                                },
                                onTap: function() {
                                    e.controller.dispatch({
                                        type: 'keypad/set-minimized',
                                        minimized: !1
                                    })
                                }
                            }, n.createElement('i', {
                                class: n.const('dcg-icon-keyboard')
                            }), n.createElement('i', {
                                class: n.const('dcg-icon-caret-up dcg-do-not-blur')
                            }))))
                        }))
                    }
                    ,
                    t.prototype.didMountContainer = function(e) {
                        this.containerElt = e
                    }
                    ,
                    t.prototype.isShowKeypadButtonVisible = function() {
                        return !this.controller.isAuthorIDE() && ('none' === this.controller.getBrailleMode() && (!this.controller.isKeypadOpen() && !this.controller.isNarrow() && !this.controller.isInEditListMode() && this.controller.isListVisible()))
                    }
                    ,
                    t.prototype.isHideKeypadButtonVisible = function() {
                        return 'none' === this.controller.getBrailleMode() && this.controller.isKeypadOpen() && !this.controller.isNarrow()
                    }
                    ,
                    t.prototype.didMount = function() {
                        this.updatePopoverPosition()
                    }
                    ,
                    t.prototype.didUpdate = function() {
                        this.updatePopoverPosition()
                    }
                    ,
                    t.prototype.computeStyles = function() {
                        var e = {};
                        return this.controller.isNarrow() || (e.transition = 'transform .3s, opacity .3s'),
                        this.controller.isKeypadOpen() || (e.opacity = '0',
                        e.transform = 'translate3d(0, 255px, 0)'),
                        e
                    }
                    ,
                    t.prototype.updatePopoverPosition = function() {
                        if (!this.controller.isKeypadFunctionsPopoverOpen())
                            return void (this.__popoverCache = void 0);
                        var e = this.controller.computeMajorLayout()
                        , t = {
                            keypadTop: e.keypad.top,
                            keypadWidth: e.keypad.width,
                            keypadHeight: e.keypad.height,
                            showToLeft: e.grapher.height < 525
                        };
                        if (!p.isEqual(t, this.__popoverCache)) {
                            this.__popoverCache = t;
                            var r = d(this.containerElt)
                            , n = r.find('[dcg-command=functions]')
                            , i = r.find('.dcg-functions-popover')
                            , o = r.find('.dcg-arrow');
                            if (t.showToLeft) {
                                i.removeClass('dcg-top').addClass('dcg-left');
                                var s = t.keypadHeight - (n.offset().top - r.offset().top)
                                , a = s - n.outerHeight() / 2 - 2 - 10;
                                o.css({
                                    left: 'auto',
                                    bottom: a
                                })
                            } else
                                i.removeClass('dcg-left').addClass('dcg-top'),
                                o.css({
                                    left: i.width() - n.width() / 2,
                                    bottom: 'auto'
                                })
                        }
                    }
                    ,
                    t
                }(i.default);
                t.default = y
            }),
            r('loadcss!pillboxes', function() {}),
            r('main/graphpaper-branding-view', ['require', 'exports', 'tslib', 'dcgview', 'loadcss!pillboxes'], function(e, t, r, n) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var i = n.Components.SwitchUnion
                , o = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return this.controller = this.props.controller(),
                        i(function() {
                            return e.controller.getBrandingMode()
                        }, {
                            'static-edit-link': function() {
                                return n.createElement('div', {
                                    class: n.const('dcg-graphpaper-branding')
                                }, n.createElement('a', {
                                    href: function() {
                                        return e.controller.getEditLink()
                                    },
                                    target: n.const('_blank')
                                }, n.createElement('span', {
                                    class: n.const('dcg-powered-by'),
                                    'aria-label': function() {
                                        return e.controller.t('Edit graph on Desmos')
                                    }
                                }, function() {
                                    return e.controller.t('edit graph on')
                                }), n.createElement('i', {
                                    class: n.const('dcg-icon-desmos')
                                })))
                            },
                            'edit-link': function() {
                                return n.createElement('div', {
                                    class: n.const('dcg-graphpaper-branding')
                                }, n.createElement('span', {
                                    class: n.const('dcg-edit-branding'),
                                    onTap: function() {
                                        return e.controller.dispatch({
                                            type: 'open-on-web'
                                        })
                                    }
                                }, n.createElement('span', {
                                    class: n.const('dcg-powered-by'),
                                    'aria-label': function() {
                                        return e.controller.t('Edit graph on Desmos')
                                    }
                                }, function() {
                                    return e.controller.t('edit graph on')
                                }), n.createElement('i', {
                                    class: n.const('dcg-icon-desmos')
                                })))
                            },
                            'powered-by': function() {
                                return n.createElement('div', {
                                    class: n.const('dcg-graphpaper-branding dcg-unclickable')
                                }, n.createElement('span', {
                                    class: n.const('dcg-powered-by'),
                                    'aria-label': function() {
                                        return e.controller.t('Powered by Desmos')
                                    }
                                }, function() {
                                    return e.controller.t('powered by')
                                }), n.createElement('i', {
                                    class: n.const('dcg-icon-desmos')
                                }))
                            }
                        })
                    }
                    ,
                    t
                }(n.Class);
                t.default = o
            }),
            r('loadcss!main/settings-view', function() {}),
            r('main/settings-view', ['require', 'exports', 'tslib', 'keys', 'scroll_helpers', 'lib/tooltip', 'dcgview', 'dcgview-helpers/static-mathquill-view', 'dcgview-helpers/mathquill-view', 'jquery', 'core/graphing-calc/json/graph-settings', 'core/math/evaluate-single-expression', 'graphing/viewport', 'dcgview-helpers/checkbox', 'main/manage-focus-helper', '../dcgview-helpers/mathquill-braille-wrapper', 'loadcss!./settings-view'], function(e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var m = s.Components
                , y = m.Input
                , v = m.If
                , b = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return s.createElement(g.default, {
                            latex: function() {
                                return e.props.parent().getLimitLatex(e.props.limit())
                            },
                            controller: this.props.controller,
                            ariaLabel: function() {
                                return e.props.ariaLabel()
                            },
                            onBrailleInput: function(t) {
                                return e.props.parent().setLimitLatex(e.props.limit(), t)
                            },
                            onBrailleFocusedChanged: function(t) {
                                return e.props.parent().onFocusedChanged(e.props.limit(), t)
                            },
                            brailleShouldFocus: function() {
                                return e.props.parent().getFocusedLimit() === e.props.limit()
                            },
                            hasError: function() {
                                return e.props.parent().isLimitInvalid(e.props.limit())
                            },
                            onExpressionSizeExceeded: function() {},
                            dataDCGLimit: function() {
                                return e.props.limit()
                            }
                        }, s.createElement(l.default, {
                            isFocused: function() {
                                return e.props.parent().getFocusedLimit() === e.props.limit()
                            },
                            latex: function() {
                                return e.props.parent().getLimitLatex(e.props.limit())
                            },
                            capExpressionSize: function() {
                                return e.props.parent().getCapExpressionSize()
                            },
                            config: this.const({}),
                            getAriaLabel: function() {
                                return e.props.ariaLabel()
                            },
                            getAriaPostLabel: this.const(''),
                            onUserChangedLatex: function(t) {
                                return e.props.parent().setLimitLatex(e.props.limit(), t)
                            },
                            onFocusedChanged: function(t) {
                                return e.props.parent().onFocusedChanged(e.props.limit(), t)
                            },
                            hasError: this.const(!1),
                            selectOnFocus: this.const(!0),
                            needsSystemKeypad: function() {
                                return e.props.needsSystemKeypad()
                            }
                        }, s.createElement('span', {
                            class: function() {
                                return {
                                    'dcg-math-field': !0,
                                    'dcg-math-input': !0,
                                    'dcg-invalid': e.props.parent().isLimitInvalid(e.props.limit()),
                                    'dcg-focus': e.props.parent().getFocusedLimit() === e.props.limit()
                                }
                            },
                            'data-dcg-limit': function() {
                                return e.props.limit()
                            }
                        })))
                    }
                    ,
                    t
                }(s.Class)
                , x = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return this.controller = this.props.controller(),
                        s.createElement('div', {
                            class: s.const('dcg-settings-view-container')
                        }, s.createElement(o.Tooltip, {
                            tooltip: function() {
                                return e.controller.t('Graph Settings')
                            },
                            gravity: this.const('w')
                        }, s.createElement('div', {
                            class: s.const('dcg-btn-flat-gray dcg-settings-pillbox dcg-action-settings'),
                            role: s.const('button'),
                            tabindex: s.const('0'),
                            'aria-haspopup': s.const('true'),
                            'aria-expanded': function() {
                                return e.controller.isGraphSettingsOpen()
                            },
                            'aria-label': function() {
                                return e.controller.t('Graph Settings')
                            },
                            onTap: this.bindFn(this.onTapSettingsButton),
                            manageFocus: this.const(f.manageFocusHelper({
                                controller: this.controller,
                                location: {
                                    type: 'settings',
                                    location: 'icon'
                                }
                            })),
                            style: function() {
                                return {
                                    background: e.controller.getPillboxBackgroundColor()
                                }
                            }
                        }, s.createElement('i', {
                            class: s.const('dcg-icon-wrench'),
                            'aria-hidden': s.const('true')
                        }))), s.createElement(v, {
                            predicate: function() {
                                return e.controller.isGraphSettingsOpen()
                            }
                        }, function() {
                            return s.createElement('div', {
                                class: s.const('dcg-settings-container dcg-left dcg-popover dcg-constrained-height-popover'),
                                style: e.bindFn(e.getContainerStyle),
                                didMount: e.bindFn(e.didMountContainer),
                                didUnmount: e.bindFn(e.didUnmountContainer)
                            }, s.createElement('div', {
                                class: s.const('dcg-popover-interior'),
                                role: s.const('complementary'),
                                'aria-label': s.const('Graph Settings')
                            }, s.createElement('div', {
                                class: s.const('dcg-visual-settings')
                            }, s.createElement('div', {
                                class: function() {
                                    return {
                                        'dcg-modern-btn': !0,
                                        'dcg-action-projectormode': !0,
                                        'dcg-active': e.getProjectorMode()
                                    }
                                },
                                role: s.const('button'),
                                tabindex: s.const('0'),
                                'aria-label': function() {
                                    return e.controller.t('Projector Mode')
                                },
                                'aria-pressed': e.bindFn(e.getProjectorMode),
                                onTap: e.bindFn(e.toggleProjectorMode),
                                manageFocus: e.const(f.manageFocusHelper({
                                    controller: e.controller,
                                    location: {
                                        type: 'settings',
                                        location: 'projector-mode'
                                    }
                                }))
                            }, function() {
                                return e.controller.t('Projector Mode')
                            }), s.createElement(h.Checkbox, {
                                ariaLabel: function() {
                                    return e.controller.t('Reverse Contrast')
                                },
                                onChange: e.bindFn(e.toggleInvertedColors),
                                checked: function() {
                                    return e.controller.getInvertedColors()
                                },
                                green: e.const(!0)
                            }, function() {
                                return e.controller.t('Reverse Contrast')
                            })), s.createElement(v, {
                                predicate: function() {
                                    return e.controller.getBrailleControls()
                                }
                            }, function() {
                                return s.createElement('div', {
                                    class: s.const('dcg-braille-container')
                                }, s.createElement('div', {
                                    class: s.const('dcg-group-title')
                                }, s.const('Braille Mode')), s.createElement('div', {
                                    role: s.const('group'),
                                    'aria-label': function() {
                                        return e.controller.t('Braille Mode')
                                    },
                                    class: s.const('dcg-braille-options-buttons')
                                }, s.createElement('span', {
                                    class: function() {
                                        return {
                                            'dcg-modern-btn': !0,
                                            'dcg-braille-option': !0,
                                            'dcg-active': 'none' === e.controller.getBrailleMode()
                                        }
                                    },
                                    role: s.const('button'),
                                    onTap: function() {
                                        return e.controller.dispatch({
                                            type: 'set-braille-mode',
                                            mode: 'none'
                                        })
                                    },
                                    tabindex: s.const(0),
                                    'aria-label': function() {
                                        return e.controller.t('Off')
                                    },
                                    'aria-pressed': function() {
                                        return 'none' === e.controller.getBrailleMode()
                                    }
                                }, function() {
                                    return e.controller.t('Off')
                                }), s.createElement('span', {
                                    class: function() {
                                        return {
                                            'dcg-modern-btn': !0,
                                            'dcg-braille-option': !0,
                                            'dcg-active': 'nemeth' === e.controller.getBrailleMode()
                                        }
                                    },
                                    role: s.const('button'),
                                    onTap: function() {
                                        return e.controller.dispatch({
                                            type: 'set-braille-mode',
                                            mode: 'nemeth'
                                        })
                                    },
                                    tabindex: s.const(0),
                                    'aria-label': function() {
                                        return e.controller.t('Nemeth')
                                    },
                                    'aria-pressed': function() {
                                        return 'nemeth' === e.controller.getBrailleMode()
                                    }
                                }, function() {
                                    return e.controller.t('Nemeth')
                                }), s.createElement('span', {
                                    class: function() {
                                        return {
                                            'dcg-modern-btn': !0,
                                            'dcg-braille-option': !0,
                                            'dcg-active': 'ueb' === e.controller.getBrailleMode()
                                        }
                                    },
                                    role: s.const('button'),
                                    onTap: function() {
                                        return e.controller.dispatch({
                                            type: 'set-braille-mode',
                                            mode: 'ueb'
                                        })
                                    },
                                    tabindex: s.const(0),
                                    'aria-label': function() {
                                        return e.controller.t('UEB')
                                    },
                                    'aria-pressed': function() {
                                        return 'ueb' === e.controller.getBrailleMode()
                                    }
                                }, function() {
                                    return e.controller.t('UEB')
                                })), s.createElement(v, {
                                    predicate: function() {
                                        return 'none' !== e.controller.getBrailleMode()
                                    }
                                }, function() {
                                    return s.createElement('div', {
                                        class: s.const('dcg-checkbox-title dcg-six-key-checkbox')
                                    }, s.createElement(h.Checkbox, {
                                        ariaLabel: function() {
                                            return e.controller.t('Six Key Braille Input')
                                        },
                                        onChange: function(t) {
                                            return e.controller.dispatch({
                                                type: 'set-six-key-input',
                                                useSixKeyInput: t
                                            })
                                        },
                                        checked: function() {
                                            return e.controller.getSixKeyInput()
                                        },
                                        green: e.const(!0)
                                    }, function() {
                                        return e.controller.t('Six Key Braille Input')
                                    }), s.createElement('a', {
                                        href: s.const('https://www.desmos.com/accessibility#braille'),
                                        class: s.const('dcg-six-key-info'),
                                        target: s.const('_blank')
                                    }, s.createElement('i', {
                                        class: s.const('dcg-icon-question-sign')
                                    })))
                                }))
                            }), s.createElement('div', {
                                class: s.const('dcg-top-section-flex dcg-grid-settings-container')
                            }, s.createElement('div', {
                                class: s.const('dcg-grid-settings')
                            }, s.createElement(h.Checkbox, {
                                ariaLabel: function() {
                                    return e.controller.t('Grid')
                                },
                                onChange: e.bindFn(e.toggleGrid),
                                checked: e.bindFn(e.getShowGrid),
                                green: e.const(!0)
                            }, function() {
                                return e.controller.t('Grid')
                            }), s.createElement(v, {
                                predicate: e.bindFn(e.getShowGrid)
                            }, function() {
                                return s.createElement('div', {
                                    class: s.const('dcg-circle-icon-group dcg-grid-group')
                                }, s.createElement('div', {
                                    class: function() {
                                        return {
                                            'dcg-circle-icon': !0,
                                            'dcg-action-cartesian': !0,
                                            'dcg-active': !e.getPolarMode()
                                        }
                                    },
                                    role: s.const('button'),
                                    tabindex: s.const('0'),
                                    ariaPressed: function() {
                                        return !e.getPolarMode()
                                    },
                                    'aria-label': function() {
                                        return e.controller.t('Cartesian Grid')
                                    },
                                    onTap: e.bindFn(e.setCartesianMode)
                                }), s.const(' '), s.createElement('div', {
                                    class: function() {
                                        return {
                                            'dcg-circle-icon': !0,
                                            'dcg-action-polar': !0,
                                            'dcg-active': e.getPolarMode()
                                        }
                                    },
                                    role: s.const('button'),
                                    tabindex: s.const('0'),
                                    ariaPressed: function() {
                                        return e.getPolarMode()
                                    },
                                    'aria-label': function() {
                                        return e.controller.t('Polar Grid')
                                    },
                                    onTap: e.bindFn(e.setPolarMode)
                                }))
                            }), s.createElement(h.Checkbox, {
                                ariaLabel: function() {
                                    return e.controller.t('Arrows')
                                },
                                onChange: e.bindFn(e.toggleArrows),
                                checked: function() {
                                    return e.getAxisArrowMode() !== u.AxisArrowModes.NONE
                                },
                                green: e.const(!0)
                            }, function() {
                                return e.controller.t('Arrows')
                            }), s.createElement(v, {
                                predicate: function() {
                                    return e.getAxisArrowMode() !== u.AxisArrowModes.NONE
                                }
                            }, function() {
                                return s.createElement('div', {
                                    class: s.const('dcg-circle-icon-group dcg-arrow-group')
                                }, s.createElement('div', {
                                    role: s.const('button'),
                                    tabindex: s.const('0'),
                                    class: function() {
                                        return {
                                            'dcg-circle-icon': !0,
                                            'dcg-arrows': !0,
                                            'dcg-active': e.getAxisArrowMode() === u.AxisArrowModes.BOTH
                                        }
                                    },
                                    'dcg-arrows': s.const('BOTH'),
                                    'aria-label': function() {
                                        return e.controller.t('Show Both')
                                    },
                                    'aria-pressed': function() {
                                        return e.getAxisArrowMode() === u.AxisArrowModes.BOTH
                                    },
                                    onTap: function() {
                                        return e.setAxisArrowMode(u.AxisArrowModes.BOTH)
                                    }
                                }, s.createElement('i', {
                                    class: s.const('dcg-icon-arrows-two')
                                })), s.const(' '), s.createElement('div', {
                                    role: s.const('button'),
                                    tabindex: s.const('0'),
                                    class: function() {
                                        return {
                                            'dcg-circle-icon': !0,
                                            'dcg-arrows': !0,
                                            'dcg-active': e.getAxisArrowMode() === u.AxisArrowModes.POSITIVE
                                        }
                                    },
                                    'dcg-arrows': s.const('POSITIVE'),
                                    'aria-label': function() {
                                        return e.controller.t('Show Positive')
                                    },
                                    'aria-pressed': function() {
                                        return e.getAxisArrowMode() === u.AxisArrowModes.POSITIVE
                                    },
                                    onTap: function() {
                                        return e.setAxisArrowMode(u.AxisArrowModes.POSITIVE)
                                    }
                                }, s.createElement('i', {
                                    class: s.const('dcg-icon-arrows-one')
                                })))
                            })), s.createElement('div', {
                                class: s.const('dcg-top-checkboxes-container')
                            }, s.createElement(h.Checkbox, {
                                ariaLabel: function() {
                                    return e.controller.t('Axis Numbers')
                                },
                                onChange: e.bindFn(e.toggleAxisNumbers),
                                checked: e.bindFn(e.getAxisNumbers),
                                small: e.const(!0),
                                green: e.const(!0)
                            }, function() {
                                return e.controller.t('Axis Numbers')
                            }), s.createElement(v, {
                                predicate: function() {
                                    return e.getShowGrid() && !e.getPolarMode()
                                }
                            }, function() {
                                return s.createElement(h.Checkbox, {
                                    ariaLabel: function() {
                                        return e.controller.t('Minor Gridlines')
                                    },
                                    onChange: e.bindFn(e.toggleMinorGridlines),
                                    checked: e.bindFn(e.getMinorGridlines),
                                    small: e.const(!0),
                                    green: e.const(!0)
                                }, function() {
                                    return e.controller.t('Minor Gridlines')
                                })
                            }), s.createElement(v, {
                                predicate: function() {
                                    return e.controller.canUseAdvancedStyling() && !e.getPolarMode()
                                }
                            }, function() {
                                return s.createElement(h.Checkbox, {
                                    checked: function() {
                                        return e.controller.getGraphSettings().restrictGridToFirstQuadrant
                                    },
                                    ariaLabel: e.const('One Quadrant'),
                                    onChange: function(t) {
                                        return e.controller.dispatch({
                                            type: 'set-graph-settings',
                                            restrictGridToFirstQuadrant: t
                                        })
                                    },
                                    small: e.const(!0),
                                    green: e.const(!0)
                                }, s.const('One Quadrant'))
                            }), s.createElement(v, {
                                predicate: function() {
                                    return !e.getSquareAxes()
                                }
                            }, function() {
                                return s.createElement('div', {
                                    role: s.const('button'),
                                    tabindex: s.const('0'),
                                    class: s.const('dcg-action-zoom-square dcg-btn-light-gray'),
                                    onTap: e.bindFn(e.zoomSquare)
                                }, function() {
                                    return e.controller.t('Zoom Square')
                                })
                            }))), s.createElement('div', {
                                class: s.const('dcg-axes-settings-container')
                            }, s.createElement('div', {
                                class: s.const('dcg-checkbox-title dcg-x-axis-title')
                            }, s.createElement(h.Checkbox, {
                                ariaLabel: function() {
                                    return e.controller.t('X-Axis')
                                },
                                onChange: e.bindFn(e.toggleXAxis),
                                checked: e.bindFn(e.getShowXAxis),
                                green: e.const(!0)
                            }, function() {
                                return e.controller.t('X-Axis')
                            }), s.createElement(y, {
                                class: e.const('dcg-axis-label dcg-x-axis-label'),
                                placeholder: function() {
                                    return e.controller.t('add a label')
                                },
                                'aria-label': function() {
                                    return e.controller.t('add x-axis label')
                                },
                                disabled: function() {
                                    return !e.getShowXAxis() || void 0
                                },
                                'aria-disabled': function() {
                                    return !e.getShowXAxis() || void 0
                                },
                                onInput: e.bindFn(e.onXAxisLabelInput),
                                value: e.bindFn(e.getXAxisLabel)
                            })), s.createElement('div', {
                                class: s.const('dcg-editable-mathquill-container dcg-x-axis-options')
                            }, s.createElement(b, {
                                limit: e.const('xmin'),
                                ariaLabel: function() {
                                    return e.controller.t('X Axis Minimum: ')
                                },
                                needsSystemKeypad: function() {
                                    return !e.controller.isKeypadEnabled()
                                },
                                parent: e.const(e),
                                controller: e.props.controller
                            }), s.createElement(a.default, {
                                latex: e.const('\\le x\\le')
                            }, s.createElement('span', {
                                class: s.const('dcg-interval-interior')
                            })), s.createElement(b, {
                                limit: e.const('xmax'),
                                ariaLabel: function() {
                                    return e.controller.t('X Axis Maximum: ')
                                },
                                needsSystemKeypad: function() {
                                    return !e.controller.isKeypadEnabled()
                                },
                                parent: e.const(e),
                                controller: e.props.controller
                            }), s.createElement(v, {
                                predicate: function() {
                                    return !e.getPolarMode()
                                }
                            }, function() {
                                return s.createElement('span', {
                                    class: s.const('dcg-step-container')
                                }, s.createElement('span', {
                                    class: s.const('dcg-step-label'),
                                    'aria-hidden': s.const('true')
                                }, function() {
                                    return e.controller.t('Step:')
                                }), s.createElement(b, {
                                    limit: e.const('xstep'),
                                    ariaLabel: function() {
                                        return e.controller.t('X Axis Step Size: ')
                                    },
                                    needsSystemKeypad: function() {
                                        return !e.controller.isKeypadEnabled()
                                    },
                                    parent: e.const(e),
                                    controller: e.props.controller
                                }))
                            })), s.createElement('div', {
                                class: s.const('dcg-checkbox-title dcg-y-axis-title')
                            }, s.createElement(h.Checkbox, {
                                ariaLabel: function() {
                                    return e.controller.t('Y-Axis')
                                },
                                onChange: e.bindFn(e.toggleYAxis),
                                checked: e.bindFn(e.getShowYAxis),
                                green: e.const(!0)
                            }, function() {
                                return e.controller.t('Y-Axis')
                            }), s.createElement(y, {
                                class: e.const('dcg-axis-label dcg-y-axis-label'),
                                placeholder: function() {
                                    return e.controller.t('add a label')
                                },
                                'aria-label': function() {
                                    return e.controller.t('add y-axis label')
                                },
                                disabled: function() {
                                    return !e.getShowYAxis() || void 0
                                },
                                'aria-disabled': function() {
                                    return !e.getShowYAxis() || void 0
                                },
                                onInput: e.bindFn(e.onYAxisLabelInput),
                                value: e.bindFn(e.getYAxisLabel)
                            })), s.createElement('div', {
                                class: s.const('dcg-editable-mathquill-container dcg-y-axis-options')
                            }, s.createElement(b, {
                                limit: e.const('ymin'),
                                ariaLabel: function() {
                                    return e.controller.t('Y Axis Minimum: ')
                                },
                                needsSystemKeypad: function() {
                                    return !e.controller.isKeypadEnabled()
                                },
                                parent: e.const(e),
                                controller: e.props.controller
                            }), s.createElement(a.default, {
                                latex: e.const('\\le y\\le')
                            }, s.createElement('span', {
                                class: s.const('dcg-interval-interior')
                            })), s.createElement(b, {
                                limit: e.const('ymax'),
                                ariaLabel: function() {
                                    return e.controller.t('Y Axis Maximum: ')
                                },
                                needsSystemKeypad: function() {
                                    return !e.controller.isKeypadEnabled()
                                },
                                parent: e.const(e),
                                controller: e.props.controller
                            }), s.createElement(v, {
                                predicate: function() {
                                    return !e.getPolarMode()
                                }
                            }, function() {
                                return s.createElement('span', {
                                    class: s.const('dcg-step-container')
                                }, s.createElement('span', {
                                    class: s.const('dcg-step-label'),
                                    'aria-hidden': s.const('true')
                                }, function() {
                                    return e.controller.t('Step:')
                                }), s.createElement(b, {
                                    limit: e.const('ystep'),
                                    ariaLabel: function() {
                                        return e.controller.t('Y Axis Step Size: ')
                                    },
                                    needsSystemKeypad: function() {
                                        return !e.controller.isKeypadEnabled()
                                    },
                                    parent: e.const(e),
                                    controller: e.props.controller
                                }))
                            }))), s.createElement('div', {
                                class: s.const('dcg-radiangroup'),
                                role: s.const('group'),
                                'aria-label': function() {
                                    return e.controller.t('Angle Settings')
                                }
                            }, s.createElement('div', {
                                class: function() {
                                    return {
                                        'dcg-action-radianmode': !0,
                                        'dcg-modern-btn': !0,
                                        'dcg-active': !e.getDegreeMode()
                                    }
                                },
                                'aria-pressed': function() {
                                    return !e.getDegreeMode()
                                },
                                role: s.const('button'),
                                tabindex: s.const('0'),
                                'aria-label': function() {
                                    return e.controller.t('Radians')
                                },
                                onTap: e.bindFn(e.setRadianMode)
                            }, function() {
                                return e.controller.t('Radians')
                            }), s.createElement('div', {
                                class: function() {
                                    return {
                                        'dcg-action-degreemode': !0,
                                        'dcg-modern-btn': !0,
                                        'dcg-active': e.getDegreeMode()
                                    }
                                },
                                'aria-pressed': e.bindFn(e.getDegreeMode),
                                role: s.const('button'),
                                tabindex: s.const('0'),
                                'aria-label': function() {
                                    return e.controller.t('Degrees')
                                },
                                onTap: e.bindFn(e.setDegreeMode),
                                manageFocus: e.const(f.manageFocusHelper({
                                    controller: e.controller,
                                    location: {
                                        type: 'settings',
                                        location: 'degree-mode'
                                    }
                                }))
                            }, function() {
                                return e.controller.t('Degrees')
                            })), s.createElement('div', {
                                class: s.const('dcg-arrow')
                            })))
                        }))
                    }
                    ,
                    t.prototype.didMountContainer = function(e) {
                        var t = this;
                        this.node = e,
                        c(document).on('dcg-tapstart.settings-view wheel.settings-view', function(e) {
                            t.eventShouldClosePopover(e) && t.controller.dispatch({
                                type: 'close-graph-settings',
                                focusIconAfterClose: 'keyboard' === e.device
                            })
                        }),
                        c(document).on('keydown.settings-view', function(e) {
                            if ('Esc' === n.lookup(e) && t.controller.dispatch({
                                type: 'close-graph-settings',
                                focusIconAfterClose: !0
                            }),
                            t.controller.isGraphSettingsOpen() && 'Tab' === n.lookup(e) && !e.altKey && !e.metaKey && !e.ctrlKey) {
                                var r = t.controller.getFocusLocation();
                                if (!r || 'settings' !== r.type)
                                    return;
                                e.shiftKey || 'degree-mode' !== r.location ? e.shiftKey && 'icon' === r.location && (t.controller.dispatch({
                                    type: 'set-focus-location',
                                    location: {
                                        type: 'settings',
                                        location: 'degree-mode'
                                    }
                                }),
                                e.preventDefault(),
                                e.stopPropagation()) : (t.controller.dispatch({
                                    type: 'set-focus-location',
                                    location: {
                                        type: 'settings',
                                        location: 'icon'
                                    }
                                }),
                                e.preventDefault(),
                                e.stopPropagation())
                            }
                        })
                    }
                    ,
                    t.prototype.didUnmountContainer = function() {
                        c(document).off('.settings-view')
                    }
                    ,
                    t.prototype.didUpdate = function() {
                        if (this.controller.isGraphSettingsOpen()) {
                            var e = this.controller.getKeypadHeight();
                            e !== this.cachedKeypadHeight && document.activeElement && c(document.activeElement).closest(this.node).length && i.scrollVisible(c(document.activeElement), c(this.node).find('.dcg-popover-interior'), 50),
                            this.cachedKeypadHeight = e
                        }
                    }
                    ,
                    t.prototype.eventShouldClosePopover = function(e) {
                        var t = c(e.target)
                        , r = !!t.closest(this.node).length
                        , n = !!t.closest('.dcg-action-settings').length
                        , i = this.isMathquillFocused() && t.closest('.dcg-keypad').length
                        , o = !!t.closest('.dcg-action-undo').length || !!t.closest('.dcg-action-redo').length;
                        return !(r || n || i || o)
                    }
                    ,
                    t.prototype.onTapSettingsButton = function(e) {
                        this.controller.dispatch({
                            type: 'toggle-graph-settings',
                            focusOnOpen: 'keyboard' === e.device
                        })
                    }
                    ,
                    t.prototype.isMathquillFocused = function() {
                        return void 0 !== this.getFocusedLimit()
                    }
                    ,
                    t.prototype.getLimitLatex = function(e) {
                        return this.controller.getSettingsViewModel().limitLatex[e]
                    }
                    ,
                    t.prototype.setLimitLatex = function(e, t) {
                        t !== this.controller.getSettingsViewModel().limitLatex[e] && this.controller.dispatch({
                            type: 'set-axis-limit-latex',
                            limit: e,
                            latex: t
                        })
                    }
                    ,
                    t.prototype.getFocusedLimit = function() {
                        var e = this.controller.getFocusLocation();
                        if (e && 'settings' === e.type)
                            return e.location
                    }
                    ,
                    t.prototype.getInvalidLimits = function() {
                        var e = !!this.controller.getGraphSettings().degreeMode
                        , t = d.default(this.getLimitLatex('xmin'), e)
                        , r = d.default(this.getLimitLatex('xmax'), e)
                        , n = d.default(this.getLimitLatex('ymin'), e)
                        , i = d.default(this.getLimitLatex('ymax'), e)
                        , o = '' === this.getLimitLatex('xstep') ? 0 : d.default(this.getLimitLatex('xstep'), e)
                        , s = '' === this.getLimitLatex('ystep') ? 0 : d.default(this.getLimitLatex('ystep'), e)
                        , a = {}
                        , l = new p.Viewport(t,r,n,i);
                        return isFinite(t) && isFinite(r) ? (a.xmin = !l.isXValid(),
                        a.xmax = a.xmin) : (a.xmin = !isFinite(t),
                        a.xmax = !isFinite(r)),
                        isFinite(n) && isFinite(i) ? (a.ymin = !l.isYValid(),
                        a.ymax = a.ymin) : (a.ymin = !isFinite(n),
                        a.ymax = !isFinite(i)),
                        a.xstep = !isFinite(o) || o < 0,
                        a.ystep = !isFinite(s) || s < 0,
                        a
                    }
                    ,
                    t.prototype.isLimitInvalid = function(e) {
                        return this.getInvalidLimits()[e]
                    }
                    ,
                    t.prototype.onFocusedChanged = function(e, t) {
                        t ? this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {
                                type: 'settings',
                                location: e
                            }
                        }) : this.controller.dispatch({
                            type: 'blur-focus-location',
                            location: {
                                type: 'settings',
                                location: e
                            }
                        })
                    }
                    ,
                    t.prototype.onXAxisLabelInput = function(e) {
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            xAxisLabel: e
                        })
                    }
                    ,
                    t.prototype.onYAxisLabelInput = function(e) {
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            yAxisLabel: e
                        })
                    }
                    ,
                    t.prototype.getXAxisLabel = function() {
                        return this.controller.getGraphSettings().xAxisLabel
                    }
                    ,
                    t.prototype.getYAxisLabel = function() {
                        return this.controller.getGraphSettings().yAxisLabel
                    }
                    ,
                    t.prototype.getShowXAxis = function() {
                        return !!this.controller.getGraphSettings().showXAxis
                    }
                    ,
                    t.prototype.toggleXAxis = function() {
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            showXAxis: !this.getShowXAxis()
                        })
                    }
                    ,
                    t.prototype.getShowYAxis = function() {
                        return !!this.controller.getGraphSettings().showYAxis
                    }
                    ,
                    t.prototype.toggleYAxis = function() {
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            showYAxis: !this.getShowYAxis()
                        })
                    }
                    ,
                    t.prototype.getAxisNumbers = function() {
                        return !!this.controller.getGraphSettings().xAxisNumbers
                    }
                    ,
                    t.prototype.toggleAxisNumbers = function() {
                        var e = this.getAxisNumbers();
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            xAxisNumbers: !e,
                            yAxisNumbers: !e,
                            polarNumbers: !e
                        })
                    }
                    ,
                    t.prototype.getMinorGridlines = function() {
                        return 0 === this.controller.getGraphSettings().xAxisMinorSubdivisions
                    }
                    ,
                    t.prototype.toggleMinorGridlines = function() {
                        var e = this.getMinorGridlines() ? 1 : 0;
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            yAxisMinorSubdivisions: e,
                            xAxisMinorSubdivisions: e
                        })
                    }
                    ,
                    t.prototype.getPolarMode = function() {
                        return !!this.controller.getGraphSettings().polarMode
                    }
                    ,
                    t.prototype.setPolarMode = function() {
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            polarMode: !0
                        })
                    }
                    ,
                    t.prototype.setCartesianMode = function() {
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            polarMode: !1
                        })
                    }
                    ,
                    t.prototype.getDegreeMode = function() {
                        return !!this.controller.getGraphSettings().degreeMode
                    }
                    ,
                    t.prototype.setRadianMode = function() {
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            degreeMode: !1
                        })
                    }
                    ,
                    t.prototype.setDegreeMode = function() {
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            degreeMode: !0
                        })
                    }
                    ,
                    t.prototype.getProjectorMode = function() {
                        return !!this.controller.getGraphSettings().config.projectorMode
                    }
                    ,
                    t.prototype.toggleInvertedColors = function() {
                        this.controller.dispatch({
                            type: 'set-inverted-colors',
                            value: !this.controller.getInvertedColors()
                        })
                    }
                    ,
                    t.prototype.toggleProjectorMode = function() {
                        this.controller.dispatch({
                            type: 'set-projector-mode',
                            value: !this.getProjectorMode()
                        })
                    }
                    ,
                    t.prototype.getAxisArrowMode = function() {
                        return this.controller.getGraphSettings().xAxisArrowMode
                    }
                    ,
                    t.prototype.setAxisArrowMode = function(e) {
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            xAxisArrowMode: e,
                            yAxisArrowMode: e
                        })
                    }
                    ,
                    t.prototype.getShowGrid = function() {
                        return this.controller.getGraphSettings().showGrid
                    }
                    ,
                    t.prototype.toggleGrid = function() {
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            showGrid: !this.getShowGrid()
                        })
                    }
                    ,
                    t.prototype.toggleArrows = function() {
                        var e = this.getAxisArrowMode() === u.AxisArrowModes.NONE ? u.AxisArrowModes.BOTH : u.AxisArrowModes.NONE;
                        this.controller.dispatch({
                            type: 'set-graph-settings',
                            xAxisArrowMode: e,
                            yAxisArrowMode: e
                        })
                    }
                    ,
                    t.prototype.getSquareAxes = function() {
                        return !!this.controller.getGraphSettings().squareAxes
                    }
                    ,
                    t.prototype.getContainerStyle = function() {
                        return this.controller.getKeypadHeight() ? 'bottom: 0' : ''
                    }
                    ,
                    t.prototype.zoomSquare = function() {
                        this.controller.dispatch({
                            type: 'zoom',
                            direction: 'square'
                        })
                    }
                    ,
                    t.prototype.getCapExpressionSize = function() {
                        return !!this.controller.getGraphSettings().config.capExpressionSize
                    }
                    ,
                    t
                }(s.Class);
                t.default = x
            }),
            r('main/zoom-buttons-view', ['require', 'exports', 'tslib', 'dcgview', 'lib/tooltip', 'loadcss!pillboxes'], function(e, t, r, n, i) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var o = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: n.const('dcg-zoom-container')
                        }, n.createElement('div', {
                            class: n.const('dcg-zoominout-pillbox dcg-btn-flat-gray dcg-btn-flat-gray-group'),
                            style: function() {
                                return {
                                    background: e.controller.getPillboxBackgroundColor()
                                }
                            }
                        }, n.createElement(i.Tooltip, {
                            tooltip: function() {
                                return e.controller.t('Zoom In')
                            },
                            gravity: this.const('w')
                        }, n.createElement('div', {
                            class: n.const('dcg-action-zoomin'),
                            role: n.const('button'),
                            tabindex: n.const('0'),
                            'aria-label': function() {
                                return e.controller.t('Zoom In')
                            },
                            onTap: this.bindFn(this.zoomIn),
                            style: function() {
                                return {
                                    background: e.controller.getPillboxBackgroundColor()
                                }
                            }
                        }, n.createElement('i', {
                            class: n.const('dcg-icon dcg-icon-plus'),
                            'aria-hidden': n.const('true')
                        }))), n.createElement(i.Tooltip, {
                            tooltip: function() {
                                return e.controller.t('Zoom Out')
                            },
                            gravity: this.const('w')
                        }, n.createElement('div', {
                            class: n.const('dcg-option dcg-action-zoomout dcg-tooltip-e'),
                            tooltip: function() {
                                return e.controller.t('Zoom Out')
                            },
                            role: n.const('button'),
                            tabindex: n.const('0'),
                            'aria-label': function() {
                                return e.controller.t('Zoom Out')
                            },
                            onTap: this.bindFn(this.zoomOut),
                            style: function() {
                                return {
                                    background: e.controller.getPillboxBackgroundColor()
                                }
                            }
                        }, n.createElement('i', {
                            class: n.const('dcg-icon dcg-icon-minus'),
                            'aria-hidden': n.const('true')
                        })))), n.createElement(i.Tooltip, {
                            tooltip: function() {
                                return e.controller.t('Default Zoom')
                            },
                            gravity: this.const('w')
                        }, n.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-btn-flat-gray': !0,
                                    'dcg-option': !0,
                                    'dcg-action-zoomrestore': !0,
                                    'dcg-disabled': e.getZoomedDefault()
                                }
                            },
                            'aria-disabled': this.bindFn(this.getZoomedDefault),
                            role: n.const('button'),
                            tabindex: n.const('0'),
                            'aria-label': function() {
                                return e.controller.t('Restore Default Zoom')
                            },
                            onTap: this.bindFn(this.zoomRestore),
                            style: function() {
                                return {
                                    background: e.controller.getPillboxBackgroundColor()
                                }
                            }
                        }, n.createElement('i', {
                            class: n.const('dcg-icon dcg-icon-home'),
                            'aria-hidden': n.const('true')
                        }))))
                    }
                    ,
                    t.prototype.zoomIn = function() {
                        this.controller.dispatch({
                            type: 'zoom',
                            direction: 'in'
                        })
                    }
                    ,
                    t.prototype.zoomOut = function() {
                        this.controller.dispatch({
                            type: 'zoom',
                            direction: 'out'
                        })
                    }
                    ,
                    t.prototype.zoomRestore = function() {
                        this.controller.dispatch({
                            type: 'zoom',
                            direction: 'default'
                        })
                    }
                    ,
                    t.prototype.getZoomedDefault = function() {
                        return this.controller.getGraphSettings().zoomedDefault
                    }
                    ,
                    t
                }(n.Class);
                t.default = o
            }),
            r('main/reset-button-view', ['require', 'exports', 'tslib', 'dcgview', 'lib/tooltip', 'loadcss!pillboxes'], function(e, t, r, n, i) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var o = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: n.const('dcg-reset-container')
                        }, n.createElement(i.Tooltip, {
                            tooltip: function() {
                                return e.controller.t('Reset')
                            },
                            gravity: this.const('w')
                        }, n.createElement('div', {
                            class: n.const('dcg-reset-pillbox dcg-action-reset dcg-btn-flat-gray'),
                            role: n.const('button'),
                            tabindex: n.const('0'),
                            'aria-label': function() {
                                return e.controller.t('Reset')
                            },
                            onTap: this.bindFn(this.reset),
                            style: function() {
                                return {
                                    background: e.controller.getPillboxBackgroundColor()
                                }
                            }
                        }, n.createElement('i', {
                            class: n.const('dcg-icon dcg-icon-reset'),
                            'aria-hidden': n.const('true')
                        }))))
                    }
                    ,
                    t.prototype.reset = function() {
                        this.controller.dispatch({
                            type: 'reset-graph'
                        })
                    }
                    ,
                    t
                }(n.Class);
                t.default = o
            }),
            r('main/pillbox-view', ['require', 'exports', 'tslib', 'dcgview', './graphpaper-branding-view', './settings-view', './zoom-buttons-view', './reset-button-view', 'loadcss!pillboxes'], function(e, t, r, n, i, o, s, a) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var l = n.Components.If
                , c = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', null, n.createElement(l, {
                            predicate: this.bindFn(this.shouldShowContainer)
                        }, function() {
                            return n.createElement('div', {
                                class: n.const('dcg-pillbox-container'),
                                role: n.const('group'),
                                'aria-label': function() {
                                    return e.controller.t('Graph Settings Controls')
                                }
                            }, n.createElement('div', {
                                class: n.const('dcg-overgraph-pillbox-elements'),
                                style: e.bindFn(e.getContainerStyle)
                            }, n.createElement(l, {
                                predicate: e.bindFn(e.shouldShowSettings)
                            }, function() {
                                return n.createElement(o.default, {
                                    controller: e.props.controller
                                })
                            }), n.createElement(l, {
                                predicate: e.bindFn(e.shouldShowResetButton)
                            }, function() {
                                return n.createElement(a.default, {
                                    controller: e.props.controller
                                })
                            }), n.createElement(l, {
                                predicate: e.bindFn(e.shouldShowZoomButtons)
                            }, function() {
                                return n.createElement(s.default, {
                                    controller: e.props.controller
                                })
                            })))
                        }), n.createElement(i.default, {
                            controller: function() {
                                return e.props.controller()
                            }
                        }))
                    }
                    ,
                    t.prototype.getContainerStyle = function() {
                        var e = this.controller.isKeypadOpen() ? this.controller.getKeypadHeight() : 0;
                        return this.controller.isGraphSettingsOpen() ? 'bottom: ' + e + 'px;' : 'bottom: auto'
                    }
                    ,
                    t.prototype.shouldShowContainer = function() {
                        return this.shouldShowSettings() || this.shouldShowZoomButtons() || this.shouldShowResetButton()
                    }
                    ,
                    t.prototype.shouldShowSettings = function() {
                        return this.controller.getGraphSettings().config.settingsMenu
                    }
                    ,
                    t.prototype.shouldShowZoomButtons = function() {
                        return this.controller.getGraphSettings().config.zoomButtons
                    }
                    ,
                    t.prototype.shouldShowResetButton = function() {
                        return this.controller.getGraphSettings().config.showResetButtonOnGraphpaper && this.controller.hasDefaultState()
                    }
                    ,
                    t
                }(n.Class);
                t.default = c
            }),
            r('loadcss!main/toast-view', function() {}),
            r('main/toast-view', ['require', 'exports', 'tslib', 'dcgview', 'loadcss!./toast-view'], function(e, t, r, n) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var i = n.Components.If
                , o = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('span', {
                            class: n.const('dcg-toast')
                        }, n.createElement('i', {
                            class: n.const('dcg-icon-error')
                        }), n.createElement(i, {
                            predicate: function() {
                                return !e.props.showUndo() && (!e.props.showClose || e.props.showClose())
                            }
                        }, function() {
                            return n.createElement('i', {
                                class: n.const('dcg-icon-remove'),
                                onTap: function() {
                                    return e.props.onClose && e.props.onClose()
                                },
                                role: n.const('link'),
                                tabindex: n.const(0),
                                'aria-label': n.const('Dismiss Notice')
                            })
                        }), n.createElement('span', {
                            class: n.const('dcg-msg'),
                            'aria-atomic': function() {
                                return !e.props.noAria()
                            },
                            'aria-live': function() {
                                return e.props.noAria() ? '' : 'assertive'
                            }
                        }, function() {
                            return e.props.t(e.props.message())
                        }), n.createElement(i, {
                            predicate: this.props.showUndo
                        }, function() {
                            return n.createElement('a', {
                                role: n.const('link'),
                                tabindex: n.const(0),
                                class: n.const('dcg-undo'),
                                onTap: function() {
                                    return e.props.onUndo && e.props.onUndo()
                                }
                            }, function() {
                                return e.props.t('Undo')
                            })
                        }), n.createElement(i, {
                            predicate: this.props.showLearnMore
                        }, function() {
                            return n.createElement('a', {
                                role: n.const('link'),
                                tabindex: n.const(0),
                                class: n.const('dcg-learn-more-link'),
                                target: n.const('_blank'),
                                onTap: function() {
                                    return e.props.onLearnMore && e.props.onLearnMore()
                                }
                            }, function() {
                                return e.props.t('Learn more')
                            })
                        }), n.createElement(i, {
                            predicate: function() {
                                return !!e.props.link && !!e.props.link()
                            }
                        }, function() {
                            return n.createElement('a', {
                                role: n.const('link'),
                                tabindex: n.const(0),
                                class: n.const('dcg-learn-more-link'),
                                target: n.const('_blank'),
                                href: function() {
                                    return e.props.link().url
                                }
                            }, function() {
                                return e.props.link().text
                            })
                        }))
                    }
                    ,
                    t.prototype.shouldUpdate = function() {
                        return !!this.props.message()
                    }
                    ,
                    t
                }(n.Class)
                , s = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.template = function() {
                        var e = this;
                        return n.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-toast-view': !0,
                                    'dcg-visible': !!e.props.message()
                                }
                            },
                            'toast-style': function() {
                                return e.props.toastStyle && e.props.toastStyle()
                            }
                        }, n.createElement(i, {
                            predicate: function() {
                                return !!e.props.message()
                            }
                        }, function() {
                            return n.createElement('div', {
                                class: n.const('dcg-toast-wrapper')
                            }, n.createElement('div', {
                                class: n.const('dcg-toast-cover')
                            }), n.createElement(o, r.__assign({}, e.props)))
                        }))
                    }
                    ,
                    t
                }(n.Class);
                t.ToastView = s
            }),
            r('main/disable-dragdrop-events', ['require', 'exports'], function(e, t) {
                'use strict';
                function r(e) {
                    e.on('drag dragend dragenter dragover dragleave drop', function(e) {
                        e.preventDefault(),
                        e.stopPropagation()
                    })
                }
                Object.defineProperty(t, '__esModule', {
                    value: !0
                }),
                t.default = r
            }),
            r('graphing-calc/views/main', ['require', 'exports', 'tslib', 'touchtracking', 'ipad.scrollfix', 'dcgview', 'jquery', '../../expressions/list-view', 'graphing-calc/keypads/main', 'main/pillbox-view', 'main/toast-view', 'main/disable-dragdrop-events', 'lib/tooltip'], function(e, t, r, n, i, o, s, a, l, c, u, d, p) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var h = o.Components.If
                , f = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return r.__extends(t, e),
                    t.prototype.init = function() {
                        this.controller = this.props.controller()
                    }
                    ,
                    t.prototype.settings = function() {
                        return this.controller.getGraphSettings()
                    }
                    ,
                    t.prototype.template = function() {
                        var e = this;
                        return o.createElement('div', {
                            class: o.const('dcg-calculator-api-container'),
                            style: o.const('width: 100%; height: 100%; position: relative;')
                        }, o.createElement('div', {
                            class: function() {
                                return {
                                    'dcg-container': !0,
                                    'dcg-fullscreen': !e.controller.isListVisible(),
                                    'dcg-narrow': e.controller.isNarrow(),
                                    'dcg-PROJECTOR-MODE': e.settings().config.projectorMode,
                                    'dcg-inverted-colors': !!e.settings().config.invertedColors,
                                    'dcg-EDIT-LIST-MODE': e.controller.isInEditListMode(),
                                    'dcg-no-graphpaper': !e.settings().config.graphpaper,
                                    'dcg-no-branding': !e.settings().config.branding,
                                    'dcg-no-expression-topbar': !e.settings().config.expressionsTopbar,
                                    'dcg-default-border': !!e.settings().config.border,
                                    'dcg-no-hyperlinks': !e.settings().config.links,
                                    'dcg-has-background-color': e.controller.hasBackgroundColor(),
                                    'dcg-is-interactive': e.settings().config.expressions || !e.settings().config.lockViewport
                                }
                            },
                            style: function() {
                                return {
                                    'font-size': e.settings().config.fontSize + 'px',
                                    background: e.getContainerBackgroundColor(),
                                    color: e.controller.getTextColor()
                                }
                            },
                            role: o.const('application'),
                            'aria-label': function() {
                                return e.controller.t('Desmos Graphing Calculator')
                            },
                            'x-ms-format-detection': o.const('none'),
                            didMount: this.bindFn(this.didMountRoot)
                        }, o.createElement(h, {
                            predicate: function() {
                                return e.controller.getGraphSettings().config.expressions
                            }
                        }, function() {
                            return o.createElement(a.default, {
                                controller: e.props.controller
                            })
                        }), o.createElement(h, {
                            predicate: function() {
                                return e.controller.isListEnabled() && !e.controller.isListVisible()
                            }
                        }, function() {
                            return o.createElement('div', {
                                class: function() {
                                    return {
                                        'dcg-overgraph-icon-container': !0,
                                        'dcg-bottom-right': e.controller.isNarrow()
                                    }
                                }
                            }, o.createElement(p.Tooltip, {
                                tooltip: function() {
                                    return e.controller.t('Show List')
                                },
                                gravity: function() {
                                    return e.controller.isNarrow() ? 'nw' : 'se'
                                }
                            }, o.createElement('div', {
                                class: function() {
                                    return {
                                        'dcg-show-expressions-tab': !0,
                                        'dcg-overgraph-icon': !0,
                                        'dcg-rotated': e.controller.isNarrow()
                                    }
                                },
                                'aria-label': function() {
                                    return e.controller.t('Show List')
                                },
                                role: o.const('button'),
                                tabindex: o.const('0'),
                                onTap: function() {
                                    return e.controller.dispatch({
                                        type: 'show-expressions-list'
                                    })
                                }
                            }, o.createElement('i', {
                                class: o.const('dcg-icon-show')
                            }))))
                        }), o.createElement(h, {
                            predicate: this.bindFn(this.showHamburger)
                        }, function() {
                            return o.createElement('div', {
                                class: o.const('dcg-overgraph-icon-container')
                            }, o.createElement(p.Tooltip, {
                                tooltip: function() {
                                    return e.controller.t('Open Graph')
                                },
                                gravity: e.const('se')
                            }, o.createElement('div', {
                                role: o.const('button'),
                                'aria-label': function() {
                                    return e.controller.t('Open Graph')
                                },
                                class: o.const('dcg-action-opendrawer dcg-in-api-action-opendrawer dcg-overgraph-icon'),
                                onTap: function() {
                                    return e.controller.dispatch({
                                        type: 'open-drawer'
                                    })
                                }
                            }, o.createElement('i', {
                                class: o.const('dcg-icon-hamburger')
                            }))))
                        }), o.createElement(c.default, {
                            controller: this.props.controller
                        }), o.createElement(u.ToastView, {
                            message: function() {
                                var t = e.controller.getToastData().message;
                                return t || ''
                            },
                            link: function() {
                                return e.controller.getToastData().link || void 0
                            },
                            showUndo: function() {
                                return !!e.controller.getToastData().undoCallback
                            },
                            showLearnMore: function() {
                                return !!e.controller.getToastData().learnMoreCallback
                            },
                            noAria: function() {
                                return !!e.controller.getToastData().noAria
                            },
                            toastStyle: function() {
                                return e.controller.getToastData().toastStyle
                            },
                            t: this.controller.t,
                            onUndo: function() {
                                return e.controller.dispatch({
                                    type: 'toast/undo'
                                })
                            },
                            onLearnMore: function() {
                                return e.controller.dispatch({
                                    type: 'toast/learn-more'
                                })
                            },
                            onClose: function() {
                                return e.controller.dispatch({
                                    type: 'toast/close'
                                })
                            }
                        }), o.createElement('div', {
                            class: o.const('dcg-grapher')
                        }), o.createElement(h, {
                            predicate: function() {
                                return e.controller.getGraphSettings().config.keypad
                            }
                        }, function() {
                            return o.createElement(l.default, {
                                controller: e.props.controller
                            })
                        })))
                    }
                    ,
                    t.prototype.showHamburger = function() {
                        return !!this.controller.getGraphSettings().config.showHamburger && (!this.controller.isInEditListMode() && this.controller.isNarrow())
                    }
                    ,
                    t.prototype.getContainerBackgroundColor = function() {
                        return this.controller.hasTransparentBackground() ? 'none' : this.controller.getBackgroundColor()
                    }
                    ,
                    t.prototype.didMountRoot = function(e) {
                        n.monitor(e),
                        this.controller.getGraphSettings().config.disableScrollFix || i.limitScrollOnElement(e),
                        this.setupFileDragDrop(e)
                    }
                    ,
                    t.prototype.setupFileDragDrop = function(e) {
                        function t() {
                            i = s(),
                            n.off('.filedraggedover'),
                            o.controller.dispatch({
                                type: 'file-is-not-dragged-over'
                            })
                        }
                        var r = this
                        , n = s(e);
                        d.default(n);
                        var i = s()
                        , o = this;
                        n.on('dragenter', function(e) {
                            r.controller.areImagesEnabled() && (0 === i.length && n.on('dcg-tapstart.filedraggedover', t),
                            i = i.add(e.target),
                            r.controller.dispatch({
                                type: 'file-is-dragged-over'
                            }))
                        }).on('dragleave', function(e) {
                            i = i.not(e.target),
                            0 === i.length && t()
                        }).on('drop', t)
                    }
                    ,
                    t
                }(o.Class);
                t.default = f
            }),
            r('worker/workerpoolconnection', ['require', 'pjs', 'underscore_model'], function(e) {
                'use strict';
                return e('pjs')(e('underscore_model').UnderscoreModel, function(e, t) {
                    e.init = function(e) {
                        t.init.call(this),
                        this.workerPool = e,
                        this.worker = e.allocateWorker(),
                        this.worker.__connections[this.guid] = this
                    }
                    ,
                    e.destroy = function() {
                        this.sendMessage({
                            type: 'destroy'
                        }),
                        delete this.worker.__connections[this.guid]
                    }
                    ,
                    e.killWorker = function() {
                        this.worker.__isFake || this.workerPool.killWorker(this.worker)
                    }
                    ,
                    e.onWorkerKilled = function() {}
                    ,
                    e.onResponse = function(e) {}
                    ,
                    e.sendMessage = function(e) {
                        this.worker.__isFake ? this.worker.postMessage(e) : this.worker.postMessage({
                            connectionId: this.guid,
                            originalMessage: e
                        })
                    }
                })
            }),
            r('text!worker_src_underlying', [], function() {
                return desmos_script2;
                }),
            r('worker_src', ['require', 'text!worker_src_underlying'], function(e) {
                'use strict';
                return e('text!worker_src_underlying')
            }),
            r('worker/create_worker_url', ['require', 'worker_src'], function(e) {
                'use strict';
                var t = e('worker_src');
                return function() {
                    if (!t.length)
                        return '/assets/generated/combined/toplevel/worker.js';
                    var e;
                    try {
                        e = new Blob([t],{
                            type: 'application/javascript'
                        })
                    } catch (i) {
                        try {
                            var r = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder
                            , n = new r;
                            n.append(t),
                            e = n.getBlob('application/javascript')
                        } catch (e) {
                            return null
                        }
                    }
                    return (window.URL || window.webkitURL).createObjectURL(e)
                }
            }),
            r('worker/fakeworker', ['require', 'worker/workercore'], function(e) {
                'use strict';
                var t = e('worker/workercore');
                return function(e) {
                    function r(t, r) {
                        e({
                            type: t,
                            payload: r
                        })
                    }
                    var n = {}
                    , i = t(r);
                    return n.postMessage = function(e) {
                        setTimeout(function() {
                            i.processChangeSet(e)
                        }, 0)
                    }
                    ,
                    n
                }
            }),
            r('worker/workerpool', ['require', 'console', './create_worker_url', 'pjs', 'underscore_model', './fakeworker', 'underscore', 'lib/urlparser'], function(e) {
                'use strict';
                function t(e) {
                    return u ? function(t) {
                        d = Math.max(Date.now(), d) + u,
                        setTimeout(e, d - Date.now(), t)
                    }
                    : e
                }
                var r = e('console')
                , n = e('./create_worker_url')
                , i = e('pjs')
                , o = e('underscore_model').UnderscoreModel
                , s = e('./fakeworker')
                , a = e('underscore')
                , l = e('lib/urlparser')
                , c = l.getParameter(location.search, 'workerThrottle')
                , u = parseInt(c, 10)
                , d = 0;
                return i(o, function(e, i) {
                    e.init = function(e) {
                        i.init.call(this),
                        this.workers = [],
                        this.maxWorkers = e,
                        this.workerURL = n()
                    }
                    ,
                    e.allowedToSpawnWorker = function() {
                        return this.workerURL && this.workers.length < this.maxWorkers
                    }
                    ,
                    e.killWorker = function(e) {
                        -1 !== a.indexOf(this.workers, e) && (e.terminate(),
                        this.workers = a.without(this.workers, e),
                        a.shuffle(a.values(e.__connections)).forEach(function(e) {
                            e && e.onWorkerKilled && e.onWorkerKilled()
                        }))
                    }
                    ,
                    e.spawnWorker = function() {
                        try {
                            var e = new Worker(this.workerURL);
                            return e.__connections = {},
                            e.__isFake = !1,
                            e.onerror = function(e) {
                                r.log(e)
                            }
                            ,
                            e.addEventListener('message', t(function(t) {
                                var r = t.data;
                                if ((!r || !r.log) && r && r.connectionId) {
                                    var n = e.__connections[r.connectionId];
                                    n && n.onResponse(r.originalMessage)
                                }
                            })),
                            this.workers.push(e),
                            e
                        } catch (e) {
                            return null
                        }
                    }
                    ,
                    e.spawnFakeWorker = function() {
                        var e = s(t(function(t) {
                            var r = a.values(e.__connections)[0];
                            r && r.onResponse(t)
                        }));
                        return e.__isFake = !0,
                        e.__connections = {},
                        e
                    }
                    ,
                    e.findLeastUsedWorker = function() {
                        var e = function(e) {
                            return a.size(e.__connections)
                        };
                        return a.sortBy(this.workers, e)[0]
                    }
                    ,
                    e.allocateWorker = function() {
                        var e = null;
                        return this.allowedToSpawnWorker() && (e = this.spawnWorker()),
                        e || (e = this.findLeastUsedWorker()),
                        e || (e = this.spawnFakeWorker()),
                        e
                    }
                })
            }),
            r('main/evaluator', ['require', 'exports', 'worker/workerpoolconnection', 'worker/workerpool', 'core/lib/deepCopy', 'core/math/functions', 'underscore'], function(e, t, r, n, i, o, s) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                });
                var a = function() {
                    function e(e) {
                        this.listeners = {
                            processChangeSet: function(e) {
                                var t = {}
                                , r = {};
                                for (var n in e.graphChanges) {
                                    var i = e.graphChanges[n];
                                    void 0 === i ? r[n] = !0 : (o.rehydrateGraphData(i),
                                    t[n] = i)
                                }
                                var s = {};
                                for (var n in e.intersectionChanges)
                                    r[n] || (s[n] = e.intersectionChanges[n]);
                                this.onEvaluatorResults({
                                    evaluationStates: e.statusChanges,
                                    graphData: {
                                        addedGraphs: t,
                                        removedGraphs: r,
                                        intersections: s
                                    },
                                    renderSlowly: !!e.isCompleteState
                                });
                                for (var a = e.syncId; this.syncRequests.length && void 0 !== a && this.syncRequests[0].id <= a; ) {
                                    this.syncRequests.shift().callback()
                                }
                                this.markJobFinished(),
                                this._processChangeSet()
                            }
                        },
                        this.__state = {},
                        this.changeSet = null,
                        this.cumulativeChangeSet = {},
                        this.syncId = 1,
                        this.syncRequests = [],
                        e || (e = n()),
                        this.workerPool = e,
                        this.createWorkerPoolConnection()
                    }
                    return e.prototype.createWorkerPoolConnection = function() {
                        var e = this;
                        this.workerPoolConnection && (this.workerPoolConnection.onResponse = function() {}
                        ,
                        this.workerPoolConnection.onWorkerKilled = function() {}
                        ),
                        this.workerPoolConnection = r(this.workerPool),
                        this.markJobFinished(),
                        this.workerPoolConnection.onResponse = function(t) {
                            e.shouldIgnoreWorkerMessage(t) ? 'processChangeSet' === t.type && (e.markJobFinished(),
                            e._processChangeSet()) : e.listeners[t.type].call(e, t.payload)
                        }
                        ,
                        this.workerPoolConnection.onWorkerKilled = function() {
                            var t = e.hasJobInWorker();
                            e.createWorkerPoolConnection(),
                            t ? (e.changeSet = i.default(e.cumulativeChangeSet),
                            e.__state.changed = !0,
                            e.__state.droppedMessage = !0) : (e.changeSet = i.default(e.cumulativeChangeSet),
                            e.__state.changed = !1),
                            e.processChangeSet()
                        }
                    }
                    ,
                    e.prototype.destroy = function() {
                        this.workerPoolConnection && (this.workerPoolConnection.onResponse = function() {}
                        ,
                        this.workerPoolConnection.onWorkerKilled = function() {}
                        ,
                        this.workerPoolConnection.destroy())
                    }
                    ,
                    e.prototype.shouldIgnoreWorkerMessage = function(e) {
                        return !!this.__suspendUntilSyncId && (!e || !e.payload || !(e.payload.syncId >= this.__suspendUntilSyncId))
                    }
                    ,
                    e.prototype.suspend = function() {
                        var e = this;
                        this.changeSet && this.changeSet.syncId || (this.syncId++,
                        this.applyToChangeSets(function(t) {
                            t.syncId = e.syncId
                        })),
                        this.__suspendUntilSyncId = this.changeSet.syncId
                    }
                    ,
                    e.prototype.markJobFinished = function() {
                        this.__state.droppedMessage = !1,
                        this.__jobStartTime = -1,
                        this.__suspendUntilSyncId = void 0
                    }
                    ,
                    e.prototype.startJobTimer = function() {
                        this.__jobStartTime = (new Date).getTime()
                    }
                    ,
                    e.prototype.hasJobInWorker = function() {
                        return -1 !== this.__jobStartTime
                    }
                    ,
                    e.prototype.getJobElapsedTime = function() {
                        return this.hasJobInWorker() ? (new Date).getTime() - this.__jobStartTime : NaN
                    }
                    ,
                    e.prototype.tick = function() {
                        this._processChangeSet()
                    }
                    ,
                    e.prototype.processChangeSet = function() {
                        this.__processChangeSetRequested = !0
                    }
                    ,
                    e.prototype._processChangeSet = function() {
                        if (this._syncEvaluatorConfig(),
                        this.__processChangeSetRequested) {
                            var e = this.getJobElapsedTime() >= 4e3;
                            if (this.__state.droppedMessage && e)
                                return void this.workerPoolConnection.killWorker();
                            if (this.__state.changed && this.changeSet)
                                if (this.changeSet.syncId || (this.syncId++,
                                this.changeSet.syncId = this.syncId),
                                this.hasJobInWorker())
                                    this.changeSet.isCompleteState && e && this.workerPoolConnection.killWorker();
                                else {
                                    var t = this.changeSet;
                                    this.changeSet = null,
                                    this.__state.changed = !1,
                                    this.startJobTimer(),
                                    this.workerPoolConnection.sendMessage(t),
                                    this.__processChangeSetRequested = !1
                                }
                        }
                    }
                    ,
                    e.prototype.notifyWhenSynced = function(e) {
                        var t = this;
                        if (this._syncEvaluatorConfig(),
                        !this.hasJobInWorker() && !this.changeSet)
                            return void setTimeout(e, 0);
                        this.syncId++,
                        this.syncRequests.push({
                            id: this.syncId,
                            callback: e
                        }),
                        this.applyToChangeSets(function(e) {
                            e.syncId = t.syncId
                        })
                    }
                    ,
                    e.prototype.applyToChangeSets = function(e) {
                        this.__state.changed = !0,
                        this.changeSet || (this.changeSet = {}),
                        this.cumulativeChangeSet || (this.cumulativeChangeSet = {}),
                        e(this.changeSet),
                        e(this.cumulativeChangeSet),
                        this.processChangeSet()
                    }
                    ,
                    e.prototype.clearStatementsAndStartCompleteState = function() {
                        this.hasJobInWorker() && this.suspend(),
                        this.applyToChangeSets(function(e) {
                            e.isCompleteState = !0,
                            delete e.statements
                        })
                    }
                    ,
                    e.prototype.addStatement = function(e) {
                        this.applyToChangeSets(function(t) {
                            t.statements || (t.statements = {}),
                            t.statements[e.id] = i.default(e)
                        })
                    }
                    ,
                    e.prototype.removeStatement = function(e) {
                        this.applyToChangeSets(function(t) {
                            t.statements || (t.statements = {}),
                            t.statements[e] = null
                        })
                    }
                    ,
                    e.prototype._syncEvaluatorConfig = function() {
                        if (this.readEvaluatorConfig) {
                            var e = this.readEvaluatorConfig();
                            for (var t in e)
                                this._applyIfChanged(e, t)
                        }
                    }
                    ,
                    e.prototype._applyIfChanged = function(e, t) {
                        var r = this.cumulativeChangeSet && this.cumulativeChangeSet[t]
                        , n = e[t];
                        s.isEqual(r, n) || this.applyToChangeSets(function(e) {
                            e[t] = n
                        })
                    }
                    ,
                    e
                }();
                t.Evaluator = a
            }),
            r('graphing/canvaslayer', ['require', 'jquery', 'pjs', 'browser', 'lib/i18n'], function(e) {
                'use strict';
                var t = e('jquery')
                , r = e('pjs')
                , n = e('browser')
                , i = e('lib/i18n');
                return r(function(e) {
                    e.init = function(e) {
                        this.grapher = e,
                        this.$ = t('<div class=\'dcg-graph-outer\' role=\'img\'></div>').attr('aria-roledescription', this.t('graph paper')),
                        this.canvas_node = t('<canvas class=\'dcg-graph-inner\'></canvas>').css('position', 'relative').css('display', 'block'),
                        this.devicePixelRatio = window.devicePixelRatio || 1,
                        this.ctx = this.canvas_node[0].getContext('2d'),
                        this.resize(0, 0),
                        n.IS_IOS && n.IS_IN_IFRAME && (this.$.css('-webkit-transform', 'translate3d(0,-.25px,0)'),
                        this.$.append('<div style="width:1px; height:.5px; pointer-events:none; opacity: 0;" aria-hidden="true">text</div>')),
                        this.$.append(this.canvas_node)
                    }
                    ,
                    e.resize = function(e, t, r) {
                        r = r || this.devicePixelRatio,
                        e === this.width && t === this.height || (this.width = e,
                        this.height = t,
                        this.canvas_node.css('width', e + 'px').css('height', t + 'px').attr('width', e * r).attr('height', t * r),
                        this.ctx = this.canvas_node[0].getContext('2d'),
                        this.ctx.scale(r, r))
                    }
                    ,
                    e.t = function(e, t) {
                        return i.t(e, t, this.grapher.settings.language)
                    }
                    ,
                    e.getAriaLabel = function(e) {
                        var t = '';
                        if (0 === e)
                            return this.t('Empty graph paper.');
                        t = 1 === e ? this.t('Graph paper showing 1 graph.') : this.t('Graph paper showing __count__ graphs.', {
                            count: e
                        });
                        var r = this.grapher.getAudioTrace();
                        if (r && !r.getAudioTraceActive()) {
                            void 0 !== r.agNavigator.getFirstTraceableSketch({
                                selectAssociatedExpression: !1
                            }) && (n.IS_APPLE ? t += this.t(' Press OPTION+T for audio trace.') : t += this.t(' Press ALT+T for audio trace.'))
                        }
                        return t
                    }
                    ,
                    e.updateAria = function(e, t) {
                        this.$.attr('aria-hidden', !e || !this.grapher.settings.config.graphpaper).attr('tabindex', e && this.grapher.settings.config.graphpaper && this.grapher.settings.config.enableTabindex && t > 0 ? 0 : -1).attr('aria-label', this.getAriaLabel(t))
                    }
                    ,
                    e.redraw = function() {}
                })
            }),
            r('loadcss!poi', function() {}),
            r('graphing/constants', ['require', 'exports'], function(e, t) {
                'use strict';
                Object.defineProperty(t, '__esModule', {
                    value: !0
                }),
                t.ANIMATE_ZOOM_DURATION = 500,
                t.DOUBLETAP_ZOOM = 2,
                t.ZOOM_FACTOR = 1.0625,
                t.MAX_DOTTED_SEGMENTS = 1e3,
                t.FILL_ALPHA = .4,
                t.POINT_ALPHA = .9,
                t.HIGHLIGHTED_POINT_ALPHA = .6,
                t.POLAR_ALPHA = .2,
                t.POI_ALPHA = .01,
                t.OFFSCREEN_RENDER_MARGIN = 20,
                t.LINE_WIDTH = 2.5
            }),
            r('graphing/dasheddrawer', ['require', './constants', 'core/math/distance'], function(e) {
                'use strict';
                function t(e, t, n) {
                    return this.pattern = n,
                    this.replen = this.pattern[0] + this.pattern[1],
                    t / this.replen > r.MAX_DOTTED_SEGMENTS && (this.pattern[0] = t * this.pattern[0] / this.replen / r.MAX_DOTTED_SEGMENTS,
                    this.pattern[1] = t * this.pattern[1] / this.replen / r.MAX_DOTTED_SEGMENTS),
                    this.pstate = 0,
                    this.dstaccum = 0,
                    this.px = null,
                    this.py = null,
                    this.ctx = e,
                    this
                }
                var r = e('./constants')
                , n = e('core/math/distance');
                return t.getTotalSegmentLength = function(e) {
                    if (e.length < 4)
                        return 0;
                    for (var t = 0, r = 0, i = e[0], o = e[1]; isNaN(i) || isNaN(o); ) {
                        if ((r += 2) >= e.length)
                            return 0;
                        i = e[r],
                        o = e[r + 1]
                    }
                    var s, a;
                    for (r += 2; r < e.length; r += 2)
                        s = e[r],
                        a = e[r + 1],
                        isNaN(s) || isNaN(a) || (t += n.hypot(s - i, a - o),
                        i = s,
                        o = a);
                    return t
                }
                ,
                t.prototype.start = function(e, t) {
                    this.ctx.desmos_batching || this.ctx.beginPath(),
                    this.px = e,
                    this.py = t
                }
                ,
                t.prototype.next = function(e, t) {
                    var r = this.pattern[this.pstate]
                    , n = Math.sqrt(Math.pow(e - this.px, 2) + Math.pow(t - this.py, 2));
                    if (n > 1e-5) {
                        for (; n + this.dstaccum >= r; ) {
                            var i = e - this.px
                            , o = t - this.py
                            , s = r - this.dstaccum;
                            i *= s / n,
                            o *= s / n,
                            0 === this.pstate && (this.ctx.moveTo(this.px, this.py),
                            this.ctx.lineTo(this.px + i, this.py + o)),
                            this.dstaccum = 0,
                            this.px += i,
                            this.py += o,
                            this.pstate = 1 - this.pstate,
                            r = this.pattern[this.pstate],
                            n -= s
                        }
                        0 === this.pstate && (this.ctx.moveTo(this.px, this.py),
                        this.ctx.lineTo(e, t))
                    }
                    this.px = e,
                    this.py = t,
                    this.dstaccum += n
                }
                ,
                t.prototype.close = function() {
                    this.ctx.desmos_batching || this.ctx.stroke(),
                    this.pstate = 0,
                    this.dstaccum = 0,
                    this.px = null,
                    this.py = null
                }
                ,
                t.prototype.drawSegment = function(e) {
                    for (var t = 0, r = e[0], n = e[1]; isNaN(r) || isNaN(n); ) {
                        if ((t += 2) >= e.length)
                            return;
                        r = e[t],
                        n = e[t + 1]
                    }
                    this.start(r, n);
                    var i, o;
                    for (t += 2; t < e.length; t += 2)
                        i = e[t],
                        o = e[t + 1],
                        isNaN(i) || isNaN(o) || this.next(i, o);
                    this.close()
                }
                ,
                t
            }),
            r('graphing/svg-classes', ['require', 'exports'], function(e, t) {
                'use strict';
                function r(e, t) {
                    var r = e;
                    r._dcgSaveClassName && r._dcgSaveClassName(t)
                }
                function n(e) {
                    var t = e;
                    t._dcgRestoreClassName && t._dcgRestoreClassName()
                }
                Object.defineProperty(t, '__esModule', {
                    value: !0
                }),
                t.save = r,
                t.restore = n
            }),
            r('graphing/draw-image-to-ctx', ['require', 'exports', 'graphing-calc/models/list', './svg-classes'], function(e, t, r, n) {
                'use strict';
                function i(e, t, i) {
                    if (e.computed_x)
                        for (var o = 0; o < e.computed_x.length; o++) {
                            var s = e.computed_x[o]
                            , a = e.computed_y[o]
                            , l = e.computed_width[o]
                            , c = e.computed_height[o]
                            , u = e.computed_radian_angle[o];
                            if (isFinite(s) && isFinite(a) && isFinite(l) && isFinite(c) && isFinite(u)) {
                                n.save(t, 'dcg-svg-image'),
                                t.save(),
                                n.restore(t),
                                t.globalAlpha = e.computed_opacity[o];
                                var d = i.mapy(c) - i.mapy(0)
                                , p = i.mapx(l) - i.mapx(0)
                                , h = 0 === u ? 1 : Math.abs(p / l * (c / d))
                                , f = i.mapx(s)
                                , g = i.mapy(a)
                                , m = f - p / 2
                                , y = g + d * h / 2
                                , v = c < 0 ? -1 : 1
                                , b = l < 0 ? -1 : 1
                                , x = m * b
                                , w = y * v
                                , _ = Math.abs(p)
                                , E = Math.abs(d);
                                0 !== u && (t.translate(f, g),
                                t.scale(1, 1 / h),
                                t.rotate(u),
                                t.translate(-f, -g)),
                                t.scale(b, v);
                                var S = !1
                                , M = !1
                                , I = e.controller.getGrapher();
                                I && '2d' === I.type && (S = I.clickableObjectsLayer.shouldDrawHovered(e.id),
                                M = I.clickableObjectsLayer.shouldDrawPressed(e.id));
                                var k = e.imageObj;
                                M ? e.depressedImageObj ? k = e.depressedImageObj : w += 1 : S && (e.hoveredImageObj ? k = e.hoveredImageObj : t.globalAlpha *= .8),
                                t.drawImage(k, x, w, _, E * h),
                                r.isItemSelected(e) && (t.beginPath(),
                                t.rect(x, w, _, E * h),
                                t.restore(),
                                t.save(),
                                t.strokeStyle = '#6993C7',
                                t.lineWidth = 2,
                                t.stroke()),
                                t.restore()
                            }
                        }
                }
                Object.defineProperty(t, '__esModule', {
                    value: !0
                }),
                t.drawImageToCtx = i
            }),
            r('graphing/svg-groups', ['require', 'exports'], function(e, t) {
                'use strict';
                function r(e, t) {
                    var r = e;
                    r._dcgStartNamedGroup && r._dcgStartNamedGroup(t)
                }
                function n(e) {
                    var t = e;
                    t._dcgEndNamedGroup && t._dcgEndNamedGroup()
                }
                Object.defineProperty(t, '__esModule', {
                    value: !0
                }),
                t.save = r,
                t.restore = n
            }),
            r('graphing/graphslayer', ['require', 'pjs', './clipping', './dasheddrawer', './constants', './viewport', 'core/types/graphmode', 'underscore', 'expressions/colors', 'core/types/styles', 'core/types/styles', './draw-image-to-ctx', './svg-groups', './svg-classes'], function(e) {
                'use strict';
                var t = e('pjs')
                , r = e('./clipping')
                , n = e('./dasheddrawer')
                , i = e('./constants')
                , o = e('./viewport').Viewport
                , s = e('core/types/graphmode')
                , a = e('underscore')
                , l = e('expressions/colors')
                , c = e('core/types/styles').PointStyle
                , u = e('core/types/styles').LineStyle
                , d = e('./draw-image-to-ctx').drawImageToCtx
                , p = e('./svg-groups')
                , h = e('./svg-classes')
                , f = {}
                , g = function(e) {
                    return new o(-3,e.width + 3,-3,e.height + 3)
                }
                , m = function(e) {
                    return Math.round(e - .5) + .5
                }
                , y = t(function(e) {
                    e.init = function(e) {
                        if (e.config.plaidMode)
                            for (var t in l)
                                l.hasOwnProperty(t) && 'string' == typeof l[t] && (f[l[t]] = document.createElement('img'),
                                f[l[t]].setAttribute('src', '/assets/img/april-fools/' + t.toLowerCase() + '.png'))
                    }
                    ,
                    e.redrawToCtx = function(e, t, r, n, i, o, s) {
                        if (p.save(e, 'expressions'),
                        void 0 === i)
                            throw new Error('Programming Error: missing drawOrder argument to redrawToCtx');
                        i.forEach(function(i) {
                            var a = r[i]
                            , l = n[i];
                            void 0 !== a && a.visible && y.drawSketchToCtx(r[i], e, t, o, s),
                            l && l.shouldGraph && l.foreground && d(l, e, t)
                        }),
                        p.restore(e)
                    }
                });
                return y.eachSegment = function(e, t) {
                    for (var r = 0; r < e.branches.length; r++)
                        for (var n = e.branches[r], i = 0; i < n.segments.length; i++) {
                            var o = n.segments[i];
                            t(n, o)
                        }
                }
                ,
                y.drawSketchToCtx = function(e, t, r, n, o) {
                    if (e.branches && e.branches.length) {
                        var a = t.lineWidth
                        , l = r.settings.globalCurveColor ? r.settings.globalCurveColor : e.color
                        , c = f[l];
                        if (c && c.complete && c.naturalWidth > 0) {
                            var d = t.createPattern(c, 'repeat');
                            t.fillStyle = d
                        } else
                            t.fillStyle = l;
                        t.strokeStyle = l,
                        t.lineJoin = 'round',
                        t.lineCap = 'round';
                        var p = !!r.settings.takingScreenshot
                        , h = 1;
                        o.shouldDrawHovered(e.id) && (h = 1.2),
                        o.shouldDrawPressed(e.id) && (h = 1.4);
                        for (var g = 0; g < e.branches.length; g++) {
                            var m = e.branches[g];
                            if (m.graphMode !== s.XYPOINT && m.graphMode !== s.XYPOINT_MOVABLE) {
                                m.graphMode !== s.POLAR && (t.desmos_batching = !0,
                                t.beginPath());
                                for (var v = 0; v < m.segments.length; v++) {
                                    var b = m.segments[v]
                                    , x = s.Y;
                                    if (m.flip && (x = s.X),
                                    m.graphMode && (x = m.graphMode),
                                    x !== s.POLYGONFILL || r.settings.disableFill) {
                                        if (x !== s.IMPLICIT) {
                                            var w = m.operator
                                            , _ = !r.settings.disableFill && ('<' == w || '>' == w || '<=' == w || '>=' == w || '\\leq' == w || '\\le' == w || '\\geq' == w || '\\ge' == w)
                                            , E = '<=' == w || '<' == w || '\\leq' == w || '\\le' == w;
                                            _ && y.fillGraphStrokeToCtx(t, r, b, E, x)
                                        }
                                    } else
                                        y.fillPolygonToCtx(t, r, b, m.fillOpacity * h)
                                }
                                t.globalAlpha = this._clampedOpacity(m.fillOpacity * h),
                                m.graphMode !== s.POLAR && (t.fill(),
                                t.desmos_batching = !1),
                                t.globalAlpha = 1
                            }
                        }
                        y.eachSegment(e, function(n, a) {
                            if (n.graphMode !== s.XYPOINT && n.graphMode !== s.XYPOINT_MOVABLE) {
                                var l = s.Y;
                                n.flip && (l = s.X),
                                n.graphMode && (l = n.graphMode);
                                var c = void 0 !== n.lineWidth
                                , d = n.lineWidth
                                , p = i.LINE_WIDTH;
                                if (!c || !(d <= 0) && isFinite(d)) {
                                    t.lineWidth = c ? d : p;
                                    var h = r.settings.graphLineWidth / p;
                                    t.lineWidth *= h;
                                    var f = n.operator
                                    , g = 'default';
                                    '<' == f || '>' == f || '!=' == f || e.style === u.DASHED || n.style === u.DASHED ? g = u.DASHED : e.style !== u.DOTTED && n.style !== u.DOTTED || (g = u.DOTTED,
                                    c && (t.lineWidth *= 2));
                                    var m = o.shouldDrawPressed(e.id)
                                    , v = o.shouldDrawHovered(e.id);
                                    (m || v) && (t.save(),
                                    t.lineWidth += 4.5,
                                    t.globalAlpha *= m ? .5 : .3,
                                    y.drawGraphStrokeToCtx(t, r, a, g, l, f),
                                    t.restore()),
                                    y.drawGraphStrokeToCtx(t, r, a, g, l, f)
                                }
                            }
                        }
                        .bind(this)),
                        t.lineWidth = a,
                        y.eachSegment(e, function(i, a) {
                            if (i.graphMode === s.XYPOINT && i.showPoint || i.graphMode === s.XYPOINT_MOVABLE && p) {
                                var l, c = [];
                                if (i.interactiveLabel && e.labels)
                                    for (var u = 0, d = e.labels.length; u < d; u++) {
                                        var h = e.labels[u]
                                        , f = n.isOpenPOI(h)
                                        , g = n.getHoveredPOI() === h;
                                        c.push(f || g),
                                        !f && g && (l = u)
                                    }
                                var m = 1;
                                'medium' === i.pointSize ? m = 1.5 : 'large' === i.pointSize && (m = 2.25);
                                var v = o.shouldDrawPressed(e.id)
                                , b = o.shouldDrawHovered(e.id)
                                , x = 1;
                                v ? x = .5 : b && (x = .3),
                                1 !== x && (y.drawPointsToCtx(t, r, a, i.style, c, l, 1.5 * m, x),
                                t.restore()),
                                y.drawPointsToCtx(t, r, a, i.style, c, l, m, 1)
                            }
                        }
                        .bind(this))
                    }
                }
                ,
                y.drawGraphStrokeToCtx = function(e, t, i, o, s, a) {
                    var l = r.getClippingGraphType(s, '=' !== a, t.settings)
                    , c = r.mapSegmentToCanvas(i, t.viewport, t.screen, l)
                    , d = r.clipStrokeEdges(c, g(t.screen));
                    if (0 !== d.length) {
                        e.save(),
                        h.save(e, 'dcg-svg-curve'),
                        e.globalAlpha *= t.settings.curveOpacity;
                        var p, f;
                        if (o == u.DASHED)
                            f = new n(e,n.getTotalSegmentLength(d),[11, 7]),
                            f.drawSegment(d);
                        else if (o == u.DOTTED)
                            f = t.settings.config.projectorMode ? new n(e,n.getTotalSegmentLength(d),[.1, 16]) : new n(e,n.getTotalSegmentLength(d),[.1, 8]),
                            f.drawSegment(d);
                        else if (o !== u.SOLID && 'default' !== o || 1 !== e.lineWidth) {
                            for (e.desmos_batching || e.beginPath(),
                            e.moveTo(d[0], d[1]),
                            p = 0; p < d.length; p += 2)
                                e.lineTo(d[p], d[p + 1]);
                            e.desmos_batching || e.stroke()
                        } else {
                            e.desmos_batching || e.beginPath();
                            var y = d.length > 4 || d[0] !== d[2] && d[1] !== d[3];
                            if (y)
                                for (e.moveTo(d[0], d[1]),
                                p = 0; p < d.length; p += 2)
                                    e.lineTo(d[p], d[p + 1]);
                            else
                                for (e.moveTo(m(d[0]), m(d[1])),
                                p = 0; p < d.length; p += 2)
                                    e.lineTo(m(d[p]), m(d[p + 1]));
                            e.desmos_batching || e.stroke()
                        }
                        h.restore(e),
                        e.restore()
                    }
                }
                ,
                y.mapPointToScreen = function(e, t, r) {
                    var n = e.mapx(t) - .5;
                    if (n < -20 || n > e.screen.width + 20)
                        return null;
                    var i = e.mapy(r) - .5;
                    return i < -20 || i > e.screen.height + 20 ? null : {
                        x: n,
                        y: i
                    }
                }
                ,
                y.drawPointToCtx = function(e, t, r, n, o, s, a, l, u) {
                    var d, p = e.lineWidth, f = e.fillStyle, g = y.mapPointToScreen(t, r, n);
                    if (!g)
                        return !1;
                    h.save(e, 'dcg-svg-point'),
                    e.globalAlpha = o || i.POINT_ALPHA,
                    u && (e.globalAlpha *= u),
                    e.desmos_batching || e.beginPath();
                    var m = t.settings.pointLineWidth;
                    return a && (m = t.settings.config.projectorMode ? 17 : 11,
                    e.lineWidth = m),
                    l && (m *= l,
                    e.lineWidth = m),
                    s === c.CROSS ? (d = .4 * m,
                    e.moveTo(g.x - d, g.y - d),
                    e.lineTo(g.x + d, g.y + d),
                    e.moveTo(g.x + d, g.y - d),
                    e.lineTo(g.x - d, g.y + d),
                    e.lineWidth = .3 * m) : s === c.OPEN ? (d = .42 * m,
                    e.moveTo(g.x + d, g.y),
                    e.arc(g.x, g.y, d, 0, 2 * Math.PI, !0),
                    e.closePath(),
                    e.fillStyle = 'white',
                    e.lineWidth = .25 * m,
                    e.fill()) : (e.moveTo(g.x - .1, g.y - .1),
                    e.lineTo(g.x - .1, g.y + .1),
                    e.lineTo(g.x + .1, g.y + .1),
                    e.lineTo(g.x + .1, g.y - .1)),
                    e.desmos_batching || e.stroke(),
                    e.globalAlpha = 1,
                    e.lineWidth = p,
                    e.fillStyle = f,
                    h.restore(e),
                    !0
                }
                ,
                y.drawPointsToCtx = function(e, t, r, n, o, s, a, l) {
                    var c = e.lineWidth;
                    e.lineWidth = t.settings.pointLineWidth;
                    for (var u = 0; u < r.length; u++)
                        y.drawPointToCtx(e, t, r[u][0], r[u][1], s === u && i.HIGHLIGHTED_POINT_ALPHA, n, o[u], a, l);
                    e.lineWidth = c
                }
                ,
                y.fillGraphStrokeToCtx = function(e, t, n, o, a) {
                    e.globalAlpha = a === s.POLAR ? i.POLAR_ALPHA : i.FILL_ALPHA;
                    var l, c = null, u = null;
                    if (a === s.POLAR) {
                        u = r.ALL;
                        var d = o ? 0 : t.viewport.polarDiameter()
                        , p = t.settings.degreeMode ? 180 : 2 * Math.PI;
                        c = r.computePolarFill(n, d, p)
                    } else
                        a === s.Y ? (u = r.Y,
                        l = o ? t.viewport.ymin : t.viewport.ymax,
                        c = r.computeCartesianFill(n, l)) : a === s.X && (u = r.X,
                        l = o ? t.viewport.xmin : t.viewport.xmax,
                        c = r.computeCartesianFill(n, l));
                    for (var f = g(t.screen), m = 0; m < c.length; m++) {
                        var y = r.getClippingGraphType(a, !0, t.settings)
                        , v = r.mapSegmentToCanvas(c[m], t.viewport, t.screen, y)
                        , b = r.clipFillEdges(v, f, u);
                        if (b.length >= 6) {
                            h.save(e, 'dcg-svg-region'),
                            e.desmos_batching || e.beginPath(),
                            e.moveTo(b[0], b[1]);
                            for (var x = 2; x < b.length; x += 2)
                                e.lineTo(b[x], b[x + 1]);
                            e.lineTo(b[0], b[1]),
                            e.desmos_batching || e.fill(),
                            h.restore(e)
                        }
                    }
                    e.globalAlpha = 1
                }
                ,
                y._clampedOpacity = function(e) {
                    return e < 0 ? 0 : e > 1 ? 1 : a.isFinite(e) ? e : i.FILL_ALPHA
                }
                ,
                y.fillPolygonToCtx = function(e, t, n, i) {
                    var o = g(t.screen);
                    e.globalAlpha = this._clampedOpacity(i);
                    var s = r.mapSegmentToCanvas(n, t.viewport, t.screen, r.Y_EQUALS)
                    , a = r.clipFillEdges(s, o, r.ALL);
                    if (a.length >= 6) {
                        h.save(e, 'dcg-svg-region'),
                        e.desmos_batching || e.beginPath(),
                        e.moveTo(a[0], a[1]);
                        for (var l = 2; l < a.length; l += 2)
                            e.lineTo(a[l], a[l + 1]);
                        e.desmos_batching || e.fill(),
                        h.restore(e)
                    }
                    e.globalAlpha = 1
                }
                ,
                y
            }),
            r('graphing/poidotslayer', ['require', 'loadcss!poi', 'pjs', './graphslayer', './constants'], function(e) {
                'use strict';
                e('loadcss!poi');
                var t = e('pjs')
                , r = e('./graphslayer')
                , n = e('./constants')
                , i = t(function(e) {
                    e.init = function() {
                        this.savedPOI = []
                    }
                    ,
                    e.redrawToCtx = function(e, t, r, n, o) {
                        var s = [];
                        for (var a in r) {
                            var l = r[a];
                            if (l.visible) {
                                l.showHighlight && i.drawSketchHighlight(l, e, t, n, o);
                                var c = l.getPOI();
                                (l.showPOI || c.length && c[0].isAttachedToPlottedPoint()) && s.push.apply(s, i.drawPOIs(c, e, '#AAAAAA', t))
                            }
                        }
                        this.savedPOI = s
                    }
                    ,
                    e.getDrawnPOI = function() {
                        return this.savedPOI
                    }
                });
                return i.drawSketchHighlight = function(e, t, n, i, o) {
                    n.settings.setProperty('highlight', !0),
                    r.drawSketchToCtx(e, t, n, i, o),
                    n.settings.setProperty('highlight', !1)
                }
                ,
                i.drawPOIs = function(e, t, i, o) {
                    t.lineWidth = o.settings.pointLineWidth,
                    t.strokeStyle = i || '#AAAAAA',
                    t.fillStyle = i || '#AAAAAA',
                    t.lineJoin = 'round',
                    t.lineCap = 'round';
                    var s = t.globalAlpha;
                    t.globalAlpha = n.POI_ALPHA;
                    var a, l, c = [], u = e.length;
                    if (u && e[0].isAttachedToPlottedPoint())
                        for (a = 0; a < u; a++)
                            l = e[a],
                            r.mapPointToScreen(o, l.x, l.y) && c.push(l);
                    else
                        for (a = 0; a < u; a++)
                            l = e[a],
                            r.drawPointToCtx(t, o, l.x, l.y) && c.push(l);
                    return t.globalAlpha = s,
                    c
                }
                ,
                i
            }),
            r('graphing/stepnumber', ['require', 'pjs', './svg-classes'], function(e) {
                'use strict';
                var t = e('pjs')
                , r = e('./svg-classes')
                , n = document.createElement('canvas').getContext('2d')
                , i = t(function(e) {
                    e.init = function(e, t) {
                        this._label = e,
                        this._fontSize = t,
                        this._layout = this._computeLayout(e, t)
                    }
                    ,
                    e._computeLayout = function(e, t) {
                        var r = {};
                        return e.superscript ? (r.mantissa_height = t,
                        i.setCtxFontSize(n, r.mantissa_height),
                        r.mantissa_width = n.measureText(e.mantissa).width,
                        r.superscript_height = Math.round(.8 * t),
                        i.setCtxFontSize(n, r.superscript_height),
                        r.superscript_width = n.measureText(e.superscript).width,
                        r.mantissa_x = 0,
                        r.mantissa_y = t / 5,
                        r.superscript_x = r.mantissa_width / 2 + r.superscript_width / 2,
                        r.superscript_y = -t / 4,
                        r.top = r.superscript_y - r.superscript_height / 2,
                        r.bottom = r.mantissa_y + r.mantissa_height / 2,
                        r.left = r.mantissa_x - r.mantissa_width / 2,
                        r.right = r.superscript_x + r.superscript_width / 2) : (r.mantissa_height = t,
                        i.setCtxFontSize(n, t),
                        r.mantissa_width = n.measureText(e.string).width,
                        r.mantissa_x = 0,
                        r.mantissa_y = 0,
                        r.top = r.mantissa_y - r.mantissa_height / 2,
                        r.bottom = r.mantissa_y + r.mantissa_height / 2,
                        r.left = r.mantissa_x - r.mantissa_width / 2,
                        r.right = r.mantissa_x + r.mantissa_width / 2),
                        r
                    }
                    ,
                    e.getRect = function() {
                        return this.getRectWhenCenteredAt({
                            x: 0,
                            y: 0
                        })
                    }
                    ,
                    e.getRectWhenCenteredAt = function(e) {
                        return {
                            left: this._layout.left + e.x,
                            right: this._layout.right + e.x,
                            top: this._layout.top + e.y,
                            bottom: this._layout.bottom + e.y
                        }
                    }
                    ,
                    e.getWidth = function() {
                        return this._layout.right - this._layout.left
                    }
                    ,
                    e.getHeight = function() {
                        return this._layout.bottom - this._layout.top
                    }
                    ,
                    e.clampBoundsWithinRect = function(e, t) {
                        var r = {};
                        return e.x + this._layout.left < t.left ? r.x = t.left - this._layout.left : e.x + this._layout.right > t.right ? r.x = t.right - this._layout.right : r.x = e.x,
                        e.y + this._layout.top < t.top ? r.y = t.top - this._layout.top : e.y + this._layout.bottom > t.bottom ? r.y = t.bottom - this._layout.bottom : r.y = e.y,
                        r
                    }
                    ,
                    e.getValue = function() {
                        return this._label.value
                    }
                    ,
                    e.getMinusWidth = function() {
                        return this.getValue() < 0 ? (i.setCtxFontSize(n, this._fontSize),
                        n.measureText('-1').width - n.measureText('1').width) : 0
                    }
                    ,
                    e.getString = function() {
                        return this._label.superscript ? this._label.mantissa + '^' + this._label.superscript : this._label.string
                    }
                    ,
                    e.drawCenteredAt = function(e, t, n) {
                        var o = t.x
                        , s = i.computeBaselineFromCenter(t.y, this._fontSize);
                        n && r.save(e, n),
                        e.save(),
                        n && r.restore(e),
                        i.setCtxFontSize(e, this._fontSize),
                        this._label.superscript ? (e.strokeText(this._label.mantissa, this._layout.mantissa_x + o, this._layout.mantissa_y + s),
                        e.strokeText(this._label.superscript, this._layout.superscript_x + o, this._layout.superscript_y + s),
                        e.fillText(this._label.mantissa, this._layout.mantissa_x + o, this._layout.mantissa_y + s),
                        e.fillText(this._label.superscript, this._layout.superscript_x + o, this._layout.superscript_y + s)) : (e.strokeText(this._label.string, this._layout.mantissa_x + o, this._layout.mantissa_y + s),
                        e.fillText(this._label.string, this._layout.mantissa_x + o, this._layout.mantissa_y + s)),
                        e.restore()
                    }
                });
                return i.computeBaselineFromCenter = function(e, t) {
                    return e + .272 * t
                }
                ,
                i.setCtxFontSize = function(e, t) {
                    e.font = t + 'px Arial',
                    e.textAlign = 'center'
                }
                ,
                i
            }),
            r('graphing/computestepsizes', ['require', './stepnumber', 'core/lib/label'], function(e) {
                'use strict';
                function t(e) {
                    return e ? {
                        base: 10,
                        major: [e, 2 * e, 5 * e],
                        minor: [4, 4, 5]
                    } : i.RATIONAL_STEPS
                }
                var r = e('./stepnumber')
                , n = e('core/lib/label')
                , i = {}
                , o = function(e, t, r, n) {
                    var i = Math.ceil(e / r)
                    , o = Math.floor(t / r)
                    , s = 1 / r;
                    if (!(i > o || o - i > 1e4))
                        for (var a = i; a <= o; a++)
                            n(a / s)
                };
                return i.RATIONAL_STEPS = {
                    base: 10,
                    major: [1, 2, 5],
                    minor: [5, 4, 5]
                },
                i.PI_STEPS = {
                    base: 10,
                    major: [Math.PI, 2 * Math.PI, 5 * Math.PI],
                    minor: [4, 4, 5]
                },
                i.PI_FRAC_STEPS = {
                    base: 2,
                    major: [Math.PI / 3],
                    minor: [3]
                },
                i.bestStep = function(e, t) {
                    for (var r, n, i, o, s = 1 / 0, a = 0; a < t.major.length; a++)
                        r = t.major[a],
                        i = Math.ceil(Math.log(e / r) / Math.log(t.base)),
                        (o = r * Math.pow(t.base, i)) < s && (s = o,
                        n = s / t.minor[a]);
                    return {
                        major: s,
                        minor: n
                    }
                }
                ,
                i.countStepsInRange = function(e, t, r) {
                    return 1 + (t - e) / r
                }
                ,
                i.calculateSpaceBetweenRects = function(e, t) {
                    var r, n;
                    return n = e.right < t.left ? t.left - e.right : t.right < e.left ? e.left - t.right : 0,
                    r = e.bottom < t.top ? t.top - e.bottom : t.bottom < e.top ? e.top - t.bottom : 0,
                    Math.max(r, n)
                }
                ,
                i.estimateMajors = function(e) {
                    var t = e.screen.width
                    , r = e.screen.height
                    , n = e.viewport.xmax - e.viewport.xmin
                    , i = e.viewport.ymax - e.viewport.ymin
                    , o = e.settings.pixelsPerLabel;
                    return {
                        majorStepX: o / t * n,
                        majorStepY: o / r * i
                    }
                }
                ,
                i.cartesian = function(e) {
                    var s, a = {}, l = Math.abs(e.settings.xAxisStep), c = Math.abs(e.settings.yAxisStep), u = e.viewport.xmax - e.viewport.xmin, d = e.viewport.ymax - e.viewport.ymin, p = n.value(l, u).string.indexOf('π') >= 0, h = n.value(c, d).string.indexOf('π') >= 0, f = i.countStepsInRange(e.viewport.xmin, e.viewport.xmax, l), g = i.countStepsInRange(e.viewport.ymin, e.viewport.ymax, c), m = i.estimateMajors(e), y = e.settings.labelSize;
                    if (l && l !== Math.PI && f >= 3 && f < 100) {
                        var v = 0;
                        e.settings.xAxisNumbers && o(e.viewport.xmin, e.viewport.xmax, l, function(e) {
                            var t = r(n.value(e, u), y);
                            v = Math.max(t.getWidth(), v)
                        }),
                        s = v + 10,
                        e.settings.xAxisNumbers || (s = 1 === e.settings.xAxisMinorSubdivisions ? 8 : 20),
                        f * s <= e.screen.width && (a.majorStepX = l,
                        a.minorStepX = 3 === l || 5 === l ? 1 : l / 4)
                    }
                    if (c && c !== Math.PI && g >= 3 && g < 100) {
                        var b = 0;
                        e.settings.yAxisNumbers && o(e.viewport.ymin, e.viewport.ymax, c, function(e) {
                            var t = r(n.value(e, d), y);
                            b = Math.max(t.getHeight(), b)
                        }),
                        s = b + 10,
                        e.settings.yAxisNumbers || (s = 1 === e.settings.yAxisMinorSubdivisions ? 8 : 20),
                        g * s <= e.screen.height && (a.majorStepY = c,
                        a.minorStepY = 3 === c || 5 === c ? 1 : c / 4)
                    }
                    if (!a.majorStepX) {
                        var x;
                        x = p ? m.majorStepX >= 1 ? i.PI_STEPS : i.PI_FRAC_STEPS : t(l);
                        var w = i.bestStep(m.majorStepX, x);
                        a.majorStepX = w.major,
                        a.minorStepX = w.minor
                    }
                    if (!a.majorStepY) {
                        var _;
                        _ = h ? m.majorStepY >= 1 ? i.PI_STEPS : i.PI_FRAC_STEPS : t(c);
                        var E = i.bestStep(m.majorStepY, _);
                        a.majorStepY = E.major,
                        a.minorStepY = E.minor
                    }
                    if (l === c) {
                        var S = e.screen.width / u / (e.screen.height / d);
                        S >= 1 && S <= 2 ? (a.majorStepX = a.majorStepY,
                        a.minorStepX = a.minorStepY) : S <= 1 && S >= .5 && (a.majorStepY = a.majorStepX,
                        a.minorStepY = a.minorStepX)
                    }
                    return e.settings.xAxisMinorSubdivisions > 0 && (a.minorStepX = a.majorStepX / e.settings.xAxisMinorSubdivisions),
                    e.settings.yAxisMinorSubdivisions > 0 && (a.minorStepY = a.majorStepY / e.settings.yAxisMinorSubdivisions),
                    a
                }
                ,
                i.polar = function(e) {
                    var t = i.estimateMajors(e)
                    , r = i.bestStep(t.majorStepX, i.RATIONAL_STEPS)
                    , n = i.bestStep(t.majorStepY, i.RATIONAL_STEPS)
                    , o = r.major > n.major ? r : n;
                    return {
                        majorStepR: o.major,
                        minorStepR: o.minor
                    }
                }
                ,
                i
            }),
            r('graphing/gridlayer', ['require', 'pjs', './stepnumber', 'core/lib/label', './computestepsizes', 'core/graphing-calc/json/graph-settings', './svg-classes', './svg-groups'], function(e) {
                'use strict';
                var t = e('pjs')
                , r = e('./stepnumber')
                , n = e('core/lib/label')
                , i = e('./computestepsizes')
                , o = e('core/graphing-calc/json/graph-settings').AxisArrowModes
                , s = e('./svg-classes')
                , a = e('./svg-groups')
                , l = t(function(e) {
                    e.redrawToCtx = function(e, t, r) {
                        a.save(e, 'graphpaper');
                        var n, o, s = t.settings.showGrid;
                        if (t.settings.polarMode && s)
                            n = i.polar(t),
                            a.save(e, 'grid'),
                            this.drawPolarGrid(e, t, n),
                            a.restore(e),
                            a.save(e, 'axis'),
                            this.drawAxes(e, t, r),
                            o = this.drawPolarStepNumbers(e, t, n),
                            this.drawLabels(e, t, o),
                            a.restore(e);
                        else {
                            n = i.cartesian(t),
                            s && (a.save(e, 'grid'),
                            this.drawCartesianGrid(e, t, n),
                            a.restore(e));
                            var l = !s;
                            a.save(e, 'axis'),
                            this.drawAxes(e, t, r),
                            o = this.drawCartesianStepNumbers(e, t, n, l),
                            this.drawLabels(e, t, o),
                            a.restore(e)
                        }
                        a.restore(e)
                    }
                    ,
                    e.addTextShadow = function(e, t) {
                        e.strokeStyle = t.settings.getBackgroundColor(),
                        e.lineWidth = 3,
                        e.miterLimit = 2
                    }
                    ,
                    e.drawPolarGrid = function(e, t, r) {
                        e.save();
                        var n = t.settings.minorAxisOpacity
                        , i = t.settings.majorAxisOpacity
                        , o = 1 - (1 - i) / (1 - n)
                        , a = Math.round(t.mapx(0)) - .5
                        , l = Math.round(t.mapy(0)) - .5
                        , u = t.screen.height / (t.viewport.ymax - t.viewport.ymin)
                        , d = t.screen.width / (t.viewport.xmax - t.viewport.xmin)
                        , p = u / d
                        , h = d / u
                        , f = l / p
                        , g = t.viewport.smallestR()
                        , m = t.viewport.largestR()
                        , y = r.minorStepR * Math.max(1, Math.floor(g / r.minorStepR))
                        , v = r.majorStepR * Math.max(1, Math.floor(g / r.majorStepR));
                        e.lineWidth = 1,
                        e.strokeStyle = 'rgba(0, 0 , 0, ' + n + ')',
                        c(y, m, r.minorStepR, function(r) {
                            s.save(e, 'dcg-svg-minor-gridline'),
                            e.beginPath(),
                            s.restore(e),
                            e.scale(1, p);
                            var n = t.mapx(r) - a;
                            e.moveTo(a + n, f),
                            e.arc(a, f, n, 0, 2 * Math.PI),
                            e.scale(1, h),
                            e.stroke()
                        }),
                        c(0, 359, g > 0 ? 5 : 15, function(r) {
                            if ((0 !== r && 180 !== r || !t.settings.showXAxis) && (90 !== r && 270 !== r || !t.settings.showYAxis)) {
                                s.save(e, 'dcg-svg-minor-gridline'),
                                e.beginPath(),
                                s.restore(e),
                                e.moveTo(a, l);
                                var n = t.mapx(m * Math.cos(r * Math.PI / 180))
                                , i = t.mapy(m * Math.sin(r * Math.PI / 180));
                                e.lineTo(Math.round(n) - .5, Math.round(i) - .5),
                                e.stroke()
                            }
                        }),
                        e.lineWidth = 1,
                        e.strokeStyle = 'rgba(0, 0 , 0, ' + o + ')',
                        c(v, m, r.majorStepR, function(r) {
                            s.save(e, 'dcg-svg-major-gridline'),
                            e.beginPath(),
                            s.restore(e),
                            e.scale(1, p);
                            var n = t.mapx(r) - a;
                            e.moveTo(a + n, f),
                            e.arc(a, f, n, 0, 2 * Math.PI),
                            e.scale(1, h),
                            e.stroke()
                        }),
                        e.restore()
                    }
                    ,
                    e.drawCartesianGrid = function(e, t, r) {
                        e.save();
                        var n = t.viewport.xmin
                        , i = t.viewport.ymin
                        , o = t.viewport.xmax
                        , a = t.viewport.ymax
                        , l = t.screen.width
                        , u = t.screen.height
                        , d = u
                        , p = 0;
                        t.settings.restrictGridToFirstQuadrant && (n = 0,
                        i = 0,
                        d = t.mapy(0),
                        p = t.mapx(0));
                        var h = t.settings.minorAxisOpacity
                        , f = t.settings.majorAxisOpacity;
                        e.lineWidth = 1,
                        e.strokeStyle = 'rgba(0, 0 , 0, ' + h + ')',
                        s.save(e, 'dcg-svg-minor-gridline'),
                        c(n, o, r.minorStepX, function(r) {
                            if (0 !== r || !t.settings.showYAxis) {
                                var n = Math.round(t.mapx(r));
                                n !== l && (e.beginPath(),
                                e.moveTo(n - .5, 0),
                                e.lineTo(n - .5, d),
                                e.stroke())
                            }
                        }),
                        c(i, a, r.minorStepY, function(r) {
                            if (0 !== r || !t.settings.showXAxis) {
                                var n = Math.round(t.mapy(r));
                                n !== u && (e.beginPath(),
                                e.moveTo(p, n - .5),
                                e.lineTo(l, n - .5),
                                e.stroke())
                            }
                        }),
                        s.restore(e);
                        var g = 1 - (1 - f) / (1 - h);
                        e.strokeStyle = 'rgba(0, 0 , 0, ' + g + ')',
                        s.save(e, 'dcg-svg-major-gridline'),
                        c(n, o, r.majorStepX, function(r) {
                            if (0 !== r || !t.settings.showYAxis) {
                                var n = Math.round(t.mapx(r));
                                n !== l && (e.beginPath(),
                                e.moveTo(n - .5, 0),
                                e.lineTo(n - .5, d),
                                e.stroke())
                            }
                        }),
                        c(i, a, r.majorStepY, function(r) {
                            if (0 !== r || !t.settings.showXAxis) {
                                var n = Math.round(t.mapy(r));
                                n !== u && (e.beginPath(),
                                e.moveTo(p, n - .5),
                                e.lineTo(l, n - .5),
                                e.stroke())
                            }
                        }),
                        s.restore(e),
                        e.restore()
                    }
                    ,
                    e.drawAxes = function(e, t, r) {
                        function n(t, r, n) {
                            e.save();
                            var i = Math.PI / 12
                            , o = 8 * Math.max(e.lineWidth, 1.5);
                            e.lineJoin = 'round',
                            e.fillStyle = c,
                            e.strokeStyle = c,
                            e.beginPath(),
                            e.moveTo(t, r),
                            e.lineTo(t + Math.cos(n - i) * o, r + Math.sin(n - i) * o),
                            e.lineTo(t + Math.cos(n + i) * o, r + Math.sin(n + i) * o),
                            e.lineTo(t, r),
                            e.lineTo(t + Math.cos(n - i) * o, r + Math.sin(n - i) * o),
                            e.stroke(),
                            e.fill(),
                            e.restore()
                        }
                        var i = t.settings.axisLineOffset
                        , a = t.settings.axisOpacity.toString();
                        s.save(e, 'dcg-svg-axis-line');
                        var l = 'rgba(127,205,230,' + a + ')'
                        , c = 'rgba(0,0,0,' + a + ')'
                        , u = t.settings.xAxisArrowMode
                        , d = t.settings.yAxisArrowMode
                        , p = t.settings.showXAxis
                        , h = t.settings.showYAxis
                        , f = Math.round(t.mapx(0)) - i
                        , g = Math.round(t.mapy(0)) - i
                        , m = t.screen.height
                        , y = t.screen.width
                        , v = m
                        , b = 0;
                        t.settings.restrictGridToFirstQuadrant && (v = g,
                        b = f,
                        u === o.BOTH && (u = o.POSITIVE),
                        d === o.BOTH && (d = o.POSITIVE)),
                        h && (e.lineWidth = 1 * t.settings.axisLineWidth,
                        e.strokeStyle = 'y' === r ? l : c,
                        d === o.BOTH ? (e.beginPath(),
                        e.moveTo(f, 2 * t.settings.axisLineWidth),
                        e.lineTo(f, m - 2 * t.settings.axisLineWidth),
                        e.stroke(),
                        n(f, m - t.settings.axisLineWidth, 3 * Math.PI / 2),
                        n(f, t.settings.axisLineWidth, Math.PI / 2)) : d === o.POSITIVE ? (e.beginPath(),
                        e.moveTo(f, 2 * t.settings.axisLineWidth),
                        e.lineTo(f, v),
                        e.stroke(),
                        n(f, t.settings.axisLineWidth, Math.PI / 2)) : (e.beginPath(),
                        e.moveTo(f, 0),
                        e.lineTo(f, v),
                        e.stroke())),
                        p && (e.lineWidth = 1 * t.settings.axisLineWidth,
                        e.strokeStyle = 'x' === r ? l : c,
                        u === o.BOTH ? (e.beginPath(),
                        e.moveTo(2 * t.settings.axisLineWidth, g),
                        e.lineTo(y - 2 * t.settings.axisLineWidth, g),
                        e.stroke(),
                        n(t.settings.axisLineWidth, g, 0),
                        n(y - t.settings.axisLineWidth, g, Math.PI)) : u === o.POSITIVE ? (e.beginPath(),
                        e.lineTo(b, g),
                        e.lineTo(y - 2 * t.settings.axisLineWidth, g),
                        e.stroke(),
                        n(y - t.settings.axisLineWidth, g, Math.PI)) : (e.beginPath(),
                        e.lineTo(b, g),
                        e.lineTo(y, g),
                        e.stroke())),
                        s.restore(e)
                    }
                    ,
                    e.drawPolarStepNumbers = function(e, t, i) {
                        function o(e, r, n) {
                            var i = Math.sqrt(e * e - r * r);
                            b <= i && i <= x && n.push({
                                x: t.mapx(r),
                                y: t.mapy(i)
                            }),
                            b <= -i && -i <= x && n.push({
                                x: t.mapx(r),
                                y: t.mapy(-i)
                            })
                        }
                        function a(e, r, n) {
                            var i = Math.sqrt(e * e - r * r);
                            y <= i && i <= v && n.push({
                                x: t.mapx(i),
                                y: t.mapy(r)
                            }),
                            y <= -i && -i <= v && n.push({
                                x: t.mapx(-i),
                                y: t.mapy(r)
                            })
                        }
                        e.save();
                        var l = t.settings.showGrid
                        , p = t.settings.xAxisNumbers && t.settings.showXAxis
                        , h = t.settings.yAxisNumbers && t.settings.showYAxis
                        , f = l && t.settings.polarNumbers
                        , g = t.viewport.largestR()
                        , m = t.viewport.smallestR()
                        , y = t.viewport.xmin
                        , v = t.viewport.xmax
                        , b = t.viewport.ymin
                        , x = t.viewport.ymax
                        , w = t.screen.width
                        , _ = t.screen.height
                        , E = {
                            left: 3,
                            right: w - 3,
                            top: 3,
                            bottom: _ - 3
                        }
                        , S = t.settings.labelHangingColor
                        , M = t.settings.getTextColor()
                        , I = t.settings.labelSize
                        , k = I;
                        this.addTextShadow(e, t),
                        e.fillStyle = M;
                        var C = t.mapx(0)
                        , T = t.mapy(0)
                        , L = b <= 0 && 0 <= x
                        , P = y <= 0 && 0 <= v
                        , A = L && p
                        , D = P && h
                        , O = '';
                        if (!A && !D && l) {
                            var F, q, N, R, B = Math.abs(C), j = Math.abs(C - w), V = Math.abs(T), U = Math.abs(T - _);
                            B <= j ? (F = 'left',
                            N = B) : (F = 'right',
                            N = j),
                            V <= U ? (q = 'top',
                            R = V) : (q = 'bottom',
                            R = U),
                            p && h ? O = N <= R ? F : q : h ? O = F : p && (O = q)
                        }
                        var z = {
                            left: 0,
                            right: w,
                            top: T - 1,
                            bottom: T + 1
                        }
                        , G = {
                            left: C - 1,
                            right: C + 1,
                            top: 0,
                            bottom: _
                        };
                        if (c(0, g, i.majorStepR, function(i) {
                            var s = []
                            , l = []
                            , c = []
                            , u = r(n.value(i, g), I)
                            , f = u.getRect();
                            switch (i > 0 ? (D && b <= i && i <= x && l.push({
                                x: C - f.right - 5,
                                y: t.mapy(i)
                            }),
                            D && b <= -i && -i <= x && l.push({
                                x: C - f.right - 5,
                                y: t.mapy(-i)
                            }),
                            A && y <= i && i <= v && s.push({
                                x: t.mapx(i),
                                y: T - f.top + 3
                            }),
                            A && y <= -i && -i <= v && s.push({
                                x: t.mapx(-i),
                                y: T - f.top + 3
                            })) : D && !p && b <= i && i <= x ? l.push({
                                x: C - f.right - 5,
                                y: t.mapy(i)
                            }) : A && !h && y <= i && i <= v && s.push({
                                x: t.mapx(i),
                                y: T - f.top + 3
                            }),
                            O) {
                            case 'top':
                                a(i, x, c);
                                break;
                            case 'bottom':
                                a(i, b, c);
                                break;
                            case 'left':
                                o(i, y, c);
                                break;
                            case 'right':
                                o(i, v, c)
                            }
                            s.forEach(function(t) {
                                t = u.clampBoundsWithinRect(t, E),
                                u.drawCenteredAt(e, t, 'dcg-svg-axis-value'),
                                d(z, u.getRectWhenCenteredAt(t))
                            }),
                            l.forEach(function(t) {
                                t = u.clampBoundsWithinRect(t, E),
                                u.drawCenteredAt(e, t, 'dcg-svg-axis-value'),
                                d(G, u.getRectWhenCenteredAt(t))
                            }),
                            c.forEach(function(t) {
                                t = u.clampBoundsWithinRect(t, E),
                                u.drawCenteredAt(e, t, 'dcg-svg-axis-value')
                            })
                        }),
                        f) {
                            var K = Math.ceil(m / i.majorStepR)
                            , W = Math.floor(g / i.majorStepR)
                            , H = Math.ceil((K + W) / 2)
                            , Y = H * i.majorStepR;
                            c(0, 359, m > 0 ? 15 : 30, function(i) {
                                var o;
                                o = t.settings.degreeMode ? i.toString() + '°' : n.value(i * Math.PI / 180, 2 * Math.PI).string;
                                var a = e.measureText(o).width / 2
                                , l = Y / 1.05
                                , c = l * Math.cos(i * Math.PI / 180)
                                , d = l * Math.sin(i * Math.PI / 180);
                                if (!(c < y || c > v || d < b || d > x)) {
                                    var p = t.mapx(c)
                                    , h = t.mapy(d);
                                    0 === i || 180 === i ? h -= k : 90 !== i && 270 !== i || (p += a + 3);
                                    var f = u(p, 3 + a, w - 3 - a)
                                    , g = u(h, 3 + k, _ - 3 - k);
                                    g = r.computeBaselineFromCenter(g, I),
                                    s.save(e, 'dcg-svg-polar-axis-value'),
                                    e.save(),
                                    s.restore(e),
                                    e.fillStyle = S,
                                    r.setCtxFontSize(e, I),
                                    e.strokeText(o, f, g),
                                    e.fillText(o, f, g),
                                    e.restore()
                                }
                            })
                        }
                        return e.restore(),
                        {
                            x: z,
                            y: G
                        }
                    }
                    ,
                    e.drawLabels = function(e, t, r) {
                        var n = t.viewport.xmin
                        , i = t.viewport.xmax
                        , o = t.viewport.ymin
                        , a = t.viewport.ymax
                        , l = t.screen.width
                        , c = t.screen.height
                        , u = (i - n) / l
                        , d = (a - o) / c
                        , h = t.settings.getTextColor()
                        , f = t.mapx(0)
                        , g = t.mapy(0)
                        , m = t.settings.labelSize
                        , y = t.settings.showXAxis && t.settings.xAxisLabel
                        , v = t.settings.showYAxis && t.settings.yAxisLabel
                        , b = r.x
                        , x = r.y;
                        if (y && b) {
                            s.save(e, 'dcg-svg-axis-label'),
                            e.save(),
                            s.restore(e),
                            e.fillStyle = h;
                            var w;
                            if (e.__xLabelOffset && t.settings.isViewportTransient && p(e.__xLabelOffset.xscale, u) && p(e.__xLabelOffset.yscale, d) && (w = {
                                x: e.__xLabelOffset.x + f,
                                y: e.__xLabelOffset.y + g
                            }),
                            this._setAxisLabelFont(e, y, m, t),
                            !w) {
                                var _ = e.measureText(y).width
                                , E = l - _ - 15
                                , S = m;
                                w = b.bottom + S < c ? {
                                    x: E,
                                    y: b.bottom + S
                                } : {
                                    x: E,
                                    y: b.top - S / 2
                                },
                                e.__xLabelOffset = {
                                    x: w.x - f,
                                    y: w.y - g,
                                    xscale: u,
                                    yscale: d
                                }
                            }
                            e.strokeText(y, w.x, w.y),
                            e.fillText(y, w.x, w.y),
                            e.restore()
                        } else
                            e.__xLabelPosition = null;
                        if (v && x) {
                            s.save(e, 'dcg-svg-axis-label'),
                            e.save(),
                            s.restore(e),
                            e.fillStyle = h;
                            var M;
                            if (e.__yLabelOffset && t.settings.isViewportTransient && p(e.__yLabelOffset.xscale, u) && p(e.__yLabelOffset.yscale, d) && (M = {
                                x: e.__yLabelOffset.x + f,
                                y: e.__yLabelOffset.y + g
                            }),
                            this._setAxisLabelFont(e, v, m, t),
                            !M) {
                                var I = e.measureText(v).width
                                , k = m
                                , C = I + 5;
                                if (!this._isShortMathyLabel(v)) {
                                    var T = I;
                                    I = k,
                                    k = T,
                                    C = .5 * I
                                }
                                var L = 15 + k;
                                M = x.left - I > 0 ? {
                                    x: x.left - C,
                                    y: L
                                } : {
                                    x: x.right + I,
                                    y: L
                                },
                                e.__yLabelOffset = {
                                    x: M.x - f,
                                    y: M.y - g,
                                    xscale: u,
                                    yscale: d
                                }
                            }
                            e.translate(M.x, M.y),
                            this._isShortMathyLabel(v) || e.rotate(-Math.PI / 2),
                            e.strokeText(v, 0, 0),
                            e.fillText(v, 0, 0),
                            e.restore()
                        } else
                            e.__yLabelPosition = null
                    }
                    ,
                    e._isShortMathyLabel = function(e) {
                        return e.trim().match(/^([a-zA-Z]?)\(?([a-zA-Z]?)\)?$/)
                    }
                    ,
                    e._setAxisLabelFont = function(e, t, r, n) {
                        this.addTextShadow(e, n),
                        this._isShortMathyLabel(t) ? e.font = 'italic ' + Math.round(1.4 * r.toString()) + 'px Times' : e.font = Math.round(1.2 * r.toString()) + 'px Arial'
                    }
                    ,
                    e.drawCartesianStepNumbers = function(e, t, i, o) {
                        e.save();
                        var a = t.settings.showXAxis
                        , l = t.settings.showYAxis
                        , u = a && t.settings.xAxisNumbers
                        , p = l && t.settings.yAxisNumbers
                        , h = t.viewport.xmin
                        , f = t.viewport.xmax
                        , g = t.viewport.ymin
                        , m = t.viewport.ymax
                        , y = t.screen.width
                        , v = t.screen.height
                        , b = {
                            left: 3,
                            top: 3,
                            right: y - 3,
                            bottom: v - 3
                        };
                        t.settings.restrictGridToFirstQuadrant && (h = 0,
                        g = 0);
                        var x = t.settings.labelHangingColor
                        , w = t.settings.getTextColor()
                        , _ = t.mapx(0)
                        , E = t.mapy(0)
                        , S = t.settings.labelSize;
                        this.addTextShadow(e, t);
                        var M = {
                            left: 0,
                            right: y,
                            top: E - 1,
                            bottom: E + 1
                        }
                        , I = {
                            left: _ - 1,
                            right: _ + 1,
                            top: 0,
                            bottom: v
                        }
                        , k = !1;
                        if (a && l && (u || p)) {
                            k = !0,
                            e.fillStyle = w;
                            var C = r(n.value(0, 1), S);
                            C.drawCenteredAt(e, {
                                x: _ - C.getRect().right - 5,
                                y: E - C.getRect().top + 5
                            }, 'dcg-svg-axis-value')
                        }
                        var T = []
                        , L = [];
                        if (u && c(h, f, i.majorStepX, function(e) {
                            var t = r(n.value(e, f - h), S);
                            '0' === t.getString() && k || T.push(t)
                        }),
                        p && c(g, m, i.majorStepY, function(e) {
                            var t = r(n.value(e, m - g), S);
                            '0' === t.getString() && k || L.push(t)
                        }),
                        o) {
                            e.save(),
                            s.save(e, 'dcg-svg-tickmark');
                            var P = t.settings.axisLineOffset
                            , A = t.settings.axisOpacity.toString()
                            , D = 'rgba(0,0,0,' + A + ')';
                            e.lineWidth = t.settings.axisLineWidth,
                            e.strokeStyle = D;
                            var O = Math.round(t.mapy(0)) - P
                            , F = Math.round(t.mapx(0)) - P
                            , q = Math.round(2 * e.lineWidth) - P;
                            e.beginPath(),
                            T.forEach(function(r) {
                                var n = Math.round(t.mapx(r.getValue())) - P;
                                e.moveTo(n, O - q),
                                e.lineTo(n, O + q)
                            }),
                            L.forEach(function(r) {
                                var n = Math.round(t.mapy(r.getValue())) - P;
                                e.moveTo(F - q, n),
                                e.lineTo(F + q, n)
                            }),
                            e.stroke(),
                            s.restore(e),
                            e.restore()
                        }
                        return T.forEach(function(r) {
                            var n = {
                                x: t.mapx(r.getValue()) - .5 * r.getMinusWidth(),
                                y: E - r.getRect().top + 5
                            }
                            , i = r.clampBoundsWithinRect(n, b);
                            e.fillStyle = n.y === i.y ? w : x;
                            var o = 'dcg-svg-axis-value';
                            n.x !== i.x && (o += ' dcg-svg-offcenter-axis-value'),
                            r.drawCenteredAt(e, i, o),
                            d(M, r.getRectWhenCenteredAt(i)),
                            s.restore(e)
                        }),
                        L.forEach(function(r) {
                            var n = {
                                x: _ - 5 - r.getRect().right,
                                y: t.mapy(r.getValue())
                            }
                            , i = r.clampBoundsWithinRect(n, b);
                            e.fillStyle = n.x === i.x ? w : x;
                            var o = 'dcg-svg-axis-value';
                            n.y !== i.y && (o += ' dcg-svg-offcenter-axis-value'),
                            r.drawCenteredAt(e, i, o),
                            d(I, r.getRectWhenCenteredAt(i)),
                            s.restore(e)
                        }),
                        e.restore(),
                        {
                            x: M,
                            y: I
                        }
                    }
                })
                , c = function(e, t, r, n) {
                    var i = Math.ceil(e / r)
                    , o = Math.floor(t / r);
                    if (isFinite(o - i) && !(o - i > 1e4))
                        for (var s = i; s <= o; s++)
                            n(s * r)
                }
                , u = function(e, t, r) {
                    return e < t ? t : e > r ? r : e
                }
                , d = function(e, t) {
                    t.left < e.left && (e.left = t.left),
                    t.right > e.right && (e.right = t.right),
                    t.top < e.top && (e.top = t.top),
                    t.bottom > e.bottom && (e.bottom = t.bottom)
                }
                , p = function(e, t) {
                    var r = Math.abs(e)
                    , n = Math.abs(t);
                    return Math.abs(r - n) <= 1e-4 * (r < n ? n : r)
                };
                return l
            }),
            r('graphing/imagelayer', ['require', 'pjs', 'underscore', './draw-image-to-ctx', './svg-groups'], function(e) {
                'use strict';
                var t = e('pjs')
                , r = e('underscore')
                , n = e('./draw-image-to-ctx').drawImageToCtx
                , i = e('./svg-groups');
                return t(function(e) {
                    e.redrawToCtx = function(e, t, o, s) {
                        i.save(e, 'background-images'),
                        (void 0 === s || s.length < r.size(o)) && (s = r.keys(o));
                        for (var a = 0; a < s.length; a++) {
                            var l = o[s[a]];
                            l && l.shouldGraph && !l.foreground && n(l, e, t)
                        }
                        i.restore(e)
                    }
                })
            });
          r('core/math/recttransformation', ['require', 'exports'],
            function(e, t) {
              'use strict';
              function r(e, t) {
                var r = e - 1;
                return 1 + r * r * r == 1 ?
                    t * (1 + r * (t - 1) * (.5 + 1 / 6 * r * (t - 2))) :
                    (Math.pow(e, t) - 1) / r
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var n = function() {
                function e(e, t, r, n) {
                  void 0 === e && (e = 0), void 0 === t && (t = 0),
                      void 0 === r && (r = 1), void 0 === n && (n = r),
                      this.tx = e, this.ty = t, this.sx = r, this.sy = n
                }
                return e.prototype.toJSON = function() {
                  return {
                    tx: this.tx, ty: this.ty, sx: this.sx, sy: this.sy
                  }
                }, e.prototype.compose = function(t) {
                  return new e(
                      this.sx * t.tx + this.tx, this.sy * t.ty + this.ty,
                      this.sx * t.sx, this.sy * t.sy)
                }, e.prototype.translate = function(t, r) {
                  var n = void 0 === r ? t.x : r.x - t.x,
                      i = void 0 === r ? t.y : r.y - t.y;
                  return new e(this.tx + n, this.ty + i, this.sx, this.sy)
                }, e.prototype.scale = function(t, r) {
                  return e.scale(t, r).compose(this)
                }, e.prototype.scaleAtPoint = function(t, r, n) {
                  return void 0 === n && (n = r),
                         e.scaleAtPoint(t, r, n).compose(this)
                }, e.prototype.inverse = function() {
                  return new e(
                      -this.tx / this.sx, -this.ty / this.sy, 1 / this.sx,
                      1 / this.sy)
                }, e.prototype.div = function(t) {
                  return new e(
                      (this.tx * t.sx - this.sx * t.tx) / t.sx,
                      (this.ty * t.sy - this.sy * t.ty) / t.sy, this.sx / t.sx,
                      this.sy / t.sy)
                }, e.prototype.conjugate = function(t) {
                  return new e(
                      this.tx * t.sx + t.tx * (1 - this.sx),
                      this.ty * t.sy + t.ty * (1 - this.sy), this.sx, this.sy)
                }, e.prototype.pow = function(t) {
                  return new e(
                      this.tx * r(this.sx, t), this.ty * r(this.sy, t),
                      Math.pow(this.sx, t), Math.pow(this.sy, t))
                }, e.prototype.mapX = function(e) {
                  return this.sx * e + this.tx
                }, e.prototype.mapY = function(e) {
                  return this.sy * e + this.ty
                }, e.prototype.mapPoint = function(e) {
                  return {
                    x: this.mapX(e.x), y: this.mapY(e.y)
                  }
                }, e.prototype.mapRect = function(e) {
                  return {
                    left: this.mapX(e.left), right: this.mapX(e.right),
                        bottom: this.mapY(e.bottom), top: this.mapY(e.top)
                  }
                }, e.scale = function(t, r) {
                  return void 0 === r && (r = t), new e(0, 0, t, r)
                }, e.translate = function(t, r) {
                  return (new e).translate(t, r)
                }, e.scaleAtPoint = function(t, r, n) {
                  return void 0 === n && (n = r), void 0 === n && (n = r),
                         new e(t.x * (1 - r), t.y * (1 - n), r, n)
                }, e.fromRects = function(t, r) {
                  var n = (r.right - r.left) / (t.right - t.left),
                      i = (r.top - r.bottom) / (t.top - t.bottom);
                  return new e(
                      r.left - n * t.left, r.bottom - i * t.bottom, n, i)
                }, e.fromJSON = function(t) {
                  return new e(t.tx, t.ty, t.sx, t.sy)
                }, e
              }();
              t.RT = n
            });
          r('graphing/projection',
            ['require', 'exports', 'core/math/recttransformation'],
            function(e, t, r) {
              'use strict';
              function n(e) {
                return {
                  left: 0, right: e.width, top: 0, bottom: e.height
                }
              }
              function i(e) {
                return {
                  left: e.xmin, right: e.xmax, bottom: e.ymin, top: e.ymax
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var o = function() {
                function e(e, t, o) {
                  this.screen = e, this.viewport = t, this.settings = o,
                  this.mathCoordinates = i(t), this.pixelCoordinates = n(e),
                  this.mathToPixels = r.RT.fromRects(
                      this.mathCoordinates, this.pixelCoordinates),
                  this.pixelsToMath = r.RT.fromRects(
                      this.pixelCoordinates, this.mathCoordinates)
                }
                return e.prototype.mapx = function(e) {
                  return this.mathToPixels.mapX(e)
                }, e.prototype.mapy = function(e) {
                  return this.mathToPixels.mapY(e)
                }, e.prototype.map_pt = function(e) {
                  return this.mathToPixels.mapPoint(e)
                }, e.prototype.reverse_mapx = function(e) {
                  return this.pixelsToMath.mapX(e)
                }, e.prototype.reverse_mapy = function(e) {
                  return this.pixelsToMath.mapY(e)
                }, e.prototype.reverse_map_pt = function(e) {
                  return this.pixelsToMath.mapPoint(e)
                }, e.prototype.coordsAreOnscreen = function(e, t, r) {
                  return r = void 0 === r ? 0 : r,
                         e > -r && t > -r && e < this.screen.width + r &&
                             t < this.screen.height + r
                }, e.prototype.closestPointOnScreen = function(e) {
                  var t = this.pixelCoordinates;
                  return {
                    x: Math.min(Math.max(e.x, t.left), t.right),
                        y: Math.min(Math.max(e.y, t.top), t.bottom)
                  }
                }, e
              }();
              t.Projection = o
            });
          (function(e) {
            'function' == typeof r && r.amd ?
                r('vendor/jquery.mousewheel', ['jquery'], e) :
                'object' == typeof exports ? module.exports = e :
                                             e(jQuery)
          })(function(e) {
            function t(t) {
              var s = t || window.event, a = l.call(arguments, 1), c = 0, u = 0,
                  d = 0, p = 0;
              if (t = e.event.fix(s), t.type = 'mousewheel',
                  'detail' in s && (d = -1 * s.detail),
                  'wheelDelta' in s && (d = s.wheelDelta),
                  'wheelDeltaY' in s && (d = s.wheelDeltaY),
                  'wheelDeltaX' in s && (u = -1 * s.wheelDeltaX),
                  'axis' in s && s.axis === s.HORIZONTAL_AXIS &&
                      (u = -1 * d, d = 0),
                  c = 0 === d ? u : d,
                  'deltaY' in s && (d = -1 * s.deltaY, c = d),
                  'deltaX' in s && (u = s.deltaX, 0 === d && (c = -1 * u)),
                  0 !== d || 0 !== u) {
                if (1 === s.deltaMode) {
                  var h = e.data(this, 'mousewheel-line-height');
                  c *= h, d *= h, u *= h
                } else if (2 === s.deltaMode) {
                  var f = e.data(this, 'mousewheel-page-height');
                  c *= f, d *= f, u *= f
                }
                return p = Math.max(Math.abs(d), Math.abs(u)),
                       (!o || p < o) && (o = p, n(s, p) && (o /= 40)),
                       n(s, p) && (c /= 40, u /= 40, d /= 40),
                       c = Math[c >= 1 ? 'floor' : 'ceil'](c / o),
                       u = Math[u >= 1 ? 'floor' : 'ceil'](u / o),
                       d = Math[d >= 1 ? 'floor' : 'ceil'](d / o), t.deltaX = u,
                       t.deltaY = d, t.deltaFactor = o, t.deltaMode = 0,
                       a.unshift(t, c, u, d), i && clearTimeout(i),
                       i = setTimeout(r, 200),
                       (e.event.dispatch || e.event.handle).apply(this, a)
              }
            }
            function r() {
              o = null
            }
            function n(e, t) {
              return u.settings.adjustOldDeltas && 'mousewheel' === e.type &&
                  t % 120 == 0
            }
            var i, o,
                s =
                    [
                      'wheel', 'mousewheel', 'DOMMouseScroll',
                      'MozMousePixelScroll'
                    ],
                a = 'onwheel' in document || document.documentMode >= 9 ?
                ['wheel'] :
                ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
                l = Array.prototype.slice;
            if (e.event.fixHooks)
              for (var c = s.length; c;)
                e.event.fixHooks[s[--c]] = e.event.mouseHooks;
            var u = e.event.special.mousewheel = {
              version: '3.1.9',
              setup: function() {
                if (this.addEventListener)
                  for (var r = a.length; r;)
                    this.addEventListener(a[--r], t, !1);
                else
                  this.onmousewheel = t;
                e.data(this, 'mousewheel-line-height', u.getLineHeight(this)),
                    e.data(
                        this, 'mousewheel-page-height', u.getPageHeight(this))
              },
              teardown: function() {
                if (this.removeEventListener)
                  for (var e = a.length; e;)
                    this.removeEventListener(a[--e], t, !1);
                else
                  this.onmousewheel = null
              },
              getLineHeight: function(t) {
                return parseInt(
                    e(t)['offsetParent' in e.fn ? 'offsetParent' : 'parent']()
                        .css('fontSize'),
                    10)
              },
              getPageHeight: function(t) {
                return e(t).height()
              },
              settings: {adjustOldDeltas: !0}
            };
            e.fn.extend({
              mousewheel: function(e) {
                return e ? this.bind('mousewheel', e) :
                           this.trigger('mousewheel')
              },
              unmousewheel: function(e) {
                return this.unbind('mousewheel', e)
              }
            })
          });
          r('graphing/viewportcontroller',
            [
              'require', 'jquery', 'pjs', 'lib/aria', 'lib/i18n',
              'core/math/recttransformation', './viewport',
              'core/math/distance', './constants', 'lib/animation-frame',
              './projection', 'keys', 'jquery.handleevent',
              'vendor/jquery.mousewheel'
            ],
            function(e) {
              'use strict';
              var t = e('jquery'), r = e('pjs'), n = e('lib/aria'),
                  i = e('lib/i18n'), o = e('core/math/recttransformation').RT,
                  s = e('./viewport').Viewport, a = e('core/math/distance'),
                  l = e('./constants'), c = e('lib/animation-frame'),
                  u = e('./projection').Projection, d = e('keys');
              return e('jquery.handleevent'), e('vendor/jquery.mousewheel'),
                     r(function(e) {
                       function r(e, t) {
                         var r = t.x - e.x, n = t.y - e.y, i = .5 * (e.x + t.x),
                             o = .5 * (e.y + t.y), s = .5 * a.hypot(r, n);
                         return {
                           center: f(i, o), radius: s
                         }
                       }
                       function p(e, t) {
                         return r(t, {x: 2 * e.x - t.x, y: 2 * e.y - t.y})
                       }
                       function h(e, t) {
                         for (var r = [], n = 0; n < e.length; n++)
                           r.push(f(e[n].x - t.left, e[n].y - t.top));
                         return r
                       }
                       function f(e, t) {
                         return {
                           x: e, y: t
                         }
                       }
                       function g(e) {
                         return f(
                             .5 * (e.left + e.right), .5 * (e.bottom + e.top))
                       }
                       var m = 0;
                       e.init =
                           function(e, t) {
                         this.grapher = e, this.$ = this.grapher.$,
                         this.__id = m++, this.controller = t,
                         this.isScalingEnabled = !1, this.mousePt = f(0, 0),
                         this.lastScrollZoom = Date.now(),
                         this.preventScrollZoom = !1,
                         this.addMouseWheelEventHandler(),
                         this.addTouchEventHandler()
                       },
                       e.remove =
                           function() {
                         t(window).off('.viewportcontroller-' + this.__id)
                       },
                       e.t =
                           function(e, t) {
                         return i.t(e, t, this.grapher.settings.language)
                       },
                       e.getViewport =
                           function() {
                         return this.grapher.getProjection().viewport
                       },
                       e.getProjection =
                           function() {
                         return this.grapher.getProjection()
                       },
                       e.updateMouse =
                           function(e) {
                         var t = this.$[0].getBoundingClientRect();
                         this.mousePt = f(e.clientX - t.left, e.clientY - t.top)
                       },
                       e.updateScaleAxis =
                           function() {
                         this.isMouseInViewport() &&
                             (this.isMouseNearYAxis() ?
                                  this.grapher.scaleAxis = 'y' :
                                  this.isMouseNearXAxis() ?
                                  this.grapher.scaleAxis = 'x' :
                                  this.grapher.scaleAxis = 'both'),
                             this.updateCursor(), this.grapher.redrawAllLayers()
                       },
                       e.updateCursor =
                           function() {
                         this.$.toggleClass(
                             'dcg-scale-horizontal',
                             'x' === this.grapher.scaleAxis),
                             this.$.toggleClass(
                                 'dcg-scale-vertical',
                                 'y' === this.grapher.scaleAxis),
                             this.$.toggleClass(
                                 'dcg-scale-both',
                                 'both' === this.grapher.scaleAxis)
                       },
                       e.isMouseNearOrigin =
                           function() {
                         var e = this.getProjection(),
                             t = e.mathToPixels.mapPoint(f(0, 0));
                         return Math.abs(this.mousePt.x - t.x) < 50 &&
                             Math.abs(this.mousePt.y - t.y) < 50
                       },
                       e.isMouseNearXAxis =
                           function() {
                         var e = this.getProjection(), t = e.pixelCoordinates,
                             r = e.mathToPixels.mapY(0);
                         return r = Math.min(Math.max(t.top, r), t.bottom),
                                Math.abs(this.mousePt.y - r) < 40 &&
                                    e.settings.showXAxis
                       },
                       e.isMouseNearYAxis =
                           function() {
                         var e = this.getProjection(), t = e.pixelCoordinates,
                             r = e.mathToPixels.mapX(0);
                         return r = Math.min(Math.max(t.left, r), t.right),
                                Math.abs(this.mousePt.x - r) < 40 &&
                                    e.settings.showYAxis
                       },
                       e.isMouseInViewport =
                           function() {
                         var e = this.getProjection(), t = e.mathCoordinates,
                             r = e.pixelsToMath.mapPoint(this.mousePt);
                         return r.x >= t.left && r.x <= t.right &&
                             r.y >= t.bottom && r.y <= t.top
                       },
                       e.getDefaultViewport =
                           function() {
                         return this.controller.getDefaultStateViewport() ||
                             this.grapher.getDefaultViewport()
                       },
                       e._setViewportWithoutCancellingAnimation = function(e) {
                         if (e.isValid() && !e.equals(this.getViewport())) {
                           var t = this.getProjection();
                           this.grapher._setProjection(
                               new u(t.screen, e, t.settings))
                         }
                       }, e.setViewport = function(e) {
                         this.cancelAnimation(),
                             this._setViewportWithoutCancellingAnimation(e)
                       }, e.setScreen = function(e) {
                         var t = this.getProjection(),
                             r = t.settings.squareAxes,
                             n = new u(
                                 e, this.getViewportForScreen(t.viewport, e, r),
                                 t.settings);
                         this.grapher._setProjection(n)
                       }, e.getTransformedViewport = function(e) {
                         var t = this.getProjection(),
                             r = t.pixelsToMath.div(e).mapRect(
                                 t.pixelCoordinates);
                         return new s(r.left, r.right, r.bottom, r.top)
                       }, e.transformViewport = function(e) {
                         this.setViewport(this.getTransformedViewport(e))
                       }, e.animateTransformation = function(e) {
                         function t(s) {
                           n || (n = s);
                           var a = (s - n) / l.ANIMATE_ZOOM_DURATION;
                           o += a,
                               o < 1 ?
                               (r.__animationTimeout =
                                    c.requestAnimationFrame(t),
                                r._setViewportWithoutCancellingAnimation(
                                    r.getTransformedViewport(e.pow(a))),
                                r.grapher
                                    .debounceUserRequestedViewportChange()) :
                               (r.setViewport(i),
                                r.grapher.debounceUserRequestedViewportChange())
                         }
                         var r = this;
                         this.cancelAnimation();
                         var n, i = this.getTransformedViewport(e), o = 0;
                         this.__animationTimeout = c.requestAnimationFrame(t)
                       }, e.cancelAnimation = function() {
                         c.cancelAnimationFrame(this.__animationTimeout)
                       }, e.addMouseWheelEventHandler = function() {
                         var e, r, n = this, i = !1;
                         t(window).on(
                             'scroll.viewportcontroller-' + this.__id,
                             function(e) {
                               i = !0
                             }),
                             t(window).on(
                                 'mousewheel.viewportcontroller-' + this.__id,
                                 function(t) {
                                   e = t.originalEvent.clientX,
                                   r = t.originalEvent.clientY
                                 }),
                             t(window).on(
                                 'mousemove.viewportcontroller-' + this.__id,
                                 function(t) {
                                   if (i) {
                                     var n = t.originalEvent.clientX - e,
                                         o = t.originalEvent.clientY - r;
                                     n * n + o * o < 100 || (i = !1)
                                   }
                                 });
                         var s = 0, a = function(e, t) {
                           var r = Date.now();
                           if (n.preventScrollZoom &&
                                   r - n.lastScrollZoom > 50 &&
                                   (n.preventScrollZoom = !1),
                               n.lastScrollZoom = r, !n.preventScrollZoom) {
                             var a = this.getProjection();
                             if (!a.settings.config.lockViewport) {
                               var u = a.mathToPixels;
                               if (!i) {
                                 e.preventDefault(), n.updateMouse(e);
                                 var d = u.mapPoint(f(0, 0)),
                                     p = n.isMouseNearOrigin() && t > 0 ?
                                     d :
                                     n.mousePt;
                                 if (!(s > 0)) {
                                   s += 1, c.requestAnimationFrame(function() {
                                     s--
                                   }),
                                       t = t > 0 ? 1 : -1;
                                   var h = t > 0 ? l.ZOOM_FACTOR :
                                                   1 / l.ZOOM_FACTOR,
                                       g = n.grapher.scaleAxis,
                                       m = 'x' !== g && 'both' !== g && g ? 1 :
                                                                            h,
                                       y = 'y' !== g && 'both' !== g && g ? 1 :
                                                                            h;
                                   this.transformViewport(
                                       o.scaleAtPoint(p, m, y)),
                                       this.grapher
                                           .debounceUserRequestedViewportChange()
                                 }
                               }
                             }
                           }
                         };
                         this.$.mousewheel(a.bind(this))
                       }, e.handleDoubleClick = function(e) {
                         var t = this.getProjection();
                         if (!t.settings.config.lockViewport &&
                             !t.settings.config.disable_dblclick_zooming &&
                             !e.wasHandled()) {
                           e.preventDefault();
                           var r = this.$[0].getBoundingClientRect(),
                               n = f(e.clientX - r.left, e.clientY - r.top);
                           this.animateTransformation(
                               o.scaleAtPoint(n, l.DOUBLETAP_ZOOM))
                         }
                       }, e.applyPanTouchChanges = function(e, t) {
                         if (!this.getProjection()
                                  .settings.config.lockViewport &&
                             !this.isScalingEnabled) {
                           var r = f(t[0].x - e[0].x, t[0].y - e[0].y);
                           this.transformViewport(o.translate(r)),
                               this.grapher
                                   .debounceUserRequestedViewportChange()
                         }
                       }, e.chooseDragScaleCenter = function() {
                         var e = this.getProjection(), t = e.pixelCoordinates,
                             r = e.mathToPixels.mapX(0),
                             n = e.mathToPixels.mapY(0);
                         return r = Math.min(Math.max(t.left, r), t.right),
                                n = Math.min(Math.max(t.top, n), t.bottom),
                                f(r, n)
                       }, e.applyScaleTouchChanges = function(e, t) {
                         if (!this.getProjection()
                                  .settings.config.lockViewport) {
                           var n, i, s = this.grapher.scaleAxis;
                           if (2 === e.length && 2 === t.length)
                             n = r(e[0], e[1]), i = r(t[0], t[1]);
                           else {
                             if (1 !== t.length) return;
                             var a = this.chooseDragScaleCenter();
                             n = p(a, e[0]), i = p(a, t[0])
                           }
                           var l = i.radius / n.radius, c = 'y' === s ? 1 : l,
                               u = 'x' === s ? 1 : l,
                               d = o.scaleAtPoint(n.center, c, u)
                                       .translate(n.center, i.center);
                           this.transformViewport(d),
                               this.grapher
                                   .debounceUserRequestedViewportChange()
                         }
                       }, e.addTouchEventHandler = function() {
                         var e = this, r = [], n = !1, i = !0, o = !0,
                             s = function(t) {
                               var r = e.grapher.getProjection();
                               n || r.settings.config.lockViewport ||
                                   (e.updateMouse(t),
                                    e.isScalingEnabled && e.updateScaleAxis())
                             };
                         t(window).on(
                             'mousemove.viewportcontroller-' + this.__id, s);
                         var a = function(r) {
                           var s = e.getProjection();
                           if (!s.settings.config.lockViewport &&
                               !r.wasHandled() && !n &&
                               r.touches.length === r.changedTouches.length) {
                             n = !0, e.grapher.isDragging = !0,
                             e.updateMouse(r);
                             var a = s.mathToPixels.mapPoint(f(0, 0)),
                                 l = e.grapher.scaleAxis;
                             'x' !== l && 'both' !== l ||
                                 (i = e.mousePt.x > a.x),
                                 'y' !== l && 'both' !== l ||
                                 (o = e.mousePt.y > a.y),
                                 e.controller.dispatch(
                                     {type: 'grapher/drag-start'}),
                                 t(document).on('dcg-tapmove.graphdrag', m),
                                 t(document).on(
                                     'dcg-tapstart.graphdrag dcg-tapend.graphdrag dcg-tapcancel.graphdrag',
                                     y)
                           }
                         }, l = function(t) {
                           if (!(t.length < 2)) {
                             var r = e.grapher.getProjection(),
                                 n = r.pixelCoordinates,
                                 i = r.mathToPixels.mapX(0),
                                 o = r.mathToPixels.mapY(0);
                             i = Math.min(Math.max(n.left, i), n.right),
                             o = Math.min(Math.max(n.top, o), n.bottom);
                             var s = t[1].x - t[0].x, a = t[1].y - t[0].y;
                             return Math.abs(t[0].x - i) < 40 &&
                                     Math.abs(t[1].x - i) < 40 &&
                                     Math.abs(a) > 3 * Math.abs(s) &&
                                     r.settings.showYAxis ?
                                 'y' :
                                 Math.abs(t[0].y - o) < 40 &&
                                     Math.abs(t[1].y - o) < 40 &&
                                     Math.abs(s) > 3 * Math.abs(a) &&
                                     r.settings.showXAxis ?
                                 'x' :
                                 'both'
                           }
                         }, c = function(t) {
                           return e.grapher.scaleAxis ||
                                      (e.grapher.scaleAxis = l(t)),
                                  e.grapher.scaleAxis
                         }, u = function() {
                           e.grapher.scaleAxis &&
                               (e.grapher.scaleAxis = void 0,
                                e.grapher.redrawAllLayers(), e.updateCursor())
                         }, p = function() {
                           e.isScalingEnabled = !1, e.preventScrollZoom = !0,
                           u()
                         }, g = function(e) {
                           return e.altKey || e.ctrlKey || e.metaKey
                         }, m = function(t) {
                           if (n &&
                               !e.getProjection()
                                    .settings.config.lockViewport &&
                               e.grapher && e.grapher.clickableObjectsLayer &&
                               !e.grapher.clickableObjectsLayer
                                    .isAnObjectPressed()) {
                             var s = h(t.touches, e.$.offset());
                             if (2 === r.length && 2 === s.length)
                               c(s), e.applyScaleTouchChanges(r, s);
                             else if (1 === r.length && e.isScalingEnabled) {
                               e.updateMouse(t);
                               var a, l, d = e.grapher.scaleAxis,
                                         p = e.getProjection(),
                                         g = p.mathToPixels.mapPoint(f(0, 0)),
                                         m = i ? 1 : -1, y = o ? 1 : -1;
                               if ('x' !== d && 'both' !== d ||
                                       (a = e.mousePt.x > g.x + 5 * m),
                                   'y' !== d && 'both' !== d ||
                                       (l = e.mousePt.y > g.y + 5 * y),
                                   'x' === d && i !== a)
                                 return;
                               if ('y' === d && o !== l) return;
                               if ('both' === d && i !== a && o !== l) return;
                               e.applyScaleTouchChanges(r, s)
                             } else
                               u();
                             1 === r.length && e.applyPanTouchChanges(r, s),
                                 e.controller.dispatch(
                                     {type: 'grapher/drag-move'}),
                                 r = s
                           }
                         }, y = function(i) {
                           n &&
                               (e.cancelAnimation(),
                                r = h(i.touches, e.$.offset()),
                                0 === i.touches.length &&
                                    (n = !1, e.grapher.isDragging = !1,
                                     t(document).off('.graphdrag'),
                                     e.grapher
                                         .debounceUserRequestedViewportChange(),
                                     e.controller.dispatch(
                                         {type: 'grapher/drag-end'})),
                                (0 === i.touches.length ||
                                 1 === i.touches.length &&
                                     !e.isScalingEnabled) &&
                                    u())
                         };
                         this.$.on('dcg-tapstart', a),
                             this.$.on(
                                 'dblclick', this.handleDoubleClick.bind(this)),
                             t(window).on(
                                 'keydown.viewportcontroller-' + this.__id,
                                 function(e) {
                                   this.getProjection()
                                           .settings.config.lockViewport ||
                                       (d.lookup(e) !== d.SHIFT || g(e) ?
                                            p() :
                                            (this.isScalingEnabled = !0,
                                             this.grapher.scaleAxis ||
                                                 this.updateScaleAxis()))
                                 }.bind(this)),
                             t(window).on(
                                 'keyup.viewportcontroller-' + this.__id +
                                     ' blur.viewportcontroller-' + this.__id,
                                 p)
                       }, e.zoom = function(e) {
                         var t = this.getProjection().pixelCoordinates;
                         if ('in' === e)
                           this.animateTransformation(o.scaleAtPoint(g(t), 2));
                         else if ('out' === e)
                           this.animateTransformation(o.scaleAtPoint(g(t), .5));
                         else if ('default' === e) {
                           var r = this.getDefaultViewport();
                           this.animateTransformation(
                               this.getCustomZoomTransformation(r))
                         } else if ('square' === e) {
                           var i = this.getSquareViewport();
                           this.animateTransformation(
                               this.getCustomZoomTransformation(i))
                         }
                         n.alert(this.t('Graph zoom __action__', {action: e}))
                       }, e.zoomCustom = function(e) {
                         this.animateTransformation(
                             this.getCustomZoomTransformation(e)),
                             n.alert(this.t('Graph viewport updated.'))
                       }, e.getCustomZoomTransformation = function(e) {
                         var t = this.getProjection().viewport,
                             r = this.getProjection().pixelCoordinates,
                             n = this.getProjection().mathCoordinates,
                             i = (t.xmax - t.xmin) / (e.xmax - e.xmin),
                             s = (t.ymax - t.ymin) / (e.ymax - e.ymin),
                             a =
                                 function() {
                               return {
                                 x: 0, y: 0
                               }
                             },
                             l = o.fromRects(n, r),
                             c = new o.translate(l.mapPoint(a()), a()),
                             u = new o.scale(i, s),
                             d = o.fromRects(
                                 {
                                   left: e.xmin,
                                   right: e.xmax,
                                   bottom: e.ymin,
                                   top: e.ymax
                                 },
                                 r);
                         return new o.translate(a(), d.mapPoint(a()))
                             .compose(u.compose(c))
                       }, e.isZoomRestored = function() {
                         var e = this.getProjection(), t = e.viewport,
                             r = this.getDefaultViewport();
                         return e.settings.squareAxes &&
                             Math.abs((t.xmin - r.xmin) / t.xmin) < .05 &&
                             Math.abs((t.xmax - r.xmax) / t.xmax) < .05 &&
                             Math.abs((t.ymin - r.ymin) / t.ymin) < .05 &&
                             Math.abs((t.ymax - r.ymax) / t.ymax) < .05
                       }, e.getViewportForScreen = function(e, t, r) {
                         return r ? 'y' ==
                                     this.getProjection()
                                         .settings.lastChangedAxis ?
                                    e.squareXAxis(t) :
                                    e.squareYAxis(t) :
                                    e
                       }, e.getSquareViewport = function() {
                         var e = this.getProjection();
                         return this.getViewportForScreen(
                             e.viewport, e.screen, !0)
                       }, e.enforceSquareAxes = function() {
                         var e = this.getProjection();
                         e.settings.squareAxes &&
                             (e.viewport.isSquare(e.screen) ||
                              this.setViewport(this.getViewportForScreen(
                                  e.viewport, e.screen, !0)))
                       }
                     })
            });
          r('geometry/math/hypot', ['require', 'exports'], function(e, t) {
            'use strict';
            function r(e) {
              return e === 1 / 0 || e === -1 / 0
            }
            Object.defineProperty(t, '__esModule', {value: !0});
            var n = Math.hypot && Math.hypot(1 / 0, NaN) === 1 / 0;
            t.default = n ? Math.hypot : function(e, t) {
              if (r(e) || r(t)) return 1 / 0;
              if (isNaN(e) || isNaN(t)) return NaN;
              if (0 === e && 0 === t) return 0;
              if (Math.abs(e) > Math.abs(t)) {
                var n = t / e;
                return Math.abs(e) * Math.sqrt(n * n + 1)
              }
              var n = e / t;
              return Math.abs(t) * Math.sqrt(n * n + 1)
            }
          });
          r('lib/priority-queue', ['require', 'exports'], function(e, t) {
            'use strict';
            Object.defineProperty(t, '__esModule', {value: !0});
            var r = function() {
              function e(e) {
                this.comparator = e, this._data = []
              }
              return e.prototype.size = function() {
                return this._data.length
              }, e.prototype.queue = function(e) {
                var t = this._data.length;
                for (this._data.push(e); t > 0;) {
                  var r = t - 1 >>> 1;
                  if (!(this.comparator(this._data[t], this._data[r]) < 0))
                    break;
                  var n = this._data[r];
                  this._data[r] = this._data[t], this._data[t] = n, t = r
                }
              }, e.prototype.dequeue = function() {
                var e = this._data[0], t = this._data.pop();
                if (this._data.length > 0 && void 0 !== t) {
                  this._data[0] = t;
                  for (var r = 0, n = this._data.length - 1;;) {
                    var i = 1 + (r << 1), o = i + 1, s = r;
                    if (i <= n &&
                            this.comparator(this._data[i], this._data[s]) < 0 &&
                            (s = i),
                        o <= n &&
                            this.comparator(this._data[o], this._data[s]) < 0 &&
                            (s = o),
                        s === r)
                      break;
                    var a = this._data[s];
                    this._data[s] = this._data[r], this._data[r] = a, r = s
                  }
                }
                return e
              }, e.prototype.peek = function() {
                return this._data[0]
              }, e.prototype.clear = function() {
                this._data.length = 0
              }, e
            }();
            t.default = r
          });
          r('geometry/math/polygon-area-support',
            ['require', 'exports', 'lib/priority-queue', 'bugsnag'],
            function(e, t, r, n) {
              'use strict';
              function i(e, t) {
                var r = e.pt2.y - e.pt1.y, n = e.pt1.x - e.pt2.x,
                    i = t.pt2.y - t.pt1.y, o = t.pt1.x - t.pt2.x,
                    s = r * e.pt1.x + n * e.pt1.y,
                    a = i * t.pt1.x + o * t.pt1.y, l = r * o - i * n;
                if (0 !== l) return (r * a - i * s) / l
              }
              function o(e, t, r) {
                if (r.scanlineX < t.scanlineX &&
                        n.notify(
                            'PolygonArea: rightEdge should not be left of leftEdge!',
                            {
                              metaData:
                                  {scanlineY: e, leftEdge: t, rightEdge: r}
                            }),
                    !(r.xSlope >= t.xSlope)) {
                  if (t.scanlineX === r.scanlineX) return e;
                  var o = t.pt2.y > t.pt1.y ? t.pt2 : t.pt1,
                      s = r.pt2.y > r.pt1.y ? r.pt2 : r.pt1, l = o.y;
                  if (s.y < o.y) {
                    l = s.y;
                    if (a(l, t) < s.x) return
                  } else if (o.y < s.y) {
                    var c = a(l, r);
                    if (o.x < c) return
                  } else if (o.x < s.x)
                    return;
                  var u = i(t, r);
                  if (void 0 !== u) return Math.max(Math.min(u, l), e)
                }
              }
              function s(e, t, r, n) {
                if (r && n) {
                  if (r.id < n.id) {
                    if (r.skipIntersectionWith[n.id]) return
                  } else if (n.skipIntersectionWith[r.id])
                    return;
                  var i = o(e, r, n);
                  void 0 !== i &&
                      (r.id < n.id ? r.skipIntersectionWith[n.id] = !0 :
                                     n.skipIntersectionWith[r.id] = !0,
                       t.queue({type: 'x', y: i, edge1: r, edge2: n}))
                }
              }
              function a(e, t) {
                var r = t.pt1.x, n = t.pt2.x, i = t.pt1.y, o = t.pt2.y;
                if (i === e) return r;
                if (o === e) return n;
                var s = (e - i) / (o - i), a = (1 - s) * r + s * n;
                if (r < n) {
                  if (a <= r) return r;
                  if (n <= a) return n
                } else {
                  if (a <= n) return n;
                  if (r <= a) return r
                }
                return a
              }
              function l(e) {
                for (var t = 0, r = 0, n = !1, i = 0, o = e; i < o.length;
                     i++) {
                  var s = o[i].scanlineX;
                  n ? (n = !1, t += s - r) : (n = !0, r = s)
                }
                return t
              }
              function c(e) {
                for (var t = 0, r = 0, n = !1, i = 0, o = 0, s = e;
                     o < s.length; o++) {
                  var a = s[o], l = a.scanlineX;
                  a.isClockwise ? i += 1 : i -= 1,
                      0 === i || n ? 0 === i && n && (n = !1, t += l - r) :
                                     (n = !0, r = l)
                }
                return t
              }
              function u(e, t) {
                for (var r = 0, i = 0, o = !1, s = -1 / 0, l = 0, c = t;
                     l < c.length; l++) {
                  var u = c[l], d = a(e, u);
                  d < s ? (d - s < -1e-4 &&
                               n.notify('PolygonArea: scanlineX reversed!', {
                                 metaData: {
                                   scanlineY: e,
                                   edge: u,
                                   minScanlineX: s,
                                   scanlineX: d
                                 }
                               }),
                           d = s) :
                          s = d,
                          u.scanlineX = d,
                          o ? (o = !1, r += d - i) : (o = !0, i = d)
                }
                return r
              }
              function d(e, t) {
                for (var r = 0, i = 0, o = !1, s = 0, l = -1 / 0, c = 0, u = t;
                     c < u.length; c++) {
                  var d = u[c], p = a(e, d);
                  p < l ? (p - l < -1e-4 &&
                               n.notify('PolygonArea: scanlineX reversed!', {
                                 metaData: {
                                   scanlineY: e,
                                   edge: d,
                                   minScanlineX: l,
                                   scanlineX: p
                                 }
                               }),
                           p = l) :
                          l = p,
                          d.scanlineX = p, d.isClockwise ? s += 1 : s -= 1,
                          0 === s || o ? 0 === s && o && (o = !1, r += p - i) :
                                         (o = !0, i = p)
                }
                return r
              }
              function p(e) {
                for (var t = 1, n = [], i = new r.default(function(e, t) {
                       return e.y - t.y
                     }),
                         o = e.length - 1;
                     o >= 1; o--) {
                  var s = e[o], a = e[o - 1], l = {
                    id: t++,
                    pt1: s,
                    pt2: a,
                    scanlineX: 0,
                    xSlope: 1 / 0,
                    isClockwise: a.y > s.y,
                    skipIntersectionWith: {}
                  };
                  a.y > s.y ? (i.queue({type: '+', y: s.y, edge: l}),
                               i.queue({type: '-', y: a.y, edge: l}),
                               l.xSlope = (a.x - s.x) / (a.y - s.y),
                               l.scanlineX = s.x) :
                              s.y > a.y &&
                          (i.queue({type: '+', y: a.y, edge: l}),
                           i.queue({type: '-', y: s.y, edge: l}),
                           l.xSlope = (s.x - a.x) / (s.y - a.y),
                           l.scanlineX = a.x)
                }
                return {
                  activeEdges: n, events: i
                }
              }
              function h(e, t, r) {
                'x' === e.type     ? m(e, t, r) :
                    '+' === e.type ? f(e, t, r) :
                                     '-' === e.type && g(e, t, r)
              }
              function f(e, t, r) {
                for (var n = e.edge, i = e.y, o = n.xSlope, a = n.scanlineX,
                         l = 0;
                     l < r.length; l++) {
                  var c = r[l];
                  if (a < c.scanlineX) break;
                  if (a === c.scanlineX && o <= c.xSlope) break
                }
                r.splice(l, 0, n), s(i, t, r[l - 1], n), s(i, t, n, r[l + 1])
              }
              function g(e, t, r) {
                var n = e.edge, i = e.y, o = r.indexOf(n);
                r.splice(o, 1), s(i, t, r[o - 1], r[o])
              }
              function m(e, t, r) {
                var n = e.edge1, i = e.edge2, o = e.y, a = r.indexOf(n),
                    l = a + 1;
                -1 === a || r[l] !== i ?
                    n.id < i.id ? delete n.skipIntersectionWith[i.id] :
                                  delete i.skipIntersectionWith[n.id] :
                    (r[a] = i, r[l] = n, s(o, t, r[a - 1], i),
                     s(o, t, n, r[l + 1]))
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t._unstableYIntersectEdges = i, t._stableYIntersectEdges = o,
                  t.checkForEdgeIntersection = s, t.computeScanlineX = a,
                  t.measureDownwardEvenOddLength = l,
                  t.measureDownwardNonZeroLength = c,
                  t.measureUpwardEvenOddLength = u,
                  t.measureUpwardNonZeroLength = d,
                  t.setupEventQueueAndActiveEdges = p, t.processEvent = h
            });
          r('geometry/math/polygon',
            [
              'require', 'exports', './hypot', 'bugsnag',
              './polygon-area-support'
            ],
            function(e, t, r, n, i) {
              'use strict';
              function o(e, t) {
                if (!e) return !1;
                for (var r = t.x, n = t.y, i = !1, o = e.length - 1; o >= 3;
                     o -= 2) {
                  var s = e[o - 3], a = e[o - 2], l = e[o - 1], c = e[o];
                  a > n != c > n && r < (l - s) * (n - a) / (c - a) + s &&
                      (i = !i)
                }
                return i
              }
              function s(e, t) {
                if (!e) return !1;
                for (var r = t.x, n = t.y, i = 0, o = e.length - 1; o >= 3;
                     o -= 2) {
                  var s = e[o - 3], a = e[o - 2], l = e[o - 1], c = e[o];
                  a > n != c > n && r < (l - s) * (n - a) / (c - a) + s &&
                      (a > c ? i += 1 : a < c && (i -= 1))
                }
                return 0 !== i
              }
              function a(e) {
                for (var t = 0, n = 0; n < e.length - 1; n++)
                  t += r.default(e[n].x - e[n + 1].x, e[n].y - e[n + 1].y);
                return t
              }
              function l(e) {
                for (var t = 0, r = 0; r < e.length - 1; r++)
                  t += e[r].x * e[r + 1].y - e[r].y * e[r + 1].x;
                return Math.abs(t) / 2
              }
              function c(e) {
                if (e.length < 4) return 0;
                if (e[0].x !== e[e.length - 1].x ||
                    e[0].y !== e[e.length - 1].y)
                  return 0;
                var t = i.setupEventQueueAndActiveEdges(e), r = t.events,
                    o = t.activeEdges, s = r.peek();
                if (!s) return 0;
                for (var a, l = 0, c = s.y, u = 0; a = r.dequeue();) {
                  var d = a.y;
                  d < c &&
                      n.notify('PolygonArea: scanlineY jumped up vertically', {
                        metaData: {points: e, scanlineY: d, lastScanlineY: c}
                      });
                  u += .5 * (d - c) * (i.measureUpwardEvenOddLength(d, o) + l),
                      i.processEvent(a, r, o),
                      c = d, l = i.measureDownwardEvenOddLength(o)
                }
                return u
              }
              function u(e) {
                if (e.length < 4) return 0;
                if (e[0].x !== e[e.length - 1].x ||
                    e[0].y !== e[e.length - 1].y)
                  return 0;
                var t = i.setupEventQueueAndActiveEdges(e), r = t.events,
                    o = t.activeEdges, s = r.peek();
                if (!s) return 0;
                for (var a, l = 0, c = s.y, u = 0; a = r.dequeue();) {
                  var d = a.y;
                  d < c &&
                      n.notify('PolygonArea: scanlineY jumped up vertically', {
                        metaData: {points: e, scanlineY: d, lastScanlineY: c}
                      });
                  u += .5 * (d - c) * (i.measureUpwardNonZeroLength(d, o) + l),
                      i.processEvent(a, r, o),
                      c = d, l = i.measureDownwardNonZeroLength(o)
                }
                return u
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.pointIsWithinEvenOddFill = o,
                  t.pointIsWithinNonZeroFill = s, t.calculatePerimeter = a,
                  t.calculateSimpleArea = l, t.calculatePaintedEvenOddArea = c,
                  t.calculatePaintedNonZeroArea = u
            });
          r('graphing/poicontroller',
            [
              'require', 'jquery', 'core/math/distance', 'lib/rounding',
              'core/types/graphmode', 'lib/conditional_blur', 'keys',
              'lib/aria', 'core/lib/label', 'expressions/colors',
              'graphing-calc/models/image', 'graphing-calc/models/expression',
              '../geometry/math/polygon'
            ],
            function(e) {
              'use strict';
              function t(e, t) {
                this.manager = e, this.controller = e.controller,
                this.graphSettings = t, this.$ = this.manager.$,
                this.__id = f++,
                this.graphSettings.config.graphpaper &&
                    !this.graphSettings.config.disableMouseInteractions &&
                    (this.addTouchEventHandlers(), this.addHoverEventHandler(),
                     this.addKeydownEventHandler(),
                     this.addManualUnhoverListener())
              }
              var r = e('jquery'), n = e('core/math/distance'),
                  i = e('lib/rounding'), o = e('core/types/graphmode'),
                  s = e('lib/conditional_blur').default, a = e('keys'),
                  l = e('lib/aria'), c = e('core/lib/label'),
                  u = e('expressions/colors').getColorName,
                  d = e('graphing-calc/models/image'),
                  p = e('graphing-calc/models/expression'),
                  h = e('../geometry/math/polygon'), f = 0;
              return t.prototype.getExpressionModel = function(e) {
                return this.controller.getItemModel(e)
              }, t.prototype.remove = function() {
                this.removeAllGlobalMouseListeners(),
                    this.removeManualUnhoverListener()
              }, t.prototype.addGlobalMouseListener = function(e, t) {
                for (var n = e.split(' '), i = 0; i < n.length; i++)
                  r(document).on(n[i] + '.dcg-poiController-' + this.__id, t)
              }, t.prototype.removeAllGlobalMouseListeners = function() {
                r(document).off('.dcg-poiController-' + this.__id)
              }, t.prototype.getToleranceByDevice = function(e) {
                return 'touch' === e ? 20 : 10
              }, t.prototype.addHoverEventHandler = function() {
                this.$.on('dcg-tapmove', function(e) {
                  if ('touch' !== e.device) {
                    var t,
                        n = r(document.elementFromPoint(e.clientX, e.clientY))
                                .closest('.dcg-grapher')
                                .length,
                        i = this.manager.poiLabelsLayer,
                        o = this.getMouseRelativeToGrapher(e),
                        s = this.getToleranceByDevice(e.device);
                    n && (t = this.getFeatureUnderPoint(o, s));
                    var a;
                    t && 'movable-point' === t.type &&
                        (a = t.poi.getMovablePoint().id);
                    var l;
                    t && t.isClickable &&
                        (this.manager.movablePointsLayer.isMovingPoint() ||
                         this.manager.traceLayer.isTracing() || (l = t.model));
                    this.manager.clickableObjectsLayer.setHoveredId(l && l.id);
                    var c;
                    t && 'poi' === t.type &&
                        (t.poi.isAttachedToPlottedPoint() &&
                             !t.poi.hasInteractiveLabel() ||
                         (c = t.poi)),
                        c !== i.getHoveredPOI() &&
                        (this.controller.isTraceEnabled() ?
                             i.setHoveredPOI(c) :
                             i.setHoveredPOI(void 0),
                         this.manager.redrawAllLayers()),
                        this.manager.movablePointsLayer.setHoveredPointId(a)
                  }
                }.bind(this))
              }, t.prototype.addManualUnhoverListener = function() {
                var e = function() {
                  var e = this.manager;
                  e.poiLabelsLayer.setHoveredPOI(void 0),
                      e.clickableObjectsLayer.setHoveredId(void 0),
                      e.redrawAllLayers()
                }.bind(this);
                r(window).on('blur.dcg-poiController-' + this.__id, e),
                    this.$.on('mouseleave', e)
              }, t.prototype.removeManualUnhoverListener = function() {
                r(window).off('.dcg-poiController-' + this.__id)
              }, t.prototype.addTouchEventHandlers = function() {
                this.$.on('dblclick', function(e) {
                  var t = this.getMouseRelativeToGrapher(e),
                      r = this.getToleranceByDevice(e.device);
                  this.getFeatureUnderPoint(t, r) &&
                      (e.preventDefault(), e.handle())
                }.bind(this)), this.$.on('touchstart', function(e) {
                  if (!this.graphSettings.config.lockViewport)
                    return void e.preventDefault();
                  var t = this.getMouseRelativeToGrapher(e.originalEvent),
                      r = this.getToleranceByDevice(e.device),
                      n = this.getFeatureUnderPoint(t, r);
                  n && ('image' !== n.type || n.model.selected) &&
                      ('sketch-branch' === n.type &&
                           this.graphSettings.config.onlyTraceSelected &&
                           !n.sketch.selected ||
                       e.preventDefault())
                }.bind(this)), this.$.on('dcg-tapstart', function(e) {
                  var t = this.getMouseRelativeToGrapher(e),
                      r = this.getToleranceByDevice(e.device),
                      n = this.getFeatureUnderPoint(t, r);
                  if (n && n.isClickable ?
                          this.manager.clickableObjectsLayer.setPressedId(
                              n.model.id) :
                          this.manager.clickableObjectsLayer.setPressedId(
                              void 0),
                      n && 'editable-label' === n.type)
                    return void e.handle();
                  if (s(), n && 'movable-point' === n.type)
                    return this.controller.dispatch({
                      type: 'start-moving-point',
                      pointInfo: n.poi.getMovablePoint()
                    }),
                           this.startMovingPoint(n.poi), e.handle(),
                           void e.handle('do-not-clear-poi-labels');
                  if (this._togglePOIUnderPoint(t, r))
                    return e.handle(), void e.handle('do-not-clear-poi-labels');
                  if (n && 'sketch-branch' === n.type && !n.isClickable) {
                    if (!this.graphSettings.config.onlyTraceSelected) {
                      var i = !this.controller.isTraceEnabled(),
                          o = !this.controller.isListEnabled();
                      if (i && o) return;
                      if (this.controller.dispatch(
                              {type: 'set-selected-id', id: n.sketch.id}),
                          i)
                        return;
                      return this.startTracingBranch(n.branchInfo, t),
                             e.handle(),
                             void e.handle('do-not-clear-poi-labels')
                    }
                    if (n.sketch.selected)
                      return this.startTracingBranch(n.branchInfo, t),
                             e.handle(),
                             void e.handle('do-not-clear-poi-labels')
                  }
                  n && 'image' === n.type ||
                      this.controller.dispatch({type: 'set-none-selected'});
                  var a = this;
                  this.addGlobalMouseListener(
                      'dcg-tapmove',
                      function(e) {
                        this.manager.clickableObjectsLayer.isAnObjectPressed() ?
                            t = this.getMouseRelativeToGrapher(e) :
                            a.removeAllGlobalMouseListeners()
                      }.bind(this)),
                      this.addGlobalMouseListener(
                          'dcg-tapend dcg-tapcancel', function(e) {
                            a.removeAllGlobalMouseListeners();
                            var n = this.manager.clickableObjectsLayer
                                        .getPressedId();
                            this.manager.clickableObjectsLayer.setPressedId(
                                void 0);
                            var i = this.getFeatureUnderPoint(t, r);
                            return i && i.isClickable ?
                                void (
                                    i.model.id === n &&
                                    this.controller.dispatch({
                                      type: 'clickable-item-clicked',
                                      id: i.model.id
                                    })) :
                                i && 'sketch-branch' === i.type &&
                                    !i.sketch.selected ?
                                void this.controller.dispatch(
                                    {type: 'set-selected-id', id: i.model.id}) :
                                i && 'image' === i.type ?
                                void this.controller.dispatch(
                                    {type: 'set-selected-id', id: i.model.id}) :
                                void 0
                          }.bind(this))
                }.bind(this))
              }, t.prototype.addKeydownEventHandler = function() {
                this.$.on('keydown', function(e) {
                  var t = this.manager.movablePointsLayer.getFocusedPoint();
                  if (t) {
                    var r = a.lookup(e), n = a.lookupChar(e);
                    'Up' === r || 'Down' === r || 'Left' === r ||
                            'Right' === r ?
                        (e.stopPropagation(), e.preventDefault(),
                         this.movePointFromKeyboard(t, e)) :
                        'X' !== n && 'Y' !== n && 'L' !== n && 'C' !== n ||
                            this.speakPoint(t, n)
                  }
                }.bind(this))
              }, t.prototype.getMouseRelativeToGrapher = function(e) {
                var t = this.$[0].getBoundingClientRect(),
                    r = e.touches ? e.touches[0] : e;
                return {
                  x: r.clientX - t.left, y: r.clientY - t.top
                }
              }, t.prototype._getClosestPoint = function(e, t, r) {
                for (var i = r, o = null, s = this.manager.getProjection(),
                         a = 0;
                     a < e.length; a++) {
                  var l = e[a], c = s.map_pt(l),
                      u = n.hypot(c.x - t.x, c.y - t.y);
                  u < i && (i = u, o = l)
                }
                return o
              }, t.prototype.getFeatureUnderPoint = function(e, r) {
                var n = this.manager.poiLabelsLayer,
                    i = this.manager.getProjection(), o = i.reverse_map_pt(e),
                    s = n.getEditableLabelUnderPoint(e);
                if (s) return {type: 'editable-label', model: s};
                for (var a, l = this.manager.__sketchOrder, c = {}, u = 1,
                            h = l.length - 1;
                     h >= 0; h--) {
                  var f = l[h], g = this.controller.getItemModel(f), m = u;
                  if (c[f] = m, g)
                    if ('expression' === g.type) {
                      var y = this.manager.getGraphSketch(f);
                      if (!y || !y.visible) continue;
                      var v = y.branches;
                      if (!v || !v.length) continue;
                      if (y.showHighlight && (m = -1 / 0, c[f] = m),
                          !a || a.stackingContext >= m)
                        for (var b = p.isClickableObject(g), x = 0;
                             x < v.length; x++) {
                          var w = t.calculateDistanceFromBranch(v[x], o, i, b);
                          if (w < r) {
                            var _ = !1;
                            a ? m < a.stackingContext ?
                                _ = !0 :
                                m === a.stackingContext && w < a.distance &&
                                        (_ = !0) :
                                _ = !0,
                                _ && (a = {
                                  type: 'sketch-branch',
                                  model: g,
                                  sketch: y,
                                  distance: w,
                                  stackingContext: m,
                                  branchInfo: {id: y.id, branch: x, sketch: y}
                                })
                          }
                        }
                    } else if ('image' === g.type) {
                      var E = this.manager.getGraphImage(f);
                      if (!E || !this.isImageUnderMouse(E, o, r)) continue;
                      E.foreground ? (u += 1, m = u, c[f] = m, u += 1) :
                                     (m = 1 / 0, c[f] = m),
                          (!a || a.stackingContext > m) && (a = {
                            type: 'image',
                            model: E,
                            distance: 0,
                            stackingContext: m
                          })
                    }
                }
                var S = [], M = [], I = [], k = a ? a.stackingContext : 1 / 0;
                this.manager.poiDotsLayer.getDrawnPOI().forEach(function(e) {
                  e.isBareLabel() ||
                      (e.isMovable() ? S.push(e) :
                           e.isAttachedToPlottedPoint() ?
                                       c[e.sketch.id] <= k && M.push(e) :
                                       I.push(e))
                });
                var C = this._getClosestPoint(S, e, r);
                if (C) return {type: 'movable-point', poi: C};
                var T = this._getClosestPoint(I, e, r);
                if (T) return {type: 'poi', poi: T};
                var L = this._getClosestPoint(M, e, r);
                if (L) {
                  var P = this.controller.getItemModel(L.sketch.id);
                  if (P && 'expression' === P.type) {
                    if (p.isClickableObject(P)) return {
                        type: 'poi', poi: L, isClickable: !0, model: P
                      }
                  }
                  return {
                    type: 'poi', poi: L
                  }
                }
                return a ? 'sketch-branch' === a.type ?
                           {
                             type: 'sketch-branch',
                             branchInfo: a.branchInfo,
                             sketch: a.sketch,
                             model: a.model,
                             isClickable: p.isClickableObject(a.model)
                           } :
                           {
                             type: 'image',
                             model: a.model,
                             isClickable: d.isClickableObject(a.model)
                           } :
                           void 0
              }, t.prototype._togglePOIUnderPoint = function(e, t) {
                if (this.controller.isTraceEnabled()) {
                  var r = this.getFeatureUnderPoint(e, t);
                  if (!r) return !1;
                  if (r.isClickable) return !1;
                  var n = r.poi;
                  return !!n &&
                      (!n.isBareLabel() &&
                       (this.manager.poiLabelsLayer.isOpenPOI(n) ?
                            (this.manager.poiLabelsLayer.closePOI(n),
                             this.manager.poiLabelsLayer.setHoveredPOI(
                                 void 0)) :
                            (this.manager.poiLabelsLayer.openPOI(n),
                             this.speakPoint(n)),
                        this.manager.redrawAllLayers(), !0))
                }
              }, t.prototype.isImageUnderMouse = function(e, t, r) {
                if (!e || !e.computed_x || !e.computed_y || !e.computed_width ||
                    !e.computed_height || e.hidden ||
                    this.controller.isItemSecret(e.id))
                  return !1;
                for (var n = 0; n < e.computed_x.length; n++) {
                  var i = e.computed_x[n], o = e.computed_y[n],
                      s = e.computed_radian_angle[n],
                      a = i + Math.cos(s) * (t.x - i) - Math.sin(s) * (t.y - o),
                      l = o + Math.sin(s) * (t.x - i) + Math.cos(s) * (t.y - o),
                      c = .5 * Math.abs(e.computed_width[n]),
                      u = .5 * Math.abs(e.computed_height[n]);
                  if (a > i - c && a < i + c && l > o - u && l < o + u)
                    return !0
                }
                return !1
              }, t.calculateDistanceFromBranch = function(e, r, n, i) {
                if (e && e.graphMode === o.POLYGONFILL && i) {
                  for (var s = e.segments, a = 0; a < s.length; a++)
                    if (h.pointIsWithinNonZeroFill(s[a], r)) return 0;
                  return 1 / 0
                }
                var l = t.getBranchesDistanceInfo(e, r, n, i);
                return l ? l.minDistance : 1 / 0
              }, t.getBranchesDistanceInfo = function(e, t, r, i) {
                var s = r.screen.width / (r.viewport.xmax - r.viewport.xmin),
                    a = r.screen.height / (r.viewport.ymax - r.viewport.ymin),
                    l = t.x, c = t.y, u = !1, d = !1;
                switch (e.graphMode) {
                  case o.PARAMETRIC:
                  case o.IMPLICIT:
                    if (!i) return null;
                    break;
                  case o.POLAR:
                    if (!i) return null;
                    d = !0;
                    break;
                  case o.Y:
                    break;
                  case o.X:
                    u = !0;
                    var p = l;
                    l = c, c = p, p = s, s = a, a = p;
                    break;
                  default:
                    return null
                }
                for (var h, f, g = 1 / 0, m = 1 / 0, y = 0;
                     y < e.segments.length; y++)
                  for (var v = e.segments[y], b = 0; b < v.length - 3; b += 2) {
                    var x = v[b], w = v[b + 1], _ = v[b + 2], E = v[b + 3];
                    if (d) {
                      var S = w, M = x;
                      x = S * Math.cos(M), w = S * Math.sin(M);
                      var I = E, k = _;
                      _ = I * Math.cos(k), E = I * Math.sin(k)
                    }
                    var C = n.closestPointOnSegment(
                            0, 0, (x - l) * s, (w - c) * a, (_ - l) * s,
                            (E - c) * a),
                        T = n.hypot(C[0], C[1]);
                    C[0] < 0 ? T < g && (g = T, h = C) : T < m && (m = T, f = C)
                  }
                var L = g < m ? h : f;
                if (!L) return null;
                var P = L[0] / s + l, A = L[1] / a + c;
                return {
                  closestPoint: {x: u ? A : P, y: u ? P : A},
                      minDistance: Math.min(g, m),
                      secondDistance: Math.max(g, m)
                }
              }, t.getBranchesTracePoint = function(e, r, n) {
                if (e && e.compiled && e.compiled.fn) {
                  var s = e.compiled.fn,
                      a = n.screen.width / (n.viewport.xmax - n.viewport.xmin),
                      l = n.screen.height / (n.viewport.ymax - n.viewport.ymin),
                      c = this.getBranchesDistanceInfo(e, r, n, !1);
                  if (!c) return null;
                  var u = c.minDistance / c.secondDistance;
                  u *= u;
                  var d = e.graphMode === o.Y ? 'x' : 'y',
                      p = c.closestPoint[d] * (1 - u) + r[d] * u,
                      h = 1 / (2 * a), f = 1 / (2 * l), g = s(p - h), m = s(p),
                      y = s(p + h), v = h * Math.min(1, f / Math.abs(g - m)),
                      b = h * Math.min(1, f / Math.abs(y - m));
                  isFinite(v) || (v = h), isFinite(b) || (b = h),
                      p = i.shortestDecimalBetween(p - v, p + b);
                  var x = t.fillHole(s, p, a, l, r.x, r.y);
                  return {
                    x: e.graphMode === o.Y ? p : x,
                        y: e.graphMode === o.Y ? x : p
                  }
                }
              }, t.prototype.startMovingPoint = function(e) {
                var t = !1;
                this.manager.movablePointsLayer.setPressedPointId(
                    e.isMovable() ? e.getMovablePoint().id : void 0);
                var r = null, n = function() {
                  if (r) {
                    t = !0;
                    var n = this.manager.getProjection(),
                        i = this.getMouseRelativeToGrapher(r);
                    r = null, this.controller.dispatch({
                      type: 'on-move-point',
                      pointInfo: e.getMovablePoint(),
                      screenPt: i,
                      projection: n
                    })
                  }
                }.bind(this);
                this.manager.registerMovablePointListener(n),
                    this.addGlobalMouseListener(
                        'dcg-tapmove',
                        function(e) {
                          r = e
                        }),
                    this.addGlobalMouseListener(
                        'dcg-tapend dcg-tapcancel', function(r) {
                          if (n(),
                              this.manager.deregisterMovablePointListener(),
                              this.removeAllGlobalMouseListeners(),
                              this.manager.movablePointsLayer.setPressedPointId(
                                  void 0),
                              this.controller.dispatch({
                                type: 'stop-moving-point',
                                pointInfo: e.getMovablePoint()
                              }),
                              !t) {
                            var i = this.manager.getProjection(),
                                o = this.getToleranceByDevice(r.device),
                                s = i.map_pt(e);
                            this._togglePOIUnderPoint(s, o)
                          }
                        }.bind(this))
              }, t.prototype.startTracingBranch = function(e, r) {
                this.manager.markLabelsDirty(), this.last_screen_pt = r;
                var n = this.manager.getProjection(), i = n.reverse_map_pt(r),
                    o = e.sketch, s = o.branches[e.branch],
                    a = t.getBranchesTracePoint(s, i, n);
                a && this.speakPoint(a),
                    this.manager.traceLayer.setTraceInfo(
                        {pt: a, branchInfo: e}),
                    this.manager.redrawAllLayers(),
                    this.addGlobalMouseListener(
                        'dcg-tapmove', this.handleTraceUpdate.bind(this)),
                    this.addGlobalMouseListener(
                        'dcg-tapend dcg-tapcancel',
                        this.stopTracingBranch.bind(this))
              }, t.prototype.stopTracingBranch = function(e) {
                this.manager.markLabelsDirty();
                var t = this.manager.poiLabelsLayer.getHoveredPOI();
                t && !this.manager.poiLabelsLayer.isOpenPOI(t) &&
                    (this.manager.poiLabelsLayer.openPOI(t), this.speakPoint(t),
                     this.manager.redrawAllLayers()),
                    this.last_screen_pt = null,
                    this.manager.traceLayer.setTraceInfo(void 0),
                    this.manager.redrawAllLayers(),
                    this.removeAllGlobalMouseListeners()
              }, t.prototype.handleTraceUpdate = function(e) {
                if (this.manager.traceLayer.traceInfo) {
                  var r, n = this.manager.getProjection();
                  if (e)
                    r = this.getMouseRelativeToGrapher(e),
                    this.last_screen_pt = r, this.manager.markLabelsDirty();
                  else {
                    if (!this.last_screen_pt) return;
                    r = this.last_screen_pt
                  }
                  var i = n.reverse_map_pt(r), o = 1 / 0, s = -1,
                      a = this.manager.traceLayer.traceInfo,
                      l = this.manager.graphSketches[a.branchInfo.sketch.id];
                  if (l) {
                    a.branchInfo.sketch = l;
                    for (var c = a.branchInfo.sketch.branches, u = 0;
                         u < c.length; u++) {
                      var d = t.calculateDistanceFromBranch(c[u], i, n, !1);
                      d < o && (s = u, o = d)
                    }
                    var p = c[s],
                        h = p ? t.getBranchesTracePoint(p, i, n) : null;
                    h && this.speakPoint(h),
                        this.manager.traceLayer.traceInfo.branchInfo.branch = s,
                        this.manager.traceLayer.traceInfo.pt = h,
                        this.manager.redrawAllLayers()
                  }
                }
              }, t.prototype.speakPoint = function(e) {
                var t = this.manager.getAudioTrace();
                t && e && t.queueCoordinates(e, void 0, !0)
              }, t.fillHole = function(e, t, r, i, o, s) {
                var a = e(t);
                if (isFinite(a)) return a;
                var l = t - 1e-11, c = t + 1e-11, u = e(l), d = e(c);
                if (isNaN(u) && isNaN(d)) return NaN;
                if (isNaN(u)) return d;
                if (isNaN(d)) return u;
                var p = (o - l) * r, h = (o - c) * r, f = (s - u) * i,
                    g = (s - d) * i;
                return n.hypot(p, f) < n.hypot(h, g) ? u : d
              }, t.prototype.hasNonlinearMoveStrategy = function(e) {
                if (!e || !e.sketch) return !1;
                var t = this.getExpressionModel(e.sketch.id);
                if (!t || !t.formula) return !1;
                var r = t.formula.move_strategy;
                return !(!r || !r[0]) && 'updateSliderNonlinear' === r[0].type
              }, t.prototype.movePointFromKeyboard = function(e, t) {
                if (e && t && 'movable-point' === e.type) {
                  var r, n = this.manager.getProjection(),
                         i = n.map_pt({x: e.x, y: e.y}), o = 0, s = 0,
                         l = t.shiftKey ? 10 : 2, c = t.shiftKey ? 'big' : '',
                         u = a.lookup(t);
                  if ('Up' === u       ? (r = 'y', s -= l, c += 'up') :
                          'Down' === u ? (r = 'y', s += l, c += 'down') :
                          'Left' === u ? (r = 'x', o -= l, c += 'down') :
                                         'Right' === u &&
                              (r = 'x', o += l, c += 'up'),
                      0 !== o || 0 !== s) {
                    var d, p = {x: i.x + o, y: i.y + s};
                    'x' === r || this.hasNonlinearMoveStrategy(e) ?
                        d = [c, ''] :
                        'y' === r && (d = ['', c]),
                        this.controller.dispatch({
                          type: 'on-move-point',
                          pointInfo: e,
                          screenPt: p,
                          projection: n,
                          keyboardDirection: d
                        })
                  }
                }
              }, t.prototype.speakPoint = function(e, t) {
                if (e) {
                  if (this.manager.getAudioTrace()) {
                    var r = this.manager.getProjection();
                    if (r) {
                      var n = r.viewport;
                      switch (t) {
                        case 'X':
                          l.alert(
                              'X: ' + c.value(e.x, n.xmax - n.xmin).ariaString);
                          break;
                        case 'Y':
                          l.alert(
                              'Y: ' + c.value(e.y, n.ymax - n.ymin).ariaString);
                          break;
                        case 'L':
                          l.alert(
                              e.ariaLabel || this.controller.t('Graph point'));
                          break;
                        case 'C':
                          l.alert(u(this.controller, e.sketch.color))
                      }
                    }
                  }
                }
              }, t
            });
          r('vendor/canvas2svg', [], function() {
            'use strict';
            function e(e, t) {
              var r, n = Object.keys(t);
              for (r = 0; r < n.length; r++)
                e = e.replace(new RegExp('\\{' + n[r] + '\\}', 'gi'), t[n[r]]);
              return e
            }
            function t(e) {
              var t, r, n;
              if (!e)
                throw new Error(
                    'cannot create a random attribute name for an undefined object');
              t = 'ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz', r = '';
              do {
                for (r = '', n = 0; n < 12; n++)
                  r += t[Math.floor(Math.random() * t.length)]
              } while (e[r]);
              return r
            }
            function r(e) {
              var t = {
                left: 'start',
                right: 'end',
                center: 'middle',
                start: 'start',
                end: 'end'
              };
              return t[e] || t.start
            }
            var n, i, o, s, a;
            a =
                function(e, t) {
              var r, n, i, o = {};
              for (e = e.split(','), t = t || 10, r = 0; r < e.length; r += 2)
                n = '&' + e[r + 1] + ';', i = parseInt(e[r], t),
                o[n] = '&#' + i + ';';
              return o['\\xa0'] = '&#160;', o
            }('50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,t9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro',
                32),
            n = {
              strokeStyle: {
                svgAttr: 'stroke',
                canvas: '#000000',
                svg: 'none',
                apply: 'stroke'
              },
              fillStyle: {
                svgAttr: 'fill',
                canvas: '#000000',
                svg: null,
                apply: 'fill'
              },
              lineCap: {
                svgAttr: 'stroke-linecap',
                canvas: 'butt',
                svg: 'butt',
                apply: 'stroke'
              },
              lineJoin: {
                svgAttr: 'stroke-linejoin',
                canvas: 'miter',
                svg: 'miter',
                apply: 'stroke'
              },
              miterLimit: {
                svgAttr: 'stroke-miterlimit',
                canvas: 10,
                svg: 4,
                apply: 'stroke'
              },
              lineWidth:
                  {svgAttr: 'stroke-width', canvas: 1, svg: 1, apply: 'stroke'},
              globalAlpha:
                  {svgAttr: 'opacity', canvas: 1, svg: 1, apply: 'fill stroke'},
              font: {canvas: '10px sans-serif'},
              shadowColor: {canvas: '#000000'},
              shadowOffsetX: {canvas: 0},
              shadowOffsetY: {canvas: 0},
              shadowBlur: {canvas: 0},
              textAlign: {canvas: 'start'},
              textBaseline: {canvas: 'alphabetic'},
              lineDash: {
                svgAttr: 'stroke-dasharray',
                canvas: [],
                svg: null,
                apply: 'stroke'
              }
            },
            o = function(e, t) {
              this.__root = e, this.__ctx = t
            }, o.prototype.addColorStop = function(t, r) {
              var n, i, o = this.__ctx.__createElement('stop');
              o.setAttribute('offset', t),
                  -1 !== r.indexOf('rgba') ?
                  (n = /rgba\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d?\.?\d*)\s*\)/gi,
                   i = n.exec(r),
                   o.setAttribute(
                       'stop-color',
                       e('rgb({r},{g},{b})', {r: i[1], g: i[2], b: i[3]})),
                   o.setAttribute('stop-opacity', i[4])) :
                  o.setAttribute('stop-color', r),
                  this.__root.appendChild(o)
            }, s = function(e, t) {
              this.__root = e, this.__ctx = t
            }, i = function(e) {
              var t, r = {width: 500, height: 500, enableMirroring: !1};
              if (arguments.length > 1 ?
                      (t = r, t.width = arguments[0], t.height = arguments[1]) :
                      t = e || r,
                  !(this instanceof i))
                return new i(t);
              this._randomPostfix = '-' +
                  function() {
                    return 'xxxxxxxx'.replace(/x/g, function(e) {
                      return (16 * Math.random() | 0).toString(16)
                    })
                  }(),
              this._svgClassNames = [], this.width = t.width || r.width,
              this.height = t.height || r.height,
              this.enableMirroring = void 0 !== t.enableMirroring ?
                  t.enableMirroring :
                  r.enableMirroring,
              this.canvas = this, this.__document = t.document || document,
              t.ctx ? this.__ctx = t.ctx :
                      (this.__canvas = this.__document.createElement('canvas'),
                       this.__ctx = this.__canvas.getContext('2d')),
              this.__setDefaultStyles(),
              this.__stack = [this.__getStyleState()], this.__groupStack = [],
              this.__root = this.__document.createElementNS(
                  'http://www.w3.org/2000/svg', 'svg'),
              this.__root.setAttribute('version', 1.1),
              this.__root.setAttribute('xmlns', 'http://www.w3.org/2000/svg'),
              this.__root.setAttributeNS(
                  'http://www.w3.org/2000/xmlns/', 'xmlns:xlink',
                  'http://www.w3.org/1999/xlink'),
              this.__root.setAttribute('width', this.width),
              this.__root.setAttribute('height', this.height), this.__ids = {},
              this.__defs = this.__document.createElementNS(
                  'http://www.w3.org/2000/svg', 'defs'),
              this.__root.appendChild(this.__defs),
              this.__currentElement = this.__document.createElementNS(
                  'http://www.w3.org/2000/svg', 'g'),
              this.__root.appendChild(this.__currentElement)
            }, i.prototype.__createElement = function(e, t, r) {
              void 0 === t && (t = {});
              var n, i,
                  o = this.__document.createElementNS(
                      'http://www.w3.org/2000/svg', e),
                  s = Object.keys(t);
              for (r &&
                       (o.setAttribute('fill', 'none'),
                        o.setAttribute('stroke', 'none')),
                   n = 0;
                   n < s.length; n++)
                i = s[n], o.setAttribute(i, t[i]);
              var a = this._svgClassNames &&
                  this._svgClassNames[this._svgClassNames.length - 1];
              return a && o.setAttribute('class', a), o
            }, i.prototype.__setDefaultStyles = function() {
              var e, t, r = Object.keys(n);
              for (e = 0; e < r.length; e++) t = r[e], this[t] = n[t].canvas
            }, i.prototype.__applyStyleState = function(e) {
              var t, r, n = Object.keys(e);
              for (t = 0; t < n.length; t++) r = n[t], this[r] = e[r]
            }, i.prototype.__getStyleState = function() {
              var e, t, r = {}, i = Object.keys(n);
              for (e = 0; e < i.length; e++) t = i[e], r[t] = this[t];
              return r
            }, i.prototype.__applyStyleToCurrentElement = function(t) {
              var r = this.__currentElement, i = this.__currentElementsToStyle;
              i &&
                  (r.setAttribute(t, ''), r = i.element,
                   i.children.forEach(function(e) {
                     e.setAttribute(t, '')
                   }));
              var a, l, c, u, d, p, h = Object.keys(n);
              for (a = 0; a < h.length; a++)
                if (l = n[h[a]], c = this[h[a]], l.apply)
                  if (c instanceof s) {
                    if (c.__ctx)
                      for (; c.__ctx.__defs.childNodes.length;)
                        u = c.__ctx.__defs.childNodes[0].getAttribute('id'),
                        this.__ids[u] = u,
                        this.__defs.appendChild(c.__ctx.__defs.childNodes[0]);
                    r.setAttribute(
                        l.apply,
                        e('url(#{id})', {id: c.__root.getAttribute('id')}))
                  } else if (c instanceof o)
                    r.setAttribute(
                        l.apply,
                        e('url(#{id})', {id: c.__root.getAttribute('id')}));
                  else if (-1 !== l.apply.indexOf(t) && l.svg !== c)
                    if ('stroke' !== l.svgAttr && 'fill' !== l.svgAttr ||
                        -1 === c.indexOf('rgba')) {
                      var f = l.svgAttr;
                      if ('globalAlpha' === h[a] &&
                          (f = t + '-' + l.svgAttr, r.getAttribute(f)))
                        continue;
                      r.setAttribute(f, c)
                    } else {
                      d = /rgba\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d?\.?\d*)\s*\)/gi,
                      p = d.exec(c),
                      r.setAttribute(
                          l.svgAttr,
                          e('rgb({r},{g},{b})', {r: p[1], g: p[2], b: p[3]}));
                      var g = p[4], m = this.globalAlpha;
                      null != m && (g *= m),
                          r.setAttribute(l.svgAttr + '-opacity', g)
                    }
            }, i.prototype.__closestGroupOrSvg = function(e) {
              return e = e || this.__currentElement,
                     'g' === e.nodeName || 'svg' === e.nodeName ?
                         e :
                         this.__closestGroupOrSvg(e.parentNode)
            }, i.prototype.getSerializedSvg = function(e) {
              var t, r, n, i, o, s,
                  l = (new XMLSerializer).serializeToString(this.__root);
              if (s = /xmlns="http:\/\/www\.w3\.org\/2000\/svg".+xmlns="http:\/\/www\.w3\.org\/2000\/svg/gi,
                  s.test(l) &&
                      (l = l.replace(
                           'xmlns="http://www.w3.org/2000/svg',
                           'xmlns:xlink="http://www.w3.org/1999/xlink')),
                  e)
                for (t = Object.keys(a), r = 0; r < t.length; r++)
                  n = t[r], i = a[n], o = new RegExp(n, 'gi'),
                  o.test(l) && (l = l.replace(o, i));
              return l
            }, i.prototype.getSvg = function() {
              return this.__root
            }, i.prototype._dcgStartNamedGroup = function(e) {
              var t = this.__createElement('g');
              t.setAttribute('id', e + this._randomPostfix);
              var r = this.__closestGroupOrSvg();
              this.__groupStack.push(r), r.appendChild(t),
                  this.__currentElement = t
            }, i.prototype._dcgEndNamedGroup = function() {
              this.__currentElement = this.__groupStack.pop(),
              this.__currentElement ||
                  (this.__currentElement = this.__root.childNodes[1])
            }, i.prototype._dcgSaveClassName = function(e) {
              this._svgClassNames.push(e),
                  this.__currentElement &&
                  'path' === this.__currentElement.tagName &&
                  !this.__currentDefaultPath &&
                  (this.__currentElement.getAttribute('class') ||
                   this.__currentElement.setAttribute('class', e))
            }, i.prototype._dcgRestoreClassName = function() {
              this._svgClassNames.pop()
            }, i.prototype.save = function() {
              var e = this.__createElement('g'), t = this.__closestGroupOrSvg();
              this.__groupStack.push(t), t.appendChild(e),
                  this.__currentElement = e,
                  this.__stack.push(this.__getStyleState())
            }, i.prototype.restore = function() {
              this.__currentElement = this.__groupStack.pop(),
              this.__currentElementsToStyle = null,
              this.__currentElement ||
                  (this.__currentElement = this.__root.childNodes[1]);
              var e = this.__stack.pop();
              this.__applyStyleState(e)
            }, i.prototype.__addTransform = function(e) {
              var t = this.__closestGroupOrSvg();
              if (t.childNodes.length > 0) {
                'path' === this.__currentElement.nodeName &&
                    (this.__currentElementsToStyle ||
                         (this.__currentElementsToStyle =
                              {element: t, children: []}),
                     this.__currentElementsToStyle.children.push(
                         this.__currentElement),
                     this.__applyCurrentDefaultPath());
                var r = this.__createElement('g');
                t.appendChild(r), this.__currentElement = r
              }
              var n = this.__currentElement.getAttribute('transform');
              n ? n += ' ' : n = '', n += e,
                             this.__currentElement.setAttribute('transform', n)
            }, i.prototype.scale = function(t, r) {
              void 0 === r && (r = t),
                  this.__addTransform(e('scale({x},{y})', {x: t, y: r}))
            }, i.prototype.rotate = function(t) {
              var r = 180 * t / Math.PI;
              this.__addTransform(
                  e('rotate({angle},{cx},{cy})', {angle: r, cx: 0, cy: 0}))
            }, i.prototype.translate = function(t, r) {
              this.__addTransform(e('translate({x},{y})', {x: t, y: r}))
            }, i.prototype.transform = function(t, r, n, i, o, s) {
              this.__addTransform(
                  e('matrix({a},{b},{c},{d},{e},{f})',
                    {a: t, b: r, c: n, d: i, e: o, f: s}))
            }, i.prototype.beginPath = function() {
              var e, t;
              this.__currentDefaultPath = '', this.__currentPosition = {},
              e = this.__createElement('path', {}, !0),
              t = this.__closestGroupOrSvg(), t.appendChild(e),
              this.__currentElement = e
            }, i.prototype.__applyCurrentDefaultPath = function() {
              var e = this.__currentElement;
              'path' === e.nodeName ?
                  e.setAttribute('d', this.__currentDefaultPath) :
                  console.error(
                      'Attempted to apply path command to node', e.nodeName)
            }, i.prototype.__addPathCommand = function(e) {
              this.__currentDefaultPath += ' ', this.__currentDefaultPath += e
            }, i.prototype.moveTo = function(t, r) {
              'path' !== this.__currentElement.nodeName && this.beginPath(),
                  this.__currentPosition = {x: t, y: r},
                  this.__addPathCommand(e('M {x} {y}', {x: t, y: r}))
            }, i.prototype.closePath = function() {
              this.__currentDefaultPath && this.__addPathCommand('Z')
            }, i.prototype.lineTo = function(t, r) {
              this.__currentPosition = {x: t, y: r},
              this.__currentDefaultPath.indexOf('M') > -1 ?
                  this.__addPathCommand(e('L {x} {y}', {x: t, y: r})) :
                  this.__addPathCommand(e('M {x} {y}', {x: t, y: r}))
            }, i.prototype.bezierCurveTo = function(t, r, n, i, o, s) {
              this.__currentPosition = {x: o, y: s},
              this.__addPathCommand(
                  e('C {cp1x} {cp1y} {cp2x} {cp2y} {x} {y}',
                    {cp1x: t, cp1y: r, cp2x: n, cp2y: i, x: o, y: s}))
            }, i.prototype.quadraticCurveTo = function(t, r, n, i) {
              this.__currentPosition = {x: n, y: i},
              this.__addPathCommand(
                  e('Q {cpx} {cpy} {x} {y}', {cpx: t, cpy: r, x: n, y: i}))
            };
            var l = function(e) {
              var t = Math.sqrt(e[0] * e[0] + e[1] * e[1]);
              return [e[0] / t, e[1] / t]
            };
            return i.prototype.arcTo = function(e, t, r, n, i) {
              var o = this.__currentPosition && this.__currentPosition.x,
                  s = this.__currentPosition && this.__currentPosition.y;
              if (void 0 !== o && void 0 !== s) {
                if (i < 0)
                  throw new Error(
                      'IndexSizeError: The radius provided (' + i +
                      ') is negative.');
                if (o === e && s === t || e === r && t === n || 0 === i)
                  return void this.lineTo(e, t);
                var a = l([o - e, s - t]), c = l([r - e, n - t]);
                if (a[0] * c[1] == a[1] * c[0]) return void this.lineTo(e, t);
                var u = a[0] * c[0] + a[1] * c[1], d = Math.acos(Math.abs(u)),
                    p = l([a[0] + c[0], a[1] + c[1]]), h = i / Math.sin(d / 2),
                    f = e + h * p[0], g = t + h * p[1], m = [-a[1], a[0]],
                    y = [c[1], -c[0]], v = function(e) {
                      var t = e[0];
                      return e[1] >= 0 ? Math.acos(t) : -Math.acos(t)
                    }, b = v(m), x = v(y);
                this.lineTo(f + m[0] * i, g + m[1] * i), this.arc(f, g, i, b, x)
              }
            }, i.prototype.stroke = function() {
              'path' === this.__currentElement.nodeName &&
                  this.__currentElement.setAttribute(
                      'paint-order', 'fill stroke markers'),
                  this.__applyCurrentDefaultPath(),
                  this.__applyStyleToCurrentElement('stroke')
            }, i.prototype.fill = function() {
              'path' === this.__currentElement.nodeName &&
                  this.__currentElement.setAttribute(
                      'paint-order', 'stroke fill markers'),
                  this.__applyCurrentDefaultPath(),
                  this.__applyStyleToCurrentElement('fill')
            }, i.prototype.rect = function(e, t, r, n) {
              'path' !== this.__currentElement.nodeName && this.beginPath(),
                  this.moveTo(e, t), this.lineTo(e + r, t),
                  this.lineTo(e + r, t + n), this.lineTo(e, t + n),
                  this.lineTo(e, t), this.closePath()
            }, i.prototype.fillRect = function(e, t, r, n) {
              var i, o;
              i = this.__createElement(
                  'rect', {x: e, y: t, width: r, height: n}, !0),
              o = this.__closestGroupOrSvg(), o.appendChild(i),
              this.__currentElement = i,
              this.__applyStyleToCurrentElement('fill')
            }, i.prototype.strokeRect = function(e, t, r, n) {
              var i, o;
              i = this.__createElement(
                  'rect', {x: e, y: t, width: r, height: n}, !0),
              o = this.__closestGroupOrSvg(), o.appendChild(i),
              this.__currentElement = i,
              this.__applyStyleToCurrentElement('stroke')
            }, i.prototype.__clearCanvas = function() {
              for (var e = this.__closestGroupOrSvg(),
                       t = e.getAttribute('transform'),
                       r = this.__root.childNodes[1], n = r.childNodes,
                       i = n.length - 1;
                   i >= 0; i--)
                n[i] && r.removeChild(n[i]);
              this.__currentElement = r, this.__groupStack = [],
              t && this.__addTransform(t)
            }, i.prototype.clearRect = function(e, t, r, n) {
              if (0 === e && 0 === t && r === this.width && n === this.height)
                return void this.__clearCanvas();
              var i, o = this.__closestGroupOrSvg();
              i = this.__createElement(
                  'rect', {x: e, y: t, width: r, height: n, fill: '#FFFFFF'},
                  !0),
              o.appendChild(i)
            }, i.prototype.createLinearGradient = function(e, r, n, i) {
              var s = this.__createElement(
                  'linearGradient', {
                    id: t(this.__ids),
                    x1: e + 'px',
                    x2: n + 'px',
                    y1: r + 'px',
                    y2: i + 'px',
                    gradientUnits: 'userSpaceOnUse'
                  },
                  !1);
              return this.__defs.appendChild(s), new o(s, this)
            }, i.prototype.createRadialGradient = function(e, r, n, i, s, a) {
              var l = this.__createElement(
                  'radialGradient', {
                    id: t(this.__ids),
                    cx: i + 'px',
                    cy: s + 'px',
                    r: a + 'px',
                    fx: e + 'px',
                    fy: r + 'px',
                    gradientUnits: 'userSpaceOnUse'
                  },
                  !1);
              return this.__defs.appendChild(l), new o(l, this)
            }, i.prototype.__parseFont = function() {
              var e = /^\s*(?=(?:(?:[-a-z]+\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\1|\2|\3)\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\d]+(?:\%|in|[cem]m|ex|p[ctx]))(?:\s*\/\s*(normal|[.\d]+(?:\%|in|[cem]m|ex|p[ctx])))?\s*([-,\'\"\sa-z0-9]+?)\s*$/i,
                  t = e.exec(this.font), r = {
                    style: t[1] || 'normal',
                    size: t[4] || '10px',
                    family: t[6] || 'sans-serif',
                    weight: t[3] || 'normal',
                    decoration: t[2] || 'normal',
                    href: null
                  };
              return 'underline' === this.__fontUnderline &&
                         (r.decoration = 'underline'),
                     this.__fontHref && (r.href = this.__fontHref), r
            }, i.prototype.__wrapTextLink = function(e, t) {
              if (e.href) {
                var r = this.__createElement('a');
                return r.setAttributeNS(
                           'http://www.w3.org/1999/xlink', 'xlink:href',
                           e.href),
                       r.appendChild(t), r
              }
              return t
            }, i.prototype.__applyText = function(e, t, n, i) {
              var o = this.__parseFont(), s = this.__closestGroupOrSvg(),
                  a = this.__createElement(
                      'text', {
                        'font-family': o.family,
                        'font-size': o.size,
                        'font-style': o.style,
                        'font-weight': o.weight,
                        'text-decoration': o.decoration,
                        x: t,
                        y: n,
                        'text-anchor': r(this.textAlign)
                      },
                      !0);
              a.appendChild(this.__document.createTextNode(e)),
                  this.__currentElement = a,
                  this.__applyStyleToCurrentElement(i),
                  s.appendChild(this.__wrapTextLink(o, a))
            }, i.prototype.fillText = function(e, t, r) {
              this.__applyText(e, t, r, 'fill')
            }, i.prototype.strokeText = function(e, t, r) {
              this.__applyText(e, t, r, 'stroke')
            }, i.prototype.measureText = function(e) {
              return this.__ctx.font = this.font, this.__ctx.measureText(e)
            }, i.prototype.arc = function(t, r, n, i, o, s) {
              if (i !== o) {
                i %= 2 * Math.PI, o %= 2 * Math.PI,
                    i === o &&
                    (o = (o + 2 * Math.PI - .001 * (s ? -1 : 1)) %
                         (2 * Math.PI));
                var a = t + n * Math.cos(o), l = r + n * Math.sin(o),
                    c = t + n * Math.cos(i), u = r + n * Math.sin(i),
                    d = s ? 0 : 1, p = 0, h = o - i;
                h<0 && (h += 2 * Math.PI), p = s ? h > Math.PI ? 0 : 1 : h>Math
                        .PI ?
                    1 :
                    0,
                    this.lineTo(c, u),
                    this.__addPathCommand(e(
                        'A {rx} {ry} {xAxisRotation} {largeArcFlag} {sweepFlag} {endX} {endY}',
                        {
                          rx: n,
                          ry: n,
                          xAxisRotation: 0,
                          largeArcFlag: p,
                          sweepFlag: d,
                          endX: a,
                          endY: l
                        })),
                    this.__currentPosition = {
                      x: a,
                      y: l
                    }
              }
            }, i.prototype.clip = function() {
              var r = this.__closestGroupOrSvg(),
                  n = this.__createElement('clipPath'), i = t(this.__ids),
                  o = this.__createElement('g');
              this.__applyCurrentDefaultPath(),
                  r.removeChild(this.__currentElement), n.setAttribute('id', i),
                  n.appendChild(this.__currentElement),
                  this.__defs.appendChild(n),
                  r.setAttribute('clip-path', e('url(#{id})', {id: i})),
                  r.appendChild(o), this.__currentElement = o
            }, i.prototype.drawImage = function() {
              var e, t, r, n, o, s, a, l, c, u, d, p, h, f,
                  g = Array.prototype.slice.call(arguments), m = g[0], y = 0,
                  v = 0;
              if (3 === g.length)
                e = g[1], t = g[2], o = m.width, s = m.height, r = o, n = s;
              else if (5 === g.length)
                e = g[1], t = g[2], r = g[3], n = g[4], o = m.width,
                s = m.height;
              else {
                if (9 !== g.length)
                  throw new Error(
                      'Invalid number of arguments passed to drawImage: ' +
                      arguments.length);
                y = g[1], v = g[2], o = g[3], s = g[4], e = g[5], t = g[6],
                r = g[7], n = g[8]
              }
              a = this.__closestGroupOrSvg(), this.__currentElement;
              var b = 'translate(' + e + ', ' + t + ')';
              if (m instanceof i) {
                if (l = m.getSvg().cloneNode(!0),
                    l.childNodes && l.childNodes.length > 1) {
                  for (c = l.childNodes[0]; c.childNodes.length;)
                    f = c.childNodes[0].getAttribute('id'), this.__ids[f] = f,
                    this.__defs.appendChild(c.childNodes[0]);
                  if (u = l.childNodes[1]) {
                    var x, w = u.getAttribute('transform');
                    x = w ? w + ' ' + b : b, u.setAttribute('transform', x),
                    a.appendChild(u)
                  }
                }
              } else
                'CANVAS' !== m.nodeName && 'IMG' !== m.nodeName ||
                    (d = this.__createElement('image'),
                     d.setAttribute('width', r), d.setAttribute('height', n),
                     d.setAttribute('opacity', this.globalAlpha),
                     d.setAttribute('preserveAspectRatio', 'none'),
                     (y || v || o !== m.width || s !== m.height) &&
                         (p = this.__document.createElement('canvas'),
                          p.width = r, p.height = n, h = p.getContext('2d'),
                          h.drawImage(m, y, v, o, s, 0, 0, r, n), m = p),
                     d.setAttribute('transform', b),
                     d.setAttributeNS(
                         'http://www.w3.org/1999/xlink', 'xlink:href',
                         'CANVAS' === m.nodeName ? m.toDataURL() :
                                                   m.getAttribute('src')),
                     a.appendChild(d))
            }, i.prototype.createPattern = function(e, r) {
              var n,
                  o = this.__document.createElementNS(
                      'http://www.w3.org/2000/svg', 'pattern'),
                  a = t(this.__ids);
              return o.setAttribute('id', a), o.setAttribute('width', e.width),
                     o.setAttribute('height', e.height),
                     'CANVAS' === e.nodeName || 'IMG' === e.nodeName ?
                         (n = this.__document.createElementNS(
                              'http://www.w3.org/2000/svg', 'image'),
                          n.setAttribute('width', e.width),
                          n.setAttribute('height', e.height),
                          n.setAttributeNS(
                              'http://www.w3.org/1999/xlink', 'xlink:href',
                              'CANVAS' === e.nodeName ? e.toDataURL() :
                                                        e.getAttribute('src')),
                          o.appendChild(n), this.__defs.appendChild(o)) :
                         e instanceof i &&
                             (o.appendChild(e.__root.childNodes[1]),
                              this.__defs.appendChild(o)),
                     new s(o, this)
            }, i.prototype.setLineDash = function(e) {
              e&& e.length > 0 ? this.lineDash = e.join(',') :
                                 this.lineDash = null
            }, i.prototype.ellipse = function(t, r, n, i, o, s, a, l) {
              if (s !== a) {
                s %= 2 * Math.PI, a %= 2 * Math.PI,
                    s === a &&
                    (a = (a + 2 * Math.PI - .001 * (l ? -1 : 1)) %
                         (2 * Math.PI));
                var c = t + Math.cos(-o) * n * Math.cos(a) +
                    Math.sin(-o) * i * Math.sin(a),
                    u = r - Math.sin(-o) * n * Math.cos(a) +
                    Math.cos(-o) * i * Math.sin(a),
                    d = t + Math.cos(-o) * n * Math.cos(s) +
                    Math.sin(-o) * i * Math.sin(s),
                    p = r - Math.sin(-o) * n * Math.cos(s) +
                    Math.cos(-o) * i * Math.sin(s),
                    h = l ? 0 : 1, f = 0, g = a - s;
                g<0 && (g += 2 * Math.PI), f = l ? g > Math.PI ? 0 : 1 : g>Math
                        .PI ?
                    1 :
                    0,
                    this.lineTo(d, p),
                    this.__addPathCommand(e(
                        'A {rx} {ry} {xAxisRotation} {largeArcFlag} {sweepFlag} {endX} {endY}',
                        {
                          rx: n,
                          ry: i,
                          xAxisRotation: o * (180 / Math.PI),
                          largeArcFlag: f,
                          sweepFlag: h,
                          endX: c,
                          endY: u
                        })),
                    this.__currentPosition = {
                      x: c,
                      y: u
                    }
              }
            }, i.prototype.drawFocusRing = function() {
            }, i.prototype.createImageData = function() {
            }, i.prototype.getImageData = function() {
            }, i.prototype.putImageData = function() {
            }, i.prototype.globalCompositeOperation = function() {
            }, i.prototype.setTransform = function() {}, i
          }), r('graphing/screen', ['require', 'exports'], function(e, t) {
            'use strict';
            Object.defineProperty(t, '__esModule', {value: !0});
            var r = function() {
              function e(e, t) {
                this.width = e, this.height = t
              }
              return e
            }();
            t.Screen = r
          });
          r('core/math/poi-type', ['require', 'exports'], function(e, t) {
            'use strict';
            Object.defineProperty(t, '__esModule', {value: !0}),
                t.INTERSECTION = 1001, t.ZERO = 1002, t.INTERCEPT = 1003,
                t.EXTREMUM = 1004, t.EDGE = 1005, t.DEFINITION = 1006,
                t.TRACE = 1007, t.LABEL = 1008
          });
          r('graphing/poi',
            [
              'require', 'exports', 'core/math/poi-type', 'core/types/graphmode'
            ],
            function(e, t, r, n) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var i = 1, o = function() {
                function e(e, t, r, n, o, s, a) {
                  this.x = e, this.y = t, this.type = r, this.sketch = n,
                  this.branch = o, this.pointIdxOnBranch = s,
                  this.bareLabel = void 0 !== a && a, this.id = i++
                }
                return e.prototype.getLabel = function() {
                  var e = this.sketch && this.sketch.branches[this.branch];
                  return this.type === r.LABEL && e && 'labels' in e &&
                          e.labels ?
                      e.labels[this.pointIdxOnBranch] || '' :
                      ''
                }, e.prototype.getGraphMode = function() {
                  return this.sketch.branches[this.branch].graphMode
                }, e.prototype.getCompiledFunction = function() {
                  var e = this.sketch.branches[this.branch];
                  if ('compiled' in e && e.compiled) return e.compiled.fn
                }, e.prototype.isAttachedToPlottedPoint = function() {
                  return this.type === r.DEFINITION || this.type === r.LABEL
                }, e.prototype.isMovable = function() {
                  return this.getGraphMode() === n.XYPOINT_MOVABLE
                }, e.prototype.isPersistent = function() {
                  return this.type === r.LABEL
                }, e.prototype.getLabelSize = function() {
                  var e = this.sketch && this.sketch.branches[this.branch];
                  if (this.type === r.LABEL && e && 'labelSize' in e)
                    return e.labelSize
                }, e.prototype.getVerticalLabel = function() {
                  var e = this.sketch && this.sketch.branches[this.branch];
                  return !!(this.type === r.LABEL && e &&
                            'verticalLabel' in e) &&
                      !!e.verticalLabel
                }, e.prototype.getTextOutline = function() {
                  if (this.hasEditableLabel()) return !1;
                  var e = this.sketch && this.sketch.branches[this.branch];
                  return !(this.type === r.LABEL && e &&
                           'suppressTextOutline' in e) ||
                      !e.suppressTextOutline
                }, e.prototype.hasInteractiveLabel = function() {
                  var e = this.sketch && this.sketch.branches[this.branch];
                  return !!(e && 'interactiveLabel' in e) &&
                      !!e.interactiveLabel
                }, e.prototype.hasEditableLabel = function() {
                  var e = this.sketch && this.sketch.branches[this.branch];
                  return !!(e && 'editableLabel' in e) && !!e.editableLabel
                }, e.prototype.isBareLabel = function() {
                  return this.bareLabel
                }, e.prototype.getMovablePoint = function() {
                  return this.sketch.getMovablePointByIndex(
                      this.pointIdxOnBranch)
                }, e
              }();
              t.POI = o
            });
          r('lib/mathspeak',
            ['require', 'exports', 'vendor/mathquill', 'jquery'],
            function(e, t, r, n) {
              'use strict';
              function i(e) {
                var t = '', r = [];
                r = a(e) ? l(e) :
                           [{from: 0, to: e.length, type: 'text', text: e}];
                for (var n = 0, i = r; n < i.length; n++) {
                  var s = i[n];
                  t += 'text' === s.type ? s.text : o(s.text)
                }
                return t
              }
              function o(e) {
                return e.match(/^\s*[\d]{0,3}(\.[\d]*)?\s*$/) ?
                    e :
                    (c.latex(e), c.mathspeak().trim())
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var s = /`[^`]*`/g, a = function(e) {
                if (null != e) {
                  var t = e.match(/`/g);
                  return (null != t && t.length || 0) % 2 == 0
                }
                return !0
              }, l = function(e) {
                var t = [];
                if (null == e || 0 == e.length) return t;
                for (var r, n = 0; r = s.exec(e);) {
                  var i = e.slice(n, r.index);
                  i.length > 0 &&
                      t.push({from: n, to: r.index, type: 'text', text: i}),
                      n = r.index + r[0].length, t.push({
                        from: r.index,
                        to: n,
                        type: 'math',
                        text: r[0].slice(1, -1)
                      })
                }
                var o = e.slice(n);
                return o.length > 0 &&
                           t.push(
                               {from: n, to: e.length, type: 'text', text: o}),
                       t
              }, c = r.MQ.StaticMath(n('<span/>')[0]);
              t.getMathspeakFromText = i
            });
          r('graphing/graphsketch',
            [
              'require', 'exports', 'core/math/poi-type',
              'core/types/graphmode', './poi', 'core/math/poi-type',
              'lib/mathspeak'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = function() {
                function e(e, t) {
                  var n = this;
                  this.color = '#000000', this.style = 'normal',
                  this.visible = !0, this.showPOI = !1, this.showHighlight = !1,
                  this.selected = !1, this.labels = [], this.id = e,
                  this.branches = void 0 !== t ? t : [],
                  this.getPOI().forEach(function(e) {
                    e.type === r.LABEL && n.labels.push(e)
                  })
                }
                return e.prototype.getPOI = function() {
                  if (this.__cachedPOI) return this.__cachedPOI;
                  this.__cachedPOI = [], this.__cachedPOIIds = {};
                  for (var e = 0; e < this.branches.length; e++) {
                    var t = this.branches[e], i = t.poi;
                    if (t.graphMode === n.X || t.graphMode === n.Y)
                      this._pushPOI(i.zeros, e, r.ZERO),
                          this._pushPOI(i.intercept, e, r.INTERCEPT),
                          this._pushPOI(i.extrema, e, r.EXTREMUM),
                          i.intersections &&
                          this._pushPOI(i.intersections, e, r.INTERSECTION);
                    else if (
                        t.graphMode === n.XYPOINT ||
                        t.graphMode === n.XYPOINT_MOVABLE) {
                      t.graphMode;
                      var o = t.graphMode === n.XYPOINT &&
                          !0 === t.interactiveLabel;
                      if (!0 === t.showLabel || o) {
                        var s = t.nakedLabel;
                        i.defined && this._pushPOI(i.defined, e, r.LABEL, s)
                      } else
                        i.defined && this._pushPOI(i.defined, e, r.DEFINITION)
                    }
                  }
                  return this.__cachedPOI
                }, e.prototype.getBranchPOI = function(e) {
                  return this.getPOI().filter(function(t) {
                    return t.branch === e
                  })
                }, e.prototype.getMovablePoints = function() {
                  if (this.__cachedMovablePoints)
                    return this.__cachedMovablePoints;
                  this.__cachedMovablePoints = [];
                  var e = this.branches[0];
                  if (e && 1 === e.segments.length &&
                      e.graphMode === n.XYPOINT_MOVABLE)
                    for (var t = e.segments[0], r = 0; r < t.length; r++) {
                      var i = void 0;
                      e.tableId && (i = {
                        tableId: e.tableId,
                        columnId: this.id,
                        rowIndex: e.movablePointInfo[r].index,
                        dragX: e.movablePointInfo[r].dragX,
                        dragY: e.movablePointInfo[r].dragY
                      });
                      var o = e.scaleFactors ? e.scaleFactors[0][r] : void 0,
                          a = i ? i.rowIndex : r,
                          l = 1 === e.segments.length && e.labels &&
                              e.labels[r] ?
                          e.labels[r] :
                          void 0;
                      this.__cachedMovablePoints.push({
                        type: 'movable-point',
                        id: 'movable:[' + this.id + ',' + a + ']',
                        sketch: this,
                        color: this.color,
                        tableInfo: i,
                        scaleFactor: o,
                        x: t[r][0],
                        y: t[r][1],
                        label: l,
                        ariaLabel: l && s.getMathspeakFromText(l)
                      })
                    }
                  return this.__cachedMovablePoints
                }, e.prototype.getMovablePointByIndex = function(e) {
                  return this.getMovablePoints()[e]
                }, e.prototype.getStaticLabeledPoints = function() {
                  var e = this;
                  if (this.__cachedStaticLabeledPoints)
                    return this.__cachedStaticLabeledPoints;
                  var t = this.branches[0];
                  return this.__cachedStaticLabeledPoints = [],
                         this.getPOI().forEach(function(r) {
                           if ((r.type === o.DEFINITION ||
                                r.type === o.LABEL) &&
                               t.graphMode === n.XYPOINT) {
                             var i = t.showLabel, a = t.labels && t.labels[0];
                             (i || a) && e.__cachedStaticLabeledPoints.push({
                               type: 'static-labeled-point',
                               id: 'static[' + e.id + ',' + r.id + ']',
                               x: r.x,
                               y: r.y,
                               sketch: r.sketch,
                               label: a,
                               ariaLabel: s.getMathspeakFromText(a)
                             })
                           }
                         }),
                         this.__cachedStaticLabeledPoints
                }, e.prototype._pushPOI = function(e, t, r, n) {
                  void 0 === n && (n = !1);
                  for (var o = 0, s = e.x.length; o < s; o++) {
                    var a = new i.POI(e.x[o], e.y[o], r, this, t, o, n);
                    e.intersects && (a.intersects = e.intersects[o]),
                        this.__cachedPOI.push(a), this.__cachedPOIIds[a.id] = a
                  }
                }, e.prototype.updateIntersections = function(e) {
                  for (var t = this, i = 0, o = this.branches.length; i < o;
                       i++)
                    this.branches[i].poi.intersections = e[i];
                  var s = this.__cachedPOI;
                  this.__cachedPOI = [], s.forEach(function(e) {
                    e.type !== r.INTERSECTION ? t.__cachedPOI.push(e) :
                                                delete t.__cachedPOIIds[e.id]
                  });
                  for (var i = 0; i < this.branches.length; i++) {
                    var a = this.branches[i], l = a.graphMode, c = a.poi;
                    l !== n.X && l !== n.Y ||
                        c.intersections &&
                            this._pushPOI(c.intersections, i, r.INTERSECTION)
                  }
                }, e.prototype.getPOIById = function(e) {
                  return this.__cachedPOIIds[e]
                }, e.prototype.updateFrom = function(e) {
                  if (e) {
                    this.visible = !0, this.showPOI = e.showPOI,
                    this.showHighlight = e.showHighlight,
                    this.selected = e.selected;
                    var t = this.branches[0].graphMode;
                    if (t === n.XYPOINT || t === n.XYPOINT_MOVABLE) {
                      for (var r = !0, i = 0; i < this.__cachedPOI.length;
                           i++) {
                        var o = e.__cachedPOI[i], s = this.__cachedPOI[i];
                        if (!o || o.type !== s.type) {
                          r = !1;
                          break
                        }
                      }
                      if (r)
                        for (var i = 0; i < this.__cachedPOI.length; i++) {
                          var o = e.__cachedPOI[i], s = this.__cachedPOI[i];
                          delete this.__cachedPOIIds[s.id],
                              this.__cachedPOIIds[o.id] = s, s.id = o.id
                        }
                    }
                  }
                }, e
              }();
              t.GraphSketch = a
            });
          (function(e) {
            if ('object' == typeof exports && 'undefined' != typeof module)
              module.exports = e();
            else if ('function' == typeof r && r.amd)
              r('base64', [], e);
            else {
              var t;
              t = 'undefined' != typeof window ? window :
                  'undefined' != typeof global ? global :
                  'undefined' != typeof self   ? self :
                                                 this,
              t.base64js = e()
            }
          })(function() {
            return function e(r, n, i) {
              function o(a, l) {
                if (!n[a]) {
                  if (!r[a]) {
                    var c = 'function' == typeof t && t;
                    if (!l && c) return c(a, !0);
                    if (s) return s(a, !0);
                    var u = new Error('Cannot find module \'' + a + '\'');
                    throw u.code = 'MODULE_NOT_FOUND', u
                  }
                  var d = n[a] = {exports: {}};
                  r[a][0].call(d.exports, function(e) {
                    var t = r[a][1][e];
                    return o(t || e)
                  }, d, d.exports, e, r, n, i)
                }
                return n[a].exports
              }
              for (var s = 'function' == typeof t && t, a = 0; a < i.length;
                   a++)
                o(i[a]);
              return o
            }({
              '/': [
                function(e, t, r) {
                  'use strict';
                  function n(e) {
                    var t = e.length;
                    if (t % 4 > 0)
                      throw new Error(
                          'Invalid string. Length must be a multiple of 4');
                    return '=' === e[t - 2] ? 2 : '=' === e[t - 1] ? 1 : 0
                  }
                  function i(e) {
                    return 3 * e.length / 4 - n(e)
                  }
                  function o(e) {
                    var t, r, i, o, s, a, l = e.length;
                    s = n(e), a = new d(3 * l / 4 - s), i = s > 0 ? l - 4 : l;
                    var c = 0;
                    for (t = 0, r = 0; t < i; t += 4, r += 3)
                      o = u[e.charCodeAt(t)] << 18 |
                          u[e.charCodeAt(t + 1)] << 12 |
                          u[e.charCodeAt(t + 2)] << 6 | u[e.charCodeAt(t + 3)],
                      a[c++] = o >> 16 & 255, a[c++] = o >> 8 & 255,
                      a[c++] = 255 & o;
                    return 2 === s ? (o = u[e.charCodeAt(t)] << 2 |
                                          u[e.charCodeAt(t + 1)] >> 4,
                                      a[c++] = 255 & o) :
                                     1 === s &&
                                   (o = u[e.charCodeAt(t)] << 10 |
                                        u[e.charCodeAt(t + 1)] << 4 |
                                        u[e.charCodeAt(t + 2)] >> 2,
                                    a[c++] = o >> 8 & 255, a[c++] = 255 & o),
                           a
                  }
                  function s(e) {
                    return c[e >> 18 & 63] + c[e >> 12 & 63] + c[e >> 6 & 63] +
                        c[63 & e]
                  }
                  function a(e, t, r) {
                    for (var n, i = [], o = t; o < r; o += 3)
                      n = (e[o] << 16) + (e[o + 1] << 8) + e[o + 2],
                      i.push(s(n));
                    return i.join('')
                  }
                  function l(e) {
                    for (var t, r = e.length, n = r % 3, i = '', o = [], s = 0,
                                l = r - n;
                         s < l; s += 16383)
                      o.push(a(e, s, s + 16383 > l ? l : s + 16383));
                    return 1 === n ? (t = e[r - 1], i += c[t >> 2],
                                      i += c[t << 4 & 63], i += '==') :
                                     2 === n &&
                                   (t = (e[r - 2] << 8) + e[r - 1],
                                    i += c[t >> 10], i += c[t >> 4 & 63],
                                    i += c[t << 2 & 63], i += '='),
                           o.push(i), o.join('')
                  }
                  r.byteLength = i, r.toByteArray = o, r.fromByteArray = l;
                  for (
                      var c = [], u = [],
                          d = 'undefined' != typeof Uint8Array ? Uint8Array :
                                                                 Array,
                          p = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
                          h = 0, f = p.length;
                      h < f; ++h)
                    c[h] = p[h], u[p.charCodeAt(h)] = h;
                  u['-'.charCodeAt(0)] = 62, u['_'.charCodeAt(0)] = 63
                },
                {}
              ]
            },
              {}, [])('/')
          });
          r('bin', ['base64'], function(e) {
            'use strict';
            var r = {};
            return {
              load: function(e, n, i, o) {
                var s = n.toUrl('assets_src/' + e);
                if (o.isBuild) {
                  var a = t.nodeRequire('fs');
                  r[e] = a.readFileSync(s).toString('base64'), i()
                } else {
                  var l = new XMLHttpRequest;
                  l.open('GET', s, !0), l.responseType = 'arraybuffer',
                                        l.onload = function() {
                                          i(l.response)
                                        }, l.send()
                }
              }, write: function(e, t, n, i) {
                t in r ?
                    n('define(\'' + e + '!' + t +
                      '\', [\'base64\'], function (base64) {  return base64.toByteArray(\'' +
                      r[t] + '\').buffer;});') :
                    console.log(
                        'ERROR - failed to find file ' + t + ' in buildMap')
              }
            }
          });
          r('bin!audio/poi.mp3', ['base64'], function(e) {
            return e
                .toByteArray(
                    '//tQxAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAAIAAAHVwAgICAgICAgICAgICBAQEBAQEBAQEBAQEBgYGBgYGBgYGBgYGBggICAgICAgICAgICAoKCgoKCgoKCgoKCgoMDAwMDAwMDAwMDAwODg4ODg4ODg4ODg4OD///////////////8AAAA5TEFNRTMuOThyAaUAAAAALmcAABRAJAiwQgAAQAAAB1cctrbdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/7UMQAAAjsKyK0YYABp52xtx8wAgAgBd34IAhAgnsECEe7QIAAgsPxACDgcBAEHQfD/g+D4PggCAIf///ghLny4Pg+D5+sHz/wf+XPwfB8H3iMHwfwffUCYPvz/Y7Hg/H4/H4/H4HAwADcoDwAP7XfuAFtXrhzjsjOXP8iCYM4IBVoH2DGAhQR2hm5vikA2IVEPX9nQaITi6IiLCKX/fxcg/DdGmS5BP7fIGQ0hw7DQi5Q//8midImXygdJ0tlz/1NAgXIANV6MA2Vy2y27jv/+1LEBIALOHOTvGGAMXWhbnTxGZ+LOa2FNMsDtj9/jUmPqqqARrNvlVjDDoGZqq0T11A0DVqeEnlQk8q4sVEp0FcqdxLoEJ0RPYWvIlQkbGA0Anw6VJJgqRKw1NJaAXkR4ag0/FwCCABbbdbJA0fzVgdvgvu5Px6Rwiv3VllZVDREqmWntLyBDka3sz951iTve+ddHP0/M3P/+ydU4zbqOZOeop5jfu1kwk8VezPeGc1hRMbWrJNv6SO/fH0Mc15KYvKqAAAAdrdsrbBDuBpp4v/7UsQGgguVE2ekjNP5aSBo6YSNgKAQUoCZEBJK8q73G/nhJFFmLY5dNc4b7gjBRyEs5yjJokY9TBoU/pXQBglyNjeiA87V8vkzaw019YTu2fxY0t6gteLMI37f9fYw7UVnWoE4NJOSpQBu3GfVAIVACgw+IikZZAnB7UKlLGnha4PDbIhsBhk4RYmlE2hYZ8NrQ5HnyEUvZxDyVG1hM33ZZH0OlrJV5///3/51qTGtJgxhREVLEfoO1w6686eRAAAAUicksbA1qegZCe2AuEgJ//tSxAkCDF0XSaw8ailyn+l1h4w1BvVY04S56fYY5nGkBZHMGLBjHDUMlORG4wcCT9R6RB+3vM8jVMU1hmlOoXIOMKqotE2HxWYNJq/7EZ2l63NJ+Z2aTA4Yq+7t0PhOxCz9WP1mA3DJZZGDkRfq+qFAGwhwHUAVqBfDiMUlypaMWApR1VoWLChfUpJzkBDMCTf85UZr6jyHa1psZnTS5iKatTVKcX/Ker9zMvM1T0okGyiQcreJbU1tc+Yj/ms3395FBIADkjlkjbAZNdiwgRD/+1LEBwAL8Tdbp6Rh+XmT6XWHjCx5U4sTCtlUidNtS9I7oUx7oxdIZlOghkIQYzB0vxtMs6QgCg4WMVakQMM5HRfrsdIEftM0yfOHnNGkiPRMoWCKSsxsChat8/vYw4c4t+CMMB5AAAAXZrftWiEVdbSgnURZoWvK2KhK9GfCkIGnQKxIqbYJ0JCNFJ3St1wuUNRLW4Kw5VhLVGrmgYKhhRe1qzzC7SqFFyjJlIqXcPD6gw//epZ9bwQFw+s+rdVAFtzl0AAAA3I3JK0QJxtCHv/7UsQGAApAM0WssGFpSCKqNYMMvgZph6CwIhKEt0yEiMwFKpnDBBajVc5jbTM7KayRt3I43h8Ag05kd9AtqO0bItmf/+Aevzf7dx28sK0hvP//3/izNwf1pfEAgANutuOJACSqWvuW+SKNLQSpOQKsrX3XxnZxy2Rus0Q1irPy9Mkg4kZGJFRQUax4R+jsACwavqYd2bmRX/6VnKrLk2Z2VGYwQNCIEasJh7/oBScAAMtBNgBWssKw0uCAgKkVpJirpZyBklUCwqaSIkW6BgIY//tSxBIDSYw3Km0kSoEzi9KAliSw9QNAydBqoFQVEQNBwiJYiBWdDqxiwVBUGqg6JgaBoGj3//////huVcFQsIRoPjBXLBGA8AkCwOhcD4KAmFAtEYcR6E8gD2OAXJ2N//uSJVZVJNRdh0gkLCwuKioqz4sLC3//////4sLC31ioqKpAoqKirOgFqkxBTUUzLjk4LjKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr/+1LEIwPAAAGkAAAAIAAANIAAAASqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqg==')
                .buffer
          });
          r('graphing/tonegenerator',
            [
              'require', 'exports', 'bin!audio/poi.mp3', 'tslib', 'browser',
              'lib/animation-frame', 'bugsnag', 'core/types/graphmode'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              function l() {
                return {
                  amplitude: 0, phase: 0, noiseVal: 0, lowerOctaveGain: 0,
                      upperOctaveGain: 0
                }
              }
              function c(e, t) {
                var r = t.independentMin, n = t.independentMax,
                    i = Math.abs((e - r) / (n - r));
                return isFinite(i) || (i = .5), i = Math.max(Math.min(i, 1), 0),
                {
                  left: Math.cos(Math.PI / 2 * i),
                      right: Math.sin(Math.PI / 2 * i)
                }
              }
              function u(e, t, r, n, i) {
                var o = t.independent, s = t.dependent, a = e.phase,
                    l = e.noiseVal, c = e.lowerOctaveGain,
                    u = e.upperOctaveGain, f = r.dependentMin,
                    g = r.dependentMax, m = 0, y = 0, v = 0;
                if (!isNaN(s) && f <= s && s <= g) {
                  a += d((s - f) / (g - f)) / n,
                      i < 4 * O ? (y = 0, v = 0) : (y = .5, v = o < 0 ? .5 : 0),
                      s < 0 && (l = h(l), m += .15 * l)
                } else
                  l = h(l), m += .15 * l;
                return c += (y - c) / (n * O), u += (v - u) / (n * O),
                       m += c * p(a) + u * p(2 * a), {
                  amplitude: m, phase: a, noiseVal: l, lowerOctaveGain: c,
                      upperOctaveGain: u
                }
              }
              function d(e) {
                return Math.min(Math.max(q * Math.pow(2, e), F), N)
              }
              function p(e) {
                return Math.abs(4 * e + 1 - 4 * Math.floor((4 * e + 3) / 4)) - 1
              }
              function h(e) {
                return (e + .2 * (2 * Math.random() - 1)) / 1.02
              }
              function f(e, t) {
                return e[0] - t[0]
              }
              function g(e) {
                e = n.__assign({}, e);
                var t = e.segments[0].slice();
                return t.sort(f), e.segments = [t], e
              }
              function m(e, t, r, n) {
                for (var i = e.getChannelData(0), o = t.getChannelData(0),
                         s = t.getChannelData(1), a = 0;
                     a < i.length && a + r < o.length; a++)
                  o[a + r] += i[a] * n.left, s[a + r] += i[a] * n.right
              }
              function y(e) {
                for (var t = 0, r = e.branches; t < r.length; t++) {
                  if (v(r[t])) return !0
                }
                return !1
              }
              function v(e) {
                switch (e.graphMode) {
                  case a.X:
                  case a.Y:
                  case a.XYPOINT:
                  case a.XYPOINT_MOVABLE:
                    return e.segments.length > 0;
                  default:
                    return !1
                }
              }
              function b(e) {
                for (var t = 0; t < e.branches.length; t++)
                  if (v(e.branches[t])) return t;
                return 0
              }
              function x(e, t) {
                for (var r = 0, n = 0; n <= t; n++)
                  v(e.branches[n]) && (r += 1);
                return r
              }
              function w(e) {
                switch (e.graphMode) {
                  case a.X:
                  case a.Y:
                  case a.XYPOINT:
                  case a.XYPOINT_MOVABLE:
                    return !0;
                  default:
                    return !1
                }
              }
              function _(e, t, r) {
                switch (e.graphMode) {
                  case a.Y:
                  case a.X:
                    if (t < 0 || t >= e.segments.length) return !1;
                    var n = e.segments[t], i = 2 * r;
                    return i >= 0 && i < n.length;
                  case a.XYPOINT:
                  case a.XYPOINT_MOVABLE:
                    return r >= 0 && r <= 1 && t >= 0 &&
                        t < e.segments[0].length;
                  default:
                    return !1
                }
              }
              function E() {
                return {
                  independent: NaN, dependent: NaN
                }
              }
              function S(e, t, r, n, i) {
                if (!_(e, t, r)) return E();
                switch (e.graphMode) {
                  case a.Y:
                  case a.X:
                    var o = e.segments[t], s = 2 * r;
                    return s + 1 >= o.length ?
                        E() :
                        {independent: o[s], dependent: o[s + 1]};
                  case a.XYPOINT:
                  case a.XYPOINT_MOVABLE:
                    var l = e.segments[0][t][1], o = e.segments[0],
                        c = .5 * (n.xmax - n.xmin) / i * D;
                    if (0 === r) {
                      var u = -1 / 0;
                      _(e, t - 1, 0) && (u = .5 * (o[t][0] + o[t - 1][0]));
                      var d = Math.max(o[t][0] - c, u);
                      return {
                        independent: d, dependent: l
                      }
                    }
                    var p = 1 / 0;
                    _(e, t + 1, 0) && (p = .5 * (o[t][0] + o[t + 1][0]));
                    var d = Math.min(o[t][0] + c, p);
                    return {independent: d, dependent: l};
                  default:
                    return E()
                }
              }
              function M(e) {
                switch (e.graphMode) {
                  case a.Y:
                  case a.X:
                    return e.segments.length;
                  case a.XYPOINT:
                  case a.XYPOINT_MOVABLE:
                    return e.segments[0].length;
                  default:
                    return 0
                }
              }
              function I(e, t, r, n) {
                if (!_(e, t, 0)) return NaN;
                switch (e.graphMode) {
                  case a.Y:
                  case a.X:
                    var i = e.segments[t];
                    return i[i.length - 2];
                  case a.XYPOINT:
                  case a.XYPOINT_MOVABLE:
                    var i = e.segments[0], o = 1 / 0;
                    _(e, t + 1, 0) && (o = .5 * (i[t][0] + i[t + 1][0]));
                    var s = .5 * (r.xmax - r.xmin) / n * D;
                    return Math.min(i[t][0] + s, o);
                  default:
                    return NaN
                }
              }
              function k(e, t) {
                switch (t) {
                  case a.Y:
                  case a.XYPOINT:
                  case a.XYPOINT_MOVABLE:
                    return {
                      independentMin: e.xmin,
                      independentMax: e.xmax,
                      dependentMin: e.ymin,
                      dependentMax: e.ymax
                    };
                  case a.X:
                    return {
                      independentMin: e.ymin,
                      independentMax: e.ymax,
                      dependentMin: e.xmin,
                      dependentMax: e.xmax
                    };
                  default:
                    throw L(t)
                }
              }
              function C(e) {
                switch (e.graphMode) {
                  case a.Y:
                  case a.XYPOINT:
                  case a.XYPOINT_MOVABLE:
                    return {independent: e.x, dependent: e.y};
                  case a.X:
                    return {independent: e.y, dependent: e.x};
                  default:
                    throw L(e.graphMode)
                }
              }
              function T(e, t) {
                if (e === a.X) return t.y;
                if (e === a.Y) return t.x;
                throw L(e)
              }
              function L(e) {
                return 'Unexpected graph mode. Received ' + e
              }
              function P(e, t, r, n) {
                var i = e.sampleRate, o = e.getChannelData(0),
                    s = e.getChannelData(1), d = t.graphMode, p = k(r, d),
                    h = p.independentMin, f = p.independentMax, y = f - h,
                    v = 0, b = 0, x = o.length - 1, w = x / i;
                t.graphMode !== a.XYPOINT &&
                        t.graphMode !== a.XYPOINT_MOVABLE ||
                    (t = g(t));
                for (var E = l(), C = 0; C < o.length; C++) {
                  for (var L = NaN, P = (x - C) / x * h + C / x * f,
                           A = c(P, p);
                       v < M(t) && S(t, v, b, r, w).independent < P;)
                    b += 1, _(t, v, b) || (v += 1, b = 0);
                  var D = (I(t, v, r, w) - P) * (w / y), O = S(t, v, b, r, w),
                      F = S(t, v, b - 1, r, w),
                      q = O.independent - F.independent;
                  L = (O.independent - P) / q * F.dependent +
                      (P - F.independent) / q * O.dependent,
                  E = u(E, {independent: P, dependent: L}, p, i, D),
                  o[C] += E.amplitude * A.left, s[C] += E.amplitude * A.right
                }
                if (n && (d === a.X || d === a.Y) && t.poi.intersections)
                  for (var N = T(d, t.poi.intersections), R = 0, B = N;
                       R < B.length; R++) {
                    var P = B[R], C = Math.round((P - h) / (f - h) * x);
                    m(n, e, C, c(P, p))
                  }
              }
              function A(e, t, r, n) {
                for (var i = e.sampleRate, o = e.getChannelData(0),
                         s = e.getChannelData(1), a = t.graphMode, d = k(r, a),
                         p = o.length - 1, h = l(), f = C(t), g = f.independent,
                         y = f.dependent, v = c(g, d), b = 0;
                     b < o.length; b++) {
                  h = u(h, {independent: g, dependent: y}, d, i, (p - b) / i),
                  o[b] += h.amplitude * v.left, s[b] += h.amplitude * v.right
                }
                n && void 0 !== t.intersects && m(n, e, 0, v)
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var D = .075, O = .0015, F = 125, q = 500, N = 2e3,
                  R = function() {
                    function e(e) {
                      var t = e.audioPointMove, r = e.animationFinished;
                      this.audioSpeed = 50, this.audioVolume = .5,
                      this.audioPointMove = t, this.animationFinished = r
                    }
                    return e.prototype.suspend = function() {
                      this.playbackSupported && this.audioCtx &&
                          (this.stop(), this.audioCtx.suspend())
                    }, e.prototype.resume = function() {
                      if (!this.audioCtx) {
                        var e =
                            window.AudioContext || window.webkitAudioContext;
                        if (i.IS_IE)
                          this.playbackSupported = !1, this.audioCtx = void 0;
                        else
                          try {
                            this.audioCtx = e ? new e : void 0,
                            this.playbackSupported = !0
                          } catch (e) {
                            s.notify(e), this.playbackSupported = !1,
                                         this.audioCtx = void 0
                          }
                      }
                      this.playbackSupported && this.audioCtx &&
                          ('suspended' === this.audioCtx.state &&
                               this.audioCtx.resume(),
                           this.loadPOI())
                    }, e.prototype.stop = function() {
                      this.playTimeout &&
                          (o.cancelAnimationFrame(this.playTimeout),
                           this.playTimeout = void 0),
                          this.bufferSource &&
                          (this.bufferSource.stop(),
                           this.bufferSource.disconnect(),
                           this.bufferSource = void 0),
                          this.animationFinished()
                    }, e.prototype.isAnimating = function() {
                      return void 0 !== this.playTimeout
                    }, e.prototype.getAudioSpeed = function() {
                      return this.audioSpeed
                    }, e.prototype.setAudioSpeed = function(e) {
                      this.audioSpeed = e
                    }, e.prototype.getAudioVolume = function() {
                      return this.audioVolume
                    }, e.prototype.setAudioVolume = function(e) {
                      this.audioVolume = e,
                      void 0 !== this.gainMaster &&
                          (this.gainMaster.gain.value = this.audioVolume)
                    }, e.prototype.getPlaybackSupported = function() {
                      return this.playbackSupported
                    }, e.prototype.playBranchByIndex = function(e, t, r) {
                      var n = this;
                      if (!(t < 0 || t >= e.branches.length) &&
                          v(e.branches[t])) {
                        var i = function() {
                          return n.stop()
                        };
                        this.playBranch(e.branches[t], t, r, i)
                      }
                    }, e.prototype.playSketch = function(e, t) {
                      var r = this, n = e.branches;
                      if (0 !== n.length) {
                        var i = -1, o = function() {
                          for (i += 1; i < n.length && !v(n[i]);) i += 1;
                          i < n.length ? r.playBranch(n[i], i, t, o) : r.stop()
                        };
                        o()
                      }
                    }, e.prototype.playPoint = function(e, t) {
                      if (this.audioCtx && w(e)) {
                        var r = this.audioCtx.sampleRate, n = r * D,
                            i = this.audioCtx.createBuffer(2, n, r);
                        A(i, e, t, this.poiBuffer), this.connectBuffer(i)
                      }
                    }, e.prototype.connectBuffer = function(e) {
                      if (this.audioCtx) {
                        this.gainMaster = this.audioCtx.createGain(),
                        this.gainMaster.connect(this.audioCtx.destination),
                        this.gainMaster.gain.value = this.audioVolume;
                        var t = this.audioCtx.createBufferSource();
                        this.bufferSource = t, t.buffer = e,
                        t.connect(this.gainMaster), t.start()
                      }
                    }, e.prototype.playBranch = function(e, t, r, n) {
                      var i = this;
                      if (this.audioCtx) {
                        var s = this.audioSpeed / 10,
                            a = this.audioCtx.sampleRate, l = a * s,
                            c = this.audioCtx.createBuffer(2, l, a);
                        P(c, e, r, this.poiBuffer), this.connectBuffer(c);
                        var u = this.audioCtx.currentTime, d = function() {
                          if (void 0 !== i.playTimeout &&
                                  o.cancelAnimationFrame(i.playTimeout),
                              i.audioCtx) {
                            var a = i.audioCtx.currentTime, l = a - u,
                                c = e.graphMode, p = k(r, c),
                                h = p.independentMin, f = p.independentMax,
                                g = (s - l) / s * h + l / s * f;
                            i.audioPointMove(t, g),
                                l < s ?
                                i.playTimeout = o.requestAnimationFrame(d) :
                                n()
                          }
                        };
                        d()
                      }
                    }, e.prototype.loadPOI = function() {
                      var e = this;
                      this.playbackSupported && !this.poiBuffer &&
                          this.audioCtx &&
                          this.audioCtx.decodeAudioData(
                              r.slice(0), function(t) {
                                e.poiBuffer = t
                              })
                    }, e
                  }();
              t.default = R, t.canPlaySketch = y, t.canPlayBranch = v,
              t.getFirstPlayableBranchIndex = b, t.getReportedBranch = x
            });
          r('graphing/audiographnavigator',
            [
              'require', 'exports', 'main/propagate_selection', 'tslib',
              'underscore', 'core/types/graphmode', 'core/lib/label',
              'core/math/poi-type', 'graphing/tonegenerator', 'underscore',
              'lib/aria'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u) {
              'use strict';
              function d(e, t, r) {
                return {
                  x: e.x, y: e.y, branch: e.branch, reportedBranch: r,
                      type: e.type, graphMode: t, intersects: e.intersects
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var p = function() {
                function e(e, t, r) {
                  this.grapher = r, this.controller = e, this.audiograph = t,
                  this.reset()
                }
                return e.prototype.reset = function() {
                  this.currentPoint = void 0, this.resetToFirstBranch(),
                  this.sampledPoints = [], this.pois = [], this.independent = 0,
                  this.xstep = 0, this.ystep = 0
                }, e.prototype.resetToFirstBranch = function() {
                  var e = this.getCurrentSketch();
                  this.branch = e ? l.getFirstPlayableBranchIndex(e) : 0
                }, e.prototype.getBranchPoints = function(e) {
                  var t = [];
                  if (e >= 0)
                    for (var r = 0, n = this.getSampledPoints(); r < n.length;
                         r++) {
                      var i = n[r];
                      i.branch === e && t.push(i)
                    }
                  return t
                }, e.prototype.resetTracePoint = function() {
                  this.drawTrace(this.getCurrentPoint())
                }, e.prototype.drawTrace = function(e) {
                  var t = this.getCurrentSketch();
                  if (e && t) {
                    var r = t.branches[this.branch];
                    if (r) {
                      if (r.graphMode !== o.XYPOINT) {
                        var n = {x: e.x, y: e.y}, i = {
                          branchInfo: {branch: e.branch, id: t.id, sketch: t},
                          pt: n
                        };
                        c.isEqual(i, this.grapher.traceLayer.getTraceInfo()) ||
                            (this.grapher.traceLayer.setTraceInfo(i),
                             this.grapher.redrawAllLayers())
                      }
                    }
                  }
                }, e.prototype.moveToOrigin = function() {
                  var e = this.getCurrentSketch();
                  if (e && l.canPlaySketch(e)) {
                    var t = e.branches[this.branch];
                    if (l.canPlayBranch(t)) {
                      var r = t.graphMode;
                      if (r === o.Y)
                        this.setIndependent('x', 0);
                      else if (r === o.X)
                        this.setIndependent('y', 0);
                      else if (r === o.XYPOINT) {
                        var n = this.getSortedPOI()[0];
                        this.setIndependent('x', n ? n.x : 0)
                      }
                    }
                  }
                }, e.prototype.getCurrentSketch = function() {
                  var e, t = this.getSelectedItem();
                  if (t) {
                    var r = this.audiograph.getFocusedCell();
                    e = 'table' === t.type && r ?
                        this.getGraphSketchForTableCell(t, r) :
                        this.grapher.getGraphSketch(t.id)
                  }
                  return e
                }, e.prototype.getFirstTraceableSketch = function(e) {
                  for (var t,
                       r = this.controller.getItemCount(),
                       n = this.controller.shouldAudioTraceReverseExpressions(),
                       i = 0;
                       i < r; i++) {
                    var o = n ? r - 1 - i : i,
                        s = this.controller.getItemModelByIndex(o);
                    if (s && this.canTrace(s)) {
                      var a =
                          n ? this.prevTableColumn(s) : this.nextTableColumn(s);
                      if (a ? (this.audiograph.setFocusedCell(a),
                               t = this.getGraphSketchForTableCell(s, a)) :
                              t = this.grapher.getGraphSketch(s.id),
                          t) {
                        e && e.selectAssociatedExpression &&
                            this.controller.dispatch(
                                {type: 'set-selected-index', index: o});
                        break
                      }
                    }
                  }
                  return t
                }, e.prototype.canTrace = function(e) {
                  if ('image' === e.type) return !1;
                  if ('shouldGraph' in e) {
                    var t = this.grapher.getGraphSketch(e.id);
                    return !!t && l.canPlaySketch(t)
                  }
                  return !1
                }, e.prototype.getTraceableExpressionCount = function() {
                  for (var e = 0, t = this.controller.getItemCount(), r = 0;
                       r < t; r++) {
                    var n = this.controller.getItemModelByIndex(r);
                    n && (this.canTrace(n) && e++)
                  }
                  return e
                }, e.prototype.computeStepSizes = function() {
                  var e = this.grapher.getProjection().viewport;
                  if (e) {
                    this.viewport = e;
                    var t = e.xmin, r = e.xmax;
                    this.xstep = Math.abs(r - t) / 100, this.xscale = r - t;
                    var n = e.ymin, i = e.ymax;
                    this.ystep = Math.abs(i - n) / 100, this.yscale = i - n;
                    var s = this.getCurrentSketch();
                    if (s && l.canPlaySketch(s)) {
                      var a = s.branches[this.branch];
                      if (l.canPlayBranch(a)) {
                        var c = a.graphMode;
                        if (c === o.Y)
                          this.independent<
                              t ? this.independent = t : this.independent>r &&
                              (this.independent = r);
                        else if (c === o.X)
                          this.independent<
                              n ? this.independent = n : this.independent>i &&
                              (this.independent = i);
                        else if (c === o.XYPOINT) {
                          var u = void 0, d = void 0;
                          this.independent<
                              t ? (d = this.getSortedPOI()[0],
                                   this.independent =
                                       d && void 0 !== d.x ? d.x : 0) :
                                  this.independent>r &&
                              (u = this.getSortedPOI(), d = u[u.length - 1],
                               this.independent = d && void 0 !== d.x ? d.x : 0)
                        }
                      }
                    }
                  }
                }, e.prototype.getPoint = function(e, t) {
                  var r, n = this.getCurrentSketch();
                  if (!n || !l.canPlaySketch(n)) return r;
                  var i, s, a, c = 0, u = n.branches[e];
                  if (u) {
                    var d = l.getReportedBranch(n, e);
                    return 'compiled' in u && u.compiled && (a = u.compiled.fn),
                           s = u.graphMode,
                           s === o.Y     ? (i = this.getInterveningPOIs(
                                            t, t + this.xstep, e, s)[0],
                                        i && i.x === t && i.branch === e ||
                                            (i = void 0, c = a ? a(t) : 0),
                                        i ? r = {
                                          x: i.x,
                                          y: i.y,
                                          type: i.type,
                                          typeChain: i.typeChain,
                                          branch: i.branch,
                                          reportedBranch: d,
                                          graphMode: s,
                                          intersects: i.intersects
                                        } :
                                                a && (r = {
                                              x: t,
                                              y: c,
                                              branch: e,
                                              reportedBranch: d,
                                              graphMode: s
                                            })) :
                               s === o.X ? (i = this.getInterveningPOIs(
                                                t, t + this.ystep, e, s)[0],
                                            i && i.y === t && i.branch === e ||
                                                (i = void 0, c = a ? a(t) : 0),
                                            i ? r = {
                                              x: i.x,
                                              y: i.y,
                                              type: i.type,
                                              typeChain: i.typeChain,
                                              branch: i.branch,
                                              reportedBranch: d,
                                              graphMode: s,
                                              intersects: i.intersects
                                            } :
                                                a && (r = {
                                                  y: t,
                                                  x: c,
                                                  branch: e,
                                                  reportedBranch: d,
                                                  graphMode: s
                                                })) :
                                           s === o.XYPOINT &&
                                   (i = this.getInterveningPOIs(
                                        t, t + this.xstep, e, s)[0],
                                    r = i && i.x === t && i.branch === e ?
                                        {
                                          x: i.x,
                                          y: i.y,
                                          type: i.type,
                                          typeChain: i.typeChain,
                                          branch: i.branch,
                                          reportedBranch: d,
                                          graphMode: s,
                                          intersects: i.intersects
                                        } :
                                        {
                                          x: t,
                                          y: NaN,
                                          branch: e,
                                          reportedBranch: d,
                                          graphMode: s
                                        }),
                           r
                  }
                }, e.prototype.getSampledPoints = function() {
                  return 0 === this.sampledPoints.length &&
                             this.updateSampledPoints(),
                         this.sampledPoints
                }, e.prototype.updateSampledPoints = function() {
                  var e = this.getCurrentSketch();
                  if (e && l.canPlaySketch(e)) {
                    for (var t = [], r = 0; r < e.branches.length; r++) {
                      var n = e.branches[r];
                      if (l.canPlayBranch(n)) {
                        var i = n.graphMode, a = 0, c = 0, u = 0, d = [];
                        if (i === o.Y || i === o.XYPOINT ?
                                (a = this.viewport.xmin, c = this.viewport.xmax,
                                 u = this.xstep) :
                                i === o.X &&
                                    (a = this.viewport.ymin,
                                     c = this.viewport.ymax, u = this.ystep),
                            0 !== a || 0 !== c || 0 !== u) {
                          for (var p = 0; s.value(a + p * u).value <= c; p++) {
                            var h = s.value(a + p * u).value,
                                f = this.getInterveningPOIs(h, h + u, r, i);
                            if (f.length > 0)
                              d.push.apply(d, f);
                            else {
                              var g = this.getPoint(r, h);
                              g && d.push(g)
                            }
                          }
                          t.push.apply(t, this.removeDuplicates(d, i))
                        }
                      }
                    }
                    this.sampledPoints = t
                  }
                }, e.prototype.getCurrentPoint = function() {
                  return this.currentPoint || this.updateCurrentPoint(),
                         this.currentPoint
                }, e.prototype.updateCurrentPoint = function(e) {
                  if (e) {
                    this.currentPoint = e;
                    var t = e.graphMode;
                    t === o.Y || t === o.XYPOINT ?
                        this.independent = void 0 !== e.x ? e.x : 0 :
                        t === o.X &&
                            (this.independent = void 0 !== e.y ? e.y : 0),
                        this.branch = e.branch
                  } else
                    this.currentPoint =
                        this.getPoint(this.branch, this.independent)
                }, e.prototype.prevPoint = function() {
                  this.moveToPoint(-1)
                }, e.prototype.nextPoint = function() {
                  this.moveToPoint(1)
                }, e.prototype.firstPoint = function() {
                  var e = this.getSampledPoints();
                  e.length > 0 && this.updateCurrentPoint(e[0])
                }, e.prototype.lastPoint = function() {
                  var e = this.getSampledPoints();
                  e.length > 0 && this.updateCurrentPoint(e[e.length - 1])
                }, e.prototype.moveToPoint = function(e) {
                  var t = this.getCurrentPoint();
                  if (t) {
                    if (t.graphMode === o.XYPOINT)
                      return void this.moveToPOI(e);
                    var r = this.getSampledPoints(),
                        n = this.getPointIndex(r, t);
                    if (-1 !== n) {
                      var i = n + e;
                      i <= 0 ?
                          (i = 0, u.queue(this.controller.t('First point'))) :
                          i >= r.length - 1 &&
                              (i = r.length - 1,
                               u.queue(this.controller.t('Last point')));
                      var s = r[i];
                      this.updateCurrentPoint(s)
                    }
                  }
                }, e.prototype.prevPOI = function() {
                  this.moveToPOI(-1)
                }, e.prototype.nextPOI = function() {
                  this.moveToPOI(1)
                }, e.prototype.getSortedPOI = function() {
                  return this.pois && 0 !== this.pois.length ||
                             this.updatePOI(),
                         this.pois
                }, e.prototype.updatePOI = function() {
                  var e, t = [], r = [], n = this.getCurrentSketch();
                  if (n && l.canPlaySketch(n)) {
                    for (var s = 0; s < n.branches.length; s++) {
                      var a = n.branches[s];
                      if (a) {
                        var c = l.getReportedBranch(n, s), u = a.graphMode;
                        if (r = [], e = n.getBranchPOI(s), e.length > 0) {
                          u === o.Y || u === o.XYPOINT ?
                              r = i.sortBy(e, 'x') :
                              u === o.X && (r = i.sortBy(e, 'y'));
                          for (var p = [], h = 0, f = r; h < f.length; h++) {
                            var g = f[h];
                            p.push(d(g, u, c))
                          }
                          t.push.apply(t, this.removeDuplicates(p, u))
                        }
                      }
                    }
                    this.pois = t
                  }
                }, e.prototype.removeDuplicates = function(e, t) {
                  for (var r = [], i = 0, o = e; i < o.length; i++) {
                    var l = o[i];
                    if (l = n.__assign({}, l), l.graphMode = t,
                        0 !== r.length) {
                      var c = r[r.length - 1];
                      s.value(c.x).value === s.value(l.x).value &&
                              s.value(c.y).value === s.value(l.y).value &&
                              c.branch === l.branch ?
                          (c.typeChain ||
                               (c.typeChain =
                                    void 0 !== c.type ? [c.type] : []),
                           void 0 !== l.type &&
                               -1 === c.typeChain.indexOf(l.type) &&
                               c.typeChain.push(l.type),
                           l.type === a.INTERSECTION && l.intersects &&
                               void 0 === c.intersects &&
                               (c.intersects = l.intersects)) :
                          r.push(l)
                    } else
                      r.push(l)
                  }
                  return r
                }, e.prototype.getInterveningPOIs = function(e, t, r, n) {
                  for (var i = [], s = this.getSortedPOI(), a = NaN, l = 0,
                           c = s;
                       l < c.length; l++) {
                    var u = c[l];
                    u &&
                        (n !== o.Y && n !== o.XYPOINT || isNaN(u.x) ?
                             n !== o.X || isNaN(u.y) || (a = u.y) :
                             a = u.x,
                         u.branch === r && !isNaN(a) &&
                             (e <= a && a < t || t <= a && a < e) && i.push(u))
                  }
                  return e > t ? i.reverse() : i
                }, e.prototype.setIndependent = function(e, t) {
                  for (var r = this.getSampledPoints(), n = 0, i = r;
                       n < i.length; n++) {
                    var o = i[n];
                    if (o && o.hasOwnProperty(e) && o[e] === t) {
                      if ('x' === e)
                        return this.independent = void 0 !== o.x ? o.x : 0,
                               void this.updateCurrentPoint();
                      if ('y' === e)
                        return this.independent = void 0 !== o.y ? o.y : 0,
                               void this.updateCurrentPoint()
                    }
                  }
                  var s = !0;
                  if (r.length > 0) {
                    var a = Math.floor((r.length - 1) / 2), l = r[a];
                    l &&
                        ('x' === e ?
                             (this.independent = void 0 !== l.x ? l.x : 0,
                              s = !1) :
                             'y' === e &&
                                 (this.independent = void 0 !== l.y ? l.y : 0,
                                  s = !1))
                  }
                  s && (this.independent = 0), this.resetToFirstBranch(),
                      this.updateCurrentPoint()
                }, e.prototype.moveToPOI = function(e) {
                  var t = this.getCurrentPoint();
                  if (t) {
                    var r = this.getSampledPoints(),
                        n = this.getPointIndex(r, t);
                    if (-1 !== n) {
                      for (var i = t.graphMode, s = -1,
                               a = 1 === e ? r.length - 1 : 0, l = n;
                           l !== a + e; l += e) {
                        var c = r[l];
                        if (((i === o.Y || i === o.XYPOINT) && t.x !== c.x ||
                             i === o.X && t.y !== c.y) &&
                            void 0 !== c.type) {
                          s = l;
                          break
                        }
                      }
                      -1 === s ? u.queue(this.controller.t(
                                     'No more points of interest')) :
                                 this.updateCurrentPoint(r[s])
                    }
                  }
                }, e.prototype.getPointIndex = function(e, t) {
                  var r = -1;
                  if (e.length > 0 && t)
                    for (var n = t.graphMode, i = 0; i < e.length; i++) {
                      var s = e[i];
                      if (((n === o.Y || n === o.XYPOINT) && s.x === t.x ||
                           n === o.X && s.y === t.y) &&
                          s.branch === t.branch) {
                        r = i;
                        break
                      }
                    }
                  return r
                }, e.prototype.prevCurve = function() {
                  this.controller.shouldAudioTraceReverseExpressions() ?
                      this.curveDown() :
                      this.curveUp()
                }, e.prototype.nextCurve = function() {
                  this.controller.shouldAudioTraceReverseExpressions() ?
                      this.curveUp() :
                      this.curveDown()
                }, e.prototype.curveUp = function() {
                  var e = this.getSelectedItem();
                  if (e) {
                    var t = this.prevTableColumn(e);
                    if (t)
                      this.audiograph.setFocusedCell(t);
                    else {
                      var r = e.index, n = this.findPrevTraceableIndex(r);
                      if (-1 !== n) {
                        var i = this.controller.getItemModelByIndex(n);
                        i &&
                            this.controller.dispatch(
                                {type: 'set-selected-id', id: i.id})
                      }
                    }
                    (t || this.getSelectedItem() !== e) &&
                        this.audiograph.enterAudioTrace()
                  }
                }, e.prototype.curveDown = function() {
                  var e = this.getSelectedItem();
                  if (e) {
                    var t = this.nextTableColumn(e);
                    if (t)
                      this.audiograph.setFocusedCell(t);
                    else {
                      var r = e.index, n = this.findNextTraceableIndex(r);
                      if (-1 !== n) {
                        var i = this.controller.getItemModelByIndex(n);
                        i &&
                            this.controller.dispatch(
                                {type: 'set-selected-id', id: i.id})
                      }
                    }
                    (t || this.getSelectedItem() !== e) &&
                        this.audiograph.enterAudioTrace()
                  }
                }, e.prototype.findPrevTraceableIndex = function(e) {
                  var t;
                  do {
                    e--, t = this.controller.getItemModelByIndex(e);
                    var r = t && this.prevTableColumn(t);
                    if (r) return this.audiograph.setFocusedCell(r), e
                  } while (t && !this.canTrace(t));
                  return t ? e : -1
                }, e.prototype.findNextTraceableIndex = function(e) {
                  var t;
                  do {
                    e++, t = this.controller.getItemModelByIndex(e);
                    var r = t && this.nextTableColumn(t);
                    if (r) return this.audiograph.setFocusedCell(r), e
                  } while (t && !this.canTrace(t));
                  return t ? e : -1
                }, e.prototype.prevTableColumn = function(e) {
                  return this.tableColumn(e, -1)
                }, e.prototype.nextTableColumn = function(e) {
                  return this.tableColumn(e, 1)
                }, e.prototype.tableColumn = function(e, t) {
                  var r;
                  if (e && 'table' === e.type) {
                    var n = this.audiograph.getFocusedCell(), i = void 0,
                        o = void 0, s = void 0;
                    -1 === t ?
                        (i = n ? Math.max(n.location.column - 1, 0) : NaN,
                         o = n && n.tableId === e.id && !isNaN(i) ?
                             i :
                             e.columnModels.length - 1,
                         s = 0) :
                        (i = n ? Math.min(
                                     n.location.column + 1,
                                     e.columnModels.length - 1) :
                                 NaN,
                         o = n && n.tableId === e.id && !isNaN(i) ? i : 0,
                         s = e.columnModels.length - 1);
                    var a = (s - o) / t;
                    if (isFinite(a) && a >= 0)
                      for (var l = o; l !== s; l += t) {
                        var c = e.columnModels[l];
                        if (c) {
                          var u = this.grapher.getGraphSketch(c.id);
                          if (u) {
                            r = {tableId: e.id, location: {column: l, row: 0}};
                            break
                          }
                        }
                      }
                  }
                  return r
                }, e.prototype.getGraphSketchForTableCell = function(e, t) {
                  if (e && 'table' === e.type && t) {
                    var r = e.columnModels[t.location.column];
                    return r ? this.grapher.getGraphSketch(r.id) : void 0
                  }
                }, e.prototype.getXScale = function() {
                  return this.xscale
                }, e.prototype.getYScale = function() {
                  return this.yscale
                }, e.prototype.getSelectedItem = function() {
                  var e = this.controller.getSelectedItem();
                  return e && 'folder' === e.type ?
                      this.controller.getItemModel(r.getSelectedId(e)) :
                      e
                }, e
              }();
              t.default = p
            });
          r('graphing/audiograph',
            [
              'require', 'exports', 'tslib', 'browser', 'keys', 'lib/aria',
              'graphing/audiographnavigator', 'graphing/tonegenerator',
              'core/types/graphmode', 'core/lib/label', 'core/math/poi-type',
              'graphing-calc/models/table', 'expressions/colors',
              'lib/mathspeak'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d, p, h) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var f = function() {
                function e(e, t) {
                  var r = this;
                  this.grapher = t, this.controller = e,
                  this.audioTraceActive = !1,
                  this.wasFocusInExpressionsView = !1,
                  this.focusedCell = void 0, this.sliderTraceActive = !1,
                  this.sliderIndex = 0, this.sliderArray = [],
                  this.lastSpokenBranch = 1,
                  this.agNavigator = new s.default(e, this, this.grapher),
                  this.tonegen = new a.default({
                    audioPointMove: function(e, t) {
                      r.agNavigator.drawTrace(r.agNavigator.getPoint(e, t))
                    },
                    animationFinished: function() {
                      r.recomputePoints()
                    }
                  }),
                  this.tonegen.suspend()
                }
                return e.prototype
                           .remove = function() {},
                e.prototype.handleKeydown = function(e) {
                  var t = e.altKey || e.metaKey,
                      r = e.altKey && !e.metaKey && !e.ctrlKey && !e.shiftKey,
                      o = e.ctrlKey && !e.metaKey && !e.altKey,
                      s = n.IS_APPLE ? o : t,
                      a = s && (61 === e.which || 187 === e.which),
                      l = s && !e.shiftKey &&
                      (173 === e.which || 189 === e.which),
                      c = s && !e.shiftKey && '0' === i.lookupChar(e);
                  r && 'S' === i.lookupChar(e) ?
                      this.agNavigator.getSelectedItem() &&
                          (this.audioTraceActive ||
                           this.isFocusInExpressionsView()) &&
                          (e.preventDefault(), e.stopPropagation(),
                           this.describeGraph()) :
                      r && 'T' === i.lookupChar(e) ?
                          (e.preventDefault(), e.stopPropagation(),
                       this.toggleAudioTrace()) :
                      a ? (e.preventDefault(), e.stopPropagation(),
                           this.zoom('in')) :
                      l ? (e.preventDefault(), e.stopPropagation(),
                           this.zoom('out')) :
                      c ? (e.preventDefault(), e.stopPropagation(),
                           this.zoom('default')) :
                          this.audioTraceActive &&
                          (this.sliderTraceActive ? this.sliderTraceKeydown(e) :
                                                    this.audioTraceKeydown(e))
                }, e.prototype.sliderTraceKeydown = function(e) {
                  var t = e.altKey || e.metaKey,
                      r = !t && !e.ctrlKey && !e.shiftKey;
                  r && i.lookup(e) === i.LEFT || 'J' === i.lookupChar(e) ?
                      (e.preventDefault(), e.stopPropagation(),
                       this.decrementSliderValue()) :
                      r && i.lookup(e) === i.RIGHT || 'L' === i.lookupChar(e) ?
                      (e.preventDefault(), e.stopPropagation(),
                       this.incrementSliderValue()) :
                      r && i.lookup(e) === i.PAGEDOWN ?
                      (e.preventDefault(), e.stopPropagation(),
                       this.decrementBigSliderValue()) :
                      r && i.lookup(e) === i.PAGEUP ?
                      (e.preventDefault(), e.stopPropagation(),
                       this.incrementBigSliderValue()) :
                      t ||
                          i.lookup(e) !== i.DOWN &&
                              (e.shiftKey || i.lookup(e) !== i.TAB) &&
                              'K' !== i.lookupChar(e) ?
                      !t &&
                              (i.lookup(e) === i.UP ||
                               e.shiftKey && i.lookup(e) === i.TAB ||
                               'I' === i.lookupChar(e)) ?
                      (e.preventDefault(), e.stopPropagation(),
                       this.prevSlider()) :
                          r && i.lookup(e) === i.HOME ||
                              'U' === i.lookupChar(e) ?
                      (e.preventDefault(), e.stopPropagation(),
                       this.sliderMin()) :
                          r && i.lookup(e) === i.END ||
                              'N' === i.lookupChar(e) ?
                      (e.preventDefault(), e.stopPropagation(),
                       this.sliderMax()) :
                      (this.stopAnimations(), this.audioTraceKeydown(e)) :
                      (e.preventDefault(), e.stopPropagation(),
                       this.nextSlider())
                }, e.prototype.audioTraceKeydown = function(e) {
                  var t = this, r = e.altKey || e.metaKey,
                      n = r && !e.ctrlKey && !e.shiftKey,
                      s = !r && !e.ctrlKey && !e.shiftKey, l = i.lookupChar(e);
                  if (i.lookup(e) === i.UP && n)
                    e.preventDefault(), e.stopPropagation(),
                        this.agNavigator.prevCurve();
                  else if (i.lookup(e) === i.DOWN && n)
                    e.preventDefault(), e.stopPropagation(),
                        this.agNavigator.nextCurve();
                  else if (
                      s && i.lookup(e) === i.LEFT || i.lookup(e) === i.UP ||
                      'J' === l)
                    e.preventDefault(), e.stopPropagation(),
                        this.agNavigator.prevPoint(), this.reportAudioTrace();
                  else if (
                      s && i.lookup(e) === i.RIGHT || i.lookup(e) === i.DOWN ||
                      'L' === l)
                    e.preventDefault(), e.stopPropagation(),
                        this.agNavigator.nextPoint(), this.reportAudioTrace();
                  else if (
                      r ||
                      i.lookup(e) !== i.PAGEDOWN &&
                          (e.shiftKey || i.lookup(e) !== i.TAB) && 'I' !== l)
                    if (!r &&
                        (i.lookup(e) === i.PAGEUP ||
                         e.shiftKey && i.lookup(e) === i.TAB || 'K' === l))
                      e.preventDefault(), e.stopPropagation(),
                          this.agNavigator.prevPOI(), this.reportAudioTrace();
                    else if (s && i.lookup(e) === i.HOME || 'U' === l)
                      e.preventDefault(), e.stopPropagation(),
                          this.agNavigator.firstPoint(),
                          this.reportAudioTrace();
                    else if (s && i.lookup(e) === i.END || 'N' === l)
                      e.preventDefault(), e.stopPropagation(),
                          this.agNavigator.lastPoint(), this.reportAudioTrace();
                    else if (s && 'X' === l)
                      e.preventDefault(), e.stopPropagation(),
                          this.reportAudioTrace('x');
                    else if (s && 'P' === l)
                      e.preventDefault(), e.stopPropagation(),
                          this.queuePOICount(), o.alert();
                    else if (s && 'Y' === l)
                      e.preventDefault(), e.stopPropagation(),
                          this.reportAudioTrace('y');
                    else if (s && 'T' === l)
                      e.preventDefault(), e.stopPropagation(),
                          this.reportAudioTrace('type');
                    else if (s && 'B' === l)
                      e.preventDefault(), e.stopPropagation(),
                          this.reportAudioTrace('branch');
                    else if (s && 'O' === l)
                      e.preventDefault(), e.stopPropagation(),
                          this.agNavigator.moveToOrigin(),
                          this.reportAudioTrace();
                    else if (s && 'H' === l)
                      if (e.preventDefault(), e.stopPropagation(),
                          this.tonegen.getPlaybackSupported()) {
                        this.tonegen.stop();
                        var c = this.agNavigator.getCurrentSketch();
                        c && a.canPlaySketch(c) ?
                            (o.alert(this.controller.t('Playing graph.')),
                             clearTimeout(this.playTimeout),
                             this.playTimeout = setTimeout(
                                 function() {
                                   return t.tonegen.playSketch(
                                       c, t.grapher.getCurrentViewport())
                                 },
                                 500)) :
                            o.alert(this.controller.t(
                                'Unable to audio trace this expression.'))
                      } else
                        o.alert(this.controller.t('Unable to play audio.'));
                    else if (
                        s && 'string' == typeof l && l >= '0' && l <= '9') {
                      e.preventDefault(), e.stopPropagation(),
                          this.tonegen.stop();
                      var u = this.agNavigator.getCurrentSketch();
                      if (u) {
                        var d = void 0;
                        d = 48 === e.which ? 9 : e.which - 49;
                        for (var h = d, f = -1, g = 0; g < u.branches.length;
                             g++)
                          if (a.canPlayBranch(u.branches[g]) && (h -= 1),
                              h < 0) {
                            f = g;
                            break
                          }
                        f >= 0 ?
                            this.tonegen.getPlaybackSupported() ?
                            (o.alert(this.controller.t(
                                 'Branch __branch__', {branch: d + 1})),
                             clearTimeout(this.playTimeout),
                             this.playTimeout = setTimeout(
                                 function() {
                                   return t.tonegen.playBranchByIndex(
                                       u, f, t.grapher.getCurrentViewport())
                                 },
                                 500)) :
                            o.alert(
                                this.controller.t('Unable to play audio.')) :
                            o.alert(this.controller.t(
                                'Branch __branch__ does not exist.',
                                {branch: d + 1}))
                      } else
                        o.alert(this.controller.t('No graph selected.'))
                    } else if (
                        r && 'string' == typeof l && l >= '1' && l <= '5')
                      e.preventDefault(), e.stopPropagation(),
                          this.adjustPlaybackSpeed(l);
                    else if (e.altKey || e.ctrlKey || e.metaKey || 'V' !== l)
                      if (s && 'A' === l)
                        e.preventDefault(), e.stopPropagation(),
                            this.queueAnimatingPoints(!0), o.alert();
                      else if (
                          s && 'S' === l && this.controller.isListEnabled())
                        e.preventDefault(), e.stopPropagation(),
                            this.toggleSliderTrace();
                      else if (s && 'C' === l) {
                        e.preventDefault(), e.stopPropagation();
                        var m = this.agNavigator.getCurrentSketch();
                        m ? o.queue(p.getColorName(this.controller, m.color)) :
                            o.queue('unknown'),
                            o.alert()
                      } else
                        s && this.exitAudioTrace();
                    else
                      e.preventDefault(), e.stopPropagation(),
                          e.shiftKey ? this.adjustVolume('down') :
                                       this.adjustVolume('up');
                  else
                    e.preventDefault(), e.stopPropagation(),
                        this.agNavigator.nextPOI(), this.reportAudioTrace()
                }, e.prototype.describeGraph = function() {
                  var e = this.agNavigator.getCurrentSketch();
                  if (e) {
                    var t = a.getReportedBranch(e, e.branches.length - 1);
                    t > 1 &&
                        o.queue(this.controller.t(
                            'Branches: __branches__.', {branches: t}));
                    var r = this.agNavigator.getSortedPOI();
                    if (o.queue(this.controller.t(
                            'Points of interest: __poiCount__.',
                            {poiCount: r.length})),
                        r.length > 0)
                      for (var n = 0; n < r.length; n++)
                        this.queueCoordinates(r[n])
                  } else
                    o.queue(
                        this.controller.t('No graph information available.'));
                  o.alert()
                }, e.prototype.queueCoordinates = function(e, t, r) {
                  if (void 0 === r && (r = !1), e) {
                    var n = this.agNavigator.getCurrentSketch();
                    (e.hasOwnProperty('branch') && n && n.branches.length > 1 &&
                         this.lastSpokenBranch !== e.reportedBranch ||
                     'branch' === t) &&
                        o.queue(this.controller.t(
                            'Branch __branch__.', {branch: e.reportedBranch})),
                        this.lastSpokenBranch =
                            e.reportedBranch ? e.reportedBranch : e.branch + 1,
                        e.hasOwnProperty('type') && !t ?
                        o.queue(this.controller.t(
                            '__type__ at', {type: this.describePOI(e)})) :
                        'type' === t && o.queue(this.describePOI(e)),
                        t && 'x' !== t ||
                        o.queue(this.controller.t('X: __x__.', {
                          x: c.value(e.x, this.agNavigator.getXScale())
                                 .ariaString
                        })),
                        t && 'y' !== t ||
                        o.queue(this.controller.t('Y: __y__.', {
                          y: c.value(e.y, this.agNavigator.getYScale())
                                 .ariaString
                        })),
                        r && o.alert()
                  }
                }, e.prototype.describePOI = function(e) {
                  if (e.typeChain) {
                    for (var t = [], r = 0; r < e.typeChain.length; r++)
                      t.push(this.poiTypeToText(e, r));
                    return t.join(', ')
                  }
                  return this.poiTypeToText(e)
                }, e.prototype.poiTypeToText = function(e, t) {
                  switch (t && e.typeChain ? e.typeChain[t] : e.type) {
                    case u.INTERSECTION:
                      var r = this.getIntersectingCurves(e);
                      return '' !== r ?
                          this.controller.t(
                              'Intersection with __curves__', {curves: r}) :
                          this.controller.t('Intersection');
                    case u.ZERO:
                      return this.controller.t('Zero');
                    case u.INTERCEPT:
                      return this.controller.t('Intercept');
                    case u.EXTREMUM:
                      return this.controller.t('Extremum');
                    case u.EDGE:
                      return this.controller.t('Edge');
                    case u.DEFINITION:
                      return this.controller.t('Point');
                    case u.TRACE:
                      return this.controller.t('Trace');
                    case u.LABEL:
                      return this.controller.t('Label');
                    default:
                      return this.controller.t('Not a P O I')
                  }
                }, e.prototype.getIntersectingCurves = function(e) {
                  return e && e.intersects ?
                      this.getExpressionAriaLabel(e.intersects) :
                      ''
                }, e.prototype.getExpressionAriaLabel = function(e) {
                  var t = this.controller.getItemModel(e);
                  return t ?
                      'expression' === t.type && t.label ?
                      h.getMathspeakFromText(t.label) :
                          this.controller.isItemSecret(t.id) ?
                      this.controller.t(
                          'Secret expression __index__',
                          {index: t.secretIndex}) :
                          'table' === t.type && this.focusedCell ?
                      this.controller.t(
                          'Expression __index__ column __column__', {
                            index: t.displayIndex,
                            column: this.focusedCell.location.column + 1
                          }) :
                      this.controller.t(
                          'Expression __index__', {index: t.displayIndex}) :
                      ''
                }, e.prototype.exitAudioTrace = function(e) {
                  if (this.audioTraceActive) {
                    if (this.audioTraceActive = !1,
                        e || (e = this.controller.t('Audio trace off.')),
                        this.controller.dispatch({type: 'toast/close'}),
                        this.wasFocusInExpressionsView) {
                      var t = this.agNavigator.getSelectedItem();
                      t && this.controller.isItemSelectable(t.id) ||
                          (t = this.controller.getFirstFullyVisibleItem()),
                          t && this.controller.isItemSelectable(t.id) &&
                          this.controller.dispatch({
                            type: 'move-focus-to-item',
                            id: t.id,
                            where: 'table' === t.type &&
                                    void 0 !== this.focusedCell ?
                                r.__assign(
                                    {location: 'cell'},
                                    this.focusedCell.location) :
                                'end'
                          })
                    }
                    this.wasFocusInExpressionsView = !1,
                    this.focusedCell = void 0, this.stopAnimations(),
                    this.sliderTraceActive = !1, this.sliderIndex = 0,
                    this.tonegen.stop(), this.tonegen.suspend(),
                    this.agNavigator.reset(), this.lastSpokenBranch = 1,
                    this.grapher.traceLayer.setTraceInfo(void 0),
                    this.grapher.redrawAllLayers(), o.alert(e),
                    this.resumeAnimations()
                  }
                }, e.prototype.isFocusInExpressionsView = function() {
                  return !!this.controller.getFocusedItem()
                }, e.prototype.enterAudioTrace = function() {
                  var e = this, t = this.agNavigator.getSelectedItem(),
                      r = t && 'table' !== t.type &&
                          !this.agNavigator.canTrace(t) ?
                      this.getExpressionAriaLabel(t.id) :
                      void 0,
                      i = !1;
                  this.audioTraceActive ||
                      (this.wasFocusInExpressionsView =
                           this.isFocusInExpressionsView(),
                       t && r &&
                           o.queue(this.controller.t(
                               '__expression__ cannot be audio traced.',
                               {expression: r})),
                       i = !!r || !this.wasFocusInExpressionsView);
                  var s;
                  if (i)
                    s = this.agNavigator.getFirstTraceableSketch(
                        {selectAssociatedExpression: !0});
                  else if (!r) {
                    if (t && 'expression' === t.type && t.formula &&
                        t.formula.error)
                      return this.exitAudioTrace(), this.controller.dispatch({
                        type: 'toast/show',
                        toast:
                            {message: this.controller.t('No graph to trace.')}
                      });
                    if (t && 'table' === t.type) {
                      var a = d.getSelectedCell(t);
                      this.focusedCell && this.focusedCell.tableId === t.id &&
                              (!a ||
                               a.column === this.focusedCell.location.column &&
                                   a.row === this.focusedCell.location.row) ||
                          (this.focusedCell = void 0 !== a ?
                               {tableId: t.id, location: a} :
                               void 0)
                    } else
                      this.focusedCell = void 0;
                    s = this.agNavigator.getCurrentSketch()
                  }
                  if (!s)
                    return this.agNavigator.reset(),
                           this.lastSpokenBranch = 1, this.exitAudioTrace(),
                           this.controller.dispatch({
                             type: 'toast/show',
                             toast: {
                               message: this.controller.t('No graph to trace.')
                             }
                           });
                  var c = s.branches[0].graphMode;
                  return c === l.IMPLICIT ?
                      (this.exitAudioTrace(), this.controller.dispatch({
                        type: 'toast/show',
                        toast: {
                          message: this.controller.t(
                              'Sorry, but I can\'t trace implicit curves yet.')
                        }
                      })) :
                      c === l.PARAMETRIC ?
                      (this.exitAudioTrace(), this.controller.dispatch({
                        type: 'toast/show',
                        toast: {
                          message: this.controller.t(
                              'Sorry, but I can\'t trace parametric curves yet.')
                        }
                      })) :
                      c === l.POLAR ? (this.exitAudioTrace(), this.controller.dispatch({
                        type: 'toast/show',
                        toast: {
                          message: this.controller.t(
                              'Sorry, but I can\'t trace polar curves yet.')
                        }
                      })) :
                                      (
                                          this.agNavigator.reset(),
                                          this.agNavigator.computeStepSizes(),
                                          this.lastSpokenBranch = 1,
                                          this.grapher.traceLayer
                                              .clearOpenedPOI(),
                                          this.grapher.redrawAllLayers(),
                                          this.audioTraceActive ||
                                              (this.controller.dispatch({
                                                type: 'toast/show',
                                                toast: {
                                                  message: this.controller.t(
                                                      'Audio trace on.'),
                                                  noAria: !0,
                                                  onHide: function() {
                                                    return e.exitAudioTrace()
                                                  },
                                                  hideAfter: 0
                                                }
                                              }),
                                               r && s &&
                                                   o.queue(this.controller.t(
                                                       'Tracing __expression__.',
                                                       {
                                                         expression:
                                                             this.getExpressionAriaLabel(
                                                                 s.id)
                                                       })),
                                               o.queue(this.controller.t(
                                                   'Audio trace on.')),
                                               this.pauseAnimations(),
                                               this.queueAnimatingPoints(!1),
                                               o.queue(this.controller.t(
                                                   'Use Arrow keys to navigate.')),
                                               this.tonegen.resume(),
                                               this.tonegen
                                                       .getPlaybackSupported() &&
                                                   o.queue(this.controller.t(
                                                       'To hear the graph, press H.')),
                                               this.agNavigator
                                                           .getTraceableExpressionCount() >
                                                       1 &&
                                                   (n.IS_APPLE ?
                                                        o.queue(this.controller.t(
                                                            'To move between expressions, press COMMAND+Up-Arrow or COMMAND+Down-Arrow.')) :
                                                        o
                                                            .queue(this.controller
                                                                       .t('To move between expressions, press ALT+Up-Arrow or ALT+Down-Arrow.'))),
                                               n.IS_APPLE ?
                                                   o
                                                       .queue(this.controller.t(
                                                           'To disable audio trace, press OPTION+T.')) :
                                                   o
                                                       .queue(this.controller.t(
                                                           'To disable audio trace, press ALT+T.')),
                                               this.wasFocusInExpressionsView &&
                                                   this.controller
                                                       .find$(
                                                           '.dcg-graph-outer')
                                                       .one(
                                                           'focusin',
                                                           function() {
                                                             setTimeout(
                                                                 function() {
                                                                   o.alert()
                                                                 },
                                                                 0)
                                                           })
                                                       .focus()),
                                          this.agNavigator.moveToOrigin(),
                                          o.queue(this.getExpressionAriaLabel(
                                              s.id)),
                                          this.reportAudioTrace(),
                                          this.wasFocusInExpressionsView ||
                                              o.alert(),
                                          void (this.audioTraceActive = !0))
                }, e.prototype.checkIfSelectedItemChanged = function(e) {
                  this.lastSelectedId !== e &&
                      (this.lastSelectedId = e,
                       this.audioTraceActive &&
                           (e ? (o.queue(this.getExpressionAriaLabel(e)),
                                 this.exitSliderTrace(),
                                 this.agNavigator.updatePOI(),
                                 this.agNavigator.moveToOrigin(),
                                 this.reportAudioTrace(), o.alert()) :
                                this.exitAudioTrace()))
                }, e.prototype.pauseAnimations = function() {
                  var e = this;
                  this.sliderArray
                      .length = 0,
      this.controller.getAllModelsWithSliders().forEach(function(t) {
        t.slider.isPlaying &&
            (e.controller.dispatch(
                 {type: 'set-slider-isplaying', id: t.id, isPlaying: !1}),
             e.sliderArray.push(t))
      })
                }, e.prototype.resumeAnimations = function() {
                  if (0 !== this.sliderArray.length) {
                    for (var e = 0; e < this.sliderArray.length; e++) {
                      var t = this.sliderArray[e];
                      !0 !== t.slider.isPlaying && this.controller.dispatch({
                        type: 'set-slider-isplaying',
                        id: t.id,
                        isPlaying: !0
                      })
                    }
                    this.sliderArray.length = 0
                  }
                }, e.prototype.stopAnimations = function() {
                  var e = this;
                  this.controller.getAllModelsWithSliders().forEach(function(
                      t) {
                    t.slider.isPlaying && e.controller.dispatch({
                      type: 'set-slider-isplaying',
                      id: t.id,
                      isPlaying: !1
                    })
                  })
                }, e.prototype.getAnimatingVars = function() {
                  for (var e = [], t = 0; t < this.sliderArray.length; t++)
                    e.push('"' + this.sliderArray[t].dependent + '"');
                  return e
                }, e.prototype.hasActiveSliders = function() {
                  for (var e = this.controller.getAllModelsWithSliders(), t = 0;
                       t < e.length; t++)
                    if (e[t].slider.isPlaying) return !0;
                  return !1
                }, e.prototype.queueAnimatingPoints = function(e) {
                  1 === this.sliderArray.length ?
                      o.queue(this.controller.t(
                          'One animating slider was paused.')) :
                      this.sliderArray.length > 1 ?
                      o.queue(this.controller.t(
                          '__sliders__ animating sliders were paused.',
                          {sliders: this.sliderArray.length})) :
                      e &&
                          o.queue(this.controller.t(
                              'No animating sliders were paused.'))
                }, e.prototype.queueSliderLatex = function() {
                  this.hasActiveSliders() || this.tonegen.stop();
                  var e = this.getSelectedSlider();
                  e ? o.queue(e.latex) :
                      o.queue(
                          this.controller.t('Unable to determine slider value'))
                }, e.prototype.getSelectedSlider = function() {
                  var e = this.controller.getAllModelsWithSliders();
                  return this.sliderIndex <= e.length - 1 ?
                      e[this.sliderIndex] :
                      null
                }, e.prototype.incrementSliderValue = function() {
                  this.adjustSlider('up')
                }, e.prototype.decrementSliderValue = function() {
                  this.adjustSlider('down')
                }, e.prototype.incrementBigSliderValue = function() {
                  this.adjustSlider('bigup')
                }, e.prototype.decrementBigSliderValue = function() {
                  this.adjustSlider('bigdown')
                }, e.prototype.nextSlider = function() {
                  this.adjustSlider('next')
                }, e.prototype.prevSlider = function() {
                  this.adjustSlider('prev')
                }, e.prototype.sliderMin = function() {
                  this.adjustSlider('min')
                }, e.prototype.sliderMax = function() {
                  this.adjustSlider('max')
                }, e.prototype.adjustSlider = function(e) {
                  var t = this.getSelectedSlider();
                  if (!t)
                    return void o.queue(
                        this.controller.t('Unable to adjust slider'));
                  var r = t.latex,
                      n = this.controller.getAllModelsWithSliders().length;
                  switch (e) {
                    case 'up':
                    case 'down':
                    case 'bigup':
                    case 'bigdown':
                    case 'min':
                    case 'max':
                      this.controller.dispatch({
                        type: 'adjust-slider-by-keyboard',
                        id: t.id,
                        adjustment: e
                      }),
                          this.queueSliderLatex(), o.alert();
                      break;
                    case 'next':
                      return this.sliderIndex++,
                             this.sliderIndex >= n &&
                                 (o.queue(this.controller.t('Last slider.')),
                                  this.sliderIndex = n - 1),
                             this.queueSliderLatex(), void o.alert();
                    case 'prev':
                      return this.sliderIndex--,
                             this.sliderIndex < 0 &&
                                 (o.queue(this.controller.t('First slider.')),
                                  this.sliderIndex = 0),
                             this.queueSliderLatex(), void o.alert()
                  }
                  t.slider.isPlaying || r === t.latex ||
                      (this.queueSliderLatex(), o.alert())
                }, e.prototype.toggleAudioTrace = function() {
                  this.audioTraceActive ? this.exitAudioTrace() :
                                          this.enterAudioTrace()
                }, e.prototype.toggleSliderTrace = function() {
                  this.sliderTraceActive ? this.exitSliderTrace() :
                                           this.enterSliderTrace()
                }, e.prototype.enterSliderTrace = function() {
                  if (!this.sliderTraceActive) {
                    this.sliderIndex = 0;
                    0 !== this.controller.getAllModelsWithSliders().length ?
                        (o.queue(this.controller.t('Slider trace on.')),
                         this.queueSliderLatex(), this.sliderTraceActive = !0) :
                        (o.queue(this.controller.t('No sliders to trace.')),
                         this.sliderTraceActive = !1),
                        o.alert()
                  }
                }, e.prototype.exitSliderTrace = function() {
                  this.sliderTraceActive &&
                      (o.queue(this.controller.t('Slider trace off.')),
                       this.sliderTraceActive = !1, this.sliderIndex = 0,
                       o.alert())
                }, e.prototype.recomputePoints = function() {
                  this.audioTraceActive &&
                      (this.tonegen.isAnimating() ||
                       (this.agNavigator.updatePOI(),
                        this.agNavigator.updateSampledPoints(),
                        this.agNavigator.updateCurrentPoint(),
                        this.agNavigator.resetTracePoint(),
                        this.agNavigator.computeStepSizes()))
                }, e.prototype.queuePOICount = function() {
                  var e = this.agNavigator.getCurrentSketch(),
                      t = e ? e.getPOI().length : 0;
                  o.queue(
                      this.controller.t('Points of interest, __x__.', {x: t}))
                }, e.prototype.reportAudioTrace = function(e, t) {
                  var r = this.agNavigator.getCurrentPoint();
                  if (r &&
                      (e ||
                           (t || this.tonegen.stop(),
                            this.tonegen.playPoint(
                                r, this.grapher.getCurrentViewport())),
                       !t)) {
                    this.queueCoordinates(r, e);
                    var n = e ? 0 : 100;
                    setTimeout(function() {
                      o.alert()
                    }, n)
                  }
                }, e.prototype.adjustPlaybackSpeed = function(e) {
                  switch (e) {
                    case '1':
                      return this.tonegen.setAudioSpeed(150),
                             o.alert(
                                 this.controller.t('Graph playback very slow'));
                    case '2':
                      return this.tonegen.setAudioSpeed(100),
                             o.alert(this.controller.t('Graph playback slow'));
                    case '3':
                      return this.tonegen.setAudioSpeed(50),
                             o.alert(
                                 this.controller.t('Graph playback normal'));
                    case '4':
                      return this.tonegen.setAudioSpeed(30),
                             o.alert(this.controller.t('Graph playback fast'));
                    case '5':
                      return this.tonegen.setAudioSpeed(16),
                             o.alert(
                                 this.controller.t('Graph playback very fast'));
                    default:
                      return this.tonegen.setAudioSpeed(50),
                             o.alert(this.controller.t('Graph playback normal'))
                  }
                }, e.prototype.adjustVolume = function(e) {
                  var t = this.tonegen.getAudioVolume(),
                      r = 'up' === e ?
                      Math.min(100, Math.round(100 * (t + .1))) :
                      Math.max(0, Math.round(100 * (t - .1)));
                  this.tonegen.setAudioVolume(r / 100),
                      o.alert(this.controller.t(
                          'Volume __volume__ percent', {volume: r}))
                }, e.prototype.zoom = function(e) {
                  this.grapher.viewportController.zoom(e)
                }, e.prototype.getFocusedCell = function() {
                  return this.focusedCell
                }, e.prototype.setFocusedCell = function(e) {
                  this.focusedCell = e
                }, e.prototype.getAudioTraceActive = function() {
                  return this.audioTraceActive
                }, e
              }();
              t.default = f
            });
          r('graphing/canvas-braille',
            [
              'require', 'exports', 'tslib', './projection', './screen',
              'core/graphing-calc/json/graph-settings', 'abraham'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              function a(e, t, r, n, i) {
                var o = e.dotSpacing, s = 1 + o, a = i.charCodeAt(0) - j;
                1&a && t.fillRect(r, n, 1, 1),
                    2&a && t.fillRect(r, n + s, 1, 1),
                    4&a && t.fillRect(r, n + 2 * s, 1, 1),
                    8&a && t.fillRect(r + s, n, 1, 1),
                    16&a && t.fillRect(r + s, n + s, 1, 1),
                    32&a && t.fillRect(r + s, n + 2 * s, 1, 1)
              }
              function l(e, t) {
                for (var r = t.x, n = t.y, i = t.width, o = t.height,
                         s = e.getImageData(r, n, i, o).data, a = 3;
                     a < s.length; a += 4)
                  if (0 !== s[a]) return !1;
                return !0
              }
              function c(e, t) {
                for (var r = t.x, n = t.y, i = t.width, o = t.height,
                         s = e.getImageData(r, n, i, o).data, a = 3;
                     a < s.length; a += 4)
                  if (0 === s[a]) return !1;
                return !0
              }
              function u(e, t, r, n, i) {
                return l(t, f(e, r, n, i))
              }
              function d(e, t, r, n, i) {
                for (var o = e.dotSpacing, s = 3 + 2 * o, l = 0; l < i.length;
                     l++)
                  a(e, t, r + s * l, n, i[l])
              }
              function p(e, t) {
                var r = e.dotSpacing;
                return (2 + r) * t.length + (1 + r) * (t.length - 1)
              }
              function h(e, t) {
                return 3 + 2 * e.dotSpacing
              }
              function f(e, t, r, n) {
                var i = e.cellPadding;
                return {
                  x: t - i, y: r - i, width: p(e, n) + 2 * i,
                      height: h(e, n) + 2 * i
                }
              }
              function g(e, t) {
                if (!e) return t;
                var r = Math.min(e.x, t.x), n = Math.min(e.y, t.y);
                return {
                  x: r, y: n, width: Math.max(e.x + e.width, t.x + t.width) - r,
                      height: Math.max(e.y + e.height, t.y + t.height) - n
                }
              }
              function m(e, t, r) {
                return Math.min(Math.max(e, t), r)
              }
              function y(e, t, r, n, i) {
                return {
                  x: m(r, 0, t.canvas.width - p(e, i)),
                      y: m(n, 0, t.canvas.height - h(e, i))
                }
              }
              function v(e, t, r, n, i) {
                var o = t.fillStyle;
                t.fillStyle = 'white';
                var s = f(e, r, n, i);
                t.fillRect(s.x, s.y, s.width, s.height),
                    t.fillStyle = 'black', d(e, t, r, n, i), t.fillStyle = o
              }
              function b(e, t, r, n) {
                var i = e.cellPadding;
                return {
                  x: Math.round(t - (p(e, n) + i)), y: r
                }
              }
              function x(e) {
                return e.replace(/\u283C(?!$)/g, '')
              }
              function w(e, t) {
                var r = 'nemeth' === t ? s.latexToNemeth(e) : s.latexToUeb(e);
                return r.isError ? '' : x(r.value)
              }
              function _(e, t) {
                return t >= 0 ? e * Math.pow(10, t) : e / Math.pow(10, -t)
              }
              function E(e, t, r, n) {
                var i = r[0], o = r[1],
                    s = Math.ceil(Math.log(o - i) / Math.LN10) - 1, a = s,
                    l = 5;
                e: for (var c = s; s - c < 4; c--)
                for (var u = 0, d = [5, 2, 1]; u < d.length; u++) {
                  var h = d[u], f = _(h, c), g = Math.floor(i / f) + 1,
                      m = Math.ceil(o / f) - 1, y = Math.abs(n(f) - n(0)),
                      v = w(String(_(g * h, c)), t),
                      b = w(String(_(m * h, c)), t);
                  if (y < p(e, v) + p(e, ' ') || y < p(e, b) + p(e, ' '))
                    break e;
                  if (m - g >= 15) break e;
                  a = c, l = h
                }
                return {
                  int: l, exp: a
                }
              }
              function S(e, t, r) {
                return E(e, t, [r.viewport.xmin, r.viewport.xmax], function(e) {
                  return r.mapx(e)
                })
              }
              function M(e, t, r) {
                return r.viewport.isSquare(r.screen) ?
                    S(e, t, r) :
                    E(e, t, [r.viewport.ymin, r.viewport.ymax], function(e) {
                      return r.mapy(e)
                    })
              }
              function I(e, t) {
                for (var r = e.int, n = e.exp, i = t[0], o = t[1],
                         s = Math.ceil(i / _(r, n)),
                         a = Math.floor(o / _(r, n)), l = [], c = s;
                     c <= a; c++)
                  l.push(_(c * r, n));
                return l
              }
              function k(e, t, r) {
                return {
                  x: I(S(e, t, r), [r.viewport.xmin, r.viewport.xmax]),
                      y: I(M(e, t, r), [r.viewport.ymin, r.viewport.ymax])
                }
              }
              function C(e, t, s, a, d) {
                var m, x, _, E, S, M, I, C;
                if (void 0 !== s.margins && void 0 !== t) {
                  var j = T(a), V = s.margins, U = r.__assign({}, t.settings),
                      z = U.showGrid && L(a), G = !!U.showXAxis,
                      K = !!U.showYAxis, W = !!U.xAxisNumbers,
                      H = U.xAxisArrowMode, Y = !!U.yAxisNumbers,
                      X = U.yAxisArrowMode, $ = j.graphLineWidth, Q = {
                        showGrid: !1,
                        xAxisNumbers: !1,
                        xAxisArrowMode: o.AxisArrowModes.NONE,
                        yAxisNumbers: !1,
                        yAxisArrowMode: o.AxisArrowModes.NONE,
                        showXAxis: !1,
                        showYAxis: !1,
                        graphLineWidth: $,
                        pointLineWidth: 2.5,
                        curveOpacity: 1,
                        globalCurveColor: '#000',
                        disableFill: !0
                      };
                  for (var Z in Q) t.settings[Z] = Q[Z];
                  var J = e.width - V.right - V.left,
                      ee = e.height - V.top - V.bottom,
                      te = new i.Screen(J, ee), re = t.getProjection().viewport;
                  t.settings.squareAxes && (re = re.squareCrop(te));
                  var ne = new n.Projection(te, re, t.settings),
                      ie = e.getContext('2d'),
                      oe = document.createElement('canvas');
                  oe.width = J, oe.height = ee;
                  var se = oe.getContext('2d'),
                      ae = document.createElement('canvas');
                  ae.width = J, ae.height = ee;
                  var le = ae.getContext('2d'),
                      ce = document.createElement('canvas');
                  ce.width = J, ce.height = ee;
                  var ue = ce.getContext('2d'),
                      de = document.createElement('canvas');
                  de.width = J, de.height = ee;
                  var pe = de.getContext('2d'),
                      he = document.createElement('canvas');
                  he.width = J, he.height = ee;
                  var fe = he.getContext('2d');
                  if (null !== ie && null !== pe && null !== se &&
                      null !== ue && null !== fe && null !== le) {
                    t.settings.disableFill = !0, t.screenshotToCanvas(de, {
                      width: J,
                      height: ee,
                      targetPixelRatio: 1,
                      transparentBackground: !0
                    }),
                    t.settings.disableFill = !1, t.screenshotToCanvas(oe, {
                      width: J,
                      height: ee,
                      targetPixelRatio: 1,
                      transparentBackground: !0
                    }),
                    ie.fillStyle = 'white',
                    ie.fillRect(0, 0, e.width, e.height);
                    var ge = Math.round(ne.mapx(0)),
                        me = Math.round(ne.mapy(0)),
                        ye = '' !== U.xAxisLabel ?
                        U.xAxisLabel.replace(/ /g, '\\ ') :
                        'x',
                        ve = '' !== U.yAxisLabel ?
                        U.yAxisLabel.replace(/ /g, '\\ ') :
                        'y';
                    if (G && ne.coordsAreOnscreen(J - 6, me - 8, 0)) {
                      var be = r.__assign(
                              r.__assign({}, j),
                              {cellPadding: j.cellPadding + 1}),
                          xe = 2 + 2 * h(be, ye), we = J - 2, _e = me - xe,
                          Ee = w(ye, d);
                      m = b(be, we, _e, Ee), we = m.x, _e = m.y,
                      x = y(be, se, we, _e, Ee), we = x.x, _e = x.y,
                      v(be, fe, we, _e, Ee)
                    }
                    if (K && ne.coordsAreOnscreen(ge + 4, 1, 0)) {
                      var be = r.__assign(
                              r.__assign({}, j),
                              {cellPadding: j.cellPadding + 1}),
                          we = ge + 4, _e = 1, Ee = w(ve, d);
                      _ = y(be, se, we, _e, Ee), we = _.x, _e = _.y,
                      v(be, fe, we, _e, Ee)
                    }
                    var Se = k(j, d, ne), Me = Se.x, Ie = Se.y;
                    if (G) {
                      for (var ke = void 0, Ce = 0, Te = Me; Ce < Te.length;
                           Ce++) {
                        var Le = Te[Ce];
                        if (0 !== Le || !K) {
                          var Pe = Math.round(ne.mapx(Le));
                          if (!(Pe < 2 || Pe > ne.screen.width - 2) && W) {
                            var Ae = p(j, w('-1', d)) - p(j, w('1', d)),
                                De = Le < 0 ? Ae + 1 : 1, we = Pe - De,
                                _e = me + 4, Ee = w('' + Le, d);
                            E = y(j, fe, we, _e, Ee), we = E.x, _e = E.y,
                            u(j, pe, we, _e, Ee) &&
                                (v(j, fe, we, _e, Ee),
                                 ke = g(ke, f(j, we, _e, Ee)))
                          }
                        }
                      }
                      if (j.embossPatternInequalities && ke) {
                        var Oe = {x: 0, y: me, width: J, height: 0};
                        ke = g(ke, Oe), ue.fillStyle = 'white',
                        ue.fillRect(ke.x, ke.y, ke.width, ke.height)
                      }
                    }
                    if (K) {
                      for (var ke = void 0, Fe = 0, qe = Ie; Fe < qe.length;
                           Fe++) {
                        var Ne = qe[Fe];
                        if (0 !== Ne || !G) {
                          var Re = Math.round(ne.mapy(Ne));
                          if (!(Re < 2 || Re > ne.screen.height - 2)) {
                            var xe = -Math.ceil(h(j, ' ') / 2);
                            if (Y) {
                              var we = ge - 4, _e = Re + xe, Ee = w('' + Ne, d);
                              S = b(j, we, _e, Ee), we = S.x, _e = S.y,
                              M = y(j, fe, we, _e, Ee), we = M.x, _e = M.y,
                              u(j, pe, we, _e, Ee) &&
                                  (v(j, fe, we, _e, Ee),
                                   ke = g(ke, f(j, we, _e, Ee)))
                            }
                          }
                        }
                      }
                      if (j.embossPatternInequalities && ke) {
                        var Oe = {x: ge, y: 0, width: 0, height: ee};
                        ke = g(ke, Oe), ue.fillStyle = 'white',
                        ue.fillRect(ke.x, ke.y, ke.width, ke.height)
                      }
                    }
                    if (G && K) {
                      var we = ge - 2, _e = me + 2,
                          Ee = w(W || Y ? '0' : 'o', d);
                      I = b(j, we, _e, Ee), we = I.x, _e = I.y,
                      ne.coordsAreOnscreen(we, _e, 0) &&
                          (C = y(j, fe, we, _e, Ee), we = C.x, _e = C.y,
                           u(j, pe, we, _e, Ee) && v(j, fe, we, _e, Ee))
                    }
                    for (var Be = 0, je = Me; Be < je.length; Be++) {
                      var Le = je[Be], Pe = Math.round(ne.mapx(Le));
                      Pe<2 || Pe>ne.screen.width - 2 ||
                          (K && 0 === Le ||
                           z && D(ue, 'white', Pe - 1, 0, ee, 3))
                    }
                    for (var Ve = 0, Ue = Ie; Ve < Ue.length; Ve++) {
                      var Ne = Ue[Ve], Re = Math.round(ne.mapy(Ne));
                      Re<2 || Re>ne.screen.height - 2 ||
                          (G && 0 === Ne ||
                           z && O(ue, 'white', Re - 1, 0, J, 3))
                    }
                    G && O(ue, 'white', me - 3, 0, J, 7),
                        K && D(ue, 'white', ge - 3, 0, ee, 7);
                    for (var ze = 0, Ge = Me; ze < Ge.length; ze++) {
                      var Le = Ge[ze], Pe = Math.round(ne.mapx(Le));
                      Pe<2 || Pe>ne.screen.width - 2 ||
                          (K && 0 === Le ||
                           (z ? D(ue, A(a), Pe, 0, ee) :
                                G && D(ue, A(a), Pe, me - 3, me + 2)))
                    }
                    for (var Ke = 0, We = Ie; Ke < We.length; Ke++) {
                      var Ne = We[Ke], Re = Math.round(ne.mapy(Ne));
                      Re<2 || Re>ne.screen.height - 2 ||
                          (G && 0 === Ne ||
                           (z ? O(ue, A(a), Re, 0, J) :
                                K && O(ue, A(a), Re, ge - 3, ge + 2)))
                    }
                    if (G && O(ue, P(a), me, 0, J), K && D(ue, P(a), ge, 0, ee),
                        X !== o.AxisArrowModes.NONE &&
                            (R(ue, P(a), ge, 0),
                             X === o.AxisArrowModes.BOTH &&
                                 N(ue, P(a), ge, ee - 1)),
                        H !== o.AxisArrowModes.NONE &&
                            (F(ue, P(a), J - 1, me),
                             H === o.AxisArrowModes.BOTH && q(ue, P(a), 0, me)),
                        j.embossPatternInequalities)
                      for (var we = 0; we < J; we += 6)
                        for (var _e = 0; _e < ee; _e += 6) {
                          var He = {x: we, y: _e, width: 3, height: 3};
                          c(se, He) && l(ue, He) && l(pe, He) && l(fe, He) &&
                              B(le, 'black', we, _e)
                        }
                    j.embossPatternInequalities ||
                        ie.drawImage(oe, V.left, V.top),
                        ie.drawImage(ce, V.left, V.top),
                        ie.drawImage(de, V.left, V.top),
                        ie.drawImage(he, V.left, V.top),
                        j.embossPatternInequalities &&
                        ie.drawImage(ae, V.left, V.top)
                  }
                  for (var Z in Q) t.settings[Z] = U[Z]
                }
              }
              function T(e) {
                if ('etc8' === e || 'etc11' === e)
                  return {
                    dotSpacing: 0,
                    cellPadding: 1,
                    graphLineWidth: 1.75,
                    embossPatternInequalities: !0
                  };
                if ('vpmax8' === e || 'vpmax11' === e)
                  return {
                    dotSpacing: 1,
                    cellPadding: 2,
                    graphLineWidth: 1,
                    embossPatternInequalities: !1
                  };
                var t = e;
                throw new Error('Unexpected embosser model ' + t)
              }
              function L(e) {
                if ('etc8' === e || 'etc11' === e) return !1;
                if ('vpmax8' === e || 'vpmax11' === e) return !0;
                var t = e;
                throw new Error('Unexpected embosser model ' + t)
              }
              function P(e) {
                switch (e) {
                  case 'vpmax8':
                  case 'vpmax11':
                    return 'rgb(145, 145, 145)';
                  case 'etc8':
                  case 'etc11':
                    return 'rgb(0, 0, 0)';
                  default:
                    var t = e;
                    throw new Error('Unexpected embosser model: ' + t)
                }
              }
              function A(e) {
                switch (e) {
                  case 'vpmax8':
                  case 'vpmax11':
                    return 'rgb(219, 219, 219)';
                  case 'etc8':
                  case 'etc11':
                    return 'rgb(0, 0, 0)';
                  default:
                    var t = e;
                    throw new Error('Unexpected embosser model: ' + t)
                }
              }
              function D(e, t, r, n, i, o) {
                void 0 === o && (o = 1);
                var s = e.fillStyle;
                e.fillStyle = t, e.fillRect(r - 1, n, o, i - n), e.fillStyle = s
              }
              function O(e, t, r, n, i, o) {
                void 0 === o && (o = 1);
                var s = e.fillStyle;
                e.fillStyle = t, e.fillRect(n, r - 1, i - n, o), e.fillStyle = s
              }
              function F(e, t, r, n) {
                var i = e.fillStyle;
                e.fillStyle = t;
                for (var o = -2; o <= 2; o++)
                  e.fillRect(r - Math.abs(o), n - 1 + o, 1, 1);
                e.fillStyle = i
              }
              function q(e, t, r, n) {
                var i = e.fillStyle;
                e.fillStyle = t;
                for (var o = -2; o <= 2; o++)
                  e.fillRect(r + Math.abs(o), n - 1 + o, 1, 1);
                e.fillStyle = i
              }
              function N(e, t, r, n) {
                var i = e.fillStyle;
                e.fillStyle = t;
                for (var o = -2; o <= 2; o++)
                  e.fillRect(r - 1 + o, n - Math.abs(o), 1, 1);
                e.fillStyle = i
              }
              function R(e, t, r, n) {
                var i = e.fillStyle;
                e.fillStyle = t;
                for (var o = -2; o <= 2; o++)
                  e.fillRect(r - 1 + o, n + Math.abs(o), 1, 1);
                e.fillStyle = i
              }
              function B(e, t, r, n) {
                var i = e.fillStyle;
                e.fillStyle = t, e.fillRect(r + 1, n, 1, 1),
                e.fillRect(r, n + 1, 1, 1), e.fillRect(r + 1, n + 1, 1, 1),
                e.fillRect(r + 2, n + 1, 1, 1), e.fillRect(r + 1, n + 2, 1, 1),
                e.fillStyle = i
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var j = 10240;
              t.createBrailleImage = C
            });
          r('graphing/braille-size-options', ['require', 'exports'],
            function(e, t) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.brailleSizes = {}, t.brailleSizes.vpmax8 = {
                    width: 170,
                    height: 220,
                    margins: {left: 5, top: 15, right: 5, bottom: 50},
                    name: function(e) {
                      return e.t('VP Max (8.5 x 11 in)')
                    }
                  },
                  t.brailleSizes.vpmax11 = {
                    width: 230,
                    height: 220,
                    margins: {left: 15, top: 15, right: 5, bottom: 5},
                    name: function(e) {
                      return e.t('VP Max (11.5 x 11 in)')
                    }
                  },
                  t.brailleSizes.etc8 = {
                    width: 96,
                    height: 96,
                    margins: {left: 5, top: 15, right: 0, bottom: 0},
                    name: function(e) {
                      return e.t('ETC Romeo/Juliet (8.5 x 11 in)')
                    }
                  },
                  t.brailleSizes.etc11 = {
                    width: 132,
                    height: 134,
                    margins: {left: 10, top: 15, right: 5, bottom: 5},
                    name: function(e) {
                      return e.t('ETC Romeo/Juliet (11.5 x 11 in)')
                    }
                  }
            });
          r('graphing/movablepointslayer',
            [
              'require', 'exports', 'tslib', 'dcgview', 'browser',
              'core/lib/label', 'core/graphing-calc/json/expression',
              'lib/aria', './constants', 'jquery'
            ],
            function(e, t, r, n, i, o, s, a, l, c) {
              'use strict';
              function u(e, t, r) {
                return 'X: ' + o.value(e, r.xmax - r.xmin).ariaString +
                    '. Y: ' + o.value(t, r.ymax - r.ymin).ariaString
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var d = n.Components.For, p = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.grapher = this.props.grapher(),
                  this.renderedPointsIdOrder = [], this.renderedPoints = {}
                }, t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      d, {
                        each: function() {
                          return e.renderedPointsIdOrder
                        }
                      },
                      n.createElement(
                          'div', {
                            class: n.const('dcg-graph-outer'),
                            style: this.const({'z-index': 0}),
                            onFocusin: function() {
                              return e.requestRedrawNextFrame()
                            },
                            onFocusout: function() {
                              return e.requestRedrawNextFrame()
                            },
                            didMount: this.didMountRoot.bind(this)
                          },
                          function(t) {
                            return n.createElement('div', {
                              class: e.const({
                                'dcg-tabbable-point': !0,
                                'dcg-movable-point':
                                    'movable' === e.renderedPoints[t].type
                              }),
                              style: function() {
                                return {
                                  transform: e.getTransform(t)
                                }
                              },
                              role: n.const('button'),
                              'aria-roledescription': function() {
                                return 'movable' === e.renderedPoints[t].type ?
                                    'movable point' :
                                    'point'
                              },
                              'dcg-mp-id': e.const(t),
                              tabindex: function() {
                                return e.getTabIndex(t)
                              },
                              'aria-label': function() {
                                return e.getAriaLabel(t)
                              },
                              'aria-hidden': e.bindFn(e.getAriaHidden)
                            })
                          }))
                }, t.prototype.redraw = function(e, t, r) {
                  var n = this, i = this.grapher.graphSketches,
                      o = this.renderedPoints;
                  this.renderedPoints = {}, this.renderedPointsIdOrder = [];
                  var s, a = this.getFocusedPointId(), l = function(i) {
                    var s = n.processPOI(e, t, i, o[i.id], r, a);
                    s &&
                        (n.renderedPoints[i.id] = s,
                         n.renderedPointsIdOrder.push(i.id))
                  };
                  for (s in i) {
                    var c = i[s];
                    c.visible &&
                        (c.getMovablePoints().forEach(l),
                         c.getStaticLabeledPoints().forEach(l))
                  }
                  var u = this.renderedPoints[this.hoveredPointId],
                      d = this.renderedPoints[this.pressedPointId],
                      p = u && u.poi, h = d && d.poi;
                  p || this.setHoveredPointId(void 0),
                      h || this.setPressedPointId(void 0);
                  var f, g, m = h || p;
                  m ? (f = 'movable-point' === m.type && m.tableInfo &&
                           m.tableInfo.dragX,
                       g = 'movable-point' === m.type && m.tableInfo &&
                           m.tableInfo.dragY,
                       f && g || !f && !g ?
                           this.grapher.setLayerClass(
                               'movablePoints',
                               'dcg-mouse-over-movable-point') :
                           f ? this.grapher.setLayerClass(
                                   'movablePoints',
                                   'dcg-mouse-over-movable-point-ew') :
                               this.grapher.setLayerClass(
                                   'movablePoints',
                                   'dcg-mouse-over-movable-point-ns')) :
                      this.grapher.setLayerClass('movablePoints', void 0),
                      this.update(), this.speakAriaAlert()
                }, t.prototype.drawForScreenshot = function(e, t, r, n) {
                  var i = this, o = this.grapher.graphSketches;
                  for (var s in o) {
                    var a = o[s];
                    a.visible && a.getMovablePoints().forEach(function(o) {
                      var s = {
                        screenX: t.mapx(o.x),
                        screenY: t.mapy(o.y),
                        color: o.color,
                        animationPercent: 0
                      };
                      i.drawMovablePointOnCtx(e, s, r, n)
                    })
                  }
                }, t.prototype.processPOI = function(e, t, r, n, i, o) {
                  var s = r.id, a = r.x, c = r.y, u = t.mapx(a), d = t.mapy(c),
                      p = o === s,
                      h = t.coordsAreOnscreen(u, d, l.OFFSCREEN_RENDER_MARGIN);
                  if (h || p)
                    return n ||
                               (n = 'movable-point' === r.type ?
                                    {
                                      type: 'movable',
                                      id: s,
                                      pointOnScreen: h,
                                      poi: r,
                                      projection: t,
                                      screenX: screenX,
                                      screenY: screenY,
                                      color: r.color,
                                      pointIsHovered: !1,
                                      pointIsPressed: !1,
                                      lastHoverActionTime: 0,
                                      animationPercent: 0
                                    } :
                                    {
                                      type: 'static',
                                      id: s,
                                      pointOnScreen: h,
                                      poi: r,
                                      projection: t,
                                      screenX: screenX,
                                      screenY: screenY
                                    }),
                           n.pointOnScreen = h, n.poi = r, n.projection = t,
                           n.screenX = u, n.screenY = d,
                           'movable' === n.type && (n.color = n.poi.color),
                           'movable' === n.type &&
                               (this.updateMovablePointAnimation(n),
                                this.drawMovablePointOnCtx(e, n, i)),
                           n
                }, t.prototype.drawMovablePointOnCtx = function(e, t, r, n) {
                  var i;
                  i = n ||
                      (this.grapher.settings.config.projectorMode ? 13.5 :
                                                                    10.5);
                  var o = t.color, s = t.screenX, a = t.screenY,
                      l = t.animationPercent || 0;
                  r.push(
                      {left: s - i, right: s + i, top: a - i, bottom: a + i}),
                      e.save(),
                      e.fillStyle = o, e.globalAlpha = .35, e.beginPath(),
                      e.moveTo(s + i, a), e.arc(s, a, i, 0, 2 * Math.PI, !0),
                      e.closePath(), e.fill(), e.globalAlpha = 1,
                      i *= .3 + .7 * l, e.beginPath(), e.moveTo(s + i, a),
                      e.arc(s, a, i, 0, 2 * Math.PI, !0), e.closePath(),
                      e.fill(), e.restore()
                }, t.prototype.updateMovablePointAnimation = function(e) {
                  var t = Date.now(), r = e.id, n = this.hoveredPointId === r,
                      i = this.pressedPointId === r;
                  e.pointIsPressed = i,
                  n !== e.pointIsHovered &&
                      (e.pointIsHovered = n, e.lastHoverActionTime = t);
                  var o = e.animationPercent || 0,
                      s = t - e.lastHoverActionTime, a = .004 * s;
                  i ? o = 1 :
                      n ?
                      (o += a, o >= 1 ? o = 1 : this.requestRedrawNextFrame()) :
                      (o -= a, o <= 0 ? o = 0 : this.requestRedrawNextFrame()),
                      e.animationPercent = o
                }, t.prototype.getTransform = function(e) {
                  var t = this.renderedPoints[e];
                  if (t) return i.translateRule(t.screenX, t.screenY)
                }, t.prototype.getTabIndex = function(e) {
                  var t = this.renderedPoints[e];
                  if (!t) return -1;
                  var r = t.poi,
                      n = this.grapher.controller.getItemEditableLabelMode(
                          r.sketch.id),
                      i = 'movable' === t.type || void 0 === n ||
                      n === s.EditableLabelMode.None,
                      o = this.grapher.settings,
                      a = o.config.graphpaper && o.config.enableTabindex;
                  return i && a ? 0 : -1
                }, t.prototype.getAriaHidden = function() {
                  return !this.grapher.settings.config.graphpaper
                }, t.prototype.getAriaLabel = function(e) {
                  var t =
                      this.getAriaAlert({id: e, includeUsageInstructions: !1});
                  return t && t.completeMessage
                }, t.prototype.speakAriaAlert = function() {
                  var e = this.getFocusedPointId();
                  if (e) {
                    var t = this.renderedPoints[e];
                    if (!t || 'static' === t.type) return
                  }
                  var r = this.getAriaAlert({
                    id: e,
                    lastAriaAlert: this.lastAriaAlert,
                    includeUsageInstructions: !0
                  });
                  this.lastAriaAlert = r,
                  r && r.completeMessage && a.alert(r.completeMessage)
                }, t.prototype.getAriaAlert = function(e) {
                  var t = e.id, r = e.lastAriaAlert,
                      n = e.includeUsageInstructions;
                  if (t) {
                    var i = this.renderedPoints[t];
                    if (i) {
                      r && r.id !== t && (r = void 0);
                      var o = i.poi, s = i.pointOnScreen, a = i.projection;
                      if (o && a) {
                        var l = a.viewport;
                        if (l) {
                          var c, d = r && r.label, p = o.ariaLabel, h = d !== p,
                                 f = r && r.coordX, g = r && r.coordY, m = o.x,
                                 y = o.y, v = m !== f || y !== g,
                                 b = u(m, y, l) + '.',
                                 x = this.grapher.controller.t,
                                 w = p || x('Graph point'),
                                 _ = 'movable-point' === o.type && n ?
                              x(' is movable. Press Arrows or Shift+Arrows to adjust.') :
                              '',
                                 E = s ? '' : x(' not visible on screen');
                          return c = r ? h ? w + E :
                                         v ? b + E :
                                             '' :
                                         w + '. ' + b + _ + E,
                          {
                            id: t, coordX: m, coordY: y, label: p,
                                completeMessage: c
                          }
                        }
                      }
                    }
                  }
                }, t.prototype.setHoveredPointId = function(e) {
                  e !== this.hoveredPointId &&
                      (this.hoveredPointId = e, this.requestRedrawNextFrame())
                }, t.prototype.isMovingPoint = function() {
                  return !!this.pressedPointId
                }, t.prototype.setPressedPointId = function(e) {
                  e !== this.pressedPointId &&
                      (this.pressedPointId = e, this.requestRedrawNextFrame())
                }, t.prototype.getFocusedPointId = function() {
                  if (document.activeElement &&
                      c.contains(this.rootNode, document.activeElement)) {
                    return c(document.activeElement).attr('dcg-mp-id')
                  }
                }, t.prototype.getFocusedPoint = function() {
                  var e = this.getFocusedPointId();
                  if (e) {
                    var t = this.renderedPoints[e];
                    if (t) {
                      return t.poi
                    }
                  }
                }, t.prototype.didMountRoot = function(e) {
                  this.rootNode = e
                }, t.prototype.requestRedrawNextFrame = function() {
                  this.grapher.redrawAllLayers()
                }, t
              }(n.Class);
              t.default = p, t.getCoordsString = u
            });
          r('graphing/integral-image', ['require', 'exports'], function(e, t) {
            'use strict';
            function r(e, t, r) {
              return Math.max(t, Math.min(r, e))
            }
            Object.defineProperty(t, '__esModule', {value: !0});
            var n = function() {
              function e(e) {
                var t = e.data, r = e.width, n = e.height;
                this.imageData = e;
                for (var i = 1; i < r; i++) t[i] += t[i - 1];
                for (var o = 1; o < n; o++) t[o * r] += t[o * r - r];
                for (var s = r * n - r - n + 1, a = r - 1, l = 0; l < s; l++) {
                  var i = 1 + l % a, o = 1 + Math.floor(l / a), c = o * r,
                      u = i - 1 + c, d = i + c - r, p = i - 1 + c - r;
                  t[c + i] += t[u] + t[d] - t[p]
                }
              }
              return e.prototype.getSumForValidRect = function(e) {
                var t = e.left - 1, r = e.right - 1, n = e.top - 1,
                    i = e.bottom - 1, o = this.imageData.width,
                    s = this.imageData.data, a = s[t + n * o], l = s[r + n * o],
                    c = s[t + i * o], u = s[r + i * o];
                return t >= 0 && n >= 0 ? u - l - c + a :
                    t >= 0              ? u - c :
                    n >= 0              ? u - l :
                                          u
              }, e.prototype.getSum = function(e) {
                var t = {
                  left: r(Math.floor(e.left), 0, this.imageData.width),
                  right: r(Math.ceil(e.right), 0, this.imageData.width),
                  top: r(Math.floor(e.top), 0, this.imageData.height),
                  bottom: r(Math.ceil(e.bottom), 0, this.imageData.height)
                };
                return t.left >= t.right || t.top >= t.bottom ?
                    0 :
                    this.getSumForValidRect(t)
              }, e
            }();
            t.default = n
          });
          r('graphing/automatic-label-placer',
            ['require', 'exports', 'graphing/integral-image', 'underscore'],
            function(e, t, r, n) {
              'use strict';
              function i(e, t) {
                if (!(t.width * t.height > 0))
                  return new r.default({width: 0, height: 0, data: []});
                b.width = 0, b.width = Math.round(t.width * v),
                b.height = Math.round(t.height * v);
                var n = b.getContext('2d');
                n.save(),
                    n.scale(
                        b.width / e.canvas.width, b.height / e.canvas.height),
                    n.drawImage(e.canvas, 0, 0), n.restore();
                var i = n.getImageData(0, 0, b.width, b.height), o = i.data;
                o.length, x.length, x = new Array(o.length / 4);
                for (var s = x, a = 0; a < s.length; a++) s[a] = o[4 * a + 3];
                return new r.default(
                    {width: i.width, height: i.height, data: s})
              }
              function o(e) {
                for (var t = 0; t < e.length; t++) {
                  var r = s(t, e);
                  e[t] = [r]
                }
                return e.map(function(e) {
                  return e[0]
                })
              }
              function s(e, t) {
                var r = 1 / 0, n = -1, i = t[e];
                if (1 === i.length) return i[0];
                for (var o = 0; o < i.length; o++) {
                  var s = t[e][o].staticScore, l = a(e, o, t), c = s + l;
                  (-1 === n || c < r) && (r = c, n = o)
                }
                return i[n]
              }
              function a(e, t, r) {
                for (var n = 0, i = r[e][t], o = 0; o < r.length; o++)
                  if (o !== e) {
                    for (var s = 0, a = r[o], l = a.length - 1; l >= 0; l--) {
                      var c = a[l],
                          u = Math.max(
                              0,
                              Math.min(i.right, c.right) -
                                  Math.max(i.left, c.left)),
                          d = Math.max(
                              0,
                              Math.min(i.bottom, c.bottom) -
                                  Math.max(i.top, c.top));
                      s += u * d
                    }
                    n += s / a.length
                  }
                return n
              }
              function l(e, t) {
                var r = t.getSum({
                  left: e.left * v,
                  right: e.right * v,
                  top: e.top * v,
                  bottom: e.bottom * v
                });
                return r /= 200, r /= v * v
              }
              function c(e, t) {
                var r = 0;
                return t.forEach(function(t) {
                  r += d(e, t)
                }),
                       r
              }
              function u(e, t) {
                var r = d(e, t);
                return 10 * (e.width * e.height - r)
              }
              function d(e, t) {
                return Math.max(
                           0,
                           Math.min(e.right, t.right) -
                               Math.max(e.left, t.left)) *
                    Math.max(
                        0,
                        Math.min(e.bottom, t.bottom) - Math.max(e.top, t.top))
              }
              function p(e, t, r) {
                var n;
                return function() {
                  return n || (n = {
                           domObstructions: r,
                           viewport: {
                             left: 0,
                             right: t.width,
                             top: 0,
                             bottom: t.height
                           },
                           integralImage: i(e, t)
                         }),
                         n
                }
              }
              function h(e, t) {
                if (!(t.length <= 1))
                  for (var r = e(), n = 0, i = t; n < i.length; n++) {
                    var o = i[n];
                    o.staticScore += u(o, r.viewport),
                        o.staticScore += c(o, r.domObstructions),
                        o.staticScore += l(o, r.integralImage)
                  }
              }
              function f(e, t) {
                var r = t.nakedLabel ? 0 : t.pt_radius,
                    i = Math.round(r / Math.sqrt(2)), o = [], s = t.pt_x,
                    a = t.pt_y, l = t.width, c = t.height;
                o.push({
                  left: s - l / 2,
                  top: a - c / 2,
                  staticScore: -1 / 0,
                  orientation: 'center'
                }),
                    o.push({
                      left: s + r + 3,
                      top: a - c / 2,
                      staticScore: 400,
                      orientation: 'right'
                    }),
                    o.push({
                      left: s - (r + l) - 3,
                      top: a - c / 2,
                      staticScore: 400,
                      orientation: 'left'
                    }),
                    o.push({
                      left: s - l / 2,
                      top: a - (c + r),
                      staticScore: 400,
                      orientation: 'above'
                    }),
                    o.push({
                      left: s - (l + i),
                      top: a - (c + i),
                      staticScore: 400,
                      orientation: 'tl'
                    }),
                    o.push({
                      left: s + i,
                      top: a - (c + i),
                      staticScore: 400,
                      orientation: 'tr'
                    }),
                    o.push({
                      left: s - l / 2,
                      top: a + r,
                      staticScore: 400,
                      orientation: 'below'
                    }),
                    o.push({
                      left: s - (l + i),
                      top: a + i,
                      staticScore: 400,
                      orientation: 'bl'
                    }),
                    o.push({
                      left: s + i,
                      top: a + i,
                      staticScore: 400,
                      orientation: 'br'
                    });
                var u = o.map(function(e) {
                  var r = Math.round(e.left), n = Math.round(e.left + l),
                      i = Math.round(e.top), o = Math.round(e.top + c);
                  return {
                    pt_x: Math.round(s), pt_y: Math.round(a), left: r, right: n,
                        top: i, bottom: o, width: n - r, height: o - i,
                        staticScore: t.priorOrientation === e.orientation ?
                        e.staticScore - 20 :
                        e.staticScore,
                        orientation: e.orientation
                  }
                });
                return u = t.enforceOrientation &&
                               'default' !== t.enforceOrientation ?
                           n.filter(
                               u,
                               function(e) {
                                 return e.orientation === t.enforceOrientation
                               }) :
                           t.nakedLabel ?
                           n.filter(
                               u,
                               function(e) {
                                 return 'center' === e.orientation
                               }) :
                           t.keepOrientation && t.priorOrientation ?
                           n.filter(
                               u,
                               function(e) {
                                 return e.orientation === t.priorOrientation
                               }) :
                           n.filter(
                               u,
                               function(e) {
                                 return 'center' !== e.orientation
                               }),
                       h(e, u), u
              }
              function g(e, t) {
                for (var r = [], i = t.width, o = t.height, s = i / 2,
                         a = o / 2, l = t.pt_x1, c = t.pt_y1, u = t.pt_x2,
                         d = t.pt_y2, p = (d - c) / (u - l),
                         f = Math.atan2(d - c, u - l) + Math.PI / 2,
                         g = 5 * Math.cos(f), m = 5 * Math.sin(f),
                         y = Math.min(c, d) - Math.abs(m) - o,
                         v = Math.max(c, d) + Math.abs(m),
                         b = [.5, .4, .6, .2, .8], x = [0, 20, 20, 40, 40],
                         w = [], _ = 0, E = b;
                     _ < E.length; _++) {
                  var S = E[_];
                  w.push({x: l * (1 - S) + u * S, y: c * (1 - S) + d * S})
                }
                for (var M = 0; M < w.length; M++) {
                  var I, k, C, T, L = w[M];
                  if (p >= 2 || p <= -2) {
                    C = T = L.y - a;
                    var P = Math.abs((u - l) / (d - c) * a) + Math.abs(g);
                    I = L.x + P, k = L.x - P - i
                  } else if (p <= .05 && p >= -.05) {
                    I = k = L.x - s;
                    var A = Math.abs(p * s) + Math.abs(m);
                    C = L.y - A - o, T = L.y + A
                  } else
                    g > 0 ? (I = L.x + g, k = L.x - g - i) :
                            (I = L.x + g - i, k = L.x - g),
                        m > 0 ? (C = L.y + m, T = L.y - m - o) :
                                (C = L.y + m - o, T = L.y - m);
                  C<y ? C = y : C>v && (C = v), T<y ? T = y : T>v && (T = v);
                  var D = (u - l) * (C - c) - (d - c) * (I - l) > 0;
                  r.push({
                    pt_x: L.x,
                    pt_y: L.y,
                    left: I,
                    top: C,
                    staticScore: x[M],
                    orientation: M.toString() + (D ? '-a' : '-b')
                  }),
                      r.push({
                        pt_x: L.x,
                        pt_y: L.y,
                        left: k,
                        top: T,
                        staticScore: x[M],
                        orientation: M.toString() + (D ? '-b' : '-a')
                      })
                }
                var O = r.map(function(e) {
                  var r = Math.round(e.left), n = Math.round(e.left + i),
                      s = Math.round(e.top), a = Math.round(e.top + o);
                  return {
                    pt_x: Math.round(e.pt_x), pt_y: Math.round(e.pt_y), left: r,
                        right: n, top: s, bottom: a, width: n - r,
                        height: a - s,
                        staticScore: t.priorOrientation === e.orientation ?
                        e.staticScore - 20 :
                        e.staticScore,
                        orientation: e.orientation
                  }
                });
                return t.keepOrientation && t.priorOrientation &&
                           (O = n.filter(
                                O,
                                function(e) {
                                  return e.orientation === t.priorOrientation
                                })),
                       h(e, O), O
              }
              function m(e, t) {
                var r = [], i = t.pt_x, o = t.pt_y, s = t.width, a = t.height,
                    l = t.startAngle, c = t.endAngle;
                c < l && (c += 2 * Math.PI);
                var u = (l + c) / 2,
                    d = t.isRightAngle ? t.radius * Math.sqrt(2) : t.radius + 4,
                    p = d +
                    Math.sqrt(t.width * t.width / 4 + t.height * t.height / 4),
                    f = [], g = p * Math.sin(u);
                g > d + .5 * a && (g = d + .5 * a),
                    g < -d - .5 * a && (g = -d - .5 * a),
                    f.push({x: i + p * Math.cos(u) - s / 2, y: o + g - a / 2});
                for (var m = 0; m < f.length; m++) {
                  var y = f[m];
                  r.push({
                    pt_x: y.x,
                    pt_y: y.y,
                    left: y.x,
                    top: y.y,
                    staticScore: 0,
                    orientation: m.toString() + '-a'
                  })
                }
                var v = r.map(function(e) {
                  var r = Math.round(e.left), n = Math.round(e.left + s),
                      i = Math.round(e.top), o = Math.round(e.top + a);
                  return {
                    pt_x: Math.round(e.pt_x), pt_y: Math.round(e.pt_y), left: r,
                        right: n, top: i, bottom: o, width: n - r,
                        height: o - i,
                        staticScore: t.priorOrientation === e.orientation ?
                        e.staticScore - 20 :
                        e.staticScore,
                        orientation: e.orientation
                  }
                });
                return t.keepOrientation && t.priorOrientation &&
                           (v = n.filter(
                                v,
                                function(e) {
                                  return e.orientation === t.priorOrientation
                                })),
                       h(e, v), v
              }
              function y(e, t) {
                for (var r = [], i = t.width, o = t.height,
                         s = Math.round(10 / Math.sqrt(2)), a = 0, l = 0, c = 0,
                         u = 0;
                     u < t.path.length - 2; u += 2)
                  c += 1, a += t.path[u], l += t.path[u + 1];
                var d = a / c, p = l / c;
                r.push({
                  left: d - i / 2,
                  top: p - o / 2,
                  staticScore: 0,
                  orientation: 'center'
                }),
                    r.push({
                      left: d + 10 + 3,
                      top: p - o / 2,
                      staticScore: 50,
                      orientation: 'right'
                    }),
                    r.push({
                      left: d - (10 + i) - 3,
                      top: p - o / 2,
                      staticScore: 50,
                      orientation: 'left'
                    }),
                    r.push({
                      left: d - i / 2,
                      top: p - (o + 10),
                      staticScore: 50,
                      orientation: 'top'
                    }),
                    r.push({
                      left: d - (i + s),
                      top: p - (o + s),
                      staticScore: 50,
                      orientation: 'tl'
                    }),
                    r.push({
                      left: d + s,
                      top: p - (o + s),
                      staticScore: 50,
                      orientation: 'tr'
                    }),
                    r.push({
                      left: d - i / 2,
                      top: p + 10,
                      staticScore: 50,
                      orientation: 'bottom'
                    }),
                    r.push({
                      left: d - (i + s),
                      top: p + s,
                      staticScore: 50,
                      orientation: 'bl'
                    }),
                    r.push({
                      left: d + s,
                      top: p + s,
                      staticScore: 50,
                      orientation: 'br'
                    });
                var f = r.map(function(e) {
                  var r = Math.round(e.left), n = Math.round(e.left + i),
                      s = Math.round(e.top), a = Math.round(e.top + o);
                  return {
                    pt_x: Math.round(d), pt_y: Math.round(p), left: r, right: n,
                        top: s, bottom: a, width: n - r, height: a - s,
                        staticScore: t.priorOrientation === e.orientation ?
                        e.staticScore - 20 :
                        e.staticScore,
                        orientation: e.orientation
                  }
                });
                return t.keepOrientation && t.priorOrientation &&
                           (f = n.filter(
                                f,
                                function(e) {
                                  return e.orientation === t.priorOrientation
                                })),
                       h(e, f), f
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var v = .5, b = document.createElement('canvas'), x = [];
              t.getIntegralImage = i, t.computePositions = o,
              t.buildStaticEnvGetter = p, t.generateCandidatesForPoint = f,
              t.generateCandidatesForSegment = g,
              t.generateCandidatesForAngle = m,
              t.generateCandidatesForPolygon = y
            });
          r('graphing/canvas-labels',
            [
              'require', 'exports', 'tslib', 'core/lib/deepCopy',
              'graphing/svg-classes'
            ],
            function(e, t, r, n, i) {
              'use strict';
              function o(e, t, r) {
                r.verticalLabel ? (e.translate(t.left - .5, t.bottom - .5),
                                   e.rotate(-Math.PI / 2)) :
                                  e.translate(t.left - .5, t.top - .5)
              }
              function s(e, t) {
                var r = document.createRange();
                r.selectNode(e);
                var n = r.getBoundingClientRect();
                if (n.width > 0 && n.height > 0) {
                  var i = window.getComputedStyle(e.parentElement),
                      o = e.nodeValue || '';
                  if (o) {
                    var s = parseFloat(i.fontSize), a = -.228 * s;
                    return {
                      type: 'text', rect: {
                        left: n.left - t.canvasLeft,
                        right: n.right - t.canvasLeft,
                        top: n.top - t.canvasTop,
                        bottom: n.bottom - t.canvasTop
                      },
                          text: o, color: i.color || '#000',
                          font: i.fontStyle + ' ' + i.fontSize + ' ' +
                          i.fontFamily,
                          y: (t.verticalLabel ? n.width : n.height) + a
                    }
                  }
                }
              }
              function a(e, t, r) {
                e.save(),
                    e.font = t.font,
                    r ? (e.strokeStyle = '#FFF', e.lineWidth = 3,
                         e.miterLimit = 2, e.strokeText(t.text, 0, t.y)) :
                        (e.fillStyle = t.color, e.fillText(t.text, 0, t.y)),
                    e.restore()
              }
              function l(e, t, r) {
                e.save(),
                    r ? (e.strokeStyle = '#FFF', e.lineWidth = 3) :
                        e.fillStyle = t.color,
                        e.beginPath();
                for (var n = 0, i = t.instructions; n < i.length; n++) {
                  var o = i[n];
                  switch (o.type) {
                    case 'moveTo':
                      e.moveTo(o.x, o.y);
                      break;
                    case 'lineTo':
                      e.lineTo(o.x, o.y);
                      break;
                    case 'ellipse':
                      e.ellipse(
                          o.centerX, o.centerY, o.radiusX, o.radiusY,
                          o.rotation, o.startAngle, o.endAngle, o.anticlockwise)
                  }
                }
                e.closePath(), r ? e.stroke() : e.fill(), e.restore()
              }
              function c(e, t, r) {
                var n = e.getBoundingClientRect();
                if (n.width > 0 && n.height > 0) {
                  var i;
                  i = r.verticalLabel ? n.height : n.width;
                  var o = parseFloat(t.borderTopWidth || '1px'),
                      s = t.borderTopColor || '#000', a = [
                        {type: 'moveTo', x: 0, y: 0},
                        {type: 'lineTo', x: i, y: 0},
                        {type: 'lineTo', x: i, y: o},
                        {type: 'lineTo', x: 0, y: o}
                      ];
                  return {
                    type: 'path', rect: {
                      left: n.left - r.canvasLeft,
                      right: n.right - r.canvasLeft,
                      top: n.top - r.canvasTop,
                      bottom: n.bottom - r.canvasTop
                    },
                        instructions: a, color: s
                  }
                }
              }
              function u(e, t) {
                var r = Math.sqrt(e[0] * e[0] + e[1] * e[1]),
                    n = Math.sqrt(t[0] * t[0] + t[1] * t[1]),
                    i = e[0] * t[0] + e[1] * t[1], o = Math.acos(i / (r * n));
                return e[0] * t[1] - e[1] * t[0] < 0 && (o *= -1), o
              }
              function d(e, t, r, n, i, o, s, a, l) {
                var c = Math.cos(i), d = Math.sin(i), p = (e - a) / 2,
                    h = (t - l) / 2, f = c * p + d * h, g = -d * p + c * h,
                    m = r * r, y = n * n, v = f * f, b = g * g,
                    x = Math.sqrt((m * y - m * b - y * v) / (m * b + y * v));
                o === s && (x *= -1);
                var w = x * r * g / n, _ = -x * n * f / r, E = (e + a) / 2,
                    S = (t + l) / 2, M = c * w - d * _ + E,
                    I = d * w + c * _ + S, k = [1, 0],
                    C = [(f - w) / r, (g - _) / n],
                    T = [(-f - w) / r, (-g - _) / n];
                return {
                  centerX: M, centerY: I, radiusX: r, radiusY: n,
                      startAngle: u(k, C), endAngle: u(k, T), rotation: i,
                      anticlockwise: 0 === s
                }
              }
              function p(e, t) {
                function n(e) {
                  return (e - l) / h
                }
                function i(e) {
                  return (e - u) / f
                }
                var o = e + '-' + t, s = y[o];
                if (s) return s;
                s = [], y[o] = s;
                var a = t.split(' ');
                if (4 !== a.length) return s;
                var l = parseFloat(a[0]), c = parseFloat(a[2]),
                    u = parseFloat(a[1]), p = parseFloat(a[3]), h = c - l,
                    f = p - u,
                    g = new RegExp(
                        '(M[0-9-.]+ [0-9-.]+)|(L[0-9-.]+ [0-9-.]+)|(A[0-9-.]+ [0-9-.]+ [0-9-.]+ [0-9-.]+ [0-9-.]+ [0-9-.]+ [0-9-.]+)',
                        'g'),
                    m = e.match(g);
                if (!m || !m.length) return s;
                for (var v = NaN, b = NaN, x = 0, w = m; x < w.length; x++) {
                  var _ = w[x], E = _.substr(1).split(' ').map(parseFloat);
                  switch (_[0]) {
                    case 'M':
                      v = n(E[0]), b = i(E[1]),
                      s.push({type: 'moveTo', x: v, y: b});
                      break;
                    case 'L':
                      v = n(E[0]), b = i(E[1]),
                      s.push({type: 'lineTo', x: v, y: b});
                      break;
                    case 'A':
                      var S = E[0] / h, M = E[1] / f, I = E[2], k = E[3],
                          C = E[4], T = n(E[5]), L = i(E[6]),
                          P = d(v, b, S, M, I, k, C, T, L);
                      v = T, b = L, s.push(r.__assign({type: 'ellipse'}, P))
                  }
                }
                return s
              }
              function h(e, t) {
                var r = e.childNodes[0];
                if (r && 'path' === r.nodeName) {
                  var i = e.getBoundingClientRect();
                  if (i.width > 0 && i.height > 0) {
                    var o, s, a = r.getAttribute('d') || '',
                              l = e.getAttribute('viewBox') || '', c = p(a, l),
                              u = window.getComputedStyle(e);
                    t.verticalLabel ? (o = i.height, s = i.width) :
                                      (o = i.width, s = i.height),
                        c = n.default(c);
                    for (var d = 0, h = c; d < h.length; d++) {
                      var f = h[d];
                      switch (f.type) {
                        case 'moveTo':
                        case 'lineTo':
                          f.x *= o, f.y *= s;
                          break;
                        case 'ellipse':
                          f.centerX *= o, f.centerY *= s, f.radiusX *= o,
                              f.radiusY *= s;
                          break;
                        default:
                          return f
                      }
                    }
                    return {
                      type: 'path', rect: {
                        left: i.left - t.canvasLeft,
                        right: i.right - t.canvasLeft,
                        top: i.top - t.canvasTop,
                        bottom: i.bottom - t.canvasTop
                      },
                          color: u.color || '#000', instructions: c
                    }
                  }
                }
              }
              function f(e, t, r) {
                var n = window.getComputedStyle(e);
                if ('0px' !== n.borderTopWidth) {
                  var i = c(e, n, t);
                  i && r.push(i)
                }
                for (var o = e.childNodes, a = 0; a < o.length; a++) {
                  var l = o[a];
                  if (3 === l.nodeType) {
                    var i = s(l, t);
                    i && r.push(i)
                  } else if ('svg' === l.nodeName) {
                    var i = h(l, t);
                    i && r.push(i)
                  } else
                    1 === l.nodeType && f(l, t, r)
                }
              }
              function g(e, t) {
                var r = [];
                return f(e, t, r), r
              }
              function m(e, t, r) {
                i.save(t, 'dcg-svg-label'), t.save(), i.restore(t);
                for (var n = 0, s = e; n < s.length; n++) {
                  var c = s[n];
                  switch (t.save(), o(t, c.rect, r), c.type) {
                    case 'path':
                      l(t, c, !0);
                      break;
                    case 'text':
                      a(t, c, !0);
                      break;
                    default:
                      var u = c;
                      return u
                  }
                  t.restore()
                }
                for (var d = 0, p = e; d < p.length; d++) {
                  var c = p[d];
                  switch (t.save(), o(t, c.rect, r), c.type) {
                    case 'path':
                      l(t, c, !1);
                      break;
                    case 'text':
                      a(t, c, !1);
                      break;
                    default:
                      var u = c;
                      return u
                  }
                  t.restore()
                }
                t.restore()
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var y = {};
              t.computeDrawingCommandsForDOMLabel = g, t.drawCommandsToCtx = m
            });
          r('graphing/poilabelslayer',
            [
              'require',
              'exports',
              'tslib',
              'dcgview',
              'jquery',
              'core/lib/label',
              'core/types/graphmode',
              'core/types/label-sizes',
              'core/math/poi-type',
              './constants',
              './poi',
              './automatic-label-placer',
              'core/lib/color-helpers',
              'core/math/interpolatedlabel',
              '../dcgview-helpers/static-mathquill-view',
              '../dcgview-helpers/mathquill-view',
              'core/graphing-calc/json/expression',
              'graphing-calc/models/expression',
              'graphing/canvas-labels',
              'graphing/movablepointslayer',
              './svg-groups'
            ],
            function(
                e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g, m, y, v, b, x) {
              'use strict';
              function w(e, t) {
                return t && t.visible ? t.getPOIById(e) : null
              }
              function _(e, t) {
                var r, n = t.xmax - t.xmin, i = t.ymax - t.ymin,
                       a = e.getGraphMode();
                if (e.type === l.TRACE) {
                  var c = a === s.X, u = c ? e.y : e.x,
                      d = e.getCompiledFunction();
                  if (r = o.point(u, n, i, d), c) {
                    var p = r[0];
                    r[0] = r[1], r[1] = p
                  }
                } else
                  r = [o.value(e.x, n), o.value(e.y, i)];
                var f = !isFinite(r[1].value), g = e.getLabel();
                if (g)
                  return h.isMathLabel(g) ? {
                    is_hole: f,
                    type: 'latex',
                    text: g.substr(1, g.length - 2)
                  } :
                                            {is_hole: f, type: 'text', text: g};
                var m = r[0].superscript ?
                    r[0].mantissa + '^{' + r[0].superscript + '}' :
                    r[0].string,
                    y = r[1].superscript ?
                    r[1].mantissa + '^{' + r[1].superscript + '}' :
                    r[1].string;
                return 'undefined' === m && (m = '\\mathrm{undefined}'),
                       'undefined' === y && (y = '\\mathrm{undefined}'), {
                  is_hole: f, type: 'latex',
                      text: '\\left(' + m + ',\\space ' + y + '\\right)'
                }
              }
              function E(e, t, r) {
                var n = e.t('unknown coordinates'), i = t.getProjection();
                if (!i) return n;
                var o = i.viewport;
                return o ? (r && (n = b.getCoordsString(r.x, r.y, o)), n) : n
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var S = n.Components.Input, M = n.Components, I = M.For,
                  k = M.Switch, C = function(e) {
                    function t() {
                      var t = null !== e && e.apply(this, arguments) || this;
                      return t.labelsDirty = !1, t
                    }
                    return r.__extends(t, e), t.prototype.init = function() {
                      this.grapher = this.props.grapher(),
                      this.controller = this.grapher.controller,
                      this.cachedLabelDict = {}, this.cachedLabelOrder = [],
                      this.hoveredPOI = void 0, this.openedPOI2Sketch = {},
                      this.takingScreenshot = !1
                    }, t.prototype.template = function() {
                      var e = this;
                      return n.createElement(
                          I, {
                            each: function() {
                              return e.cachedLabelOrder
                            }
                          },
                          n.createElement(
                              'div', {
                                class: n.const('dcg-graph-outer'),
                                style: this.const({'z-index': 0}),
                                didMount: this.didMountRoot.bind(this)
                              },
                              function(t) {
                                return n.createElement(
                                    'div', {
                                      class: function() {
                                        return e.getLabelClasses(t)
                                      },
                                      style: function() {
                                        return e.getLabelStyles(t)
                                      }
                                    },
                                    n.createElement('div', {
                                      class: n.const('dcg-pt'),
                                      style: function() {
                                        return e.getDotStyles(t)
                                      }
                                    }),
                                    n.createElement(
                                        'div', {
                                          class: n.const('dcg-label'),
                                          didMount: function(r) {
                                            return e.linkLabelNode(t, r)
                                          }
                                        },
                                        e.renderLabelContent(t)))
                              }))
                    }, t.prototype.renderLabelContent = function(e) {
                      var t = this;
                      return n.createElement(
                          k, {
                            key: function() {
                              return t.getLabelContent(e).type
                            }
                          },
                          function(r) {
                            return 'text' === r ?
                                n.createElement(
                                    'span', null,
                                    function() {
                                      return t.getLabelContent(e).text
                                    }) :
                                'latex' === r ?
                                n.createElement(f.default, {
                                  latex: function() {
                                    return t.getLabelContent(e).text
                                  }
                                }) :
                                r === m.EditableLabelMode.Math ?
                                n.createElement(
                                    'div', {
                                      class: function() {
                                        return {
                                          'dcg-editable-label-border': !0,
                                              'dcg-do-not-blur': !0,
                                              'dcg-focus': t
                                                  .shouldEditableLabelBeFocused(
                                                      e),
                                              'dcg-empty-label': 0 ===
                                              t.getEditableLabelText(e)
                                                  .trim()
                                                  .length
                                        }
                                      },
                                      style: function() {
                                        return {
                                          'border-color': p.shadeColor(
                                              t.getEditableLabelTextColor(e),
                                              .3)
                                        }
                                      }
                                    },
                                    n.createElement(g.default, {
                                      latex: function() {
                                        return t.getEditableLabelText(e)
                                      },
                                      placeholder: function() {
                                        return ''
                                      },
                                      isFocused: function() {
                                        return t.shouldEditableLabelBeFocused(e)
                                      },
                                      capExpressionSize: function() {
                                        return !!t.controller.getGraphSettings()
                                                     .config.capExpressionSize
                                      },
                                      selectOnFocus: n.const(!1),
                                      config: t.const({}),
                                      getAriaLabel: function() {
                                        return t.controller.t(
                                            'Editable point label at __coordinates__',
                                            {
                                              coordinates:
                                                  E(t.controller, t.grapher,
                                                    t.cachedLabelDict[e])
                                            })
                                      },
                                      getAriaPostLabel: t.const(''),
                                      onUserChangedLatex: function(r) {
                                        return t.onLabelInput(r, e)
                                      },
                                      onExpressionSizeExceeded: function() {
                                        return t.controller.dispatch(
                                            {type: 'expression-size-exceeded'})
                                      },
                                      onFocusedChanged: function(r) {
                                        return t.onEditableLabelFocusChange(
                                            r, e)
                                      },
                                      hasError: t.const(!1),
                                      noFadeout: t.const(!0),
                                      needsSystemKeypad: function() {
                                        return !t.controller.isKeypadEnabled()
                                      }
                                    })) :
                                n.createElement(
                                    'div', {
                                      class: function() {
                                        return {
                                          'dcg-resizing-text-input-container':
                                              !0,
                                              'dcg-editable-label-border': !0,
                                              'dcg-focus': t
                                                  .shouldEditableLabelBeFocused(
                                                      e),
                                              'dcg-empty-label': 0 ===
                                              t.getEditableLabelText(e)
                                                  .trim()
                                                  .length
                                        }
                                      },
                                      style: function() {
                                        return {
                                          'border-color': p.shadeColor(
                                              t.getEditableLabelTextColor(e),
                                              .3)
                                        }
                                      },
                                      onScroll: function(e) {
                                        e.target && (e.target.scrollLeft = 0)
                                      }
                                    },
                                    n.createElement(S, {
                                      'aria-label': function() {
                                        return t.controller.t(
                                            'Editable point label at __coordinates__',
                                            {
                                              coordinates:
                                                  E(t.controller, t.grapher,
                                                    t.cachedLabelDict[e])
                                            })
                                      },
                                      onInput: function(r) {
                                        return t.onLabelInput(r, e)
                                      },
                                      value: function() {
                                        return t.getEditableLabelText(e)
                                      },
                                      onFocus: function() {
                                        return t.onEditableLabelFocusChange(
                                            !0, e)
                                      },
                                      onBlur: function() {
                                        return t.onEditableLabelFocusChange(
                                            !1, e)
                                      }
                                    }),
                                    n.createElement(
                                        'span', {
                                          class:
                                              n.const('dcg-text-input-content')
                                        },
                                        function() {
                                          return t.getEditableLabelText(e) ||
                                              ' '
                                        }))
                          })
                    }, t.prototype.getSketchIdFromLabelId = function(e) {
                      var t = this.cachedLabelDict[e];
                      if (t) return t.sketchId
                    }, t.prototype.getEditableLabelTextColor = function(e) {
                      var t = this.getSketchIdFromLabelId(e);
                      if (!t) return '#000';
                      var r = this.controller.getItemModel(t);
                      return r && 'expression' === r.type ? r.color : '#000'
                    }, t.prototype.onEditableLabelFocusChange = function(e, t) {
                      var r = this.getSketchIdFromLabelId(t);
                      r &&
                          (e ? this.controller.dispatch({
                            type: 'set-focus-location',
                            location: {type: 'editable-label', id: r}
                          }) :
                               this.controller.dispatch({
                                 type: 'blur-focus-location',
                                 location: {type: 'editable-label', id: r}
                               }),
                           this.update())
                    }, t.prototype.shouldEditableLabelBeFocused = function(e) {
                      var t = this.getSketchIdFromLabelId(e),
                          r = this.controller.getFocusLocation();
                      return !(
                          !r || 'editable-label' !== r.type || !t || r.id !== t)
                    }, t.prototype.onLabelInput = function(e, t) {
                      var r = this.getSketchIdFromLabelId(t);
                      if (r) {
                        if (this.grapher.poiController.getExpressionModel(r)) {
                          var n = e;
                          this.controller.getItemEditableLabelMode(r) ===
                                  m.EditableLabelMode.Math &&
                              n.length > 0 && (n = '`' + n + '`'),
                              this.controller.dispatch(
                                  {type: 'set-item-label', id: r, label: n})
                        }
                      }
                    }, t.prototype.getEditableLabelText = function(e) {
                      var t = this.getSketchIdFromLabelId(e);
                      if (t) {
                        var r =
                            this.grapher.poiController.getExpressionModel(t);
                        return r ?
                            this.controller.getItemEditableLabelMode(t) ===
                                    m.EditableLabelMode.Math ?
                            r.label.substr(1, r.label.length - 2) :
                            r.label :
                            ''
                      }
                    }, t.prototype.linkLabelNode = function(e, t) {
                      var r = this.cachedLabelDict[e];
                      r && (r.labelDOM = t)
                    }, t.prototype.getLabelClasses = function(e) {
                      var t = this.cachedLabelDict[e];
                      return t ? t.classes : {}
                    }, t.prototype.getLabelStyles = function(e) {
                      var t = this.cachedLabelDict[e];
                      return t ? t.styles : {}
                    }, t.prototype.getDotStyles = function(e) {
                      var t = this.cachedLabelDict[e];
                      return t ? t.dotStyles : {}
                    }, t.prototype.getLabelContent = function(e) {
                      var t = this.cachedLabelDict[e];
                      if (t) {
                        var r = this.getSketchIdFromLabelId(e);
                        if (!r) return {is_hole: !1, type: 'text', text: ''};
                        var n = this.controller.getItemEditableLabelMode(r);
                        return t.classes['dcg-editable-label'] &&
                                void 0 !== n && n !== m.EditableLabelMode.None ?
                            {is_hole: !1, type: n, text: ''} :
                            t.content
                      }
                      return {
                        is_hole: !1, type: 'text', text: ''
                      }
                    }, t.prototype.didMountRoot = function(e) {
                      this.node = e
                    }, t.prototype.computeHoveredLabel = function(e, t) {
                      var r;
                      this.hoveredPOI ?
                          this.isOpenPOI(this.hoveredPOI) ?
                          this.grapher.setLayerClass(
                              'hoveredPOI', 'dcg-mouse-over-opened-poi') :
                          (r = this.computeLabel(
                               this.hoveredPOI, e, t, 'hovered'),
                           this.grapher.setLayerClass(
                               'hoveredPOI', 'dcg-mouse-over-closed-poi')) :
                          this.grapher.setLayerClass('hoveredPOI', void 0);
                      var n = this.getHoveredInteractiveLabel();
                      return n && !n.bareLabel ?
                                 this.grapher.setLayerClass(
                                     'interactiveLabel',
                                     'dcg-mouse-over-opened-poi') :
                                 this.grapher.setLayerClass(
                                     'interactiveLabel', void 0),
                             r
                    }, t.prototype.computeTraceLabel = function(e, t) {
                      if (this.traceInfo) {
                        var r = this.traceInfo.pt;
                        if (r) {
                          var n = new u.POI(
                              r.x, r.y, l.TRACE,
                              this.traceInfo.branchInfo.sketch,
                              this.traceInfo.branchInfo.branch, 0);
                          return this.computeLabel(n, e, t, 'trace')
                        }
                      }
                    }, t.prototype.computeLabel = function(e, t, r, n) {
                      var i = e.id + '';
                      'trace' === n && (i = '*trace*');
                      var o = t.mapx(e.x), s = t.mapy(e.y), l = o, u = s;
                      if (t.coordsAreOnscreen(
                              o, s, c.OFFSCREEN_RENDER_MARGIN)) {
                        if (this.isHiddenInteractiveLabel(e)) return;
                        var d = !1, h = void 0, f = e.sketch,
                            g = f && f.branches[0];
                        g &&
                            (d = !!('nakedLabel' in g && g.nakedLabel),
                             h = 'labelOrientation' in g ? g.labelOrientation :
                                                           void 0);
                        var m = f.id, v = this.controller.getItemModel(m);
                        if (e.hasEditableLabel() && v &&
                            'expression' === v.type && !y.isSinglePoint(v))
                          return;
                        var b = _(e, t.viewport), x = e.getLabelSize(),
                            w = !!e.getVerticalLabel(),
                            E = !!e.getTextOutline(), S = e.isPersistent(),
                            M = e.isAttachedToPlottedPoint(),
                            I = e.hasInteractiveLabel(),
                            k = e.hasEditableLabel() && !this.takingScreenshot,
                            C = f.color, T = !S, L = !!M;
                        I && (L = !0, T = !0),
                            'trace' === n && (L = !1, T = !0);
                        var P = r[i], A = P && P.labelDOM, D = P && P.width,
                            O = P && P.height, F = P && P.orientation, q = {
                              'dcg-poi-label': !0,
                              'dcg-tracept': 'trace' === n,
                              'dcg-opened': 'opened' === n,
                              'dcg-hole': b.is_hole,
                              'dcg-size-small': x === a.LabelSize.SMALL,
                              'dcg-size-medium': x === a.LabelSize.MEDIUM,
                              'dcg-size-large': x === a.LabelSize.LARGE,
                              'dcg-vertical-label': !!w,
                              'dcg-show-border': T,
                              'dcg-hide-dot': L,
                              'dcg-editable-label': k,
                              'dcg-has-outline': E
                            },
                            N = {left: o + 'px', top: s + 'px'};
                        if (S && C) {
                          var R =
                              I && !this.isOpenInteractiveLabel(e) ? .5 : .3;
                          N.color = p.shadeColor(C, R)
                        }
                        var B = {};
                        return 'trace' === n &&
                                   (B['background-color'] = C,
                                    B['border-color'] = C),
                        {
                          id: i, sketchId: m, x: e.x, y: e.y, screenX: o,
                              screenY: s, top: u, left: l, width: D, height: O,
                              labelDOM: A, forcedOrientation: h,
                              isNakedLabel: d, isVertical: w, orientation: F,
                              classes: q, styles: N, dotStyles: B, content: b
                        }
                      }
                    }, t.prototype.computeAllLabels = function(e, t) {
                      var r, n, i = {}, o = this.grapher.graphSketches;
                      for (r in o) {
                        var s = o[r];
                        if (s.visible) {
                          var a = s.labels;
                          if (a.length)
                            for (var l = 0; l < a.length; l++)
                              (n = this.computeLabel(a[l], e, t, 'opened')) &&
                                  (i[n.id] = n)
                        }
                      }
                      var c = {};
                      for (r in this.openedPOI2Sketch) {
                        var u = w(r, o[this.openedPOI2Sketch[r]]);
                        u &&
                            (c[r] = u.sketch.id,
                             (n = this.computeLabel(u, e, t, 'opened')) &&
                                 (i[n.id] = n))
                      }
                      return this.openedPOI2Sketch = c, i
                    }, t.prototype.markLabelsDirty = function() {
                      this.labelsDirty = !0
                    }, t.prototype.getEditableLabelUnderPoint = function(e) {
                      for (var t = 0, r = this.cachedLabelOrder.length; t < r;
                           t++) {
                        var n = this.cachedLabelOrder[t],
                            i = this.cachedLabelDict[n];
                        if (i && i.width && i.height) {
                          var o = i.screenX, s = i.screenY, a = i.left,
                              l = i.top, c = i.width, u = i.height;
                          if (c > 0 && u > 0 && e.x > o + a &&
                              e.x < o + a + c && e.y > s + l &&
                              e.y < s + l + u) {
                            var d = this.getSketchIdFromLabelId(n);
                            if (void 0 === d) continue;
                            var p = this.controller.getItemModel(d);
                            if (!p || 'expression' !== p.type) continue;
                            if (!y.hasEditableLabel(p)) continue;
                            return p
                          }
                        }
                      }
                    }, t.prototype.positionLabels = function(e, t, r, n, o) {
                      var s = !this.labelsDirty;
                      this.labelsDirty = !1;
                      var a = this.grapher.settings.config.projectorMode ? 14 :
                                                                           10,
                          l = [];
                      t.forEach(function(e) {
                        var t = r[e];
                        if (t && t.labelDOM) {
                          var n = t.screenX, i = t.screenY,
                              o = t.labelDOM.getBoundingClientRect(),
                              c = o.width, u = o.height;
                          c > 0 && u > 0 && l.push({
                            renderedLabel: t,
                            pt_x: n,
                            pt_y: i,
                            pt_radius: a,
                            nakedLabel: t.isNakedLabel,
                            width: c,
                            height: u,
                            keepOrientation: s,
                            priorOrientation: t.orientation,
                            enforceOrientation: t.forcedOrientation
                          })
                        }
                      });
                      var c = d.buildStaticEnvGetter(e, n, o),
                          u = l.map(function(e) {
                            return d.generateCandidatesForPoint(c, e)
                          });
                      d.computePositions(u).forEach(function(e, t) {
                        var r = l[t].renderedLabel;
                        r.orientation = e.orientation;
                        var n = e.left - e.pt_x, o = e.top - e.pt_y;
                        r.left = n, r.top = o, r.width = e.width,
                        r.height = e.height;
                        var s = r.labelDOM;
                        s &&
                            (s.style.left = n + 'px', s.style.top = o + 'px',
                             i(s).data('orientation', e.orientation))
                      })
                    }, t.prototype.copyToCtx = function(e) {
                      x.save(e, 'labels');
                      var t = this.node.getBoundingClientRect();
                      for (var r in this.cachedLabelDict) {
                        var n = this.cachedLabelDict[r];
                        if (n) {
                          var i = n.labelDOM;
                          if (i) {
                            var o = {
                              canvasLeft: t.left,
                              canvasTop: t.top,
                              verticalLabel: n.isVertical
                            },
                                s = v.computeDrawingCommandsForDOMLabel(i, o);
                            v.drawCommandsToCtx(s, e, o)
                          }
                        }
                      }
                      x.restore(e)
                    }, t.prototype.drawForScreenshot = function(e, t, r, n, i) {
                      this.takingScreenshot = !0, this.redraw(e, t, n, i),
                      this.takingScreenshot = !1, this.copyToCtx(r)
                    }, t.prototype.redraw = function(e, t, r, n) {
                      var i = this.computeAllLabels(e, this.cachedLabelDict),
                          o = this.computeHoveredLabel(e, this.cachedLabelDict);
                      o && (i[o.id] = o);
                      var s = this.computeTraceLabel(e, this.cachedLabelDict);
                      s && (i[s.id] = s),
                          this.cachedLabelDict = i,
                          this.cachedLabelOrder = Object.keys(i), this.update(),
                          this.positionLabels(
                              t, this.cachedLabelOrder, this.cachedLabelDict, r,
                              n)
                    }, t.prototype.clearOpenedPOI = function() {
                      this.openedPOI2Sketch = {}
                    }, t.prototype.closePOI = function(e) {
                      delete this.openedPOI2Sketch[e.id]
                    }, t.prototype.openPOI = function(e) {
                      this.openedPOI2Sketch[e.id] = e.sketch.id
                    }, t.prototype.isOpenPOI = function(e) {
                      return this.openedPOI2Sketch.hasOwnProperty(e.id)
                    }, t.prototype.isOpenInteractiveLabel = function(e) {
                      return !!this.isOpenPOI(e) && e.hasInteractiveLabel()
                    }, t.prototype.isHiddenInteractiveLabel = function(e) {
                      return !!e &&
                          (!!e.hasInteractiveLabel() &&
                           (!this.isOpenPOI(e) && this.getHoveredPOI() !== e))
                    }, t.prototype.setHoveredPOI = function(e) {
                      this.hoveredPOI = e
                    }, t.prototype.getHoveredPOI = function() {
                      return this.hoveredPOI
                    }, t.prototype.getHoveredInteractiveLabel = function() {
                      var e = this.getHoveredPOI();
                      return e && e.hasInteractiveLabel() ? e : void 0
                    }, t.prototype.setTraceInfo = function(e) {
                      this.traceInfo = e
                    }, t.prototype.isTracing = function() {
                      return !!this.traceInfo
                    }, t.prototype.getTraceInfo = function() {
                      return this.traceInfo
                    }, t
                  }(n.Class);
              t.default = C
            });
          r('graphing/clickableobject-layer',
            [
              'require', 'exports', 'tslib', 'dcgview', 'jquery',
              'graphing-calc/models/expression', 'graphing-calc/models/image'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = n.Components.For, l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.grapher = this.props.grapher(),
                  this.controller = this.grapher.controller,
                  this.renderedTabTargetOrder = [], this.renderedTabTargets = {}
                }, t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      a, {
                        each: function() {
                          return e.renderedTabTargetOrder
                        }
                      },
                      n.createElement(
                          'div', {
                            class: n.const('dcg-graph-outer'),
                            style: this.const({'z-index': 0}),
                            onFocusin: this.bindFn(this.handleFocusChange),
                            onFocusout: this.bindFn(this.handleFocusChange),
                            didMount: function(t) {
                              return e.rootNode = t
                            }
                          },
                          function(t) {
                            return n.createElement('div', {
                              class: n.const('dcg-tabbable-clickableobject'),
                              role: n.const('button'),
                              'aria-roledescription':
                                  n.const('clickable object'),
                              'dcg-clickableobject-id': e.const(t),
                              tabindex: function() {
                                return e.getTabIndex()
                              },
                              'aria-hidden': e.bindFn(e.getAriaHidden),
                              'aria-label': function() {
                                return e.getAriaLabel(t)
                              },
                              onTap: function() {
                                e.controller.dispatch(
                                    {type: 'clickable-item-clicked', id: t})
                              }
                            })
                          }))
                }, t.prototype.redraw = function() {
                  this.renderedTabTargets = {},
                  this.renderedTabTargetOrder = [];
                  var e, t = this.grapher.graphSketches;
                  for (e in t) {
                    if (t[e].visible) {
                      var r = this.controller.getItemModel(e);
                      if (r && 'expression' === r.type &&
                          o.isClickableObject(r)) {
                        this.renderedTabTargetOrder.push(e);
                        var n = '' !== r.clickableInfo.description ?
                            r.clickableInfo.description :
                            this.grapher.getAudioTrace().getExpressionAriaLabel(
                                e);
                        this.renderedTabTargets[e] = { id: e, description: n }
                      }
                    }
                  }
                  var i = this.grapher.graphImages;
                  for (e in i) {
                    if (!i[e].hidden && !this.controller.isItemSecret(e)) {
                      var r = this.controller.getItemModel(e);
                      r && 'image' === r.type && s.isClickableObject(r) &&
                          (this.renderedTabTargetOrder.push(e),
                           this.renderedTabTargets[e] = {
                             id: e,
                             description: r.clickableInfo.description
                           })
                    }
                  }
                  this.renderedTabTargets[this.hoveredId] ||
                      this.setHoveredId(void 0),
                      this.renderedTabTargets[this.pressedId] ||
                      this.setPressedId(void 0),
                      this.hoveredId || this.pressedId ?
                      this.grapher.setLayerClass(
                          'clickableObjects',
                          'dcg-mouse-over-clickable-object') :
                      this.grapher.setLayerClass('clickableObjects', void 0),
                      this.update()
                }, t.prototype.getTabIndex = function() {
                  var e = this.grapher.settings;
                  return e.config.graphpaper && e.config.enableTabindex ? 0 : -1
                }, t.prototype.getAriaHidden = function() {
                  return !this.grapher.settings.config.graphpaper
                }, t.prototype.getAriaLabel = function(e) {
                  var t = this.renderedTabTargets[e];
                  return t ? t.description : ''
                }, t.prototype.shouldDrawHovered = function(e) {
                  return e === this.focusedId ||
                      !(this.isAnObjectPressed() && !this.isObjectPressed(e)) &&
                      this.isObjectHovered(e)
                }, t.prototype.isObjectHovered = function(e) {
                  return void 0 !== e && this.hoveredId === e
                }, t.prototype.setHoveredId = function(e) {
                  e !== this.hoveredId &&
                      (this.hoveredId = e, this.requestRedrawNextFrame())
                }, t.prototype.shouldDrawPressed = function(e) {
                  return this.isObjectPressed(e)
                }, t.prototype.isObjectPressed = function(e) {
                  return void 0 !== e && this.pressedId === e
                }, t.prototype.setPressedId = function(e) {
                  e !== this.pressedId &&
                      (this.pressedId = e, this.requestRedrawNextFrame())
                }, t.prototype.getPressedId = function() {
                  return this.pressedId
                }, t.prototype.isAnObjectPressed = function() {
                  return !!this.pressedId
                }, t.prototype.handleFocusChange = function() {
                  var e = void 0;
                  if (document.activeElement &&
                      i.contains(this.rootNode, document.activeElement)) {
                    e = i(document.activeElement).attr('dcg-clickableobject-id')
                  }
                  this.focusedId !== e &&
                      (this.focusedId = e, this.requestRedrawNextFrame())
                }, t.prototype.requestRedrawNextFrame = function() {
                  this.grapher.redrawAllLayers()
                }, t
              }(n.Class);
              t.default = l
            });
          r('graphing/grapher',
            [
              'require',
              'exports',
              'main/graph_settings',
              './canvaslayer',
              './poidotslayer',
              './gridlayer',
              './graphslayer',
              './imagelayer',
              './viewportcontroller',
              './poicontroller',
              'vendor/canvas2svg',
              'dcgview',
              'jquery',
              'underscore',
              './viewport',
              './screen',
              './graphsketch',
              './projection',
              'underscore_model',
              './audiograph',
              './canvas-braille',
              './braille-size-options',
              'core/lib/deepCopy',
              'lib/animation-frame',
              'core/lib/default-spec',
              'core/graphing-calc/json/graph-settings',
              'graphing/tonegenerator',
              './movablepointslayer',
              './poilabelslayer',
              './clickableobject-layer',
              './svg-classes',
              './svg-groups'
            ],
            function(
                e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g, m, y, v, b, x,
                w, _, E, S, M, I, k, C, T, L, P) {
              'use strict';
              function A() {
                return new g.Screen(1024, 768)
              }
              function D() {
                return new f.Viewport(-10, 10, -10, 10)
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var O = function() {
                function e(e, t, r, u) {
                  var f = this;
                  this.type = '2d', this._layerClasses = {}, this.$ = e,
                  this.evaluator = u, this.controller = r, this.settings = t;
                  var g = A(), m = D().squareYAxis(g);
                  this.setUserRequestedViewport(m),
                      this.__projection = new y.Projection(g, m, t),
                      this.markLabelsDirty = h.debounce(
                          function() {
                            f.evaluator.notifyWhenSynced(function() {
                              f.__isRedrawingSlowly ?
                                  f.notifyAfterRedraw(function() {
                                    f.poiLabelsLayer.markLabelsDirty(),
                                        f.redrawAllLayers()
                                  }) :
                                  (f.poiLabelsLayer.markLabelsDirty(),
                                   f.redrawAllLayers())
                            })
                          },
                          300),
                      this.poiController = new c(this, t),
                      this.viewportController = l(this, this.controller),
                      this.showPOIDots = !0, this.$.css('overflow', 'hidden'),
                      this.graphSketches = {}, this.graphImages = {},
                      this.canvasLayer = n(this),
                      this.$.append(this.canvasLayer.$), this.imageLayer = a(),
                      this.gridLayer = o(), this.poiDotsLayer = i(),
                      this.graphsLayer = s(this.settings);
                  var x = p('<div></div>');
                  this.$.append(x);
                  var w = this;
                  this.clickableObjectsLayer = d.mountToNode(T.default, x[0], {
                    grapher: function() {
                      return w
                    }
                  });
                  var _ = p('<div></div>');
                  this.$.append(_);
                  var w = this;
                  this.movablePointsLayer = d.mountToNode(k.default, _[0], {
                    grapher: function() {
                      return w
                    }
                  });
                  var E = p('<div></div>');
                  this.$.append(E),
                      this.poiLabelsLayer = d.mountToNode(C.default, E[0], {
                        grapher: function() {
                          return w
                        }
                      }),
                      this.traceLayer = this.poiLabelsLayer,
                      this.scaleAxis = void 0, this.__sketchOrder = [],
                      this.selectedId = void 0, this.__redrawRequested = !1,
                      this.__redrawSlowlyIndex = 0,
                      this.__isRedrawingSlowly = !1,
                      this.events = new v.UnderscoreModel,
                      this.audioGraph = new b.default(r, this)
                }
                return e.prototype
                           .remove =
                           function() {
                  this.$.remove(), this.poiController.remove(),
                      this.viewportController.remove(), this.audioGraph.remove()
                },
                e.prototype.tick =
                           function(e) {
                  this.__isRedrawingSlowly ?
                      this._redrawSlowly() :
                      this.__redrawRequested && this._redrawAllLayers(),
                      this.__movablePointListener &&
                      this.__movablePointListener()
                },
                e.prototype.registerMovablePointListener =
                           function(e) {
                  this.__movablePointListener = e
                },
                e.prototype.deregisterMovablePointListener =
                           function() {
                  this.__movablePointListener = void 0
                },
                e.prototype.setSketchOrder =
                           function(e) {
                  h.isEqual(this.__sketchOrder, e) ||
                      (this.__sketchOrder = e, this.redrawAllLayers())
                },
                e.prototype.clear =
                           function() {
                  this.graphSketches = {}, this.graphImages = {}
                },
                e.prototype.getGraphSketch =
                           function(e) {
                  return this.graphSketches[e]
                },
                e.prototype.getGraphImage =
                           function(e) {
                  return this.graphImages[e]
                },
                e.prototype.addGraphSketch =
                           function(e) {
                  this.graphSketches[e.id] = e
                },
                e.prototype.removeGraphSketch =
                           function(e) {
                  delete this.graphSketches[e]
                },
                e.prototype.addGraphImage =
                           function(e) {
                  var t = this;
                  e.imageObj.width && e.imageObj.height ?
                      (this.graphImages[e.id] = e, this.redrawAllLayers()) :
                      p(e.imageObj).on('load.calc_load', function() {
                        return t.addGraphImage(e)
                      })
                },
                e.prototype.removeGraphImage =
                           function(e) {
                  var t = this.graphImages[e];
                  t && p(t.imageObj).off('load.calc_load'),
                      delete this.graphImages[e], this.redrawAllLayers()
                },
                e.prototype.getProjection =
                           function() {
                  return this.__projection
                },
                e.prototype._setProjection =
                           function(e) {
                  this.__projection = e, this.redrawAllLayers()
                },
                e.prototype.getAudioTrace =
                           function() {
                  return this.audioGraph
                },
                e.prototype.getDefaultViewport =
                           function() {
                  var e = this.getProjection();
                  return D().squareYAxis(e.screen)
                },
                e.prototype._updateScreenSize =
                           function(e, t) {
                  if (!(e <= 0 || t <= 0)) {
                    var r = this.getProjection(), n = r.screen;
                    if (n.width !== e || n.height !== t) {
                      this.$.width(e);
                      var i = new g.Screen(e, t);
                      this.viewportController.setScreen(i)
                    }
                  }
                },
                e.prototype._setIsVisible =
                           function(e) {
                  e !== this.isVisible &&
                      (this.isVisible = e,
                       e ? this.redrawAllLayers() :
                           this.canvasLayer.resize(0, 0))
                },
                e.prototype.update =
                           function() {
                  var e = this.controller.computeMajorLayout().grapher;
                  e.width > 0 && e.height > 0 ?
                      (this._setIsVisible(!0),
                       this._updateScreenSize(e.width, e.height), this.$.css({
                         position: 'absolute',
                         left: e.left + 'px',
                         top: e.top + 'px',
                         width: e.width + 'px',
                         height: e.height + 'px'
                       })) :
                      this._setIsVisible(!1)
                },
                e.prototype.hide =
                           function(e) {
                  var t = this.getGraphSketch(e);
                  t && (t.visible = !1)
                },
                e.prototype.select =
                           function(e) {
                  if (this.selectedId) {
                    var t = this.getGraphSketch(this.selectedId);
                    t && (t.selected = !1, t.showPOI = !1, t.showHighlight = !1)
                  }
                  var r = this.getGraphSketch(e);
                  r &&
                      (r.selected = !0,
                       r.showPOI = this.controller.isTraceEnabled(),
                       r.showHighlight = !0),
                      this.selectedId = e
                },
                e.prototype.updateSketch =
                           function(e, t) {
                  var r = this.getGraphSketch(e);
                  if (!t.length) return this.hide(e);
                  var n = new m.GraphSketch(e, t);
                  n.color = t[0].color, n.style = t[0].style,
                  r && n.updateFrom(r);
                  var i = String(e) === String(this.selectedId);
                  n.selected = i,
                  n.showPOI = i && this.controller.isTraceEnabled(),
                  n.showHighlight = i, this.addGraphSketch(n)
                },
                e.prototype.updateIntersections =
                           function(e, t) {
                  var r = this.getGraphSketch(e);
                  r && r.updateIntersections(t)
                },
                e.prototype.redrawAllLayers =
                           function() {
                  this.cancelRedrawSlowly(), this.__redrawRequested = !0
                },
                e.prototype._clear =
                           function() {
                  var e = this.getProjection(), t = e.screen;
                  this.canvasLayer.resize(e.screen.width, e.screen.height),
                      this.canvasLayer.ctx.clearRect(0, 0, t.width, t.height)
                },
                e.prototype._redrawAllLayers =
                           function() {
                  this.isVisible &&
                      (this.__redrawRequested = !1, this._clear(),
                       this.audioGraph.recomputePoints(),
                       this._recomputeClickableObjects(),
                       this._redrawImageLayer(), this._redrawGridLayer(),
                       this._redrawGraphsLayer(), this._redrawPointsAndLabels(),
                       this._updateCanvasLayerAria(),
                       this.events.triggerEvent('redraw', void 0))
                },
                e.prototype.cancelRedrawSlowly =
                           function() {
                  this.__isRedrawingSlowly &&
                      (this.__redrawSlowlyIndex = 0,
                       this.__isRedrawingSlowly = !1, this.redrawAllLayers())
                },
                e.prototype.redrawSlowly =
                           function() {
                  this.__isRedrawingSlowly ||
                      (this.__redrawSlowlyIndex = 0,
                       this.__isRedrawingSlowly = !0,
                       this.audioGraph.recomputePoints())
                },
                e.prototype._redrawSlowly =
                           function() {
                  var e, t, r = this.__redrawSlowlyIndex;
                  if (0 === r && (this._clear(), this._redrawGridLayer()),
                      r >= this.__sketchOrder.length)
                    return void this.cancelRedrawSlowly();
                  var n = this.__sketchOrder[r],
                      i = (e = {}, e[n] = this.graphSketches[n], e),
                      o = (t = {}, t[n] = this.graphImages[n], t);
                  (o[n] || i[n]) &&
                      this.graphsLayer.redrawToCtx(
                          this.canvasLayer.ctx, this.getProjection(), i, o, [n],
                          this.poiLabelsLayer, this.clickableObjectsLayer),
                      this.__redrawSlowlyIndex += 1
                },
                e.prototype._redrawGridLayer =
                           function() {
                  this.gridLayer.redrawToCtx(
                      this.canvasLayer.ctx, this.getProjection(),
                      this.scaleAxis)
                },
                e.prototype._recomputeClickableObjects =
                           function() {
                  this.clickableObjectsLayer.redraw()
                },
                e.prototype._redrawGraphsLayer =
                           function() {
                  this.graphsLayer.redrawToCtx(
                      this.canvasLayer.ctx, this.getProjection(),
                      this.graphSketches, this.graphImages, this.__sketchOrder,
                      this.poiLabelsLayer, this.clickableObjectsLayer)
                },
                e.prototype._updateCanvasLayerAria =
                           function() {
                  var e = 0;
                  for (var t in this.graphSketches)
                    I.canPlaySketch(this.graphSketches[t]) && (e += 1);
                  this.canvasLayer.updateAria(this.isVisible, e)
                },
                e.prototype._redrawPointsAndLabels =
                           function() {
                  var e = this.getProjection(), t = [];
                  this.movablePointsLayer.redraw(this.canvasLayer.ctx, e, t),
                      this.showPOIDots &&
                      this.poiDotsLayer.redrawToCtx(
                          this.canvasLayer.ctx, e, this.graphSketches,
                          this.poiLabelsLayer, this.clickableObjectsLayer);
                  var r = this.$[0].getBoundingClientRect();
                  h.each(
                      [
                        this.controller.find$(
                            '.dcg-overgraph-pillbox-elements')[0],
                        this.controller.find$('.dcg-graphpaper-branding')[0]
                      ],
                      function(e) {
                        if (e) {
                          var n = e.getBoundingClientRect();
                          t.push({
                            left: n.left - r.left,
                            top: n.top - r.top,
                            right: n.right - r.left,
                            bottom: n.bottom - r.top
                          })
                        }
                      });
                  var n = this.canvasLayer.ctx.canvas.getBoundingClientRect();
                  this.poiLabelsLayer.redraw(
                      e, this.canvasLayer.ctx,
                      {width: n.width, height: n.height}, t)
                },
                e.prototype._redrawImageLayer =
                           function() {
                  this.imageLayer.redrawToCtx(
                      this.canvasLayer.ctx, this.getProjection(),
                      this.graphImages, this.__sketchOrder)
                },
                e.prototype._parseScreenshotOpts =
                           function(e) {
                  var t, n, i, o, s, a, l = this.getProjection();
                  return e ? (t = e.width || e.height || l.screen.width,
                              n = e.height || e.width || l.screen.height,
                              i = e.targetPixelRatio || 1,
                              o = (t < 256 || n < 256) &&
                                  !e.preserveAxisNumbers,
                              s = r.fromObject(e.settings || this.settings),
                              a = !!e.transparentBackground) :
                             (t = l.screen.width, n = l.screen.height, i = 1,
                              o = !1, s = r.fromObject(this.settings), a = !1),
                         o &&
                             (s.setProperty('xAxisNumbers', !1),
                              s.setProperty('yAxisNumbers', !1),
                              s.setProperty('polarNumbers', !1)),
                  {
                    width: t, height: n, targetPixelRatio: i, settings: s,
                        transparentBackground: a
                  }
                },
                e.prototype._syncScreenshotReturnCanvas =
                           function(e) {
                  var t = document.createElement('canvas');
                  if (e && e.braille) {
                    var r = e.braille, n = r.embosserModel, i = r.brailleMode,
                        o = w.brailleSizes[n];
                    t.width = o.width, t.height = o.height,
                    x.createBrailleImage(t, this, o, n, i)
                  } else {
                    var s = this._parseScreenshotOpts(e);
                    t.width = s.width * s.targetPixelRatio,
                    t.height = s.height * s.targetPixelRatio,
                    this.screenshotToCanvas(t, e)
                  }
                  return t
                },
                e.prototype.screenshot =
                           function(e) {
                  return this._syncScreenshotReturnCanvas(e).toDataURL(
                      'image/png')
                },
                e.prototype.asyncScreenshot =
                           function(e, t) {
                  var r = this, n = !1;
                  !e.transparentBackground && e.showLabels &&
                      (e = _.default(e), e.transparentBackground = !0, n = !0);
                  var i = this._syncScreenshotReturnCanvas(e),
                      o = i.getContext('2d'), s = i, a = o;
                  e && 'svg' === e.format &&
                      (n = !1,
                       e.transparentBackground &&
                           (e = _.default(e), e.transparentBackground = !1),
                       a = new u(i.width, i.height), s = {
                         getContext: function() {
                           return a
                         },
                         width: i.width,
                         height: i.height
                       },
                       this.screenshotToCanvas(s, e));
                  var l = this.makeScreenshotProjection(e), c = [];
                  if (e.showMovablePoints &&
                          this.movablePointsLayer.drawForScreenshot(a, l, c),
                      e.showLabels) {
                    var h = p('<div class="dcg-calculator-api-container"><div class="dcg-container"></div></div>')
                                .css({
                                  width: l.screen.width,
                                  height: l.screen.height,
                                  position: 'absolute',
                                  left: '0px',
                                  top: '0px'
                                })
                                .appendTo('body'),
                        f = h.find('.dcg-container'),
                        g = d.mountToNode(C.default, f[0], {
                          grapher: function() {
                            return r
                          }
                        }),
                        m = {width: l.screen.width, height: l.screen.height};
                    g.drawForScreenshot(l, o, a, m, c), h.remove()
                  }
                  n &&
                      (a.globalCompositeOperation = 'destination-over',
                       a.fillStyle = '#FFF',
                       a.fillRect(0, 0, s.width, s.height)),
                      t(e && 'svg' === e.format ? a.getSerializedSvg() :
                                                  s.toDataURL('image/png'))
                },
                e.prototype.makeScreenshotProjection =
                           function(e) {
                  var t = this._parseScreenshotOpts(e), r = t.width,
                      n = t.height, i = t.settings, o = new g.Screen(r, n),
                      s = this.getProjection().viewport;
                  return this.getSetting('squareAxes') && (s = s.squareCrop(o)),
                         new y.Projection(o, s, i)
                },
                e.prototype.screenshotToCanvas =
                           function(e, t) {
                  var r = this._parseScreenshotOpts(t), n = r.targetPixelRatio,
                      i = r.transparentBackground, o = e.getContext('2d');
                  o.scale(n, n);
                  var s = this.makeScreenshotProjection(t);
                  s.settings.takingScreenshot = !0, P.save(o, 'background'),
                  L.save(o, 'dcg-svg-background'),
                  i ? o.clearRect(0, 0, s.screen.width, s.screen.height) :
                      (o.fillStyle = 'white',
                       o.fillRect(0, 0, s.screen.width, s.screen.height)),
                  L.restore(o), P.restore(o),
                  this.imageLayer.redrawToCtx(
                      o, s, this.graphImages, this.__sketchOrder),
                  this.gridLayer.redrawToCtx(o, s),
                  this.graphsLayer.redrawToCtx(
                      o, s, this.graphSketches, this.graphImages,
                      this.__sketchOrder, this.poiLabelsLayer,
                      this.clickableObjectsLayer)
                },
                e.prototype.getImageData =
                           function(e, t, r, n) {
                  return this.canvasLayer.ctx.getImageData(e, t, r, n)
                },
                e.prototype.getSetting =
                           function(e, t) {
                  var r = this.settings.getProperty(e);
                  return void 0 !== r ? r : t
                },
                e.prototype.getState =
                           function(e) {
                  var t = this, r = {viewport: this.getCurrentViewport()};
                  return this.settings.stateProperties.forEach(function(e) {
                    'randomSeed' !== e && (r[e] = t.getSetting(e))
                  }),
                         e.stripDefaults &&
                             (r = S.stripDefaults(M.DefaultGraphSettings, r)),
                         r
                },
                e.prototype.getUndoRedoState =
                           function() {
                  var e = this, t = {};
                  return this.settings.stateProperties.forEach(function(r) {
                    t[r] = e.getSetting(r)
                  }),
                         t.viewport = this.getUserRequestedViewport(), t
                },
                e.prototype.notifyAfterRedraw =
                           function(e) {
                  var t = this;
                  if (this.__isRedrawingSlowly)
                    E.requestAnimationFrame(
                        this.notifyAfterRedraw.bind(this, e));
                  else if (this.__redrawRequested) {
                    this.notifyAfterRedraw_i ? this.notifyAfterRedraw_i++ :
                                               this.notifyAfterRedraw_i = 1;
                    var r =
                        'redraw.notifyAfterRedraw' + this.notifyAfterRedraw_i;
                    this.events.observeEvent(r, function() {
                      t.events.unobserveEvent(r), e()
                    })
                  } else
                    e()
                },
                e.prototype.getCurrentViewport =
                           function() {
                  return this.viewportController.getViewport().toObject()
                },
                e.prototype.getUserRequestedViewport =
                           function() {
                  return this._lastUserRequestedViewport
                },
                e.prototype.setUserRequestedViewport =
                           function(e) {
                  this._lastUserRequestedViewportUpdateToken ||
                      (this._lastUserRequestedViewportUpdateToken = 0),
                      this._lastUserRequestedViewportUpdateToken += 1,
                      this._lastUserRequestedViewport = _.default(e)
                },
                e.prototype.debounceUserRequestedViewportChange = function() {
                  var e = this;
                  if (!this.__debouncedViewportCommit) {
                    this.__debouncedViewportCommit = h.debounce(function(t, r) {
                      if (!e.isDragging &&
                          e._lastUserRequestedViewportUpdateToken === r) {
                        if (e._lastUserRequestedViewport) {
                          var n = f.Viewport.fromObject(
                              e._lastUserRequestedViewport);
                          if (e.computeConcreteViewport(n).equals(t)) return
                        }
                        e.controller.dispatch({
                          type: 'commit-user-requested-viewport',
                          viewport: t
                        })
                      }
                    }, 1e3)
                  }
                  var t = this.getCurrentViewport();
                  this.__debouncedViewportCommit(
                      t, this._lastUserRequestedViewportUpdateToken)
                }, e.prototype.setGrapherState = function(e, t) {
                  e = S.populateDefaults(M.DefaultGraphSettings, e),
                  t && t.doNotClear || this.clear();
                  for (var r in M.DefaultGraphSettings)
                    M.DefaultGraphSettings.hasOwnProperty(r) &&
                        this.settings.setProperty(r, e[r]);
                  if ('viewport' in e) {
                    var n = f.Viewport.fromObject(e.viewport);
                    this.setUserRequestedViewport(n);
                    var i = this.computeConcreteViewport(n);
                    this.viewportController.setViewport(i)
                  }
                  this.redrawAllLayers()
                }, e.prototype.computeConcreteViewport = function(e) {
                  var t = this.getProjection().screen;
                  return this.getSetting('squareAxes') && !e.isSquare(t) ?
                      e.squareYAxis(t) :
                      e
                }, e.prototype.setLayerClass = function(e, t) {
                  var r = this._layerClasses[e];
                  this._layerClasses[e] = t,
                  r !== t &&
                      (r && this.$.removeClass(r), t && this.$.addClass(t))
                }, e
              }();
              t.Grapher = O
            });
          r('loadcss!tour', function() {});
          r('loadcss!calculator_embed', function() {});
          r('loadcss!buttons', function() {});
          r('loadcss!dcg-normalize', function() {});
          r('loadcss!projector_mode', function() {});
          r('loadcss!desmos-icons', function() {});
          r('loadcss!popovers', function() {});
          r('main/calc_embed',
            [
              'require',
              'exports',
              'main/graph_settings',
              'tours/tour_manager',
              'tslib',
              'lib/i18n',
              'jquery',
              'main/controller',
              'dcgview',
              'main/instancehotkeys',
              'lib/console',
              'underscore',
              'lib/defocus-mobile',
              'graphing-calc/views/main',
              'underscore_model',
              'graphing/viewport',
              'main/evaluator',
              'graphing/grapher',
              'core/lib/color-helpers',
              'loadcss!tour',
              'loadcss!calculator_embed',
              'loadcss!buttons',
              'loadcss!dcg-normalize',
              'loadcss!projector_mode',
              'loadcss!desmos-icons',
              'loadcss!popovers'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g, m, y, v) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var b = 0, x = function() {
                function e(e, t, i, u) {
                  function p() {
                    var e = S.computeMajorLayout(), t = {
                      left: e.grapher.left,
                      right: e.grapher.left + e.grapher.width,
                      width: e.grapher.width,
                      top: e.grapher.top,
                      bottom: e.grapher.top + e.grapher.height,
                      height: e.grapher.height
                    },
                        r = k.getCurrentViewport(), n = {
                          top: r.ymax,
                          bottom: r.ymin,
                          left: r.xmin,
                          right: r.xmax,
                          width: r.xmax - r.xmin,
                          height: r.ymax - r.ymin
                        };
                    d.isEqual(n, C.mathCoordinates) ||
                        C.setProperty('mathCoordinates', n),
                        t.height > 0 && t.width > 0 &&
                        !d.isEqual(t, C.pixelCoordinates) &&
                        C.setProperty('pixelCoordinates', t)
                  }
                  function g() {
                    var e = k.getProjection();
                    _.setProperty(
                        'zoomedDefault', k.viewportController.isZoomRestored()),
                        _.setProperty(
                            'squareAxes', e.viewport.isSquare(e.screen))
                  }
                  function v(e, t) {
                    return o.t(e, t, _.config.language)
                  }
                  var x = this;
                  e || (e = document.createElement('div'));
                  var w = document.createElement('div');
                  w.className = 'dcg-wrapper', w.style.width = '100%',
                  w.style.height = '100%', e.appendChild(w), this.__id = b++;
                  var _ = new r;
                  this.graphSettings = _;
                  for (var E in i) _.config.setProperty(E, i[E]);
                  var S = new a.default(_);
                  this.controller = S,
                  u && S.dispatch({type: 'ui/container-resized', size: u}),
                  this.rootElt = w,
                  this.view = l.mountToNode(
                      h.default, this.rootElt, {controller: l.const(S)});
                  var M = new m.Evaluator(t);
                  this.controller.setEvaluator(M),
                      this.controller.setRootElt(this.rootElt);
                  var I = S.find$('.dcg-grapher'),
                      k = new y.Grapher(I, _, this.controller, M);
                  this.controller.setGrapher(k), _.registerCallbacks(k, M),
                      this.controller.initStateStack(),
                      _.config.redrawSlowly ||
                      (k.redrawSlowly = k.redrawAllLayers),
                      M.readEvaluatorConfig =
                          function() {
                        return {
                          evaluationMode: 'graphing',
                              globalRandomSeed: _.randomSeed,
                              degreeMode: _.degreeMode,
                              viewState: S.getViewState(),
                              intersectId: S.getIntersectId(),
                              restrictedFunctions: _.config.restrictedFunctions,
                              forceEnableGeometryFunctions:
                                  _.config.forceEnableGeometryFunctions,
                              distributions: _.config.distributions,
                              pointsOfInterest: _.config.pointsOfInterest,
                              plotSingleVariableImplicitEquations:
                                  _.config.plotSingleVariableImplicitEquations,
                              plotImplicits: _.config.plotImplicits,
                              plotInequalities: _.config.plotInequalities,
                              sliders: _.config.sliders
                        }
                      },
                      M.onEvaluatorResults =
                          function(e) {
                        x.controller.dispatch({
                          type: 'on-evaluator-changes',
                          changes: e.evaluationStates
                        }),
                            x.controller.dispatch({
                              type: 'process-graph-data',
                              graphData: e.graphData
                            }),
                            e.renderSlowly ? k.redrawSlowly() :
                                             k.redrawAllLayers()
                      },
                      this.unsubFunc = this.controller.subToChanges(function() {
                        x.controller.doesDOMHaveSize() &&
                            (x.view.update(), k.update()),
                            p(), g()
                      });
                  var C = new f.UnderscoreModel;
                  C.setProperties({
                    pixelCoordinates: {
                      top: 0,
                      bottom: 0,
                      left: 0,
                      right: 0,
                      width: 0,
                      height: 0
                    },
                    mathCoordinates: {
                      top: 0,
                      bottom: 0,
                      left: 0,
                      right: 0,
                      width: 0,
                      height: 0
                    }
                  }),
                      this.graphpaperBounds = C,
                      s(this.rootElt)
                          .on('keydown.calculator-' + this.__id,
                              function(e) {
                                x.grapher &&
                                    x.grapher.audioGraph.handleKeydown(e),
                                    x.instanceHotkeys.handleKeydown(e)
                              }),
                      s(window).on(
                          'dcg-tapstart.calculator-' + this.__id,
                          function(e) {
                            var t = s(e.target),
                                r = !!t.closest(x.rootElt).length,
                                n = e.wasHandled(
                                    'create-expression-with-keyboard'),
                                i = !!t.closest('.dcg-api-shared-keypad-root')
                                          .length,
                                o = !!t.hasClass('dcg-shell');
                            if (r || i || o || n ||
                                    S.dispatch({type: 'set-none-selected'}),
                                e.wasHandled('do-not-clear-poi-labels') ||
                                    (k.traceLayer.clearOpenedPOI(),
                                     k.redrawAllLayers()),
                                S.isInEditListMode()) {
                              var a = 0 === t.closest('.dcg-exppanel').length &&
                                  0 === t.closest('.dcg-options-menu').length &&
                                  0 ===
                                      t.closest('.dcg-expression-top-bar')
                                          .length &&
                                  0 === t.closest('.dcg-keypad').length;
                              r && !a || S.dispatch({
                                type: 'set-edit-list-mode',
                                isEditListMode: !1,
                                focusExpressionList: !1
                              })
                            }
                          }),
                      this.grapher = k, this.evaluator = M,
                      this.tourManager = n({evaluator: M}),
                      this.controller.dispatch({type: 'set-blank'});
                  var T = ['degreeMode'], L = {};
                  T.forEach(function(e) {
                    void 0 !== i[e] && (L[e] = i[e])
                  }),
                      _.setGraphSettings(L),
                      _.config.expressionsCollapsed &&
                      this.setOptions({expressionsCollapsed: !0}),
                      _.config.capExpressionSize &&
                      this.setOptions({capExpressionSize: !0}),
                      _.config.hasOwnProperty('pointsOfInterest') &&
                      this.setOptions(
                          {pointsOfInterest: _.config.pointsOfInterest}),
                      _.config.hasOwnProperty('backgroundColor') &&
                      this.setOptions(
                          {backgroundColor: _.config.backgroundColor}),
                      _.config.hasOwnProperty('textColor') &&
                      this.setOptions({textColor: _.config.textColor}),
                      _.config.observe('language', function() {
                        var e = x.controller.getState();
                        x.controller.dispatch({type: 'set-state', state: e}),
                            x.tourManager && (x.tourManager.closingMsg = [
                              '<b>__endingMessage__</b><br>',
                              v('This message will self-destruct in __seconds__...')
                            ].join(''))
                      }), _.config.observe('forceLogModeRegressions', function() {
                        _.config.forceLogModeRegressions &&
                            x.controller.setAllRegressionsToLogMode()
                      }), this.instanceHotkeys = new c.default(S)
                }
                return e.prototype.setOption = function(e, t) {
                  this.controller.getGraphSettings().config.setProperty(e, t)
                }, e.prototype.setOptions = function(e) {
                  function t(e) {
                    var t = e.notes, r = e.folders, n = e.images;
                    return !1 === t || !1 === r || !1 === n
                  }
                  var r, n = this.controller.getGraphSettings().config,
                         o = i.__assign({}, e);
                  e.hasOwnProperty('backgroundColor') &&
                      (v.isValidHexColor(e.backgroundColor) ||
                       (u.warn(
                            'Invalid backgroundColor. Background color must be a 3- or 6-character hex color (e.g. #cde or #ffaaaa)'),
                        delete o.backgroundColor)),
                      e.hasOwnProperty('textColor') &&
                      (v.isValidHexColor(e.textColor) ||
                       (u.warn(
                            'Invalid textColor. Text color must be a 3- or 6-character hex color (e.g. #000 or #001111)'),
                        delete o.textColor)),
                      e.hasOwnProperty('menus') &&
                      (u.warn(
                           'Deprecated option: menus. Setting settingsMenu and expressionsTopbar instead.'),
                       e.hasOwnProperty('settingsMenu') ||
                           (o.settingsMenu = !!e.menus),
                       e.hasOwnProperty('expressionsTopbar') ||
                           (o.expressionsTopbar = !!e.menus)),
                      e.hasOwnProperty('solutions') &&
                      (u.warn(
                           'Deprecated option: solutions. Setting pointsOfInterest instead.'),
                       e.hasOwnProperty('pointsOfInterest') ||
                           (o.pointsOfInterest = !!e.solutions)),
                      e.hasOwnProperty('singleVariableSolutions') &&
                      u.warn(
                          'Deprecated option: singleVariableSolutions has been removed.'),
                      !1 === e.graphpaper &&
                      (e.expressionsCollapsed &&
                           (o.expressionsCollapsed = !1,
                            u.warn(
                                'Cannot set graphpaper: false with expressionsCollapsed: true. Proceeding with expressionsCollapsed: false.')),
                       n.expressionsCollapsed &&
                           (o.expressionsCollapsed = !1,
                            u.warn(
                                'Disabling the graphpaper with the expressions list collapsed is not supported.Setting expressionsCollapsed: false.')),
                       e.zoomButtons &&
                           (o.zoomButtons = !1,
                            u.warn(
                                'Cannot set graphpaper: false with zoomButtons: true. Proceeding with zoomButtons: false.')),
                       e.showResetButtonOnGraphpaper &&
                           (o.showResetButtonOnGraphpaper = !1,
                            u.warn(
                                'Cannot set graphpaper: false with showResetButtonOnGraphpaper: true. Proceeding with showResetButtonOnGraphpaper: false.')),
                       n.zoomButtons &&
                           (o.zoomButtons = !1,
                            u.warn(
                                'Disabling the graphpaper with the zoomButtons visible is not supported. Setting zoomButtons: false.')),
                       n.showResetButtonOnGraphpaper &&
                           (o.showResetButtonOnGraphpaper = !1,
                            u.warn(
                                'Disabling the graphpaper with the reset button visible is not supported. Setting showResetButtonOnGraphpaper: false.'))),
                      !1 === n.graphpaper &&
                      (e.expressionsCollapsed || e.zoomButtons ||
                       e.showResetButtonOnGraphpaper) &&
                      (o.graphpaper = !0,
                       u.warn(
                           'Must have visible graphpaper to proceed. Setting graphpaper: true.')),
                      e.lockViewport && e.zoomButtons &&
                      (o.zoomButtons = !1,
                       u.warn(
                           'Cannot set zoomButtons: true and lockViewport: true. Proceeding with zoomButtons: false.')),
                      n.lockViewport && e.zoomButtons &&
                      (o.lockViewport = !1,
                       u.warn(
                           'Cannot set zoomButtons: true while the viewport is locked. Setting lockViewport: false.')),
                      n.zoomButtons && e.lockViewport &&
                      (o.zoomButtons = !1,
                       u.warn(
                           'Cannot lock the viewport without hiding the zoom buttons. Setting zoomButtons: false.'));
                  var s = t(e), a = t(i.__assign(i.__assign({}, n), e)),
                      l = n.pasteGraphLink, c = e.pasteGraphLink;
                  s ? (c || l) &&
                          (o.pasteGraphLink = !1,
                           u.warn(
                               'Cannot disable creating note, folder, or image expressions without disabling graph link pasting. Setting pasteGraphLink: false.')) :
                      c && a &&
                          (o.notes = !0, o.folders = !0, o.images = !0,
                           u.warn(
                               'Cannot enable graph link pasting while the creation of notes, folders, or images is disable. Setting notes: true, folders: true, images: true.'));
                  for (r in o)
                    if (o.hasOwnProperty(r)) switch (r) {
                        case 'expressionsCollapsed':
                          this.setOption(
                              'expressionsCollapsed', !!o.expressionsCollapsed),
                              o.expressionsCollapsed ?
                              this.controller.dispatch(
                                  {type: 'hide-expressions-list'}) :
                              this.controller.dispatch(
                                  {type: 'show-expressions-list'});
                          break;
                        case 'qwertyKeyboard':
                          this.setOption('qwertyKeyboard', !!o.qwertyKeyboard),
                              this.controller.isLetterKeypadOpen() &&
                              this.controller.dispatch({type: 'keypad/abc'});
                          break;
                        case 'degreeMode':
                          this.setOption('degreeMode', !!o.degreeMode),
                              this.controller.getGraphSettings()
                                  .setGraphSettings(
                                      {degreeMode: !!o.degreeMode});
                          break;
                        case 'keypad':
                        case 'graphpaper':
                        case 'expressions':
                        case 'settingsMenu':
                        case 'zoomButtons':
                        case 'showResetButtonOnGraphpaper':
                        case 'expressionsTopbar':
                        case 'pointsOfInterest':
                        case 'trace':
                        case 'border':
                        case 'lockViewport':
                        case 'administerSecretFolders':
                        case 'advancedStyling':
                        case 'authorIDE':
                        case 'clickableObjects':
                        case 'images':
                        case 'imageUploadCallback':
                        case 'folders':
                        case 'notes':
                        case 'sliders':
                        case 'links':
                        case 'restrictedFunctions':
                        case 'forceEnableGeometryFunctions':
                        case 'distributions':
                        case 'pasteGraphLink':
                        case 'pasteTableData':
                        case 'clearIntoDegreeMode':
                        case 'autosize':
                        case 'plotSingleVariableImplicitEquations':
                        case 'plotImplicits':
                        case 'plotInequalities':
                        case 'colors':
                        case 'branding':
                        case 'disableScrollFix':
                        case 'invertedColors':
                        case 'fontSize':
                        case 'projectorMode':
                        case 'language':
                        case 'redrawSlowly':
                        case 'onlyTraceSelected':
                        case 'disableMouseInteractions':
                        case 'nativeOnscreenKeypad':
                        case 'functionDefinition':
                        case 'plaidMode':
                        case 'pasteGraphLinkCallback':
                        case 'editOnWeb':
                        case 'crossOriginSaveTest':
                        case 'backgroundColor':
                        case 'textColor':
                        case 'enableTabindex':
                        case 'audioTraceReverseExpressions':
                        case 'showHamburger':
                        case 'decimalToFraction':
                        case 'capExpressionSize':
                        case 'transparentBackground':
                        case 'pauseWhenOffscreen':
                        case 'brailleMode':
                        case 'sixKeyInput':
                        case 'brailleControls':
                        case 'zoomFit':
                        case 'forceLogModeRegressions':
                          var d = o[r];
                          void 0 !== d && this.setOption(r, d);
                          break;
                        default:
                          var p = r;
                          return p
                      }
                }, e.prototype.setViewport = function(e) {
                  this.grapher.viewportController.setViewport(
                      new g.Viewport(e[0], e[1], e[2], e[3]))
                }, e.prototype.resize = function(e) {
                  e &&
                      this.controller.dispatch(
                          {type: 'ui/container-resized', size: e})
                }, e.prototype.interceptTouch = function() {
                  var e = s(this.rootElt),
                      t = e.find('.dcg-expression-top-bar');
                  t.add(e.find('.dcg-keypad')),
                      t.length && (t.on('touchstart', function(e) {
                        s(e.target).is('input, textarea') || e.preventDefault()
                      }), t.on('touchend', function(e) {
                        s(e.target).closest('.dcg-do-not-blur').length > 0 ||
                            p.default()
                      }))
                }, e.prototype.destroy = function() {
                  s(window).off('.calculator-' + this.__id);
                  var e = s(this.rootElt);
                  e.off('.calculator-' + this.__id), this.unsubFunc(),
                      this.graphSettings.unobserveAll(),
                      this.evaluator && this.evaluator.destroy(),
                      this.grapher && this.grapher.remove(),
                      l.unmountFromNode(this.rootElt), e.remove()
                }, e.prototype.tick = function(e, t) {
                  t ||
                      (this.controller.shouldDispatchTickNextFrame() &&
                           this.controller.dispatch({type: 'tick', time: e}),
                       this.controller.updateRenderShellsAfterDispatch()),
                      this.evaluator.tick(),
                      this.grapher && this.grapher.tick(e)
                }, e.prototype.getState = function(e) {
                  return this.controller.getState(e)
                }, e.prototype.setBlank = function(e) {
                  this.controller.dispatch({type: 'set-blank', opts: e || {}})
                }, e.prototype.setState = function(e, t) {
                  this.controller.dispatch(
                      {type: 'set-state', state: e, opts: t || {}})
                }, e
              }();
              t.default = x
            });
          r('lib/dom-change-detector',
            ['require', 'exports', 'tslib', 'lib/animation-frame', 'jquery'],
            function(e, t, r, n, i) {
              'use strict';
              function o() {
                c = !0, n.requestAnimationFrame(s)
              }
              function s() {
                t.testFixture.rafSPY && t.testFixture.rafSPY(), c = !1;
                for (var e in l) l[e].detectAndEnqueueEvent(), c = !0;
                if (c) {
                  o();
                  for (var e in l) l[e].dispatchQueuedEvent()
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = 1, l = {}, c = !1;
              t.testFixture = {}, t.checkAllWatchingDetectors = s;
              var u = function() {
                function e(e, t) {
                  this.elt = e, this.cb = t, this.destroyed = !1,
                  this.lastOffscreen = !1, this.id = a.toString(),
                  this.appliedScale = {x: 1, y: 1}, a++
                }
                return e.prototype
                           .stopWatching =
                           function() {
                  delete l[this.id]
                },
                e.prototype.startWatching =
                           function() {
                  this.checkForChanges(), l[this.id] = this, c || o()
                },
                e.prototype.resetAppliedScalingAndGetBoundingClientRect =
                           function() {
                  var e = this.elt.getBoundingClientRect(), t = {
                    x: e.width / this.elt.offsetWidth,
                    y: e.height / this.elt.offsetHeight
                  };
                  if (t.x === this.appliedScale.x &&
                      t.y === this.appliedScale.y)
                    return e;
                  var r = i(this.elt).children('.dcg-wrapper')[0];
                  return r && (this.appliedScale = t, i(r).css({
                           transform: 'scale(' + 1 / this.appliedScale.x + ',' +
                               1 / this.appliedScale.y + ')',
                           width: 100 * this.appliedScale.x + '%',
                           height: 100 * this.appliedScale.y + '%',
                           'transform-origin': '0 0'
                         })),
                         e
                },
                e.prototype.detectAndEnqueueEvent = function() {
                  if (!this.destroyed) {
                    var e = !0;
                    if (document.body && document.body.contains(this.elt)) {
                      var t =
                          this.resetAppliedScalingAndGetBoundingClientRect();
                      e = t.top > window.innerHeight || t.bottom < 0 ||
                          t.left > window.innerWidth || t.right < 0,
                      this.lastSize ?
                          t.width === this.lastSize.width &&
                                  t.height === this.lastSize.height ||
                              (this.lastSize.width = t.width,
                               this.lastSize.height = t.height,
                               this.queuedEvent = {
                                 type: 'resized',
                                 target: this.elt,
                                 size: r.__assign({}, this.lastSize),
                                 isOffscreen: e
                               }) :
                          (this.lastSize = {width: t.width, height: t.height},
                           this.queuedEvent = {
                             type: 'added',
                             target: this.elt,
                             size: r.__assign({}, this.lastSize),
                             isOffscreen: e
                           })
                    } else
                      this.lastSize &&
                          (this.lastSize = void 0, this.queuedEvent = {
                            type: 'removed',
                            target: this.elt,
                            isOffscreen: !0
                          });
                    e !== this.lastOffscreen &&
                        (this.lastOffscreen = e,
                         this.queuedEvent || (this.queuedEvent = {
                           type: 'offscreen-noop',
                           target: this.elt,
                           isOffscreen: e
                         }))
                  }
                }, e.prototype.dispatchQueuedEvent = function() {
                  var e = this.queuedEvent;
                  e && (this.queuedEvent = void 0, this.cb(e))
                }, e.prototype.checkForChanges = function() {
                  this.detectAndEnqueueEvent(), this.dispatchQueuedEvent()
                }, e.prototype.destroy = function() {
                  this.stopWatching();
                  for (var e in this) this.hasOwnProperty(e) && delete this[e];
                  this.destroyed = !0
                }, e
              }();
              t.default = u
            });
          r('graphing/compute-async-screenshot-bounds',
            ['require', 'exports', 'lib/console'], function(e, t, r) {
              'use strict';
              function n(e) {
                var t = e.mode, n = e.width, i = e.height, o = e.currentBounds,
                    s = e.graphpaperAspectRatio, a = e.mathAspectRatio,
                    l = e.mathBounds, c = n / i,
                    u = {x: o.left + o.width / 2, y: o.bottom + o.height / 2};
                if (void 0 === l.left != (void 0 === l.right) ||
                    void 0 === l.bottom != (void 0 === l.top))
                  return r.warn(
                             'asyncScreenshot: cannot specify "left" bound without "right" or "bottom" bound without "top". Got: ' +
                             l),
                         o;
                var d, p, h, f, g, m, y, v, b, x,
                    w = void 0 !== l.left && void 0 !== l.right,
                    _ = void 0 !== l.bottom && void 0 !== l.top, E = w && _;
                switch (t) {
                  case 'stretch':
                    return E ? l :
                        w    ? {
                          left: l.left,
                          right: l.right,
                          bottom: o.bottom,
                          top: o.top
                        } :
                        _ ? {
                          left: o.left,
                          right: o.right,
                          bottom: l.bottom,
                          top: l.top
                        } :
                            o;
                  case 'contain':
                    return E  ? (f = l.right - l.left, g = l.top - l.bottom,
                                m = {x: l.left + f / 2, y: l.bottom + g / 2},
                                h = f / g,
                                c > h ? (p = g / i, d = p * a, {
                                  left: m.x - d * n / 2,
                                  right: m.x + d * n / 2,
                                  bottom: l.bottom,
                                  top: l.top
                                }) :
                                         (d = f / n, p = d / a, {
                                          left: l.left,
                                          right: l.right,
                                          bottom: m.y - p * i / 2,
                                          top: m.y + p * i / 2
                                        })) :
                        w     ? (y = l.right - l.left, v = l.left + y / 2,
                             h = y / o.height,
                             c > h ? (p = o.height / i, d = p * a, {
                               left: v - d * n / 2,
                               right: v + d * n / 2,
                               bottom: o.bottom,
                               top: o.top
                             }) :
                                         (d = y / n, p = d / a, {
                                       left: l.left,
                                       right: l.right,
                                       bottom: u.y - p * i / 2,
                                       top: u.y + p * i / 2
                                     })) :
                        _     ? (b = l.top - l.bottom, x = l.bottom + b / 2,
                             h = o.width / b,
                             c > h ?
                                     (p = b / i, d = p * a, {
                                   left: u.x - d * n / 2,
                                   right: u.x + d * n / 2,
                                   bottom: l.bottom,
                                   top: l.top
                                 }) :
                                     (d = o.width / n, p = d / a, {
                                   left: o.left,
                                   right: o.right,
                                   bottom: x - p * i / 2,
                                   top: x + p * i / 2
                                 })) :
                        c > s ? (p = o.height / i, d = p * a, {
                          left: u.x - d * n / 2,
                          right: u.x + d * n / 2,
                          bottom: o.bottom,
                          top: o.top
                        }) :
                                (d = o.width / n, p = d / a, {
                                  left: o.left,
                                  right: o.right,
                                  bottom: u.y - p * i / 2,
                                  top: u.y + p * i / 2
                                });
                  case 'preserveX':
                    return E ? (f = l.right - l.left, g = l.top - l.bottom,
                                m = {x: l.left + f / 2, y: l.bottom + g / 2},
                                h = f / g, d = f / n, p = d / a, {
                                  left: l.left,
                                  right: l.right,
                                  bottom: m.y - p * i / 2,
                                  top: m.y + p * i / 2
                                }) :
                        _    ? (b = l.top - l.bottom, x = l.bottom + b / 2,
                             h = o.width / b, d = o.width / n, p = d / a, {
                               left: o.left,
                               right: o.right,
                               bottom: x - p * i / 2,
                               top: x + p * i / 2
                             }) :
                        w    ? (y = l.right - l.left, d = y / n, p = d / a, {
                          left: l.left,
                          right: l.right,
                          bottom: u.y - p * i / 2,
                          top: u.y + p * i / 2
                        }) :
                               (y = o.right - o.left, d = y / n, p = d / a, {
                              left: o.left,
                              right: o.right,
                              bottom: u.y - p * i / 2,
                              top: u.y + p * i / 2
                            });
                  case 'preserveY':
                    return E ? (f = l.right - l.left, g = l.top - l.bottom,
                                m = {x: l.left + f / 2, y: l.bottom + g / 2},
                                h = f / g, p = g / i, d = p * a, {
                                  left: m.x - d * n / 2,
                                  right: m.x + d * n / 2,
                                  bottom: l.bottom,
                                  top: l.top
                                }) :
                        w    ? (y = l.right - l.left, v = l.left + y / 2,
                             h = y / o.height, p = o.height / i, d = p * a, {
                               left: v - d * n / 2,
                               right: v + d * n / 2,
                               bottom: o.bottom,
                               top: o.top
                             }) :
                        _    ? (b = l.top - l.bottom, p = b / i, d = p * a, {
                          left: u.x - d * n / 2,
                          right: u.x + d * n / 2,
                          bottom: l.bottom,
                          top: l.top
                        }) :
                               (b = o.top - o.bottom, p = b / i, d = p * a, {
                              left: u.x - d * n / 2,
                              right: u.x + d * n / 2,
                              bottom: o.bottom,
                              top: o.top
                            });
                  default:
                    return o
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.computeBoundsFromScreenshotOpts = n
            });
          r('dcgview-helpers/mathquill-proxy',
            ['require', 'exports', 'dcgview-helpers/mathquill-view'],
            function(e, t, r) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var n = function() {
                function e(e) {
                  this.mq = e, this.id = e.id, this.data = e.data
                }
                return e.prototype.simulateUserChangedLatex = function() {
                  r.default.simulateUserChangedLatex(this.mq)
                }, e.prototype.simulateKeypress = function(e) {
                  r.default.simulateKeypress(this.mq, e)
                }, e.prototype.latex = function(e) {
                  return void 0 === e ?
                      this.mq.latex() :
                      (this.mq.latex(e), void this.simulateUserChangedLatex())
                }, e.prototype.reflow = function() {
                  this.mq.reflow()
                }, e.prototype.el = function() {
                  return this.mq.el()
                }, e.prototype.getAriaLabel = function() {
                  return this.mq.getAriaLabel()
                }, e.prototype.setAriaLabel = function(e) {
                  return this.mq.setAriaLabel(e)
                }, e.prototype.html = function() {
                  return this.mq.html()
                }, e.prototype.mathspeak = function() {
                  return this.mq.mathspeak()
                }, e.prototype.select = function() {
                  this.mq.select()
                }, e.prototype.moveToRightEnd = function() {
                  this.mq.moveToRightEnd()
                }, e.prototype.cmd = function(e) {
                  this.mq.cmd(e), this.simulateUserChangedLatex()
                }, e.prototype.write = function(e) {
                  this.mq.write(e), this.simulateUserChangedLatex()
                }, e.prototype.keystroke = function(e) {
                  this.simulateKeypress(e)
                }, e.prototype.typedText = function(e) {
                  this.mq.typedText(e), this.simulateUserChangedLatex()
                }, e.prototype.clearSelection = function() {
                  this.mq.clearSelection()
                }, e.prototype.getAriaPostLabel = function() {
                  return this.mq.getAriaPostLabel()
                }, e.prototype.setAriaPostLabel = function(e, t) {
                  this.mq.setAriaPostLabel(e, t)
                }, e.prototype.blur = function() {
                  this.mq.blur()
                }, e.prototype.focus = function() {
                  this.mq.focus()
                }, e.prototype.revert = function() {
                  this.mq.revert()
                }, e.prototype.ignoreNextMousedown = function(e) {
                  this.mq.ignoreNextMousedown(e)
                }, e.prototype.clickAt = function(e, t, r) {
                  this.mq.clickAt(e, t, r)
                }, e
              }();
              t.MathQuillProxy = n
            });
          r('main/raf-loop', ['require', 'lib/animation-frame'], function(e) {
            'use strict';
            function t(e) {
              function t(n) {
                r.requestAnimationFrame(t), e(n)
              }
              r.requestAnimationFrame(t)
            }
            var r = e('lib/animation-frame');
            return t
          });
          r('main/shared-clock-bus',
            ['require', 'exports', 'main/raf-loop', 'underscore_model'],
            function(e, t, r, n) {
              'use strict';
              function i(e) {
                return a += 1, s.observeEvent('tick.' + a, function(t, r) {
                  e(r)
                }), a
              }
              function o(e) {
                s.unobserveEvent('tick.' + e)
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var s = new n.UnderscoreModel;
              r(function(e) {
                s.triggerEvent('tick', e)
              });
              var a = 0;
              t.subscribe = i, t.unsubscribe = o
            });
          r('main/shared-worker-pool',
            ['require', 'exports', 'worker/workerpool', 'lib/urlparser'],
            function(e, t, r, n) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var i = n.getParameter(location.search, 'nworkers'), o = 4;
              i && (o = parseInt(i, 10)), t.default = new r(o)
            });
          r('graphing-calc/json/config-options',
            [
              'require', 'exports', 'tslib', 'core/lib/color-helpers',
              'lib/console', 'main/font_sizes', 'expressions/colors',
              'expressions/image_file_to_data_url', 'core/lib/deepCopy'
            ],
            function(e, t, r, n, i, o, s, a, l) {
              'use strict';
              function c(e) {
                return !!d.hasOwnProperty(e) ||
                    (!!p.hasOwnProperty(e) || !!h.hasOwnProperty(e))
              }
              function u(e) {
                var t = l.default(f);
                for (var r in e) t.hasOwnProperty(r) && (t[r] = e[r]);
                return n.isValidHexColor(t.backgroundColor) ||
                           (t.backgroundColor = f.backgroundColor,
                            i.warn(
                                'Invalid backgroundColor. Background color must be a 3- or 6-character hex color (e.g. #cde or #ffaaaa)')),
                       n.isValidHexColor(t.textColor) ||
                           (t.textColor = f.textColor,
                            i.warn(
                                'Invalid textColor. Text color must be a 3- or 6-character hex color (e.g. #000 or #001111)')),
                       void 0 === e.zoomButtons &&
                           (t.graphpaper && !t.lockViewport ||
                            (t.zoomButtons = !1)),
                       void 0 === e.images && (t.graphpaper || (t.images = !1)),
                       e.hasOwnProperty('menus') &&
                           (i.warn(
                                'As of API version 0.4, the \'menus\' option is deprecated and has been split into \'settingsMenu\' (boolean) and \'expressionsTopbar\' (boolean).'),
                            e.hasOwnProperty('settingsMenu') ||
                                (t.settingsMenu = !!e.menus),
                            e.hasOwnProperty('expressionsTopbar') ||
                                (t.expressionsTopbar = !!e.menus)),
                       e.hasOwnProperty('solutions') &&
                           (i.warn(
                                'As of API v1.0, the \'solutions\' option is deprecated and has been replaced with \'pointsOfInterest\' (boolean).'),
                            e.hasOwnProperty('pointsOfInterest') ||
                                (t.pointsOfInterest = !!e.solutions)),
                       e.hasOwnProperty('singleVariableSolutions') &&
                           i.warn(
                               'As of API v1.0, the \'singleVariableSolutions\' has been removed. The calculator no longer displays solutions to single variable equations.'),
                       t.graphpaper ||
                           (t.expressionsCollapsed &&
                                (t.expressionsCollapsed = !1,
                                 i.warn(
                                     'Desmos API initialized with bad options. graphpaper: false and expressionsCollapsed: true are incompatible. Proceeding with expressionsCollapsed: false.')),
                            t.zoomButtons &&
                                (t.zoomButtons = !1,
                                 i.warn(
                                     'Desmos API initialized with bad options. graphpaper: false and zoomButtons: true are incompatible. Proceeding with zoomButtons: false.')),
                            t.showResetButtonOnGraphpaper &&
                                (t.showResetButtonOnGraphpaper = !1,
                                 i.warn(
                                     'Desmos API initialized with bad options. graphpaper: false and showResetButtonOnGraphpaper: true are incompatible. Proceeding with showResetButtonOnGraphpaper: false.'))),
                       t.lockViewport && t.zoomButtons &&
                           (t.zoomButtons = !1,
                            i.warn(
                                'Desmos API initialized with bad options. lockViewport: true and zoomButtons: true are incompatible. Proceeding with zoomButtons: false.')),
                       !1 !== t.notes && !1 !== t.folders && !1 !== t.images ||
                           !0 !== t.pasteGraphLink ||
                           (t.pasteGraphLink = !1,
                            i.warn(
                                'Desmos API initialized with bad options. pasteGraphLink: true is incompatible with disabling the creation of note, folder, or image expressions. Proceeding with pasteGraphLink: false.')),
                       t
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var d = {
                keypad: !0,
                graphpaper: !0,
                expressions: !0,
                settingsMenu: !0,
                zoomButtons: !0,
                showResetButtonOnGraphpaper: !1,
                expressionsTopbar: !0,
                capExpressionSize: !1,
                pointsOfInterest: !0,
                trace: !0,
                border: !0,
                lockViewport: !1,
                expressionsCollapsed: !1,
                administerSecretFolders: !1,
                advancedStyling: !1,
                authorIDE: !1,
                clickableObjects: !1,
                images: !0,
                imageUploadCallback: a.imageFileToDataURL,
                folders: !0,
                notes: !0,
                sliders: !0,
                links: !0,
                qwertyKeyboard: !0,
                restrictedFunctions: !1,
                forceEnableGeometryFunctions: !1,
                pasteGraphLink: !1,
                pasteTableData: !0,
                degreeMode: !1,
                clearIntoDegreeMode: !1,
                autosize: !0,
                plotSingleVariableImplicitEquations: !0,
                plotImplicits: !0,
                plotInequalities: !0,
                colors: {
                  RED: s.RED,
                  BLUE: s.BLUE,
                  GREEN: s.GREEN,
                  ORANGE: s.ORANGE,
                  PURPLE: s.PURPLE,
                  BLACK: s.BLACK
                },
                invertedColors: !1,
                functionDefinition: !0,
                projectorMode: !1,
                decimalToFraction: !0,
                fontSize: o.MEDIUM,
                language: 'en',
                backgroundColor: '#fff',
                textColor: '#000',
                distributions: !0,
                brailleMode: 'none',
                sixKeyInput: !1,
                brailleControls: !0,
                zoomFit: !0,
                forceLogModeRegressions: !1
              };
              t.publicConfigOptions = Object.keys(d);
              var p = {
                showHamburger: !1,
                disableScrollFix: !1,
                branding: !0,
                redrawSlowly: !1,
                onlyTraceSelected: !1,
                disableMouseInteractions: !1,
                nativeOnscreenKeypad: !1,
                plaidMode: !1,
                pasteGraphLinkCallback: void 0,
                editOnWeb: !1,
                crossOriginSaveTest: !1,
                enableTabindex: !0,
                audioTraceReverseExpressions: !1,
                transparentBackground: !1,
                pauseWhenOffscreen: !1
              },
                  h = {solutions: !0, menus: !0, singleVariableSolutions: !0},
                  f = r.__assign(r.__assign({}, d), p);
              t.isConfigOption = c, t.validateConfigOptions = u
            });
          r('lib/underscore-shim', ['require', 'exports', 'underscore_model'],
            function(e, t, r) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var n = function() {
                function e() {
                  this.model = new r.UnderscoreModel
                }
                return e.prototype.triggerEvent = function(e, t) {
                  this.model.triggerEvent(e, t)
                }, e.prototype.observeEvent = function(e, t) {
                  this.model.observeEvent(e, t)
                }, e.prototype.unobserveEvent = function(e) {
                  this.model.unobserveEvent(e)
                }, e.prototype.setProperty = function(e, t) {
                  this[e] = t, this.model.setProperty(e, t)
                }, e.prototype.observe = function(e, t) {
                  this.model.observe(e, t)
                }, e.prototype.observeAndSync = function(e, t) {
                  this.model.observeAndSync(e, t)
                }, e.prototype.unobserve = function(e) {
                  this.model.unobserve(e)
                }, e
              }();
              t.UnderscoreModelShim = n
            });
          r('api/graphing',
            [
              'require',
              'exports',
              'tslib',
              'lib/i18n',
              'main/calc_embed',
              'core/lib/deepCopy',
              'underscore_model',
              'core/math/recttransformation',
              'lib/dom-change-detector',
              'graphing/compute-async-screenshot-bounds',
              'graphing-calc/api/sanitize-expression',
              'dcgview-helpers/mathquill-view',
              'dcgview-helpers/mathquill-proxy',
              'lib/console',
              'underscore',
              'main/shared-clock-bus',
              'main/shared-worker-pool',
              'core/graphing-calc/json/graph-settings',
              'graphing-calc/json/config-options',
              'core/lib/random-seed',
              '../lib/underscore-shim'
            ],
            function(
                e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g, m, y, v, b, x) {
              'use strict';
              function w(e, t) {
                var r = {}, n = {};
                for (var i in e)
                  v.isConfigOption(i)     ? r[i] = e[i] :
                      y.isGraphSetting(i) ? n[i] = e[i] :
                                            t ||
                          h.warn('Unrecognized setting: ' + i + '. Ignoring.');
                return {
                  configOptions: r, settingsOptions: n
                }
              }
              function _(e, t) {
                var r = {};
                return t.hasOwnProperty('x') && (r.x = e.mapX(t.x)),
                       t.hasOwnProperty('y') && (r.y = e.mapY(t.y)), r
              }
              function E() {
                if (!I) {
                  for (var e; (e = M.shift()) && e.api._destroyed;)
                    ;
                  if (e) {
                    var t = e;
                    I = !0;
                    var r = t.options, n = t.mathBounds, i = t.state,
                        o = t.callback;
                    S || (S = new k);
                    var s = S;
                    s.setState(i), s.setMathBounds(n);
                    ['majorAxisOpacity', 'minorAxisOpacity', 'axisLineOffset',
                     'axisLineWidth', 'labelSize', 'graphLineWidth',
                     'pointLineWidth']
                        .forEach(function(e) {
                          'axisLineWidth' === e ?
                              s._calc.grapher.settings.setProperty(
                                  e, t.api._calc.grapher.settings[e]) :
                              s._calc.grapher.settings[e] =
                                  t.api._calc.grapher.settings[e]
                        });
                    var a = s._calc.evaluator, l = function() {
                      s._calc.grapher.asyncScreenshot(r, function(e) {
                        I = !1, E(), o(e)
                      })
                    }, c = t.api._calc.controller, u = g.subscribe(function() {
                      c.areAnyImagesLoading() ||
                          (g.unsubscribe(u), a.notifyWhenSynced(l))
                    })
                  }
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var S, M = [], I = !1, k = function(e) {
                function t(r, n, o) {
                  var s = e.call(this) || this;
                  if (s._destroyed = !1, s.isOffscreen = !1, !(s instanceof t))
                    return new t(r, n, o);
                  var a = w(n || {}, !0),
                      c = v.validateConfigOptions(a.configOptions),
                      u = a.settingsOptions;
                  return s._calc = new i.default(r, m.default, c),
                         s._calc.interceptTouch(),
                         s.controller = s._calc.controller,
                         s.controller.onEventsEmitted =
                             function(e) {
                           s.setProperty(
                               'isAnyExpressionSelected',
                               !!s.controller.getSelectedItem()),
                               s.setProperty(
                                   'expressionAnalysis',
                                   s.controller.getExpressionAnalysis());
                           var t = d.default.getFocusedMathquill();
                           s.setProperty(
                               'focusedMathQuill',
                               t ? new p.MathQuillProxy(t) : void 0);
                           for (var r in e)
                             e.hasOwnProperty(r) && e[r] &&
                                 s.triggerEvent(r, void 0)
                         },
                         s._calc.graphpaperBounds.observeAndSync(
                             'mathCoordinates',
                             s._syncGraphpaperBounds.bind(s)),
                         s._calc.graphpaperBounds.observeAndSync(
                             'pixelCoordinates',
                             s._syncGraphpaperBounds.bind(s)),
                         s.colors = s.controller.getColors(),
                         s._initGraphSettings(), s.updateSettings(u),
                         s._sharedClockBusToken = g.subscribe(function(e) {
                           var t = s._calc.grapher.settings.config
                                       .pauseWhenOffscreen &&
                               s.isOffscreen;
                           s._calc.tick(e, t)
                         }),
                         s.domChangeDetector = new l.default(
                             r,
                             function(e) {
                               switch (s.isOffscreen = e.isOffscreen, e.type) {
                                 case 'offscreen-noop':
                                   break;
                                 case 'added':
                                   s._calc.resize(e.size);
                                   break;
                                 case 'removed':
                                   break;
                                 case 'resized':
                                   s._calc.resize(e.size)
                               }
                             }),
                         c.autosize ? s.domChangeDetector.startWatching() :
                                      s.domChangeDetector.checkForChanges(),
                         'function' == typeof o && o(s), s
                }
                return r.__extends(t, e), t.prototype.destroy = function() {
                  function e(e) {
                    h.warn(
                        'You\'ve destroyed this API instance. You can no longer call .' +
                        e + '()')
                  }
                  this._calc.destroy(),
                      this.controller.onEventsEmitted = function() {},
                      g.unsubscribe(this._sharedClockBusToken),
                      this.domChangeDetector.destroy();
                  for (var t in this)
                    'function' == typeof this[t] ?
                        this[t] = e.bind(this, t) :
                        this.hasOwnProperty(t) && delete this[t];
                  this.destroy = function() {}, this._destroyed = !0
                }, t.prototype._syncGraphpaperBounds = function() {
                  var e = this;
                  this.controller.runAfterDispatch(function() {
                    e.setProperty('graphpaperBounds', {
                      mathCoordinates: e._calc.graphpaperBounds.mathCoordinates,
                      pixelCoordinates:
                          e._calc.graphpaperBounds.pixelCoordinates
                    })
                  })
                }, t.prototype._initGraphSettings = function() {
                  var e = this, t = new s.UnderscoreModel;
                  this.settings = this.graphSettings = t,
                  y.publicGraphSettings.forEach(function(r) {
                    e._calc.grapher.settings.observeAndSync(r, function() {
                      e.controller.runAfterDispatch(function() {
                        t.setProperty(r, e._calc.grapher.settings[r])
                      })
                    })
                  }),
                  v.publicConfigOptions.forEach(function(r) {
                    e._calc.grapher.settings.config.observeAndSync(
                        r, function() {
                          e.controller.runAfterDispatch(function() {
                            t.setProperty(r, e._calc.grapher.settings.config[r])
                          })
                        })
                  })
                }, t.prototype.updateSettings = function(e) {
                  var t = w(e, !1), r = t.configOptions, n = t.settingsOptions;
                  f.isEmpty(r) || this._calc.setOptions(r),
                      f.isEmpty(n) ||
                      this._calc.grapher.settings.setGraphSettings(n),
                      this.notifyControllerOfAPICall()
                }, t.prototype.setGraphSettings = function(e) {
                  h.warn(
                      'As of API v0.8 the \'setGraphSettings\' method is deprecated and has been renamed \'updateSettings.\''),
                      this.updateSettings(e),
                      this.setGraphSettings = this.updateSettings,
                      this.notifyControllerOfAPICall()
                }, t.prototype.fetchLanguage = function(e) {
                  return n.fetchLanguage(e)
                }, t.prototype.setDefaultState = function(e) {
                  this._calc.grapher.settings.setProperty('defaultState', e),
                      this.notifyControllerOfAPICall()
                }, t.prototype.mathToPixels = function(e) {
                  return _(
                      a.RT.fromRects(
                          this.graphpaperBounds.mathCoordinates,
                          this.graphpaperBounds.pixelCoordinates),
                      e)
                }, t.prototype.pixelsToMath = function(e) {
                  return _(
                      a.RT.fromRects(
                          this.graphpaperBounds.pixelCoordinates,
                          this.graphpaperBounds.mathCoordinates),
                      e)
                }, t.prototype.notifyControllerOfAPICall = function() {
                  this.controller.dispatch({type: 'api-method-called'})
                }, t.prototype.setExpression = function(e) {
                  var t = this.controller, r = t.getItemModel(e.id),
                      n = r && r.type,
                      i = u.validateItem(e, n, this.controller);
                  if (i)
                    if (n)
                      this.controller.dispatch({
                        type: 'set-expression-properties-from-api',
                        id: i.id,
                        properties: i
                      });
                    else {
                      if ('image' === i.type) return;
                      this.controller.dispatch(
                          {type: 'add-item-to-end-from-api', state: i})
                    }
                }, t.prototype.setExpressions = function(e) {
                  e.forEach(this.setExpression.bind(this))
                }, t.prototype.removeExpression = function(e) {
                  var t = e.id.toString();
                  this.controller.dispatch({type: 'remove-item-by-id', id: t})
                }, t.prototype.removeExpressions = function(e) {
                  e.forEach(this.removeExpression.bind(this))
                }, t.prototype.removeSelected = function() {
                  var e = this.controller.getSelectedItem();
                  e &&
                      this.controller.dispatch(
                          {type: 'remove-item-by-id', id: e.id})
                }, t.prototype.setMathBounds = function(e) {
                  e && e.left < e.right && e.bottom < e.top ?
                      this._calc.setViewport(
                          [e.left, e.right, e.bottom, e.top]) :
                      h.warn(
                          'Invalid bounds argument. Expected a bounds object with bounds.bottom < bounds.top, and bounds.left < bounds.right. Got ' +
                          JSON.stringify(e)),
                      this.notifyControllerOfAPICall()
                }, t.prototype.setViewport = function(e) {
                  4 == e.length && e[1] > e[0] && e[3] > e[2] ?
                      this._calc.setViewport(e) :
                      h.warn(
                          'Invalid viewport.  Expected [xmin, xmax, ymin, ymax].  Got ' +
                          e),
                      this.notifyControllerOfAPICall()
                }, t.prototype.resize = function() {
                  this.domChangeDetector.checkForChanges()
                }, t.prototype.getState = function(e) {
                  return this.controller.getState(e)
                }, t.prototype.getExpressions = function() {
                  return this.getState({stripDefaults: !1})
                      .expressions.list.map(u.sanitizeItem)
                }, t.prototype.setBlank = function(e) {
                  this.controller.dispatch({type: 'set-blank', opts: e || {}})
                }, t.prototype.setState = function(e, t) {
                  this.controller.dispatch(
                      {type: 'set-state', state: e, opts: t || {}})
                }, t.prototype.undo = function() {
                  this.controller.dispatch({type: 'undo'})
                }, t.prototype.redo = function() {
                  this.controller.dispatch({type: 'redo'})
                }, t.prototype.clearHistory = function() {
                  this.controller.dispatch({type: 'clear-undoredo-history'})
                }, t.prototype.newRandomSeed = function() {
                  this.updateSettings({randomSeed: b.default()})
                }, t.prototype.screenshot = function(e) {
                  return e || (e = {}),
                         e = this._validateBrailleScreenshotOptions(e),
                         this._calc.grapher.screenshot(e)
                }, t.prototype._getMathAspectRatio = function() {
                  var e = this.graphpaperBounds.mathCoordinates,
                      t = this._calc.grapher.getProjection().pixelCoordinates,
                      r = t.right - t.left, n = t.bottom - t.top;
                  return e.width / r / (e.height / n)
                }, t.prototype.isProjectionUniform = function() {
                  return !!this._calc.grapher.getProjection()
                               .settings.squareAxes
                }, t.prototype._validateBrailleScreenshotOptions = function(e) {
                  e = o.default(e);
                  var t = e.braille;
                  if (t) {
                    var r = t.embosserModel;
                    if (!r)
                      return h.warn(
                                 'Screenshot braille options requires an embosser model to be specified. '),
                             h.warn('Continuing with non-braille screenshot.'),
                             delete e.braille, e;
                    if ('etc' === r && (t.embosserModel = 'etc11'),
                        'vpmax' === r && (t.embosserModel = 'vpmax11'),
                        'etc8' !== t.embosserModel &&
                            'etc11' !== t.embosserModel &&
                            'vpmax8' !== t.embosserModel &&
                            'vpmax11' !== t.embosserModel)
                      return h.warn(
                                 'Unknown screenshot braille embosser model. Valid models are "etc" and "vpmax".'),
                             h.warn('Continuing with non-braille screenshot.'),
                             delete e.braille, e;
                    'nemeth' !== t.brailleMode && 'ueb' !== t.brailleMode &&
                        (h.warn(
                             'Screenshot options braille.brailleMode must be nemeth or ueb. Proceeding with nemeth.'),
                         t.brailleMode = 'nemeth'),
                        e.width &&
                        (h.warn(
                             'Screenshot width option is ignored when exporting Braille.'),
                         delete e.width),
                        e.height &&
                        (h.warn(
                             'Screenshot height option is ignored when exporting Braille.'),
                         delete e.height),
                        e.targetPixelRatio &&
                        (h.warn(
                             'Screenshot targetPixelRatio option is ignored when exporting Braille.'),
                         delete e.targetPixelRatio),
                        e.preserveAxisNumbers &&
                        (h.warn(
                             'Screenshot preserveAxisNumbers option is ignored when exporting Braille.'),
                         delete e.preserveAxisNumbers)
                  }
                  return e
                }, t.prototype._validateAsyncScreenshotOpts = function(e) {
                  e = o.default(e);
                  var t = e.mode || 'contain',
                      n = e.width || e.height ||
                      this.graphpaperBounds.pixelCoordinates.width,
                      i = e.height || e.width ||
                      this.graphpaperBounds.pixelCoordinates.height,
                      s = e.targetPixelRatio || 1, a = e.preserveAxisNumbers;
                  e.hasOwnProperty('format') ||
                      (e.svg ? (e.format = 'svg', delete e.svg) :
                               e.format = 'png');
                  var l = e.mathBounds || {}, u = this._getMathAspectRatio(),
                      d = this.graphpaperBounds.pixelCoordinates.width /
                      this.graphpaperBounds.pixelCoordinates.height,
                      p = c.computeBoundsFromScreenshotOpts({
                        mode: t,
                        width: n,
                        height: i,
                        currentBounds: this.graphpaperBounds.mathCoordinates,
                        graphpaperAspectRatio: d,
                        mathAspectRatio: u,
                        mathBounds: l
                      });
                  return {
                    opts: r.__assign(r.__assign({}, e), {
                      width: n,
                      height: i,
                      targetPixelRatio: s,
                      preserveAxisNumbers: a
                    }),
                        mathBounds: p
                  }
                }, t.prototype.asyncScreenshot = function(e, t) {
                  if (!arguments.length)
                    return void h.warn('asyncScreenshot expects a callback');
                  if (1 === arguments.length) {
                    if ('function' != typeof e)
                      return void h.warn('asyncScreenshot expects a callback');
                    t = e, e = {}
                  }
                  e || (e = {}), e = this._validateBrailleScreenshotOptions(e);
                  var r = this._validateAsyncScreenshotOpts(e), n = r.opts,
                      i = r.mathBounds;
                  M.push({
                    api: this,
                    options: n,
                    mathBounds: i,
                    state: this.getState(),
                    callback: t
                  }),
                      E()
                }, t.prototype.setOptions = function(e) {
                  var t = this._calc.setOptions(e);
                  return this.notifyControllerOfAPICall(), t
                }, t.prototype.focusFirstExpression = function() {
                  var e = this.controller.getItemModelByIndex(0);
                  e &&
                      this.controller.dispatch(
                          {type: 'move-focus-to-item', id: e.id, where: 'end'})
                }, t.prototype.HelperExpression = function(e) {
                  var t = e && e.latex || '', r = new s.UnderscoreModel;
                  return r.latex = t, this.controller.dispatch({
                    type: 'add-helper-expression',
                    state: {
                      type: 'helper-expression',
                      id: this.controller.generateId(),
                      latex: t,
                      proxy: r
                    }
                  }),
                         r
                }, t
              }(x.UnderscoreModelShim);
              t.default = k
            });
          r('main/calc_headless',
            [
              'require', 'exports', 'main/graph_settings', 'main/evaluator',
              'underscore_model', 'main/controller'
            ],
            function(e, t, r, n, i, o) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var s = function() {
                function e(e, t) {
                  var s = this, a = new r;
                  for (var l in t) a.config.setProperty(l, t[l]);
                  this.controller = new o.default(a);
                  var c = new n.Evaluator(e);
                  this.controller.setEvaluator(c),
                      c.readEvaluatorConfig = function() {
                        return {
                          evaluationMode: 'graphing',
                              globalRandomSeed: a.randomSeed,
                              degreeMode: a.degreeMode,
                              restrictedFunctions: a.config.restrictedFunctions,
                              distributions: a.config.distributions,
                              pointsOfInterest: a.config.pointsOfInterest,
                              plotSingleVariableImplicitEquations:
                                  a.config.plotSingleVariableImplicitEquations,
                              plotImplicits: a.config.plotImplicits,
                              plotInequalities: a.config.plotInequalities,
                              sliders: a.config.sliders
                        }
                      }, c.onEvaluatorResults = function(e) {
                        s.controller.dispatch({
                          type: 'on-evaluator-changes',
                          changes: e.evaluationStates
                        })
                      };
                  var u = new i.UnderscoreModel;
                  u.setProperties({
                    pixelCoordinates: {
                      top: 0,
                      bottom: 0,
                      left: 0,
                      right: 0,
                      width: 0,
                      height: 0
                    },
                    mathCoordinates: {
                      top: 0,
                      bottom: 0,
                      left: 0,
                      right: 0,
                      width: 0,
                      height: 0
                    }
                  }),
                      this.graphpaperBounds = u, this.evaluator = c,
                      this.setBlank()
                }
                return e.prototype.setBlank = function(e) {
                  this.controller.dispatch({type: 'set-blank', opts: e})
                }, e.prototype.tick = function() {
                  this.evaluator.tick()
                }, e.prototype.destroy = function() {
                  this.evaluator.destroy()
                }, e
              }();
              t.HeadlessCalc = s
            });
          r('api/headless',
            [
              'require', 'exports', 'main/calc_headless',
              'graphing-calc/json/config-options', 'main/shared-clock-bus',
              'main/shared-worker-pool',
              'graphing-calc/api/sanitize-expression', 'underscore_model',
              'lib/console'
            ],
            function(e, t, r, n, i, o, s, a, l) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var c = function() {
                function e() {
                  var t = this;
                  if (!(this instanceof e)) return new e;
                  this._calc = new r.HeadlessCalc(
                      o.default, n.validateConfigOptions({})),
                  this.controller = this._calc.controller,
                  this._sharedClockBusToken = i.subscribe(function() {
                    t._calc.tick()
                  })
                }
                return e.prototype.destroy = function() {
                  function e(e) {
                    l.warn(
                        'You\'ve destroyed this API instance. You can no longer call .' +
                        e + '()')
                  }
                  this._calc.destroy(),
                      i.unsubscribe(this._sharedClockBusToken);
                  for (var t in this)
                    'function' == typeof this[t] ?
                        this[t] = e.bind(this, t) :
                        this.hasOwnProperty(t) && delete this[t];
                  this.destroy = function() {}
                }, e.prototype.setExpression = function(e) {
                  var t = this.controller, r = t.getItemModel(e.id),
                      n = r && r.type,
                      i = s.validateItem(e, n, this.controller);
                  if (i)
                    if (n)
                      this.controller.dispatch({
                        type: 'set-expression-properties-from-api',
                        id: i.id,
                        properties: i
                      });
                    else {
                      if ('image' === i.type) return;
                      this.controller.dispatch(
                          {type: 'add-item-to-end-from-api', state: i})
                    }
                }, e.prototype.setExpressions = function(e) {
                  e.forEach(this.setExpression.bind(this))
                }, e.prototype.removeExpression = function(e) {
                  var t = e.id.toString();
                  this.controller.dispatch({type: 'remove-item-by-id', id: t})
                }, e.prototype.removeExpressions = function(e) {
                  e.forEach(this.removeExpression.bind(this))
                }, e.prototype.getState = function(e) {
                  return this.controller.getState(e)
                }, e.prototype.getExpressions = function() {
                  return this.getState({stripDefaults: !1})
                      .expressions.list.map(s.sanitizeItem)
                }, e.prototype.setBlank = function(e) {
                  this.controller.dispatch({type: 'set-blank', opts: e || {}})
                }, e.prototype.setState = function(e, t) {
                  this.controller.dispatch(
                      {type: 'set-state', state: e, opts: t || {}})
                }, e.prototype.HelperExpression = function(e) {
                  var t = e && e.latex || '', r = new a.UnderscoreModel;
                  return r.latex = t, this.controller.dispatch({
                    type: 'add-helper-expression',
                    state: {
                      type: 'helper-expression',
                      id: this.controller.generateId(),
                      latex: t,
                      proxy: r
                    }
                  }),
                         r
                }, e.prototype.resize = function() {}, e
              }();
              t.default = c
            });
          r('api/abstract',
            [
              'require', 'exports', 'lib/console', 'underscore_model',
              'ipad.scrollfix', 'lib/dom-change-detector'
            ],
            function(e, t, r, n, i, o) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var s = function() {
                function e(e) {
                  if (this.rootElt = e, this.eventModel = new n.UnderscoreModel,
                      !e)
                    throw new Error('must pass an HTMLElement to the API')
                }
                return e.prototype.setupDomChangeDetector = function(e) {
                  var t = this;
                  this.autoSize = e, i.limitScrollOnElement(this.rootElt),
                  this.domChangeDetector = new o.default(
                      this.rootElt,
                      function(e) {
                        switch (e.type) {
                          case 'added':
                            t.view = t.onCreateView(), t.onResizeView(e.size);
                            break;
                          case 'removed':
                            t.onDestroyView(), t.view = void 0;
                            break;
                          case 'resized':
                            t.onResizeView(e.size)
                        }
                      }),
                  !1 !== this.autoSize ?
                      this.domChangeDetector.startWatching() :
                      this.domChangeDetector.checkForChanges()
                }, e.prototype.detach = function() {
                  r.warn(
                      '.detach() is deprecated. It should no longer be necessary')
                }, e.prototype.destroy = function() {
                  function e(e) {
                    r.warn(
                        'You\'ve destroyed this API instance. You can no longer call .' +
                        e + '()')
                  }
                  this.view && this.onDestroyView(),
                      this.domChangeDetector.destroy();
                  for (var t in this)
                    'function' == typeof this[t] ?
                        this[t] = e.bind(this, t) :
                        this.hasOwnProperty(t) && delete this[t];
                  this.destroy = function() {}
                }, e.prototype.resize = function() {
                  this.domChangeDetector.checkForChanges()
                }, e.prototype.updateView = function() {
                  this.view && document.body &&
                      document.body.contains(this.rootElt) && this.view.update()
                }, e.prototype.triggerEvent = function(e, t) {
                  this.eventModel.triggerEvent(e, t)
                }, e.prototype.observeEvent = function(e, t) {
                  this.eventModel.observeEvent(e, t)
                }, e.prototype.unobserveEvent = function(e) {
                  this.eventModel.unobserveEvent(e)
                }, e
              }();
              t.default = s
            });
          r('immutable-store', ['require', 'underscore', 'core/lib/deepCopy'],
            function(e) {
              'use strict';
              function t(e) {
                return n.clone(e)
              }
              function r(e) {
                this.setState(e)
              }
              var n = e('underscore'), i = e('core/lib/deepCopy').default;
              return r.prototype.setState = function(e) {
                this.state = e
              }, r.prototype.getState = function() {
                return this.state
              }, r.prototype.set = function(e, r) {
                if (1 === arguments.length) return void (this.state = e);
                if ('string' == typeof e)
                  return this.state = t(this.state), void (this.state[e] = r);
                var n, i = e.length - 2, o = e[i + 1];
                this.state = n = t(this.state);
                for (var s = 0; s <= i; s++) {
                  var a = e[s];
                  n = n[a] = t(n[a])
                }
                n[o] = r
              }, r.prototype.deepMutate = function(e, r) {
                if (1 === arguments.length)
                  return r = e, this.state = i(this.state), void r(this.state);
                if ('string' == typeof e)
                  return this.state = t(this.state),
                         this.state[e] = i(this.state[e]),
                         void r(this.state[e]);
                for (var n = e.length - 2, o = e[n + 1],
                         s = this.state = t(this.state), a = 0;
                     a <= n; a++) {
                  var l = e[a];
                  s = s[l] = t(s[l])
                }
                s = s[o] = i(s[o]), r(s)
              }, r.prototype.shallowMutate = function(e, r) {
                if (1 === arguments.length)
                  return r = e, this.state = t(this.state), void r(this.state);
                if ('string' == typeof e)
                  return this.state = t(this.state),
                         this.state[e] = t(this.state[e]),
                         void r(this.state[e]);
                for (var n = e.length - 1, i = this.state = t(this.state),
                         o = 0;
                     o <= n; o++) {
                  var s = e[o];
                  i = i[s] = t(i[s])
                }
                r(i)
              }, r.areShallowEqual = function(e, t) {
              }, r.areDeepEqual = function(e, t) {}, {
                default:
                  r
              }
            });
          r('basic/model',
            [
              'require', 'exports', 'immutable-store', 'main/shared-clock-bus',
              'core/lib/label', 'main/evaluator', 'core/lib/label', 'underscore'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function() {
                function e(e) {
                  var t = this, i = e.evaluationMode, o = e.additionalFunctions,
                      s = e.functionDefinition,
                      a = e.replaceRoundWithReciprocal, l = e.workerPool;
                  this._evaluations = {}, this._nextObjectId = 0,
                  this.store = new r.default({
                    expressions: {
                      1: {
                        id: '1',
                        latex: '',
                        braille: '',
                        type: 'latex',
                        displayAsFraction: !1
                      }
                    },
                    order: ['1'],
                    settings: {degreeMode: !1},
                    ui: {focus: void 0}
                  }),
                  this.evaluationMode = i, this.additionalFunctions = o,
                  this.functionDefinition = s,
                  this.replaceRoundWithReciprocal = a, this.workerPool = l,
                  this._setupEvaluator(), this.clear(),
                  this._sharedClockBusToken = n.subscribe(function() {
                    t._evaluator.tick()
                  })
                }
                return e.prototype.isSingleExpression = function() {
                  return 'singleExpressionScientific' === this.evaluationMode ||
                      'singleExpressionFourFunction' === this.evaluationMode
                }, e.prototype.destroy = function() {
                  n.unsubscribe(this._sharedClockBusToken)
                }, e.prototype.generateObjectId = function() {
                  return (this._nextObjectId++).toString()
                }, e.prototype.updateNextObjectId = function() {
                  var e = this.store.getState().order;
                  this._nextObjectId = 0;
                  for (var t = /^[0-9]+$/, r = 0, n = e; r < n.length; r++) {
                    var i = n[r];
                    if (t.test(i)) {
                      var o = parseInt(i, 10);
                      o >= this._nextObjectId && (this._nextObjectId = o + 1)
                    }
                  }
                }, e.prototype.clearShouldDebounceUndoRedo = function() {
                  this._shouldDebounceUndoRedo = !1
                }, e.prototype.markShouldDebounceUndoRedo = function() {
                  this._shouldDebounceUndoRedo = !0
                }, e.prototype.getShouldDebounceUndoRedo = function() {
                  return this._shouldDebounceUndoRedo
                }, e.prototype.clearCachedBrailleValues = function() {
                  for (var e = 0, t = this.getExpressionOrder(); e < t.length;
                       e++) {
                    var r = t[e];
                    this.store.set(['expressions', r, 'braille'], '')
                  }
                }, e.prototype.getState = function() {
                  return this.store.getState()
                }, e.prototype.getPersistedState = function() {
                  var e = this.getState(), t = e.expressions, r = e.order,
                      n = e.settings;
                  return {
                    expressions: {
                      list: r.map(function(e) {
                        var r = t[e];
                        return {
                          id: r.id, latex: r.latex,
                              displayAsFraction: r.displayAsFraction
                        }
                      })
                    },
                        settings: n
                  }
                }, e.prototype.setState = function(e) {
                  this.store.set(e), this._updateIndexes(),
                      this.updateNextObjectId()
                }, e.prototype.setStateFromAPI = function(e) {
                  var t = [], r = {};
                  e.expressions.list.forEach(function(e) {
                    t.push(e.id), r[e.id] = {
                      id: e.id,
                      latex: e.latex,
                      braille: '',
                      type: 'latex',
                      displayAsFraction: !!e.displayAsFraction
                    }
                  }),
                      this.setState({
                        expressions: r,
                        order: t,
                        settings: e.settings,
                        ui: {focus: void 0}
                      })
                }, e.prototype.canClear = function() {
                  if (this.getNumberOfExpressions() > 1) return !0;
                  var e = this.getExpressionOrder()[0];
                  return '' !== this.getExpressionLatex(e)
                }, e.prototype.clear = function() {
                  this.setState({
                    expressions: {
                      1: {
                        id: '1',
                        type: 'latex',
                        latex: '',
                        braille: '',
                        displayAsFraction: !1
                      }
                    },
                    ui: {focus: void 0},
                    order: ['1'],
                    settings: this.getState().settings
                  })
                }, e.prototype.getExpressionOrder = function() {
                  return this.store.getState().order
                }, e.prototype.getNumberOfExpressions = function() {
                  return this.getExpressionOrder().length
                }, e.prototype.getExpressionById = function(e) {
                  return this.getState().expressions[e]
                }, e.prototype.getExpressionIndex = function(e) {
                  return this._indexes[e]
                }, e.prototype._getExpressionByIndex = function(e) {
                  var t = this.getExpressionOrder()[e];
                  return this.getExpressionById(t)
                }, e.prototype._updateIndexes = function() {
                  this._indexes = {};
                  for (var e = 0, t = 0, r = this.getExpressionOrder();
                       t < r.length; t++) {
                    var n = r[t];
                    this._indexes[n] = e, e += 1
                  }
                  this._evaluate()
                }, e.prototype._usesAnsById = function(e) {
                  return -1 !==
                      this.getExpressionById(e).latex.indexOf(
                          '\\operatorname{ans}')
                }, e.prototype._getPreviousExpById = function(e) {
                  var t = this.getExpressionIndex(e);
                  return this._getExpressionByIndex(t - 1)
                }, e.prototype.createBlankAfterId = function(e) {
                  if (!this.isSingleExpression() &&
                      this.getExpressionById(e).latex) {
                    var t = this.getExpressionIndex(e),
                        r = this.generateObjectId();
                    this.store.shallowMutate('order', function(e) {
                      e.splice(t + 1, 0, r)
                    }), this.store.shallowMutate('expressions', function(e) {
                      e[r] = {
                        id: r,
                        latex: '',
                        braille: '',
                        type: 'latex',
                        displayAsFraction: !1
                      }
                    }), this._updateIndexes(), this.setFocusedById(r, !0)
                  }
                }, e.prototype.conditionallyCopyPrevious = function(e) {
                  var t = this._getPreviousExpById(e),
                      r = this.getExpressionById(e);
                  null != t && '' === r.latex && this._usesAnsById(t.id) &&
                      this.setLatexById(e, t.latex)
                }, e.prototype.backspaceAtFrontOfId = function(e) {
                  if ('' === this.getExpressionById(e).latex &&
                      1 !== this.getNumberOfExpressions()) {
                    var t = this.getExpressionIndex(e);
                    this.store.shallowMutate(
                        'order',
                        function(e) {
                          e.splice(t, 1)
                        }),
                        this.store.shallowMutate(
                            'expressions',
                            function(t) {
                              delete t[e]
                            }),
                        this._updateIndexes(),
                        this._setFocusedByIndex(Math.max(t - 1, 0), !0)
                  }
                }, e.prototype.setLatexById = function(e, t) {
                  this.store.set(['expressions', e, 'latex'], t),
                      this.store.set(['expressions', e, 'braille'], ''),
                      '' === t && this.setFractionEvaluation(e, !1),
                      this._evaluate()
                }, e.prototype.setLatexAndBrailleById = function(e, t, r) {
                  this.store.set(['expressions', e, 'latex'], t),
                      this.store.set(['expressions', e, 'braille'], r),
                      '' === t && this.setFractionEvaluation(e, !1),
                      this._evaluate()
                }, e.prototype.setFractionEvaluation = function(e, t) {
                  this.store.set(['expressions', e, 'displayAsFraction'], t)
                }, e.prototype.setLatexOfFocusedExpression = function(e) {
                  var t = this.getFocusedExpressionId();
                  t && this.setLatexById(t, e)
                }, e.prototype.isExpressionFocused = function(e) {
                  return this.getFocusedExpressionId() === e
                }, e.prototype.getExpressionLatex = function(e) {
                  return this.getExpressionById(e).latex
                }, e.prototype.getExpressionError = function(e) {
                  var t = this._evaluations[e];
                  return t ? t.error : ''
                }, e.prototype.getExpressionValue = function(e) {
                  var t = this._evaluations[e];
                  if (t) return t.value
                }, e.prototype.getExpressionAns = function(e) {
                  var t = this._evaluations[e];
                  if (t) return t.ans
                }, e.prototype.getExpressionAnsId = function(e) {
                  var t = this._evaluations[e];
                  if (t) return t.ansId
                }, e.prototype.shouldShowEvaluationForExpression = function(e) {
                  var t = this._evaluations[e];
                  return !!t && t.showEvaluation
                }, e.prototype.isRationalizableConstant = function(e) {
                  var t = this._evaluations[e];
                  return !!t && t.isRationalizableConstant
                }, e.prototype.canDisplayEvaluationAsFraction = function(e) {
                  var t = this.getExpressionValue(e);
                  return !!t && s.canDisplayAsFraction(t)
                }, e.prototype._setFocusedByIndex = function(e, t) {
                  var r = this._getExpressionByIndex(e),
                      n = this.store.getState().ui.focus,
                      i = t ? {type: 'latex-expression', id: r.id} : void 0;
                  if (!a.isEqual(n, i)) {
                    if (n) {
                      var o = n.id;
                      this.store.deepMutate('expressions', function(e) {
                        var t = e[o];
                        t && (t.braille = '')
                      })
                    }
                    (t || this.getFocusedExpressionId() === r.id) &&
                        this.store.shallowMutate('ui', function(e) {
                          e.focus = i
                        })
                  }
                }, e.prototype.setFocusedById = function(e, t) {
                  var r = this.getExpressionIndex(e);
                  this._setFocusedByIndex(r, t)
                }, e.prototype.focusPrevById = function(e) {
                  var t = this.getExpressionIndex(e) - 1;
                  t >= 0 && this._setFocusedByIndex(t, !0)
                }, e.prototype.focusNextById = function(e) {
                  var t = this.getExpressionIndex(e) + 1;
                  t < this.getNumberOfExpressions() ?
                      this._setFocusedByIndex(t, !0) :
                      this.createAtEnd()
                }, e.prototype.getFocusedExpression = function() {
                  var e = this.getFocusedExpressionId();
                  return e ? this.getExpressionById(e) : void 0
                }, e.prototype.getFocusedExpressionId = function() {
                  var e = this.getState().ui.focus;
                  return e && e.id
                }, e.prototype.clearFocusedExpression = function() {
                  var e = this.getFocusedExpression();
                  e && this.setLatexById(e.id, '')
                }, e.prototype.shouldShowClear = function() {
                  if (1 === this.getNumberOfExpressions()) return !1;
                  var e = this.getFocusedExpression();
                  return !!e && !!e.latex
                }, e.prototype.getLastExpression = function() {
                  return this._getExpressionByIndex(
                      this.getNumberOfExpressions() - 1)
                }, e.prototype.isLastExpressionEmpty = function() {
                  return !!this.getLastExpression().latex
                }, e.prototype.createAtEnd = function() {
                  this.createBlankAfterId(this.getLastExpression().id)
                }, e.prototype.focusLastExpression = function() {
                  this._setFocusedByIndex(this.getNumberOfExpressions() - 1, !0)
                }, e.prototype.focusFirstExpression = function() {
                  this._setFocusedByIndex(0, !0)
                }, e.prototype.getDegreeMode = function() {
                  return this.getState().settings.degreeMode
                }, e.prototype.setDegreeMode = function(e) {
                  this.store.set(['settings', 'degreeMode'], !!e),
                      this._evaluate()
                }, e.prototype._cleanupLatex = function(e) {
                  return e = i.trimLatex(e),
                         '=' === e.substr(e.length - 1) &&
                             (e = e.substr(0, e.length - 1)),
                         e
                }, e.prototype._evaluate = function() {
                  var e = this;
                  this._evaluator.clearStatementsAndStartCompleteState(),
                      this.getExpressionOrder().forEach(function(t) {
                        return e._evaluator.addStatement({
                          id: t,
                          index: e.getExpressionIndex(t),
                          latex: e._cleanupLatex(e.getExpressionLatex(t)),
                          shouldGraph: !1,
                          type: 'statement'
                        })
                      })
                }, e.prototype._setupEvaluator = function() {
                  var e = this;
                  this._evaluator = new o.Evaluator(this.workerPool),
                  this._evaluator.readEvaluatorConfig = function() {
                    return {
                      degreeMode: e.getDegreeMode(),
                          evaluationMode: e.evaluationMode,
                          additionalFunctions: e.additionalFunctions,
                          functionDefinition: e.functionDefinition,
                          replaceRoundWithReciprocal:
                              e.replaceRoundWithReciprocal
                    }
                  }, this._evaluator.onEvaluatorResults = function(t) {
                    var r = t.evaluationStates;
                    e._evaluations = {};
                    for (var n in r) {
                      var i = r[n];
                      if (e.getExpressionById(n)) {
                        var o = i.constant_value;
                        void 0 === o && i.zero_values && i.zero_values.length &&
                            (o = i.zero_values[0].val);
                        var a = i.hasOwnProperty('constant_value') &&
                            s.canDisplayAsFraction(i.constant_value),
                            l = !i.is_evaluable && a,
                            c = !!i.is_evaluable || l || Array.isArray(o);
                        e._evaluations[n] = {
                          error: i.error,
                          ans: void 0,
                          ansId: void 0,
                          value: o,
                          showEvaluation: c,
                          isRationalizableConstant: l
                        }
                      }
                    }
                    for (var u = void 0, d = void 0, p = 0,
                             h = e.getExpressionOrder();
                         p < h.length; p++) {
                      var n = h[p], f = e._evaluations[n];
                      if (u && f) {
                        var g = u.value;
                        'number' == typeof g ?
                            (f.ans = g, f.ansId = d) :
                            Array.isArray(g) && (f.ans = '[...]')
                      }
                      u = f, d = n
                    }
                    'function' == typeof e.onEvaluationUpdate &&
                        e.onEvaluationUpdate()
                  }
                }, e.prototype.reloadState = function() {
                  this.setState(this.getState())
                }, e.prototype.getFunctionDefinition = function() {
                  return !!this.functionDefinition
                }, e.prototype.enableFunctionDefinition = function() {
                  this.functionDefinition = !0, this.reloadState()
                }, e.prototype.disableFunctionDefinition = function() {
                  this.functionDefinition = !1, this.reloadState()
                }, e.prototype.getReplaceRoundWithReciprocal = function() {
                  return !!this.replaceRoundWithReciprocal
                }, e.prototype.enableReplaceRoundWithReciprocal = function() {
                  this.replaceRoundWithReciprocal = !0, this.reloadState()
                }, e.prototype.disableReplaceRoundWithReciprocal = function() {
                  this.replaceRoundWithReciprocal = !1, this.reloadState()
                }, e
              }();
              t.default = l
            });
          r('basic/controller',
            [
              'require', 'exports', 'tslib', 'flux', 'underscore', './model',
              'lib/state-stack', 'keypad/mq-commands', 'lib/i18n',
              'dcgview-helpers/mathquill-view', 'lib/console', 'bugsnag',
              'core/lib/color-helpers'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d, p) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var h = function() {
                function e(e, t) {
                  var r = this;
                  this.keyboardMode = 'main', this.fontSize = 16,
                  this.invertedColors = !1, this.backgroundColor = '',
                  this.textColor = '', this.projectorMode = !1,
                  this.capExpressionSize = !1, this.decimalToFraction = !0,
                  this.settingsMenu = !0, this.settingsMenuOpen = !1,
                  this.language = 'en', this.brailleMode = 'none',
                  this.sixKeyInput = !1, this.brailleControls = !0,
                  this.brailleExpressionDownload = !0,
                  this.replaceCommaWith10Exp = !1,
                  this.typingAsteriskWritesTimesSymbol = !1,
                  this.stateStack = new s.default,
                  this.dispatcher = new n.Dispatcher,
                  this.t =
                      function(e, t) {
                    return l.t(e, t, r.language)
                  },
                  this.dispatch =
                      function(e) {
                    d.leaveBreadcrumb('dispatch', e), r.dispatcher.dispatch(e);
                    for (var t; t = r._queuedCallbacks.shift();) t()
                  },
                  this._queuedCallbacks = [], this.stateStack = new s.default,
                  this.dispatcher = new n.Dispatcher, this.options = e,
                  this.model = new o.default({
                    evaluationMode: this.options.evaluationMode,
                    additionalFunctions: this.options.additionalFunctions,
                    functionDefinition: this.options.functionDefinition,
                    replaceRoundWithReciprocal:
                        this.options.replaceRoundWithReciprocal,
                    workerPool: t.workerPool
                  }),
                  this.model = this.model,
                  this.model.setDegreeMode(e.degreeMode),
                  this.setLanguage(e.language),
                  this.setBrailleMode(e.brailleMode),
                  this.setSixKeyInput(e.sixKeyInput),
                  this.setBrailleControls(e.brailleControls),
                  this.setBrailleExpressionDownload(
                      e.brailleExpressionDownload),
                  this.setReplaceCommaWith10Exp(e.replaceCommaWith10Exp),
                  this.setReplaceRoundWithReciprocal(
                      e.replaceRoundWithReciprocal),
                  this.setTypingAsteriskWritesTimesSymbol(
                      e.typingAsteriskWritesTimesSymbol),
                  this.setProjectorMode(e.projectorMode),
                  this.setCapExpressionSize(e.capExpressionSize),
                  this.setDecimalToFraction(e.decimalToFraction),
                  this.invertedColors = e.invertedColors,
                  this.backgroundColor = e.backgroundColor,
                  this.textColor = e.textColor,
                  this.settingsMenu = e.settingsMenu,
                  this.model.onEvaluationUpdate =
                      function() {
                    return r.dispatch({type: 'render'})
                  },
                  this.settingsProxy = t.settingsProxy,
                  this.syncPublicSettings(), this.hookUpDispatcher(),
                  this.containerSize = {
                    width: 0,
                    height: 0
                  }
                }
                return e.prototype
                           .runAfterDispatch =
                           function(e) {
                  this._queuedCallbacks.push(e)
                },
                e.prototype.enqueueEvent =
                           function(e) {
                  var t = this;
                  this.runAfterDispatch(function() {
                    t.onEventEmitted && t.onEventEmitted(e)
                  })
                },
                e.prototype.getFunctionDefinition =
                           function() {
                  return this.options.functionDefinition
                },
                e.prototype.getSettingsMenu =
                           function() {
                  return this.settingsMenu
                },
                e.prototype.getBrailleMode =
                           function() {
                  return this.brailleMode
                },
                e.prototype.renderAsBraille =
                           function() {
                  return 'none' !== this.brailleMode
                },
                e.prototype.setBrailleMode =
                           function(e) {
                  this.brailleMode = e
                },
                e.prototype.getSixKeyInput =
                           function() {
                  return this.sixKeyInput
                },
                e.prototype.setSixKeyInput =
                           function(e) {
                  this.sixKeyInput = e
                },
                e.prototype.getBrailleControls =
                           function() {
                  return this.brailleControls
                },
                e.prototype.setBrailleControls =
                           function(e) {
                  this.brailleControls = e
                },
                e.prototype.getBrailleExpressionDownload =
                           function() {
                  return this.brailleExpressionDownload
                },
                e.prototype.setBrailleExpressionDownload =
                           function(e) {
                  this.brailleExpressionDownload = e
                },
                e.prototype.getRestrictedEditing =
                           function() {
                  return this.options.restrictedEditing
                },
                e.prototype.getKeyboardMode =
                           function() {
                  return this.keyboardMode
                },
                e.prototype.getFontSize =
                           function() {
                  return this.fontSize
                },
                e.prototype.getInvertedColors =
                           function() {
                  return this.invertedColors
                },
                e.prototype.hasBackgroundColor =
                           function() {
                  return '#ffffff' !== this.getBackgroundColor()
                },
                e.prototype.getBackgroundColor =
                           function() {
                  var e = p.normalizeColor(this.backgroundColor || '#fff');
                  return this.getInvertedColors() && '#ffffff' !== e ?
                      p.invertColor(e) :
                      e
                },
                e.prototype.getTextColor =
                           function() {
                  var e = p.normalizeColor(this.textColor || '#000');
                  return this.getInvertedColors() && '#000000' !== e ?
                      p.invertColor(e) :
                      e
                },
                e.prototype.getAdditionalFunctions =
                           function() {
                  return this.options.additionalFunctions
                },
                e.prototype.getTypingSlashWritesDivisionSymbol =
                           function() {
                  return this.options.typingSlashWritesDivisionSymbol
                },
                e.prototype.setTypingAsteriskWritesTimesSymbol =
                           function(e) {
                  this.typingAsteriskWritesTimesSymbol = e
                },
                e.prototype.getTypingAsteriskWritesTimesSymbol =
                           function() {
                  return this.typingAsteriskWritesTimesSymbol
                },
                e.prototype.setProjectorMode =
                           function(e) {
                  this.projectorMode = e
                },
                e.prototype.isProjectorMode =
                           function() {
                  return this.projectorMode
                },
                e.prototype.getReplaceCommaWith10Exp =
                           function() {
                  return this.replaceCommaWith10Exp
                },
                e.prototype.setReplaceCommaWith10Exp =
                           function(e) {
                  this.replaceCommaWith10Exp = e
                },
                e.prototype.getReplaceRoundWithReciprocal =
                           function() {
                  return this.model.getReplaceRoundWithReciprocal()
                },
                e.prototype.setReplaceRoundWithReciprocal =
                           function(e) {
                  e ? this.model.enableReplaceRoundWithReciprocal() :
                      this.model.disableReplaceRoundWithReciprocal()
                },
                e.prototype.setCapExpressionSize =
                           function(e) {
                  this.capExpressionSize = e
                },
                e.prototype.getCapExpressionSize =
                           function() {
                  return this.capExpressionSize
                },
                e.prototype.setDecimalToFraction =
                           function(e) {
                  this.decimalToFraction = e
                },
                e.prototype.setLanguage =
                           function(e) {
                  'en' !== e && -1 === Desmos.supportedLanguages.indexOf(e) ?
                      u.warn(
                          'Translation for \'' + e +
                          '\' isn\'t currently available. Using \'' +
                          this.language + '\' instead.') :
                      this.language = e
                },
                e.prototype.getLanguage =
                           function() {
                  return this.language
                },
                e.prototype.getDecimalToFraction =
                           function() {
                  return this.decimalToFraction
                },
                e.prototype.isScientificCalc =
                           function() {
                  var e = this.options.evaluationMode;
                  return 'scientific' === e ||
                      'singleExpressionScientific' === e
                },
                e.prototype.isFourFunctionCalc =
                           function() {
                  return 'fourFunction' === this.options.evaluationMode ||
                      'singleExpressionFourFunction' ===
                      this.options.evaluationMode
                },
                e.prototype.getAllowLinks =
                           function() {
                  return this.options.links
                },
                e.prototype.canUndo =
                           function() {
                  return this.stateStack.canUndo()
                },
                e.prototype.canRedo =
                           function() {
                  return this.stateStack.canRedo()
                },
                e.prototype.undo =
                           function(e) {
                  if (this.canUndo()) {
                    this.stateStack.undo();
                    var t = this.stateStack.getState();
                    if (!e.restoreFocus) {
                      var n = {focus: void 0};
                      t = r.__assign(r.__assign({}, t), {ui: n})
                    }
                    this.model.setState(t), this.enqueueEvent('change')
                  }
                },
                e.prototype.redo =
                           function(e) {
                  if (this.canRedo()) {
                    this.stateStack.redo();
                    var t = this.stateStack.getState();
                    if (!e.restoreFocus) {
                      var n = {focus: void 0};
                      t = r.__assign(r.__assign({}, t), {ui: n})
                    }
                    this.model.setState(t), this.enqueueEvent('change')
                  }
                },
                e.prototype.clearHistory =
                           function() {
                  this.stateStack.clear()
                },
                e.prototype.canBackspace =
                           function() {
                  var e = this.model.getFocusedExpression();
                  return e &&
                      (e.latex.length > 0 ||
                       this.model.getNumberOfExpressions() > 1)
                },
                e.prototype.focusLastExpression =
                           function() {
                  this.model.focusLastExpression()
                },
                e.prototype.shouldRender =
                           function() {
                  return this.containerSize.width > 0 &&
                      this.containerSize.height > 0
                },
                e.prototype.canClear =
                           function() {
                  return this.model.canClear()
                },
                e.prototype.shouldShowClear =
                           function() {
                  return this.model.shouldShowClear()
                },
                e.prototype.enableSettingsMenu =
                           function() {
                  this.settingsMenu = !0
                },
                e.prototype.disableSettingsMenu =
                           function() {
                  this.closeSettingsMenu(), this.settingsMenu = !1
                },
                e.prototype.closeSettingsMenu =
                           function() {
                  this.settingsMenuOpen = !1
                },
                e.prototype.toggleSettingsMenu =
                           function() {
                  this.settingsMenuOpen = !this.settingsMenuOpen
                },
                e.prototype.isSettingsMenuOpen =
                           function() {
                  return this.settingsMenuOpen
                },
                e.prototype.isLastExpressionEmpty =
                           function() {
                  return this.model.isLastExpressionEmpty()
                },
                e.prototype.createAtEnd =
                           function() {
                  this.model.createAtEnd()
                },
                e.prototype.clearFocusedExpression =
                           function() {
                  this.model.clearFocusedExpression()
                },
                e.prototype.setLatexById =
                           function(e, t) {
                  this.model.setLatexById(e, t)
                },
                e.prototype.setLatexAndBrailleById =
                           function(e, t, r) {
                  this.model.setLatexAndBrailleById(e, t, r)
                },
                e.prototype.setLatexOfFocusedExpression =
                           function(e) {
                  this.model.setLatexOfFocusedExpression(e)
                },
                e.prototype.toggleFractionEvaluationById =
                           function(e) {
                  this.model.setFractionEvaluation(
                      e, !this.model.getExpressionById(e).displayAsFraction)
                },
                e.prototype.conditionallyCopyPrevious =
                           function(e) {
                  this.model.conditionallyCopyPrevious(e)
                },
                e.prototype.createBlankAfterId =
                           function(e) {
                  this.model.createBlankAfterId(e)
                },
                e.prototype.backspaceAtFrontOfId =
                           function(e) {
                  this.model.backspaceAtFrontOfId(e)
                },
                e.prototype.areStatesDifferentEnoughForUndoRedo =
                           function(e, t) {
                  var n = {focus: void 0};
                  return i.isEqual(
                      r.__assign(r.__assign({}, e), {ui: n}),
                      r.__assign(r.__assign({}, t), {ui: n}))
                },
                e.prototype.commitUndoRedoDebounced =
                           function() {
                  var e = this.model.getState(), t = this.stateStack.getState();
                  if (!this.areStatesDifferentEnoughForUndoRedo(e, t)) {
                    var r = (new Date).getTime();
                    r - this._lastDebouncedTime < 1e3 ?
                        this.stateStack.replaceState(e) :
                        this.stateStack.addState(e),
                        this._lastDebouncedTime = r, this.enqueueEvent('change')
                  }
                },
                e.prototype.commitUndoRedoSynchronously =
                           function() {
                  var e = this.model.getState(), t = this.stateStack.getState();
                  this.areStatesDifferentEnoughForUndoRedo(e, t) ||
                      (this._lastDebouncedTime = 0, this.stateStack.addState(e),
                       this.enqueueEvent('change'))
                },
                e.prototype.updateKeyboardMode =
                           function(e) {
                  this.keyboardMode = e
                },
                e.prototype.getFocusedMathquill =
                           function() {
                  if (this.model.getFocusedExpressionId())
                    return c.default.getFocusedMathquill()
                },
                e.prototype.ensureMathquillIsFocusedAndReturnFocusedMathquill =
                           function() {
                  var e = this.getFocusedMathquill();
                  return e ||
                      (this.isLastExpressionEmpty() &&
                               !this.model.isSingleExpression() ?
                           this.createAtEnd() :
                           this.focusLastExpression(),
                       this.onEventEmitted && this.onEventEmitted('render'),
                       this.getFocusedMathquill())
                },
                e.prototype.typeIntoFocusedMathquill = function(e) {
                  e = e.replace(/\r|\n/g, '');
                  var t =
                      this.ensureMathquillIsFocusedAndReturnFocusedMathquill();
                  t &&
                      c.default.canAcceptText(
                          t, this.getCapExpressionSize(), e) &&
                      (t.typedText(e),
                       this.setLatexOfFocusedExpression(t.latex()),
                       this.model.markShouldDebounceUndoRedo())
                }, e.prototype.pressKeyInFocusedMathquill = function(e, t) {
                  if ('none' === this.getBrailleMode()) {
                    var r =
                        this.ensureMathquillIsFocusedAndReturnFocusedMathquill();
                    if (r)
                      if ('Up' === e || 'Down' === e || 'Left' === e ||
                          'Right' === e) {
                        var n = c.default.applyArrowKeyAndReturnIfWasAtBounds(
                            r, e, t);
                        n && this.moveFocusInDirection(e)
                      } else
                        'Enter' === e ?
                            (t && (t.preventDefault(), t.stopPropagation()),
                             this.handleEnter()) :
                            'Backspace' === e ?
                            this.attemptToMoveFocusWithBackspace() ||
                                (r.keystroke(e, t),
                                 this.setLatexOfFocusedExpression(r.latex())) :
                            (r.keystroke(e, t),
                             this.setLatexOfFocusedExpression(r.latex()))
                  }
                }, e.prototype.moveFocusInDirection = function(e) {
                  var t = this.model.getFocusedExpressionId();
                  t &&
                      ('Up' === e ? this.model.focusPrevById(t) :
                                    'Down' === e && this.model.focusNextById(t))
                }, e.prototype.handleEnter = function() {
                  if (!this.model.isSingleExpression()) {
                    var e = this.model.getFocusedExpressionId();
                    e &&
                        (this.conditionallyCopyPrevious(e),
                         this.createBlankAfterId(e))
                  }
                }, e.prototype.attemptToMoveFocusWithBackspace = function() {
                  var e = this.model.getFocusedExpression();
                  if (!e) return !1;
                  var t = e.latex, r = e.id;
                  return '' === t && (this.backspaceAtFrontOfId(r), !0)
                }, e.prototype.executeCommandInFocusedMathquill = function(e) {
                  var t =
                      this.ensureMathquillIsFocusedAndReturnFocusedMathquill();
                  t &&
                      (a.execute(t, e),
                       this.setLatexOfFocusedExpression(t.latex()))
                }, e.prototype.syncPublicSettings = function() {
                  this.settingsProxy.setProperty('language', this.language),
                      this.settingsProxy.setProperty('fontSize', this.fontSize),
                      this.settingsProxy.setProperty(
                          'degreeMode', this.model.getDegreeMode()),
                      this.settingsProxy.setProperty(
                          'invertedColors', this.invertedColors),
                      this.settingsProxy.setProperty(
                          'backgroundColor', this.backgroundColor),
                      this.settingsProxy.setProperty(
                          'textColor', this.textColor),
                      this.settingsProxy.setProperty(
                          'brailleMode', this.brailleMode),
                      this.settingsProxy.setProperty(
                          'sixKeyInput', this.sixKeyInput),
                      this.settingsProxy.setProperty(
                          'brailleControls', this.brailleControls),
                      this.settingsProxy.setProperty(
                          'brailleExpressionDownload',
                          this.brailleExpressionDownload),
                      this.settingsProxy.setProperty(
                          'projectorMode', this.projectorMode),
                      this.settingsProxy.setProperty(
                          'capExpressionSize', this.capExpressionSize),
                      this.settingsProxy.setProperty(
                          'decimalToFraction', this.decimalToFraction),
                      this.settingsProxy.setProperty(
                          'qwertyKeyboard', this.options.qwertyKeyboard),
                      this.settingsProxy.setProperty(
                          'links', this.options.links),
                      this.settingsProxy.setProperty(
                          'settingsMenu', this.settingsMenu),
                      this.settingsProxy.setProperty(
                          'functionDefinition',
                          this.model.getFunctionDefinition()),
                      this.settingsProxy.setProperty(
                          'replaceCommaWith10Exp', this.replaceCommaWith10Exp),
                      this.settingsProxy.setProperty(
                          'replaceRoundWithReciprocal',
                          this.model.getReplaceRoundWithReciprocal()),
                      this.settingsProxy.setProperty(
                          'typingAsteriskWritesTimesSymbol',
                          this.typingAsteriskWritesTimesSymbol)
                }, e.prototype.hookUpDispatcher = function() {
                  var e = this;
                  this.dispatcher.register(function(t) {
                    e.enqueueEvent('render');
                    var n = !1, i = e.getRestrictedEditing();
                    switch (t.type) {
                      case 'update-options':
                        e.options =
                            r.__assign(r.__assign({}, e.options), t.options);
                        break;
                      case 'keypad/shift':
                        var o = void 0;
                        switch (e.keyboardMode) {
                          case 'qwerty':
                            o = 'capitalQwerty';
                            break;
                          case 'capitalQwerty':
                            o = 'qwerty';
                            break;
                          case 'letters':
                            o = 'capitalLetters';
                            break;
                          case 'capitalLetters':
                            o = 'letters';
                            break;
                          default:
                            o = 'qwerty'
                        }
                        e.updateKeyboardMode(o);
                        break;
                      case 'undo':
                        i ||
                            (e.undo({
                              restoreFocus: 'keyboard-shortcut' === t.source
                            }),
                             n = !0);
                        break;
                      case 'redo':
                        i ||
                            (e.redo({
                              restoreFocus: 'keyboard-shortcut' === t.source
                            }),
                             n = !0);
                        break;
                      case 'clear-history':
                        e.clearHistory();
                        break;
                      case 'set-state-from-api':
                        t.opts.allowUndo || e.clearHistory(),
                            e.model.setStateFromAPI(t.state);
                        break;
                      case 'main':
                        e.updateKeyboardMode('main');
                        break;
                      case 'ABC':
                        e.options.qwertyKeyboard ?
                            e.updateKeyboardMode('qwerty') :
                            e.updateKeyboardMode('letters');
                        break;
                      case 'functions':
                        e.updateKeyboardMode('functions');
                        break;
                      case 'degrees':
                        e.model.setDegreeMode(!e.model.getDegreeMode());
                        break;
                      case 'update-degree-mode':
                        e.model.setDegreeMode(!!t.mode);
                        break;
                      case 'update-font-size':
                        var s = t.size;
                        if ('number' != typeof s && (s = parseInt(s, 10)),
                            isNaN(s))
                          return;
                        e.fontSize = s;
                        break;
                      case 'update-inverted-colors':
                        e.invertedColors = !!t.mode;
                        break;
                      case 'update-background-color':
                        e.backgroundColor = t.color;
                        break;
                      case 'update-text-color':
                        e.textColor = t.color;
                        break;
                      case 'update-projector-mode':
                        e.setProjectorMode(!!t.mode);
                        break;
                      case 'update-cap-expression-size':
                        e.setCapExpressionSize(!!t.mode);
                        break;
                      case 'update-decimal-to-fraction':
                        e.setDecimalToFraction(!!t.mode);
                        break;
                      case 'update-language':
                        e.setLanguage(t.language);
                        break;
                      case 'set-blank':
                        t.opts.allowUndo || e.clearHistory(), e.model.clear(),
                            e.focusLastExpression();
                        break;
                      case 'clear':
                        e.model.clearFocusedExpression();
                        break;
                      case 'set-braille-mode':
                        var a = t.mode;
                        'nemeth' !== a && 'ueb' !== a && 'none' !== a ?
                            u.warn(
                                'Valid Braille modes are \'nemeth\', \'none\', and \'ueb\'. You passed \'' +
                                a + '\'.') :
                            (e.model.clearCachedBrailleValues(),
                             e.setBrailleMode(t.mode));
                        break;
                      case 'set-six-key-input':
                        e.setSixKeyInput(!!t.mode);
                        break;
                      case 'set-braille-controls':
                        e.setBrailleControls(!!t.value);
                        break;
                      case 'set-braille-expression-download':
                        e.setBrailleExpressionDownload(!!t.mode);
                        break;
                      case 'set-replace-comma-with-10-exp':
                        e.setReplaceCommaWith10Exp(!!t.replace);
                        break;
                      case 'set-replace-round-with-reciprocal':
                        e.setReplaceRoundWithReciprocal(!!t.replace);
                        break;
                      case 'set-typing-asterisk-writes-times-symbol':
                        e.setTypingAsteriskWritesTimesSymbol(!!t.mode);
                        break;
                      case 'update-latex':
                        e.model.markShouldDebounceUndoRedo(),
                            e.setLatexById(t.id, t.latex);
                        break;
                      case 'update-latex-from-braille':
                        e.model.markShouldDebounceUndoRedo(),
                            e.setLatexAndBrailleById(t.id, t.latex, t.braille);
                        break;
                      case 'focusin':
                        e.model.setFocusedById(t.id, !0);
                        break;
                      case 'focusout':
                        e.model.setFocusedById(t.id, !1);
                        break;
                      case 'focus-first-expression':
                        e.model.focusFirstExpression();
                        break;
                      case 'focus-prev-expression':
                        e.moveFocusInDirection('Up');
                        break;
                      case 'focus-next-expression':
                        e.moveFocusInDirection('Down');
                        break;
                      case 'focus-last-expression':
                        e.model.focusLastExpression();
                        break;
                      case 'insert-blank-expression':
                        e.handleEnter();
                        break;
                      case 'backspace-from-braille':
                        e.attemptToMoveFocusWithBackspace();
                        break;
                      case 'keypad/type-text':
                        e.typeIntoFocusedMathquill(t.text);
                        break;
                      case 'keypad/press-key':
                        e.pressKeyInFocusedMathquill(t.key, t.evt);
                        break;
                      case 'keypad/custom-command':
                        e.executeCommandInFocusedMathquill(t.command);
                        break;
                      case 'keypad/123':
                      case 'keypad/abc':
                        break;
                      case 'enable-settings-menu':
                        e.enableSettingsMenu();
                        break;
                      case 'disable-settings-menu':
                        e.disableSettingsMenu();
                        break;
                      case 'toggle-settings-menu':
                        e.toggleSettingsMenu();
                        break;
                      case 'close-settings-menu':
                        e.closeSettingsMenu();
                        break;
                      case 'render':
                        break;
                      case 'ui/container-resized':
                        e.containerSize = t.size;
                        break;
                      case 'toggle-fraction-evaluation':
                        e.toggleFractionEvaluationById(t.id);
                        break;
                      default:
                        return t
                    }
                    e.runAfterDispatch(function() {
                      return e.syncPublicSettings()
                    }),
                        n ||
                        (e.model.getShouldDebounceUndoRedo() ?
                             (e.commitUndoRedoDebounced(),
                              e.model.clearShouldDebounceUndoRedo()) :
                             e.commitUndoRedoSynchronously())
                  })
                }, e
              }();
              t.default = h
            });
          r('basic/dcgview-basic', ['require', 'exports', 'tslib', 'dcgview'],
            function(e, t, r, n) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var i = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller(),
                  this.model = this.controller.model,
                  this.dispatch = this.controller.dispatch,
                  this.t = this.controller.t
                }, t
              }(n.Class);
              t.DCGViewBasic = i
            });
          r('loadcss!keypad/control-bar', function() {});
          r('keypad/control-bar',
            [
              'require', 'exports', 'tslib', 'dcgview', './dcgview-keypad',
              'loadcss!./control-bar'
            ],
            function(e, t, r, n, i) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var o = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {
                        class:
                            n.const('dcg-keypad-control-bar dcg-do-not-blur'),
                        role: n.const('group'),
                        'aria-label': function() {
                          return e.controller.t('Control Bar')
                        }
                      },
                      n.createElement(
                          'div',
                          {class: n.const('dcg-keypad-control-bar-contents')},
                          this.children))
                }, t
              }(i.default);
              t.default = o
            });
          r('loadcss!keypad/control-btn', function() {});
          r('keypad/control-btn',
            ['require', 'exports', 'tslib', 'dcgview', 'loadcss!./control-btn'],
            function(e, t, r, n) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var i = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {
                        class: function() {
                          return {
                            'dcg-keypad-control-btn': !0,
                                'dcg-disabled': e.isDisabled(),
                                'dcg-selected': !e.isDisabled() &&
                                e.isSelected(),
                                'dcg-selectable-btn': !e.isDisabled() &&
                                e.isSelectable(),
                                'dcg-narrow-control-btn':
                                    e.props.narrowButton &&
                                e.props.narrowButton()
                          }
                        },
                        didMount: this.bindFn(this.didMount),
                        role: n.const('button'),
                        'aria-disabled': function() {
                          return e.isDisabled() || void 0
                        },
                        'aria-label': function() {
                          return e.getAriaLabel()
                        },
                        'dcg-command': this.props.command,
                        onTap: this.bindFn(this.handleTap),
                        'aria-pressed': function() {
                          return e.hasPopup() || e.isDisabled() ||
                                  !e.isSelectable() ?
                              void 0 :
                              e.isSelected()
                        },
                        'aria-expanded': function() {
                          return e.hasPopup() && !e.isDisabled() ?
                              e.isSelected() :
                              void 0
                        },
                        tabindex: this.bindFn(this.getTabIndex)
                      },
                      this.children)
                }, t.prototype.getTabIndex = function() {
                  return this.isDisabled() ? void 0 :
                      this.props.ignoreInTabOrder &&
                          this.props.ignoreInTabOrder() ?
                                             -1 :
                                             0
                }, t.prototype.handleTap = function(e) {
                  this.isDisabled() || this.props.onTap(e)
                }, t.prototype.getAriaLabel = function() {
                  return this.props.ariaLabel ? this.props.ariaLabel() :
                                                this.props.command()
                }, t.prototype.hasPopup = function() {
                  return !!this.props.ariaPopup && this.props.ariaPopup()
                }, t.prototype.isDisabled = function() {
                  return !!this.props.disabled && this.props.disabled()
                }, t.prototype.isSelected = function() {
                  return !!this.props.selected && this.props.selected()
                }, t.prototype.isSelectable = function() {
                  return !!this.props.selectable && this.props.selectable()
                }, t.prototype.didMount = function(e) {
                  this.props.didMount && this.props.didMount(e)
                }, t
              }(n.Class);
              t.default = i
            });
          r('loadcss!dcgview-helpers/download-button', function() {});
          r('dcgview-helpers/download-button',
            [
              'require', 'exports', 'tslib', 'dcgview', 'browser',
              'loadcss!./download-button'
            ],
            function(e, t, r, n, i) {
              'use strict';
              function o() {
                if (!i.IS_SAFARI) return !1;
                var e = navigator.userAgent.match(/Version\/(\d+)/);
                return !(!e || !e[1]) && parseFloat(e[1]) < 11
              }
              function s() {
                return !i.IS_IE && !o() &&
                    void 0 !== document.createElement('a').download
              }
              function a() {
                return s() || void 0 !== navigator.msSaveBlob
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.canDownload = a;
              var l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.supportsDirectDownload = s()
                }, t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'a', {
                        role: n.const('button'),
                        tabindex: function() {
                          return e.props.enabled() ? 0 : -1
                        },
                        'aria-disabled': function() {
                          return !e.props.enabled()
                        },
                        class: function() {
                          return {
                            'dcg-download-button': !0,
                                'dcg-disabled': !e.props.enabled(),
                                'dcg-braille-equations': e.props.isBraille,
                                'dcg-svg-button': e.props.isSvg
                          }
                        },
                        didMount: this.bindFn(this.didMountDownload),
                        didUnmount: this.bindFn(this.didUnmountDownload),
                        didUpdate: this.bindFn(this.didUpdate),
                        download: function() {
                          return e.supportsDirectDownload ? e.props.filename() :
                                                            void 0
                        },
                        onTap: function(t) {
                          if (!e.supportsDirectDownload &&
                              navigator.msSaveOrOpenBlob) {
                            var r = e.props.data();
                            r &&
                                (navigator.msSaveOrOpenBlob(
                                     r, e.props.filename()),
                                 t.preventDefault())
                          }
                        }
                      },
                      n.createElement(
                          'i', {class: n.const('dcg-icon-download')}),
                      n.createElement('span', null, function() {
                        return e.props.text()
                      }))
                }, t.prototype.didMountDownload = function(e) {
                  this.downloadLink = e, this.didUpdate()
                }, t.prototype.didUnmountDownload = function() {
                  this.revokeBlobURL()
                }, t.prototype.didUpdate = function() {
                  this.updateDownloadURL(),
                      this.cachedObjectURL &&
                      (this.downloadLink.href = this.cachedObjectURL)
                }, t.prototype.updateDownloadURL = function() {
                  if (this.revokeBlobURL(), this.supportsDirectDownload) {
                    var e = this.props.data();
                    e && (this.cachedObjectURL = URL.createObjectURL(e))
                  }
                }, t.prototype.revokeBlobURL = function() {
                  this.cachedObjectURL &&
                      URL.revokeObjectURL(this.cachedObjectURL)
                }, t
              }(n.Class);
              t.default = l
            });
          r('lib/export-braille-equations',
            [
              'require', 'exports', 'abraham',
              'graphing-calc/models/expression', 'expressions/regression_view',
              'core/lib/number-to-latex'
            ],
            function(e, t, r, n, i, o) {
              'use strict';
              function s(e, t, n) {
                if (void 0 === n && (n = !1), n && (e = e.replace(/ /g, '\\ ')),
                    'none' === t)
                  return e;
                var i = 'nemeth' === t ? r.latexToNemeth(e) : r.latexToUeb(e);
                return i.isError ? '' : r.UnicodeBraille.toBrailleAscii(i.value)
              }
              function a(e, t) {
                if ('none' === t) return '';
                var r = [];
                r.push(s('Expression List', t, !0)), r.push(''), r.push('');
                for (var a = '', l = e.getItemCount(), d = 0; d < l; d++) {
                  var p = e.getItemModelByIndex(d);
                  if (p && !p.secret) {
                    '' !== a && 'folder' !== p.type && a !== p.folderId &&
                        (r.push(c(s('End Folder', t, !0))), a = '');
                    var h = '';
                    switch (p.type) {
                      case 'expression':
                        if (!p.hidden) {
                          var f = u(p.displayIndex, t);
                          h = p.latex;
                          var g = [], m = p.formula;
                          if (m && !n.isEmpty(p))
                            if (e.shouldShowEvaluationForItem(p.id)) {
                              var y = m.zero_values && m.zero_values.length ?
                                  m.zero_values[0].val :
                                  m.constant_value;
                              Array.isArray(y) ?
                                  h += '\\ ' + y.length + '\\ element\\ list' :
                                  h += '=' + y
                            } else if (n.shouldShowCDFFooter(p))
                              g.push(s('Min=' + n.getCDFMin(p), t, !1)),
                                  g.push(s('Max=' + n.getCDFMax(p), t, !1)),
                                  n.isCDFMaxValid(p) && n.isCDFMinValid(p) &&
                                  g.push(
                                      s('CDF=' + n.getCDFEvaluation(p), t, !1));
                            else if (n.isTTest(p)) {
                              var v = n.getTTestResults(p);
                              v &&
                                  (g.push(
                                       s('<' +
                                             o.numberToStatsConfidenceLatex(
                                                 v.lessThan, 5),
                                         t, !1)),
                                   g.push(
                                       s('>' +
                                             o.numberToStatsConfidenceLatex(
                                                 v.greaterThan, 5),
                                         t, !1)),
                                   g.push(
                                       s('\\ne' +
                                             o.numberToStatsConfidenceLatex(
                                                 v.notEqual, 5),
                                         t, !1)))
                            } else if (m.is_regression && m.regression) {
                              var b = m.regression, x = b.statistics,
                                  w = b.parameters;
                              x.hasOwnProperty('Rsquared') &&
                                  g.push(s(
                                      'R^2=' + i.getRoundedStat(b, 'Rsquared'),
                                      t, !1)),
                                  x.hasOwnProperty('rsquared') &&
                                  g.push(s(
                                      'r^2=' + i.getRoundedStat(b, 'rsquared'),
                                      t, !1)),
                                  x.hasOwnProperty('r') &&
                                  g.push(s(
                                      'r=' + i.getRoundedStat(b, 'r'), t, !1)),
                                  x.hasOwnProperty('RMSE') &&
                                  g.push(
                                      s('\\operatorname{RMSE}=' +
                                            i.getRoundedStat(b, 'RMSE'),
                                        t, !1));
                              for (var _ in w)
                                g.push(
                                    s(_ + '=' + i.getRoundedParam(b, _), t, !1))
                            }
                          r.push(f + '  ' + s(h, t, !1)), r.push.apply(r, g)
                        }
                        break;
                      case 'text':
                        r.push(s(p.text, t, !0));
                        break;
                      case 'folder':
                        p.collapsed ? h = 'Collapsed Folder ' + p.title :
                                      (h = 'Start Folder ' + p.title, a = p.id),
                                      r.push(c(s(h, t, !0)));
                        break;
                      case 'image':
                        r.push(s('Image', t, !1));
                        break;
                      case 'table':
                        r.push(c(s('Start Table', t, !0)));
                        for (var E = 0, S = p.rowModels; E < S.length; E++) {
                          for (var M = S[E], I = [], k = 0, C = M.cells;
                               k < C.length; k++) {
                            var T = C[k], L = '';
                            if ('header' === T.type)
                              L = T.latex || '';
                            else if ('cell' === T.type) {
                              var P = T.column.index, A = T.row.index - 1,
                                  D = T.column.disabled;
                              L = D ? T.column.computedValues[A] || '' :
                                      p.columns[P].values[A] || ''
                            }
                            I.push(s(L, t))
                          }
                          var O = I.join('\t');
                          /^\t/.test(O) || r.push(O)
                        }
                        r.push(c(s('End Table', t, !0)));
                        break;
                      default:
                        return p
                    }
                  }
                }
                return '' !== a && r.push(c(s('End Folder', t, !0))),
                       r.join('\n')
              }
              function l(e, t) {
                if ('none' === t) return '';
                var r = [];
                r.push(s('Expression List', t, !0)), r.push(''), r.push('');
                for (var n = 0, i = e.getExpressionOrder(); n < i.length; n++) {
                  var o = i[n], a = u(e.getExpressionIndex(o) + 1, t),
                      l = e.getExpressionLatex(o), c = e.getExpressionValue(o);
                  void 0 !== c && (l += '=' + c), r.push(a + '  ' + s(l, t, !1))
                }
                return r.join('\n')
              }
              function c(e) {
                var t = '--------------------';
                return t + '\n' + e + '\n' + t
              }
              function u(e, t) {
                var r = '' + e;
                return 'nemeth' === t ? s(r, t, !1) + '_4' :
                    'ueb' === t       ? s(r + '.', t, !1) :
                                        ''
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.getBrailleEquationsGraphing = a,
                  t.getBrailleEquationsBasic = l
            });
          r('loadcss!basic/settings-menu', function() {});
          r('basic/settings-menu',
            [
              'require', 'exports', 'tslib', 'keys', 'dcgview',
              './dcgview-basic', 'jquery', 'dcgview-helpers/download-button',
              'lib/export-braille-equations', 'loadcss!./settings-menu'
            ],
            function(e, t, r, n, i, o, s, a, l) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var c = i.Components.If, u = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return i.createElement(
                      'div', {
                        class: function() {
                          return {
                            'dcg-settings-dropdown': !0, 'dcg-popover': !0,
                                'dcg-has-background-color':
                                    e.controller.hasBackgroundColor(),
                                'dcg-point-left':
                                    e.controller.containerSize.height <= 420
                          }
                        },
                        role: i.const('complementary'),
                        'aria-label': i.const('Settings Menu'),
                        didMount: this.bindFn(this.didMountSettingsDropdown),
                        didUnmount: this.bindFn(this.didUnmountSettingsDropdown)
                      },
                      i.createElement(
                          'div', {
                            class: i.const('dcg-popover-interior'),
                            style: function() {
                              return {
                                background: e.controller.getBackgroundColor()
                              }
                            }
                          },
                          i.createElement(
                              'div', {
                                class: function() {
                                  return {
                                    'dcg-settings-menu-option': !0,
                                        'dcg-modern-btn': !0,
                                        'dcg-action-projectormode': !0,
                                        'dcg-active':
                                            e.controller.isProjectorMode()
                                  }
                                },
                                role: i.const('button'),
                                onTap: this.bindFn(this.onToggleProjectorMode),
                                tabindex: i.const(0),
                                'aria-label': function() {
                                  return e.controller.t('Projector Mode')
                                },
                                'aria-pressed': function() {
                                  return e.controller.isProjectorMode()
                                }
                              },
                              function() {
                                return e.controller.t('Projector Mode')
                              }),
                          i.createElement(
                              c, {
                                predicate: function() {
                                  return e.controller.getBrailleControls()
                                }
                              },
                              function() {
                                return i.createElement(
                                    'div', {
                                      class: function() {
                                        return {
                                          'dcg-settings-menu-option': !0,
                                              'dcg-braille-container': !0
                                        }
                                      }
                                    },
                                    i.createElement(
                                        'div',
                                        {class: i.const('dcg-group-title')},
                                        function() {
                                          return e.controller.t('Braille Mode')
                                        }),
                                    i.createElement(
                                        'div', {
                                          role: i.const('group'),
                                          'aria-label': function() {
                                            return e.controller.t(
                                                'Braille Mode')
                                          },
                                          class: i.const(
                                              'dcg-braille-options-buttons')
                                        },
                                        i.createElement(
                                            'span', {
                                              class: function() {
                                                return {
                                                  'dcg-braille-option': !0,
                                                      'dcg-selected':
                                                          e.isLatex()
                                                }
                                              },
                                              role: i.const('button'),
                                              onTap: function() {
                                                return e.setBrailleMode('none')
                                              },
                                              tabindex: i.const(0),
                                              'aria-label': function() {
                                                return e.controller.t('Off')
                                              },
                                              'aria-pressed': function() {
                                                return e.isLatex()
                                              }
                                            },
                                            function() {
                                              return e.controller.t('Off')
                                            }),
                                        i.createElement(
                                            'span', {
                                              class: function() {
                                                return {
                                                  'dcg-braille-option': !0,
                                                      'dcg-selected':
                                                          e.isNemeth()
                                                }
                                              },
                                              role: i.const('button'),
                                              onTap: function() {
                                                return e.setBrailleMode(
                                                    'nemeth')
                                              },
                                              tabindex: i.const(0),
                                              'aria-label': function() {
                                                return e.controller.t('Nemeth')
                                              },
                                              'aria-pressed': function() {
                                                return e.isNemeth()
                                              }
                                            },
                                            function() {
                                              return e.controller.t('Nemeth')
                                            }),
                                        i.createElement(
                                            'span', {
                                              class: function() {
                                                return {
                                                  'dcg-braille-option': !0,
                                                      'dcg-selected': e.isUEB()
                                                }
                                              },
                                              role: i.const('button'),
                                              onTap: function() {
                                                return e.setBrailleMode('ueb')
                                              },
                                              tabindex: i.const(0),
                                              'aria-label': function() {
                                                return e.controller.t('UEB')
                                              },
                                              'aria-pressed': function() {
                                                return e.isUEB()
                                              }
                                            },
                                            function() {
                                              return e.controller.t('UEB')
                                            })),
                                    i.createElement(
                                        c, {
                                          predicate: function() {
                                            return e.controller
                                                .renderAsBraille()
                                          }
                                        },
                                        function() {
                                          return i.createElement(
                                              'div', null,
                                              i.createElement(
                                                  'div', {
                                                    role: i.const('checkbox'),
                                                    tabindex: i.const(0),
                                                    onTap: function() {
                                                      return e
                                                          .onToggleSixKeyInput()
                                                    },
                                                    'aria-checked': function() {
                                                      return e.controller
                                                          .getSixKeyInput()
                                                    },
                                                    'aria-label': function() {
                                                      return e.controller.t(
                                                          'Six Key Braille Input')
                                                    },
                                                    class: function() {
                                                      return {
                                                        'dcg-settings-menu-option':
                                                            !0,
                                                            'dcg-do-not-blur':
                                                                !0,
                                                            'dcg-six-key-checkbox':
                                                                !0,
                                                            'dcg-checked': e
                                                                .controller
                                                                .getSixKeyInput(),
                                                            'dcg-checkbox-container':
                                                                !0
                                                      }
                                                    },
                                                    handleEvent: i.const(!0)
                                                  },
                                                  i.createElement(
                                                      'span', {
                                                        class: i.const(
                                                            'dcg-checkbox-box')
                                                      },
                                                      i.createElement('i', {
                                                        class: i.const(
                                                            'dcg-icon-check')
                                                      })),
                                                  i.createElement(
                                                      'span', {
                                                        class: i.const(
                                                            'dcg-checkbox-label')
                                                      },
                                                      function() {
                                                        return e.controller.t(
                                                            'Six Key Braille Input')
                                                      })),
                                              i.createElement(
                                                  'a', {
                                                    href: i.const(
                                                        'https://www.desmos.com/accessibility#braille'),
                                                    class: i.const(
                                                        'dcg-six-key-info'),
                                                    target: i.const('_blank')
                                                  },
                                                  i.createElement('i', {
                                                    class: i.const(
                                                        'dcg-icon-question-sign')
                                                  })),
                                              i.createElement(
                                                  c, {
                                                    predicate: function() {
                                                      return a.canDownload() &&
                                                          e.controller
                                                              .getBrailleExpressionDownload()
                                                    }
                                                  },
                                                  function() {
                                                    return i.createElement(a.default, {
                                                      data: function() {
                                                        var t = l.getBrailleEquationsBasic(
                                                            e.model,
                                                            e.controller
                                                                .getBrailleMode());
                                                        return new Blob([t], {
                                                          type: 'text/plain'
                                                        })
                                                      },
                                                      enabled: e.const(!0),
                                                      filename: e.const(
                                                          'desmos-equations.brl'),
                                                      text: function() {
                                                        return e.controller.t(
                                                            'Download Braille Equations')
                                                      },
                                                      isBraille: e.const(!0)
                                                    })
                                                  }))
                                        }))
                              }),
                          i.createElement(
                              'div', {
                                role: i.const('checkbox'),
                                tabindex: i.const(0),
                                onTap: this.bindFn(this.onToggleInvertedColors),
                                'aria-checked': function() {
                                  return e.controller.getInvertedColors()
                                },
                                'aria-label': function() {
                                  return e.controller.t('Reverse Contrast')
                                },
                                class: function() {
                                  return {
                                    'dcg-settings-menu-option': !0,
                                        'dcg-do-not-blur': !0,
                                        'dcg-checked':
                                            e.controller.getInvertedColors(),
                                        'dcg-checkbox-container': !0,
                                        'dcg-reverse-contrast': !0
                                  }
                                },
                                handleEvent: i.const(!0)
                              },
                              i.createElement(
                                  'span', {class: i.const('dcg-checkbox-box')},
                                  i.createElement(
                                      'i', {class: i.const('dcg-icon-check')})),
                              i.createElement(
                                  'span',
                                  {class: i.const('dcg-checkbox-label')},
                                  function() {
                                    return e.controller.t('Reverse Contrast')
                                  })),
                          i.createElement(
                              c, {
                                predicate: function() {
                                  return !!e.getVersionNumber()
                                }
                              },
                              function() {
                                return i.createElement(
                                    'div',
                                    {class: i.const('dcg-version-number')},
                                    i.const('Version: '), function() {
                                      return e.getVersionNumber()
                                    })
                              })))
                }, t.prototype.getVersionNumber = function() {
                  var e = window;
                  if (e && e.AppBridge) return e.AppBridge.versionNumber
                }, t.prototype.didUnmountSettingsDropdown = function() {
                  s(document).off('.dcg-settings-view')
                }, t.prototype.didMountSettingsDropdown = function(e) {
                  var t = this;
                  this.settingsGroupNode = e,
                  s(document).on('dcg-tapstart.dcg-settings-view', function(e) {
                    0 ===
                            s(e.target)
                                .closest('.dcg-basic-settings-container')
                                .length &&
                        t.controller.dispatch({type: 'close-settings-menu'})
                  }), s(document).on('keydown.dcg-settings-view', function(e) {
                    if ('Esc' === n.lookup(e) &&
                            (t.controller.dispatch(
                                 {type: 'close-settings-menu'}),
                             t.controller.dispatch(
                                 {type: 'focus-last-expression'})),
                        'Tab' === n.lookup(e) && !e.altKey && !e.metaKey &&
                            !e.ctrlKey) {
                      var r = document.activeElement,
                          i = s(t.props.settingsButtonNode()),
                          o = s(t.settingsGroupNode)
                                  .find('.dcg-settings-menu-option:last');
                      e.shiftKey || r !== o[0] ?
                          e.shiftKey && r === i[0] &&
                              (o.focus(), e.preventDefault(),
                               e.stopPropagation()) :
                          (i.focus(), e.preventDefault(), e.stopPropagation())
                    }
                  })
                }, t.prototype.setBrailleMode = function(e) {
                  this.controller.dispatch({type: 'set-braille-mode', mode: e})
                }, t.prototype.isNemeth = function() {
                  return 'nemeth' === this.controller.getBrailleMode()
                }, t.prototype.isUEB = function() {
                  return 'ueb' === this.controller.getBrailleMode()
                }, t.prototype.isLatex = function() {
                  return 'none' === this.controller.getBrailleMode()
                }, t.prototype.onToggleSixKeyInput = function() {
                  var e = !this.controller.getSixKeyInput();
                  this.controller.dispatch({type: 'set-six-key-input', mode: e})
                }, t.prototype.onToggleInvertedColors = function() {
                  var e = !this.controller.getInvertedColors();
                  this.controller.dispatch(
                      {type: 'update-inverted-colors', mode: e})
                }, t.prototype.onToggleProjectorMode = function() {
                  this.controller.dispatch({
                    type: 'update-projector-mode',
                    mode: !this.controller.isProjectorMode()
                  })
                }, t
              }(o.DCGViewBasic);
              t.SettingsMenu = u
            });
          r('loadcss!basic/keypad/settings-control-button', function() {});
          r('basic/keypad/settings-control-button',
            [
              'require', 'exports', 'tslib', 'dcgview', 'keypad/control-btn',
              'basic/dcgview-basic', 'basic/settings-menu',
              'loadcss!./settings-control-button'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = n.Components.If, l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this, t = this.props.controller();
                  return n.createElement(
                      'div', {class: n.const('dcg-basic-settings-container')},
                      n.createElement(
                          i.default, {
                            didMount: function(t) {
                              return e.settingsButtonNode = t
                            },
                            command: this.const('settings'),
                            ariaLabel: function() {
                              return t.t('settings')
                            },
                            onTap: this.bindFn(this.onToggleSettingsMenu),
                            selected: function() {
                              return e.controller.isSettingsMenuOpen()
                            },
                            ariaPopup: this.const(!0)
                          },
                          n.createElement(
                              'i', {class: n.const('dcg-icon-wrench')})),
                      n.createElement(
                          a, {
                            predicate: function() {
                              return e.controller.isSettingsMenuOpen()
                            }
                          },
                          function() {
                            return n.createElement(s.SettingsMenu, {
                              controller: e.props.controller,
                              settingsButtonNode: function() {
                                return e.settingsButtonNode
                              }
                            })
                          }))
                }, t.prototype.onToggleSettingsMenu = function() {
                  this.controller.dispatch({type: 'toggle-settings-menu'})
                }, t
              }(o.DCGViewBasic);
              t.default = l
            });
          r('basic/keypad/fourfunction-control-bar',
            [
              'require', 'exports', 'tslib', 'dcgview', 'keypad/control-bar',
              'keypad/control-btn', './settings-control-button',
              'basic/dcgview-basic'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = n.Components, c = l.If, u = l.IfElse, d = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this, t = this.props.controller();
                  return n.createElement(
                      i.default, {controller: this.props.controller},
                      n.createElement(
                          c, {
                            predicate: function() {
                              return !e.controller.getRestrictedEditing()
                            }
                          },
                          function() {
                            return n.createElement(
                                o.default, {
                                  command: e.const('undo'),
                                  disabled: function() {
                                    return !t.canUndo()
                                  },
                                  ariaLabel: function() {
                                    return t.t('undo')
                                  },
                                  onTap: function(e) {
                                    return t.dispatch({
                                      type: 'undo',
                                      source: 'keyboard' === e.device ?
                                          'button-keyboard' :
                                          'button-tap'
                                    })
                                  }
                                },
                                n.createElement(
                                    'i', {class: n.const('dcg-icon-undo')}))
                          }),
                      n.createElement(
                          c, {
                            predicate: function() {
                              return !e.controller.getRestrictedEditing()
                            }
                          },
                          function() {
                            return n.createElement(
                                o.default, {
                                  command: e.const('redo'),
                                  disabled: function() {
                                    return !t.canRedo()
                                  },
                                  ariaLabel: function() {
                                    return t.t('redo')
                                  },
                                  onTap: function(e) {
                                    return t.dispatch({
                                      type: 'redo',
                                      source: 'keyboard' === e.device ?
                                          'button-keyboard' :
                                          'button-tap'
                                    })
                                  }
                                },
                                n.createElement(
                                    'i', {class: n.const('dcg-icon-redo')}))
                          }),
                      u(
                          function() {
                            return t.shouldShowClear()
                          },
                          {
                            true: function() {
                              return n.createElement(
                                  o.default, {
                                    command: e.const('clear'),
                                    ariaLabel: function() {
                                      return t.t('clear')
                                    },
                                    onTap: function() {
                                      return t.dispatch({type: 'clear'})
                                    }
                                  },
                                  function() {
                                    return t.t('clear')
                                  })
                            },
                            false: function() {
                              return n.createElement(
                                  o.default, {
                                    command: e.const('clearall'),
                                    disabled: function() {
                                      return !t.canClear()
                                    },
                                    ariaLabel: function() {
                                      return t.t('clear all')
                                    },
                                    onTap: function() {
                                      return t.dispatch({
                                        type: 'set-blank',
                                        opts: {allowUndo: !0}
                                      })
                                    }
                                  },
                                  function() {
                                    return t.t('clear all')
                                  })
                            }
                          }),
                      n.createElement(
                          c, {
                            predicate: function() {
                              return e.controller.getRestrictedEditing()
                            }
                          },
                          function() {
                            return n.createElement(
                                'div', {class: n.const('dcg-spacer-2')})
                          }),
                      n.createElement(
                          c, {
                            predicate: function() {
                              return 'none' === t.getBrailleMode()
                            }
                          },
                          function() {
                            return n.createElement(
                                o.default, {
                                  command: e.const('backspace'),
                                  ariaLabel: function() {
                                    return t.t('backspace')
                                  },
                                  disabled: function() {
                                    return !t.canBackspace()
                                  },
                                  onTap: function() {
                                    return t.dispatch({
                                      type: 'keypad/press-key',
                                      key: 'Backspace'
                                    })
                                  }
                                },
                                n.createElement(
                                    'i', {class: n.const('dcg-icon-delete')}))
                          }),
                      n.createElement(
                          c, {
                            predicate: function() {
                              return e.props.controller().getSettingsMenu()
                            }
                          },
                          function() {
                            return n.createElement(
                                s.default, {controller: e.props.controller})
                          }))
                }, t.prototype.onToggleSettingsMenu = function() {
                  this.controller.dispatch({type: 'toggle-settings-menu'})
                }, t
              }(a.DCGViewBasic);
              t.default = d
            });
          r('basic/keypad/single-expression-fourfunction-control-bar',
            [
              'require', 'exports', 'tslib', 'dcgview', 'keypad/control-bar',
              'keypad/control-btn', 'basic/dcgview-basic'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = n.Components.If, l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this, t = this.props.controller();
                  return n.createElement(
                      i.default, {controller: this.props.controller},
                      n.createElement(
                          a, {
                            predicate: function() {
                              return !e.controller.getRestrictedEditing()
                            }
                          },
                          function() {
                            return n.createElement(
                                o.default, {
                                  command: e.const('undo'),
                                  disabled: function() {
                                    return !t.canUndo()
                                  },
                                  ariaLabel: function() {
                                    return t.t('undo')
                                  },
                                  onTap: function(e) {
                                    return t.dispatch({
                                      type: 'undo',
                                      source: 'keyboard' === e.device ?
                                          'button-keyboard' :
                                          'button-tap'
                                    })
                                  }
                                },
                                n.createElement(
                                    'i', {class: n.const('dcg-icon-undo')}))
                          }),
                      n.createElement(
                          a, {
                            predicate: function() {
                              return !e.controller.getRestrictedEditing()
                            }
                          },
                          function() {
                            return n.createElement(
                                o.default, {
                                  command: e.const('redo'),
                                  disabled: function() {
                                    return !t.canRedo()
                                  },
                                  ariaLabel: function() {
                                    return t.t('redo')
                                  },
                                  onTap: function(e) {
                                    return t.dispatch({
                                      type: 'redo',
                                      source: 'keyboard' === e.device ?
                                          'button-keyboard' :
                                          'button-tap'
                                    })
                                  }
                                },
                                n.createElement(
                                    'i', {class: n.const('dcg-icon-redo')}))
                          }),
                      n.createElement(
                          o.default, {
                            command: this.const('clear'),
                            ariaLabel: function() {
                              return t.t('clear')
                            },
                            onTap: function() {
                              return t.dispatch({type: 'clear'})
                            }
                          },
                          function() {
                            return t.t('clear')
                          }),
                      n.createElement(
                          a, {
                            predicate: function() {
                              return e.controller.getRestrictedEditing()
                            }
                          },
                          function() {
                            return n.createElement(
                                'div', {class: n.const('dcg-spacer-2')})
                          }),
                      n.createElement(
                          a, {
                            predicate: function() {
                              return 'none' === t.getBrailleMode()
                            }
                          },
                          function() {
                            return n.createElement(
                                o.default, {
                                  command: e.const('backspace'),
                                  ariaLabel: function() {
                                    return t.t('backspace')
                                  },
                                  disabled: function() {
                                    return !t.canBackspace()
                                  },
                                  onTap: function() {
                                    return t.dispatch({
                                      type: 'keypad/press-key',
                                      key: 'Backspace'
                                    })
                                  }
                                },
                                n.createElement(
                                    'i', {class: n.const('dcg-icon-delete')}))
                          }))
                }, t
              }(s.DCGViewBasic);
              t.default = l
            });
          r('loadcss!keypad/control-toggle', function() {});
          r('keypad/control-toggle',
            [
              'require', 'exports', 'tslib', 'lib/aria',
              'core/lib/color-helpers', 'dcgview', './dcgview-keypad',
              'loadcss!./control-toggle'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return o.createElement(
                      'div', {
                        class: function() {
                          return {
                            'dcg-keypad-control-toggle': !0,
                                'dcg-toggled': e.props.toggled()
                          }
                        },
                        role: o.const('button'),
                        tabindex: o.const('0'),
                        'aria-label': this.bindFn(this.getAriaLabel),
                        onTap: this.bindFn(this.handleTap)
                      },
                      o.createElement(
                          'div', {class: o.const('dcg-ctrl-toggle-option')},
                          this.props.defaultOption),
                      o.createElement(
                          'div', {class: o.const('dcg-ctrl-toggle-option')},
                          this.props.toggledOption),
                      o.createElement('div', {
                        class: o.const('dcg-ctrl-toggle-cover'),
                        style: function() {
                          return {
                            background: i.shadeColor(
                                e.controller.getBackgroundColor(), -.1)
                          }
                        }
                      }))
                }, t.prototype.getAriaLabel = function() {
                  var e = {
                    toggled: this.props.toggledAriaLabel(),
                    default: this.props.defaultAriaLabel()
                  };
                  return this.props.toggled() ?
                      this.controller.t(
                          '__toggled__ selected. Press Enter to switch to __default__.',
                          e) :
                      this.controller.t(
                          '__default__ selected. Press Enter to switch to __toggled__.',
                          e)
                }, t.prototype.handleTap = function() {
                  this.props.toggled() ?
                      n.alert(this.props.defaultAriaLabel()) :
                      n.alert(this.props.toggledAriaLabel()),
                      this.props.onTap(this.props.command())
                }, t
              }(s.default);
              t.default = a
            });
          r('basic/keypad/scientific-control-bar',
            [
              'require', 'exports', 'tslib', 'dcgview', 'keypad/control-bar',
              'keypad/control-btn', 'basic/dcgview-basic',
              'keypad/control-toggle', './settings-control-button'
            ],
            function(e, t, r, n, i, o, s, a, l) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var c = n.Components, u = c.If, d = c.IfElse, p = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this, t = this.props.controller();
                  return n.createElement(
                      i.default, {controller: this.props.controller},
                      n.createElement(
                          o.default, {
                            command: this.const('main'),
                            selected: function() {
                              return 'main' === t.getKeyboardMode()
                            },
                            disabled: function() {
                              return e.controller.renderAsBraille()
                            },
                            ignoreInTabOrder: this.const(!0),
                            selectable: this.const(!0),
                            onTap: function() {
                              return t.dispatch({type: 'main'})
                            },
                            ariaLabel: function() {
                              return t.t('main')
                            }
                          },
                          function() {
                            return t.t('main')
                          }),
                      n.createElement(
                          o.default, {
                            command: this.const('ABC'),
                            selected: function() {
                              return -1 !== [
                                'qwerty', 'capitalQwerty', 'letters'
                              ].indexOf(t.getKeyboardMode())
                            },
                            disabled: function() {
                              return e.controller.renderAsBraille()
                            },
                            ignoreInTabOrder: this.const(!0),
                            selectable: this.const(!0),
                            ariaLabel: function() {
                              return t.t('A B C')
                            },
                            onTap: function() {
                              return t.dispatch({type: 'ABC'})
                            }
                          },
                          function() {
                            return t.t('abc')
                          }),
                      n.createElement(
                          o.default, {
                            command: this.const('functions'),
                            selected: function() {
                              return -1 !== [
                                'functions', 'restrictedFunctions'
                              ].indexOf(t.getKeyboardMode())
                            },
                            ariaLabel: function() {
                              return t.t('Functions')
                            },
                            disabled: function() {
                              return e.controller.renderAsBraille()
                            },
                            ignoreInTabOrder: this.const(!0),
                            selectable: this.const(!0),
                            onTap: function() {
                              return t.dispatch({type: 'functions'})
                            }
                          },
                          function() {
                            return t.t('func')
                          }),
                      n.createElement(a.default, {
                        command: this.const('degrees'),
                        toggled: function() {
                          return e.model.getDegreeMode()
                        },
                        defaultOption: function() {
                          return t.t('rad')
                        },
                        toggledOption: function() {
                          return t.t('deg')
                        },
                        defaultAriaLabel: function() {
                          return t.t('Radians')
                        },
                        toggledAriaLabel: function() {
                          return t.t('Degrees')
                        },
                        onTap: function() {
                          return t.dispatch({type: 'degrees'})
                        },
                        controller: this.props.controller
                      }),
                      n.createElement(
                          u, {
                            predicate: function() {
                              return !e.controller.getRestrictedEditing()
                            }
                          },
                          function() {
                            return n.createElement(
                                o.default, {
                                  command: e.const('undo'),
                                  disabled: function() {
                                    return !t.canUndo()
                                  },
                                  ariaLabel: function() {
                                    return t.t('Undo')
                                  },
                                  onTap: function(e) {
                                    return t.dispatch({
                                      type: 'undo',
                                      source: 'keyboard' === e.device ?
                                          'button-keyboard' :
                                          'button-tap'
                                    })
                                  }
                                },
                                n.createElement(
                                    'i', {class: n.const('dcg-icon-undo')}))
                          }),
                      n.createElement(
                          u, {
                            predicate: function() {
                              return !e.controller.getRestrictedEditing()
                            }
                          },
                          function() {
                            return n.createElement(
                                o.default, {
                                  command: e.const('redo'),
                                  disabled: function() {
                                    return !t.canRedo()
                                  },
                                  ariaLabel: function() {
                                    return t.t('Redo')
                                  },
                                  onTap: function(e) {
                                    return t.dispatch({
                                      type: 'redo',
                                      source: 'keyboard' === e.device ?
                                          'button-keyboard' :
                                          'button-tap'
                                    })
                                  }
                                },
                                n.createElement(
                                    'i', {class: n.const('dcg-icon-redo')}))
                          }),
                      d(
                          function() {
                            return t.shouldShowClear()
                          },
                          {
                            true: function() {
                              return n.createElement(
                                  o.default, {
                                    command: e.const('clear'),
                                    ariaLabel: function() {
                                      return t.t('clear')
                                    },
                                    onTap: function() {
                                      return t.dispatch({type: 'clear'})
                                    }
                                  },
                                  function() {
                                    return t.t('clear')
                                  })
                            },
                            false: function() {
                              return n.createElement(
                                  o.default, {
                                    command: e.const('clearall'),
                                    disabled: function() {
                                      return !t.canClear()
                                    },
                                    ariaLabel: function() {
                                      return t.t('clear all')
                                    },
                                    onTap: function() {
                                      return t.dispatch({
                                        type: 'set-blank',
                                        opts: {allowUndo: !0}
                                      })
                                    }
                                  },
                                  function() {
                                    return t.t('clear all')
                                  })
                            }
                          }),
                      n.createElement(
                          u, {
                            predicate: function() {
                              return e.props.controller().getSettingsMenu()
                            }
                          },
                          function() {
                            return n.createElement(
                                l.default, {controller: e.props.controller})
                          }))
                }, t
              }(s.DCGViewBasic);
              t.default = p
            });
          r('basic/keypad/single-expression-scientific-control-bar',
            [
              'require', 'exports', 'tslib', 'dcgview', 'keypad/control-bar',
              'keypad/control-btn', 'basic/dcgview-basic',
              'keypad/control-toggle'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = n.Components.If, c = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this, t = this.props.controller();
                  return n.createElement(
                      i.default, {controller: this.props.controller},
                      n.createElement(a.default, {
                        command: this.const('degrees'),
                        toggled: function() {
                          return e.model.getDegreeMode()
                        },
                        defaultOption: function() {
                          return t.t('rad')
                        },
                        toggledOption: function() {
                          return t.t('deg')
                        },
                        defaultAriaLabel: function() {
                          return t.t('Radians')
                        },
                        toggledAriaLabel: function() {
                          return t.t('Degrees')
                        },
                        onTap: function() {
                          return t.dispatch({type: 'degrees'})
                        },
                        controller: this.props.controller
                      }),
                      n.createElement('div', {class: n.const('dcg-spacer')}),
                      n.createElement(
                          l, {
                            predicate: function() {
                              return !e.controller.getRestrictedEditing()
                            }
                          },
                          function() {
                            return n.createElement(
                                o.default, {
                                  command: e.const('undo'),
                                  disabled: function() {
                                    return !t.canUndo()
                                  },
                                  ariaLabel: function() {
                                    return t.t('Undo')
                                  },
                                  onTap: function(e) {
                                    return t.dispatch({
                                      type: 'undo',
                                      source: 'keyboard' === e.device ?
                                          'button-keyboard' :
                                          'button-tap'
                                    })
                                  }
                                },
                                n.createElement(
                                    'i', {class: n.const('dcg-icon-undo')}))
                          }),
                      n.createElement(
                          l, {
                            predicate: function() {
                              return !e.controller.getRestrictedEditing()
                            }
                          },
                          function() {
                            return n.createElement(
                                o.default, {
                                  command: e.const('redo'),
                                  disabled: function() {
                                    return !t.canRedo()
                                  },
                                  ariaLabel: function() {
                                    return t.t('Redo')
                                  },
                                  onTap: function(e) {
                                    return t.dispatch({
                                      type: 'redo',
                                      source: 'keyboard' === e.device ?
                                          'button-keyboard' :
                                          'button-tap'
                                    })
                                  }
                                },
                                n.createElement(
                                    'i', {class: n.const('dcg-icon-redo')}))
                          }),
                      n.createElement('div', {class: n.const('dcg-spacer')}),
                      n.createElement(
                          o.default, {
                            narrowButton: this.const(!0),
                            command: this.const('clear'),
                            ariaLabel: function() {
                              return t.t('clear')
                            },
                            onTap: function() {
                              return t.dispatch({type: 'clear'})
                            }
                          },
                          function() {
                            return t.t('clear')
                          }),
                      n.createElement(
                          o.default, {
                            narrowButton: this.const(!0),
                            command: this.const('backspace'),
                            ariaLabel: function() {
                              return t.t('backspace')
                            },
                            onTap: function() {
                              return t.dispatch(
                                  {type: 'keypad/press-key', key: 'Backspace'})
                            }
                          },
                          n.createElement(
                              'i', {class: n.const('dcg-icon-delete')})))
                }, t
              }(s.DCGViewBasic);
              t.default = c
            });
          r('basic/keypad/fourfunction-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'basic/dcgview-basic',
              'keypad/keys', 'keypad/keypad', 'keypad/row'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {
                        role: n.const('group'),
                        'aria-label': function() {
                          return e.t('keypad')
                        }
                      },
                      n.createElement(
                          s.default, {controller: this.props.controller},
                          n.createElement(
                              a.default, null,
                              o.view(this, '(', {colspan: this.parenColspan()}),
                              o.view(this, ')', {colspan: this.parenColspan()}),
                              this.makeAdditionalFunctionKey(0),
                              this.makeAdditionalFunctionKey(1),
                              o.view(this, '/')),
                          n.createElement(
                              a.default, null,
                              o.view(this, '7', {style: 'highlight'}),
                              o.view(this, '8', {style: 'highlight'}),
                              o.view(this, '9', {style: 'highlight'}),
                              o.view(this, '*')),
                          n.createElement(
                              a.default, null,
                              o.view(this, '4', {style: 'highlight'}),
                              o.view(this, '5', {style: 'highlight'}),
                              o.view(this, '6', {style: 'highlight'}),
                              o.view(this, '-')),
                          n.createElement(
                              a.default, null,
                              o.view(this, '1', {style: 'highlight'}),
                              o.view(this, '2', {style: 'highlight'}),
                              o.view(this, '3', {style: 'highlight'}),
                              o.view(this, '+')),
                          n.createElement(
                              a.default, null,
                              o.view(this, '0', {style: 'highlight'}),
                              o.view(this, '.', {style: 'highlight'}),
                              o.view(this, 'ans'),
                              o.view(this, 'enter', {style: 'blue'}))))
                }, t.prototype.parenColspan = function() {
                  return this.controller.getAdditionalFunctions().length > 1 ?
                      .5 :
                      1
                }, t.prototype.makeAdditionalFunctionKey = function(e) {
                  var t = this.controller.getAdditionalFunctions()[e];
                  return 'exponent' === t ? o.view(this, 'a^b') :
                      'percent' === t     ? o.view(this, '%') :
                      'sqrt' === t        ? o.view(this, 'sqrt') :
                      'fraction' === t    ? o.view(this, 'fraction') :
                                            void 0
                }, t
              }(i.DCGViewBasic);
              t.default = l
            });
          r('basic/keypad/single-expression-fourfunction-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'basic/dcgview-basic',
              'keypad/keys', 'keypad/keypad', 'keypad/row'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {
                        role: n.const('group'),
                        'aria-label': function() {
                          return e.t('keypad')
                        }
                      },
                      n.createElement(
                          s.default, {controller: this.props.controller},
                          n.createElement(
                              a.default, null,
                              o.view(this, '(', {colspan: this.parenColspan()}),
                              o.view(this, ')', {colspan: this.parenColspan()}),
                              this.makeAdditionalFunctionKey(1)),
                          n.createElement(
                              a.default, null,
                              o.view(this, '7', {style: 'highlight'}),
                              o.view(this, '8', {style: 'highlight'}),
                              o.view(this, '9', {style: 'highlight'}),
                              o.view(this, '/')),
                          n.createElement(
                              a.default, null,
                              o.view(this, '4', {style: 'highlight'}),
                              o.view(this, '5', {style: 'highlight'}),
                              o.view(this, '6', {style: 'highlight'}),
                              o.view(this, '*')),
                          n.createElement(
                              a.default, null,
                              o.view(this, '1', {style: 'highlight'}),
                              o.view(this, '2', {style: 'highlight'}),
                              o.view(this, '3', {style: 'highlight'}),
                              o.view(this, '-')),
                          n.createElement(
                              a.default, null,
                              o.view(this, '0', {style: 'highlight'}),
                              o.view(this, '.', {
                                style: 'highlight',
                                colspan: this.dotColspan()
                              }),
                              this.makeAdditionalFunctionKey(0),
                              o.view(this, '+'))))
                }, t.prototype.parenColspan = function() {
                  return 2 === this.controller.getAdditionalFunctions().length ?
                      1.5 :
                      2
                }, t.prototype.dotColspan = function() {
                  return this.controller.getAdditionalFunctions().length ? 1 : 2
                }, t.prototype.makeAdditionalFunctionKey = function(e) {
                  var t = this.controller.getAdditionalFunctions()[e];
                  return 'exponent' === t ? o.view(this, 'a^b') :
                      'percent' === t     ? o.view(this, '%') :
                      'sqrt' === t        ? o.view(this, 'sqrt') :
                                            void 0
                }, t
              }(i.DCGViewBasic);
              t.default = l
            });
          r('basic/keypad/single-expression-scientific-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'basic/dcgview-basic',
              'keypad/keys', 'keypad/keypad', 'keypad/row'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  return n.createElement(
                      s.default, {controller: this.props.controller},
                      n.createElement(
                          a.default, null, o.view(this, '('), o.view(this, ')'),
                          o.view(this, 'x^2'), o.view(this, 'sqrt'),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          o.view(this, 'x^3'), o.view(this, 'x^y'),
                          o.view(this, 'ythroot')),
                      n.createElement(
                          a.default, null,
                          o.view(this, '7', {style: 'highlight'}),
                          o.view(this, '8', {style: 'highlight'}),
                          o.view(this, '9', {style: 'highlight'}),
                          o.view(this, '/'), n.createElement('div', {
                            class: n.const('dcg-partition-placeholder')
                          }),
                          o.view(this, 'pi'), o.view(this, 'e^x'),
                          o.view(this, '!')),
                      n.createElement(
                          a.default, null,
                          o.view(this, '4', {style: 'highlight'}),
                          o.view(this, '5', {style: 'highlight'}),
                          o.view(this, '6', {style: 'highlight'}),
                          o.view(this, '*'), n.createElement('div', {
                            class: n.const('dcg-partition-placeholder')
                          }),
                          o.view(this, 'log'), o.view(this, 'ln'),
                          o.view(this, '|x|')),
                      n.createElement(
                          a.default, null,
                          o.view(this, '1', {style: 'highlight'}),
                          o.view(this, '2', {style: 'highlight'}),
                          o.view(this, '3', {style: 'highlight'}),
                          o.view(this, '-'), n.createElement('div', {
                            class: n.const('dcg-partition-placeholder')
                          }),
                          o.view(this, 'sin'), o.view(this, 'cos'),
                          o.view(this, 'tan')),
                      n.createElement(
                          a.default, null,
                          o.view(this, '0', {style: 'highlight'}),
                          o.view(this, '.', {style: 'highlight'}),
                          o.view(this, 'x/y'), o.view(this, '+'),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          o.view(this, 'arcsin'), o.view(this, 'arccos'),
                          o.view(this, 'arctan')))
                }, t
              }(i.DCGViewBasic);
              t.default = l
            });
          r('basic/keypad/sci-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'basic/dcgview-basic',
              'keypad/keys', 'keypad/keypad', 'keypad/row'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = n.Components.IfElse, c = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      s.default, {controller: this.props.controller},
                      n.createElement(
                          a.default, null, o.view(this, 'a^2'),
                          o.view(this, 'a^b'), o.view(this, '|a|'),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          o.view(this, '7', {style: 'highlight'}),
                          o.view(this, '8', {style: 'highlight'}),
                          o.view(this, '9', {style: 'highlight'}),
                          o.view(this, '/'), n.createElement('div', {
                            class: n.const('dcg-partition-placeholder')
                          }),
                          o.view(this, '%'), o.view(this, 'a/b')),
                      n.createElement(
                          a.default, null, o.view(this, 'sqrt'),
                          o.view(this, 'nthroot'), o.view(this, 'pi'),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          o.view(this, '4', {style: 'highlight'}),
                          o.view(this, '5', {style: 'highlight'}),
                          o.view(this, '6', {style: 'highlight'}),
                          o.view(this, '*'), n.createElement('div', {
                            class: n.const('dcg-partition-placeholder')
                          }),
                          o.view(this, 'left', {style: 'highlight'}),
                          o.view(this, 'right', {style: 'highlight'})),
                      n.createElement(
                          a.default, null, o.view(this, 'sin'),
                          o.view(this, 'cos'), o.view(this, 'tan'),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          o.view(this, '1', {style: 'highlight'}),
                          o.view(this, '2', {style: 'highlight'}),
                          o.view(this, '3', {style: 'highlight'}),
                          o.view(this, '-'), n.createElement('div', {
                            class: n.const('dcg-partition-placeholder')
                          }),
                          o.spacer(.5),
                          o.view(
                              this, 'backspace',
                              {style: 'highlight', colspan: 1.5})),
                      n.createElement(
                          a.default, null, o.view(this, '('), o.view(this, ')'),
                          l(
                              function() {
                                return e.controller.getReplaceCommaWith10Exp()
                              },
                              {
                                true: function() {
                                  return o.view(e, '10^n')
                                },
                                false: function() {
                                  return o.view(e, ',')
                                }
                              }),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          o.view(this, '0', {style: 'highlight'}),
                          o.view(this, '.', {style: 'highlight'}),
                          o.view(this, 'ans'), o.view(this, '+'),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          o.view(this, 'enter', {style: 'blue', colspan: 2})))
                }, t
              }(i.DCGViewBasic);
              t.default = c
            });
          r('basic/keypad/sci-qwerty-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'basic/dcgview-basic',
              'keypad/keys', 'keypad/keypad', 'keypad/row'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  return n.createElement(
                      s.default, {controller: this.props.controller},
                      n.createElement(
                          a.default, null, o.view(this, 'q'), o.view(this, 'w'),
                          o.view(this, 'e'), o.view(this, 'r'),
                          o.view(this, 't'), o.view(this, 'y'),
                          o.view(this, 'u'), o.view(this, 'i'),
                          o.view(this, 'o'), o.view(this, 'p')),
                      n.createElement(
                          a.default, null, n.createElement('div', {
                            class: n.const('dcg-half-width-placeholder')
                          }),
                          o.view(this, 'a'), o.view(this, 's'),
                          o.view(this, 'd'), o.view(this, 'f'),
                          o.view(this, 'g'), o.view(this, 'h'),
                          o.view(this, 'j'), o.view(this, 'k'),
                          o.view(this, 'l'), n.createElement('div', {
                            class: n.const('dcg-half-width-placeholder')
                          })),
                      n.createElement(
                          a.default, null,
                          o.view(this, '=', {style: 'highlight'}),
                          o.view(this, 'z'), o.view(this, 'x'),
                          o.view(this, 'c'), o.view(this, 'v'),
                          o.view(this, 'b'), o.view(this, 'n'),
                          o.view(this, 'm'), o.view(this, ','),
                          o.view(this, 'backspace', {style: 'highlight'})),
                      n.createElement(
                          a.default, null,
                          o.view(
                              this, 'shift',
                              {style: 'highlight', colspan: 1.5}),
                          o.view(this, '('), o.view(this, ')'),
                          o.view(this, '['), o.view(this, ']'),
                          o.view(this, '!'), o.view(this, '\''),
                          o.view(this, 'pi'),
                          o.view(this, 'enter', {style: 'blue', colspan: 1.5})))
                }, t
              }(i.DCGViewBasic);
              t.default = l
            });
          r('basic/keypad/sci-letters-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'basic/dcgview-basic',
              'keypad/keys', 'keypad/keypad', 'keypad/row'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  return n.createElement(
                      s.default, {controller: this.props.controller},
                      n.createElement(
                          a.default, null, o.view(this, 'a'), o.view(this, 'b'),
                          o.view(this, 'c'), o.view(this, 'd'),
                          o.view(this, 'e'), o.view(this, 'f'),
                          o.view(this, 'g'), o.view(this, 'h'),
                          o.view(this, 'i'), o.view(this, 'j')),
                      n.createElement(
                          a.default, null, o.view(this, 'k'), o.view(this, 'l'),
                          o.view(this, 'm'), o.view(this, 'n'),
                          o.view(this, 'o'), o.view(this, 'p'),
                          o.view(this, 'q'), o.view(this, 'r'),
                          o.view(this, 's'), o.view(this, 't')),
                      n.createElement(
                          a.default, null,
                          o.view(this, '=', {style: 'highlight'}),
                          o.view(this, ','), o.view(this, 'u'),
                          o.view(this, 'v'), o.view(this, 'w'),
                          o.view(this, 'x'), o.view(this, 'y'),
                          o.view(this, 'z'), o.view(this, 'pi'),
                          o.view(this, 'backspace', {style: 'highlight'})),
                      n.createElement(
                          a.default, null,
                          o.view(
                              this, 'shift', {style: 'highlight', colspan: 2}),
                          o.view(this, '('), o.view(this, ')'),
                          o.view(this, '['), o.view(this, ']'),
                          o.view(this, '!'), o.view(this, '\''),
                          o.view(this, 'enter', {style: 'blue', colspan: 2})))
                }, t
              }(i.DCGViewBasic);
              t.default = l
            });
          r('basic/keypad/sci-capital-qwerty-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'basic/dcgview-basic',
              'keypad/keys', 'keypad/keypad', 'keypad/row'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  return n.createElement(
                      s.default, {controller: this.props.controller},
                      n.createElement(
                          a.default, null, o.view(this, 'Q'), o.view(this, 'W'),
                          o.view(this, 'E'), o.view(this, 'R'),
                          o.view(this, 'T'), o.view(this, 'Y'),
                          o.view(this, 'U'), o.view(this, 'I'),
                          o.view(this, 'O'), o.view(this, 'P')),
                      n.createElement(
                          a.default, null, n.createElement('div', {
                            class: n.const('dcg-half-width-placeholder')
                          }),
                          o.view(this, 'A'), o.view(this, 'S'),
                          o.view(this, 'D'), o.view(this, 'F'),
                          o.view(this, 'G'), o.view(this, 'H'),
                          o.view(this, 'J'), o.view(this, 'K'),
                          o.view(this, 'L'), n.createElement('div', {
                            class: n.const('dcg-half-width-placeholder')
                          })),
                      n.createElement(
                          a.default, null,
                          o.view(this, '=', {style: 'highlight'}),
                          o.view(this, 'Z'), o.view(this, 'X'),
                          o.view(this, 'C'), o.view(this, 'V'),
                          o.view(this, 'B'), o.view(this, 'N'),
                          o.view(this, 'M'), o.view(this, ','),
                          o.view(this, 'backspace', {style: 'highlight'})),
                      n.createElement(
                          a.default, null,
                          o.view(
                              this, 'shift',
                              {style: 'highlight', colspan: 1.5}),
                          o.view(this, '('), o.view(this, ')'),
                          o.view(this, '['), o.view(this, ']'),
                          o.view(this, '!'), o.view(this, '\''),
                          o.view(this, 'pi'),
                          o.view(this, 'enter', {style: 'blue', colspan: 1.5})))
                }, t
              }(i.DCGViewBasic);
              t.default = l
            });
          r('basic/keypad/sci-capital-letters-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'basic/dcgview-basic',
              'keypad/keys', 'keypad/keypad', 'keypad/row'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  return n.createElement(
                      s.default, {controller: this.props.controller},
                      n.createElement(
                          a.default, null, o.view(this, 'A'), o.view(this, 'B'),
                          o.view(this, 'C'), o.view(this, 'D'),
                          o.view(this, 'E'), o.view(this, 'F'),
                          o.view(this, 'G'), o.view(this, 'H'),
                          o.view(this, 'I'), o.view(this, 'J')),
                      n.createElement(
                          a.default, null, o.view(this, 'K'), o.view(this, 'L'),
                          o.view(this, 'M'), o.view(this, 'N'),
                          o.view(this, 'O'), o.view(this, 'P'),
                          o.view(this, 'Q'), o.view(this, 'R'),
                          o.view(this, 'S'), o.view(this, 'T')),
                      n.createElement(
                          a.default, null,
                          o.view(this, '=', {style: 'highlight'}),
                          o.view(this, ','), o.view(this, 'U'),
                          o.view(this, 'V'), o.view(this, 'W'),
                          o.view(this, 'X'), o.view(this, 'Y'),
                          o.view(this, 'Z'), o.view(this, 'pi'),
                          o.view(this, 'backspace', {style: 'highlight'})),
                      n.createElement(
                          a.default, null,
                          o.view(
                              this, 'shift', {style: 'highlight', colspan: 2}),
                          o.view(this, '('), o.view(this, ')'),
                          o.view(this, '['), o.view(this, ']'),
                          o.view(this, '!'), o.view(this, '\''),
                          o.view(this, 'enter', {style: 'blue', colspan: 2})))
                }, t
              }(i.DCGViewBasic);
              t.default = l
            });
          r('basic/keypad/sci-functions-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'basic/dcgview-basic',
              'keypad/keys', 'keypad/keypad', 'keypad/row'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = n.Components.IfElse, c = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {class: n.const('dcg-sci-func-keypad')},
                      n.createElement(
                          s.default, {controller: this.props.controller},
                          n.createElement(
                              a.default, null, o.view(this, 'sin'),
                              o.view(this, 'cos'), o.view(this, 'tan'),
                              n.createElement('div', {
                                class: n.const('dcg-partition-placeholder')
                              }),
                              o.view(this, 'a^b'), o.view(this, 'sqrt'),
                              o.view(this, 'nthroot')),
                          n.createElement(
                              a.default, null, o.view(this, 'arcsin'),
                              o.view(this, 'arccos'), o.view(this, 'arctan'),
                              n.createElement('div', {
                                class: n.const('dcg-partition-placeholder')
                              }),
                              o.view(this, 'e^x'), o.view(this, 'abs'),
                              l(
                                  function() {
                                    return e.controller
                                        .getReplaceRoundWithReciprocal()
                                  },
                                  {
                                    true: function() {
                                      return o.view(e, 'a^{-1}')
                                    },
                                    false: function() {
                                      return o.view(e, 'round')
                                    }
                                  })),
                          n.createElement(
                              a.default, null, o.view(this, 'mean'),
                              o.view(this, 'stdev'), o.view(this, 'stdevp'),
                              n.createElement('div', {
                                class: n.const('dcg-partition-placeholder')
                              }),
                              o.view(this, 'ln'), o.view(this, 'log'),
                              o.view(this, 'backspace', {style: 'highlight'})),
                          n.createElement(
                              a.default, null, o.view(this, 'nPr'),
                              o.view(this, 'nCr'), o.view(this, '!'),
                              n.createElement('div', {
                                class: n.const('dcg-partition-placeholder')
                              }),
                              o.view(this, 'e'), o.view(this, 'pi'),
                              o.view(this, 'enter', {style: 'blue'}))))
                }, t
              }(i.DCGViewBasic);
              t.default = c
            });
          r('basic/keypad/scientific-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'basic/dcgview-basic',
              './sci-keypad', './sci-qwerty-keypad', './sci-letters-keypad',
              './sci-capital-qwerty-keypad', './sci-capital-letters-keypad',
              './sci-functions-keypad'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var d = n.Components.SwitchUnion, p = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {
                        role: n.const('group'),
                        'aria-label': function() {
                          return e.t('keypad')
                        }
                      },
                      d(function() {
                        return e.controller.getKeyboardMode()
                      }, {
                        qwerty: function() {
                          return n.createElement(
                              s.default, {controller: e.props.controller})
                        },
                        letters: function() {
                          return n.createElement(
                              a.default, {controller: e.props.controller})
                        },
                        capitalQwerty: function() {
                          return n.createElement(
                              l.default, {controller: e.props.controller})
                        },
                        capitalLetters: function() {
                          return n.createElement(
                              c.default, {controller: e.props.controller})
                        },
                        functions: function() {
                          return n.createElement(
                              u.default, {controller: e.props.controller})
                        },
                        main: function() {
                          return n.createElement(
                              o.default, {controller: e.props.controller})
                        }
                      }))
                }, t
              }(i.DCGViewBasic);
              t.default = p
            });
          r('loadcss!basic/keypad/braille-example-row', function() {});
          r('basic/keypad/braille-example-row',
            [
              'require', 'exports', 'tslib', 'dcgview',
              'dcgview-helpers/static-mathquill-view', 'abraham',
              'loadcss!./braille-example-row'
            ],
            function(e, t, r, n, i, o) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var s = n.Components.For, a = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'tr', null,
                      n.createElement(
                          s, {
                            each: function() {
                              return e.getBrailleAscii(e.props.latex())
                            },
                            key: function(e) {
                              return e.key
                            }
                          },
                          n.createElement(
                              'td', null,
                              function(e) {
                                return n.createElement(
                                    'span', {class: n.const('dcg-key-press')},
                                    function() {
                                      return e.char
                                    })
                              })),
                      n.createElement(
                          'td', {class: n.const('dcg-braille-font')},
                          function() {
                            return e.getBrailleUnicode(e.props.latex())
                          }),
                      n.createElement('td', null, n.createElement(i.default, {
                        latex: function() {
                          return e.props.latex()
                        }
                      })))
                }, t.prototype.getBrailleAscii = function(e) {
                  for (var t = o.UnicodeBraille.toExpandedBrailleAscii(
                               this.getBrailleUnicode(e)),
                           r = [], n = 0;
                       n < t.length; n++)
                    r.push({char: t[n], key: n + ')' + t[n]});
                  return r
                }, t.prototype.getBrailleUnicode = function(e) {
                  var t;
                  return 'nemeth' === this.props.brailleMode() ?
                             t = o.latexToNemeth(e) :
                             'ueb' === this.props.brailleMode() &&
                                 (t = o.latexToUeb(e)),
                             t && t.value ? t.value : ''
                }, t
              }(n.Class);
              t.BrailleExampleRow = a
            });
          r('loadcss!basic/keypad/braille-keypad', function() {});
          r('basic/keypad/braille-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'basic/dcgview-basic',
              './braille-example-row', 'loadcss!./braille-keypad'
            ],
            function(e, t, r, n, i, o) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var s = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {
                        class: function() {
                          return {
                            'dcg-braille-io-keypad-container': !0,
                                'dcg-has-background-color':
                                    e.controller.hasBackgroundColor()
                          }
                        }
                      },
                      n.createElement(
                          'div', {class: n.const('dcg-braille-io-keypad')},
                          n.createElement(
                              'div',
                              {class: n.const('dcg-braille-description')},
                              n.createElement(
                                  'div', {class: n.const('dcg-braille-title')},
                                  function() {
                                    return e.controller.t(
                                        '__mode__ is on!',
                                        {mode: e.brailleType()})
                                  }),
                              n.createElement(
                                  'div',
                                  {class: n.const('dcg-braille-info-text')},
                                  function() {
                                    return e.controller.t(
                                        'Use a Refreshable Braille display, or just type Braille with a keyboard.')
                                  }),
                              n.createElement(
                                  'div', {
                                    class: n.const('dcg-blue-btn'),
                                    role: n.const('button'),
                                    tabindex: n.const(0),
                                    onTap: function() {
                                      return e.controller.dispatch({
                                        type: 'set-braille-mode',
                                        mode: 'none'
                                      })
                                    }
                                  },
                                  function() {
                                    return e.controller.t(
                                        'Turn __mode__ off',
                                        {mode: e.brailleType()})
                                  })),
                          n.createElement(
                              'div', {
                                class: n.const(
                                    'dcg-braille-examples-table-container')
                              },
                              n.createElement(
                                  'table', {
                                    class: n.const('dcg-braille-examples-table')
                                  },
                                  n.createElement(
                                      'tr', null,
                                      n.createElement(
                                          'th', null,
                                          function() {
                                            return e.controller.t('Type this')
                                          }),
                                      n.createElement(
                                          'th', null,
                                          function() {
                                            return e.brailleType()
                                          }),
                                      n.createElement(
                                          'th', null,
                                          function() {
                                            return e.controller.t('Typeset')
                                          })),
                                  n.createElement(o.BrailleExampleRow, {
                                    brailleMode: function() {
                                      return e.controller.getBrailleMode()
                                    },
                                    latex: this.const('2+2')
                                  }),
                                  n.createElement(o.BrailleExampleRow, {
                                    brailleMode: function() {
                                      return e.controller.getBrailleMode()
                                    },
                                    latex: this.const('\\frac{1}{2}')
                                  }),
                                  n.createElement(o.BrailleExampleRow, {
                                    brailleMode: function() {
                                      return e.controller.getBrailleMode()
                                    },
                                    latex: this.const('\\sqrt{4}')
                                  })),
                              n.createElement(
                                  'div',
                                  {class: n.const('dcg-more-examples-link')},
                                  n.createElement(
                                      'a', {
                                        href: function() {
                                          return 'https://www.desmos.com/braille-examples?' +
                                              e.controller.getBrailleMode()
                                        },
                                        target: n.const('_blank')
                                      },
                                      function() {
                                        return e.controller.t(
                                            'View more examples')
                                      })))))
                }, t.prototype.brailleType = function() {
                  return 'nemeth' === this.controller.getBrailleMode() ?
                                                                   'Nemeth' :
                      'ueb' === this.controller.getBrailleMode() ? 'UEB' :
                                                                   ''
                }, t
              }(i.DCGViewBasic);
              t.default = s
            });
          r('loadcss!basic/expression-view', function() {});
          r('basic/expression-view',
            [
              'require', 'exports', 'tslib', 'keys', 'core/lib/label',
              'dcgview', 'lib/i18n', 'jquery',
              'dcgview-helpers/static-mathquill-view',
              'dcgview-helpers/mathquill-view', './dcgview-basic', 'abraham',
              'expressions/braille-input', '../lib/tooltip',
              '../lib/abraham-helpers', 'main/mathquill-operators',
              'loadcss!Abraham', 'loadcss!./expression-view'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var m = o.Components, y = m.If, v = m.Input, b = m.Textarea, x = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e),
                       t.prototype
                           .getAriaLabel =
                           function() {
                         var e = this.getIndex() + 1 + '';
                         return this.t('Expression __index__', {index: e})
                       },
                t.prototype.didUpdate = function() {
                  this.renderAnsValue()
                }, t.prototype.didMountMQ = function(e) {
                  this.$mq = a(e)
                }, t.prototype.getExp = function() {
                  return this.model.getExpressionById(this.props.id())
                }, t.prototype.getAns = function() {
                  return this.model.getExpressionAns(this.props.id())
                }, t.prototype.getAnsId = function() {
                  return this.model.getExpressionAnsId(this.props.id())
                }, t.prototype.getLatex = function() {
                  return this.getExp().latex
                }, t.prototype.getValue = function() {
                  return this.model.getExpressionValue(this.props.id())
                }, t.prototype.getBraille = function() {
                  var e = this.getExp().braille;
                  if ('' !== e) return e;
                  var t = f.latexToBraille(
                      this.getLatex(), this.controller.getBrailleMode());
                  return t.isError ?
                      '' :
                      d.UnicodeBraille.toExpandedBrailleAscii(t.value)
                }, t.prototype.getIndex = function() {
                  return this.model.getExpressionIndex(this.props.id())
                }, t.prototype.getShowEvaluation = function() {
                  return this.model.shouldShowEvaluationForExpression(
                      this.props.id())
                }, t.prototype.isFractionEvaluation = function() {
                  return this.getExp().displayAsFraction
                }, t.prototype.canDisplayEvaluationAsFraction = function() {
                  return this.controller.getDecimalToFraction() &&
                      this.model.canDisplayEvaluationAsFraction(this.props.id())
                }, t.prototype.shouldDisplayEvaluationAsFraction = function() {
                  return this.canDisplayEvaluationAsFraction() &&
                      this.getExp().displayAsFraction
                }, t.prototype.toggleFractionEvaluation = function() {
                  this.dispatch(
                      {type: 'toggle-fraction-evaluation', id: this.props.id()})
                }, t.prototype.getFractionDisplayAriaLabel = function() {
                  return this.shouldDisplayEvaluationAsFraction() ?
                      this.controller.t(
                          'Displaying as fraction. Press Enter to display as Decimal') :
                      this.controller.t(
                          'Displaying as decimal. Press Enter to display as Fraction')
                }, t.prototype.getError = function() {
                  var e = this.model.getExpressionError(this.props.id());
                  return e && this.getLatex().length > 0 ?
                      s.unpack(e, this.controller.getLanguage()) :
                      ''
                }, t.prototype.showError = function() {
                  return !!this.getError()
                }, t.prototype.getFractionMessage = function() {
                  return this.shouldDisplayEvaluationAsFraction() ?
                      this.t('Convert to decimal.') :
                      this.t('Convert to fraction.')
                }, t.prototype.getIsFocused = function() {
                  return !this.controller.isSettingsMenuOpen() &&
                      this.model.isExpressionFocused(this.props.id())
                }, t.prototype.onFocusedChanged = function(e) {
                  this.getExp() &&
                      (e ? this.dispatch(
                               {type: 'focusin', id: this.props.id()}) :
                           this.dispatch(
                               {type: 'focusout', id: this.props.id()}))
                }, t.prototype.onMQReflow = function() {
                  this.renderedAnsData = void 0, this.renderAnsValue()
                }, t.prototype.renderAnsValue = function() {
                  var e = this;
                  if (this.$mq) {
                    var t = this.getAns(), r = !1, n = this.getAnsId();
                    if (n) {
                      var o = this.model.getExpressionById(n);
                      r = o && o.displayAsFraction
                    }
                    this.renderedAnsData && this.renderedAnsData.value == t &&
                            this.renderedAnsData.displayAsFraction === r ||
                        (this.renderedAnsData = {
                          value: t,
                          displayAsFraction: r
                        },
                         this.$mq.find('.dcg-mq-ans').each(function(n, o) {
                           var s, l = a(o);
                           'number' == typeof t ?
                               s = i.truncatedHTMLLabel(t, {
                                 digits: e.getEvaluationDigits(),
                                 bigCutoff: 1e9,
                                 displayAsFraction: r
                               }) :
                               'string' == typeof t && (s = t),
                               s ? l.removeClass('dcg-invalid').html(s) :
                                   l.addClass('dcg-invalid')
                                       .html('<i class="dcg-icon-error"></i>')
                         }))
                  }
                }, t.prototype.getEvaluationLatex = function() {
                  var e = this.getValue();
                  if (void 0 === e && (e = NaN),
                      this.model.isRationalizableConstant(this.props.id()) &&
                          !this.shouldDisplayEvaluationAsFraction())
                    return '';
                  if (!Array.isArray(e)) {
                    var t = i.truncatedLatexLabel(e, {
                      digits: this.getEvaluationDigits(),
                      bigCutoff: 1e9,
                      displayAsFraction:
                          this.shouldDisplayEvaluationAsFraction()
                    });
                    return 'undefined' === t ? '=\\mathrm{undefined}' : '=' + t
                  }
                  return '\\mathrm{' + e.length + '\\ element\\ list}'
                }, t.prototype.getEvaluationBraille = function() {
                  var e = this.getEvaluationLatex(),
                      t = f.latexToBraille(e, this.controller.getBrailleMode());
                  return t.isError ?
                      '' :
                      d.UnicodeBraille.toExpandedBrailleAscii(t.value)
                }, t.prototype.didMountBrailleInput = function(e) {
                  this.brailleInputNode = e
                }, t.prototype.didUnmountBrailleInput = function() {
                  this.brailleInputNode = void 0
                }, t.prototype.handleBrailleFocus = function(e) {
                  var t = e.target;
                  t && setTimeout(function() {
                    t.setSelectionRange(0, 0)
                  })
                }, t.prototype.handleBrailleKeydown = function(e) {
                  e.altKey || e.ctrlKey || e.metaKey || e.shiftKey ||
                      (n.lookup(e) === n.UP ?
                           (this.forceModelFocus(),
                            this.dispatch({type: 'focus-prev-expression'}),
                            e.preventDefault()) :
                           n.lookup(e) === n.DOWN ?
                           (this.forceModelFocus(),
                            this.dispatch({type: 'focus-next-expression'}),
                            e.preventDefault()) :
                           n.lookup(e) === n.ENTER ?
                           (this.forceModelFocus(),
                            this.dispatch({type: 'insert-blank-expression'}),
                            e.preventDefault()) :
                           n.lookup(e) === n.BACKSPACE &&
                               document.activeElement ===
                                   this.brailleInputNode &&
                               '' === this.getBraille() &&
                               (this.dispatch({type: 'backspace-from-braille'}),
                                e.preventDefault()))
                }, t.prototype.forceModelFocus = function() {
                  document.activeElement !== this.brailleInputNode &&
                      this.onFocusedChanged(!0)
                }, t.prototype.focusBrailleInput = function() {
                  this.brailleInputNode &&
                      document.activeElement !== this.brailleInputNode &&
                      this.brailleInputNode.focus()
                }, t.prototype.getPostLabel = function() {
                  if (this.showError()) return this.getError();
                  if (this.getShowEvaluation()) {
                    var e = this.getValue();
                    return void 0 === e && (e = NaN),
                           Array.isArray(e) ?
                               e.length + ' element list' :
                               'equals ' + i.truncatedAriaLabel(e, {
                                 digits: this.getEvaluationDigits(),
                                 bigCutoff: 1e9,
                                 displayAsFraction:
                                     this.shouldDisplayEvaluationAsFraction()
                               })
                  }
                  return ''
                }, t.prototype.onBrailleInput = function(e) {
                  this.controller.isSettingsMenuOpen() &&
                      this.controller.dispatch({type: 'close-settings-menu'});
                  var t = f.brailleToLatex(
                      d.UnicodeBraille.coerceToSixDotCells(e),
                      this.controller.getBrailleMode());
                  this.dispatch({
                    type: 'update-latex-from-braille',
                    latex: t.isError ? '' : t.value,
                    braille: e,
                    id: this.props.id()
                  })
                }, t.prototype.getIndexSubscript = function() {
                  return '_{' + (this.getIndex() + 1) + '}'
                }, t.prototype.getEvaluationDigits = function() {
                  return this.controller.isScientificCalc() ? 10 : 7
                }, t.prototype.onMountContainer = function(e) {
                  this.containerNode = e
                }, t.prototype.onTapContainer = function(e) {
                  e.target !== this.containerNode || this.getShowEvaluation() ||
                      this.showError() || this.forceModelFocus()
                }, t.prototype.template = function() {
                  var e = this;
                  return o.createElement(
                      'div', {
                        class: function() {
                          return {
                            'dcg-basic-expression': !0,
                                'dcg-focused': e.getIsFocused(),
                                'dcg-braille-io': e.controller.renderAsBraille()
                          }
                        },
                        onTap: this.bindFn(this.onTapContainer),
                        onMount: this.bindFn(this.onMountContainer)
                      },
                      o.createElement(
                          y, {
                            predicate: function() {
                              return e.controller.renderAsBraille()
                            }
                          },
                          function() {
                            return o.createElement(
                                'div', {class: o.const('dcg-braille-input')},
                                o.createElement(p.default, {
                                  ariaLabel: function() {
                                    var t = f.latexToBraille(
                                        'eq' + e.getIndexSubscript(),
                                        e.controller.getBrailleMode());
                                    return t.isError ?
                                        '' :
                                        d.UnicodeBraille.toExpandedBrailleAscii(
                                            t.value)
                                  },
                                  didMount: e.bindFn(e.didMountBrailleInput),
                                  didUnmount:
                                      e.bindFn(e.didUnmountBrailleInput),
                                  onFocusedChanged:
                                      e.bindFn(e.onFocusedChanged),
                                  shouldFocus: e.bindFn(e.getIsFocused),
                                  onKeydown: e.bindFn(e.handleBrailleKeydown),
                                  onInput: e.bindFn(e.onBrailleInput),
                                  sixKeyInput: function() {
                                    return e.controller.getSixKeyInput()
                                  },
                                  value: function() {
                                    return e.getBraille()
                                  },
                                  isStatic: e.const(!1)
                                }))
                          }),
                      o.createElement(
                          y, {
                            predicate: function() {
                              return e.controller.renderAsBraille()
                            }
                          },
                          function() {
                            return o.createElement(
                                'div', {
                                  class: o.const(
                                      'dcg-braille-evaluation-container')
                                },
                                o.createElement(
                                    y, {
                                      predicate: function() {
                                        return e.getShowEvaluation()
                                      }
                                    },
                                    function() {
                                      return o.createElement(
                                          'div', {
                                            class: o.const(
                                                'dcg-braille-evaluation')
                                          },
                                          o.createElement(v, {
                                            readonly: e.const('true'),
                                            class: e.const(
                                                'dcg-braille-evaluation-inner'),
                                            value: function() {
                                              return e.getEvaluationBraille()
                                            },
                                            onFocus:
                                                e.bindFn(e.handleBrailleFocus),
                                            onKeydown: e.bindFn(
                                                e.handleBrailleKeydown),
                                            onInput: function() {}
                                          }))
                                    }),
                                o.createElement(
                                    y, {
                                      predicate: function() {
                                        return e.showError()
                                      }
                                    },
                                    function() {
                                      return o.createElement(
                                          'div',
                                          {class: o.const('dcg-braille-error')},
                                          o.createElement(
                                              'div', {
                                                class: o.const(
                                                    'dcg-basic-expression-error')
                                              },
                                              o.createElement('i', {
                                                class: o.const('dcg-icon-error')
                                              })),
                                          o.createElement(b, {
                                            readonly: e.const('true'),
                                            class: e.const(
                                                'dcg-braille-error-inner'),
                                            value: function() {
                                              return e.getError()
                                            },
                                            onFocus:
                                                e.bindFn(e.handleBrailleFocus),
                                            onKeydown: e.bindFn(
                                                e.handleBrailleKeydown),
                                            onInput: function() {}
                                          }))
                                    }))
                          }),
                      o.createElement(
                          y, {
                            predicate: function() {
                              return e.controller.renderAsBraille()
                            }
                          },
                          function() {
                            return o.createElement(
                                'div', {
                                  class: o.const('dcg-exp-mathquill-container'),
                                  didMount: e.bindFn(e.didMountMQ),
                                  onTap: e.bindFn(e.forceModelFocus)
                                },
                                o.createElement(l.default, {
                                  latex: function() {
                                    return e.getLatex()
                                  },
                                  onReflow: e.bindFn(e.onMQReflow)
                                }))
                          }),
                      o.createElement(
                          y, {
                            predicate: function() {
                              return !e.controller.renderAsBraille()
                            }
                          },
                          function() {
                            return o.createElement(
                                'div', {
                                  class: o.const('dcg-exp-mathquill-container'),
                                  didMount: e.bindFn(e.didMountMQ)
                                },
                                o.createElement(c.default, {
                                  latex: function() {
                                    return e.getLatex()
                                  },
                                  onReflow: e.bindFn(e.onMQReflow),
                                  isFocused: e.bindFn(e.getIsFocused),
                                  capExpressionSize: function() {
                                    return e.controller.getCapExpressionSize()
                                  },
                                  config: e.bindFn(e.getMQConfig),
                                  getAriaLabel: function() {
                                    return e.getAriaLabel()
                                  },
                                  getAriaPostLabel: function() {
                                    return e.getPostLabel()
                                  },
                                  hasError: function() {
                                    return !1
                                  },
                                  onUserPressedKey: function(t, r) {
                                    e.controller.isSettingsMenuOpen() &&
                                        e.controller.dispatch(
                                            {type: 'close-settings-menu'}),
                                        e.dispatch({
                                          type: 'keypad/press-key',
                                          key: t,
                                          evt: r
                                        })
                                  },
                                  onUserTypedText: function(t) {
                                    return e.dispatch(
                                        {type: 'keypad/type-text', text: t})
                                  },
                                  onUserChangedLatex: function(t) {
                                    e.dispatch({
                                      type: 'update-latex',
                                      id: e.props.id(),
                                      latex: t
                                    })
                                  },
                                  onFocusedChanged:
                                      e.bindFn(e.onFocusedChanged),
                                  disableSpace: function() {
                                    return e.controller.getRestrictedEditing()
                                  }
                                }))
                          }),
                      o.createElement(
                          'div', {class: o.const('dcg-exp-output-container')},
                          o.createElement(
                              y, {
                                predicate: function() {
                                  return e.showError() &&
                                      !e.controller.renderAsBraille()
                                }
                              },
                              function() {
                                return o.createElement(
                                    h.Tooltip, {
                                      tooltip: e.bindFn(e.getError),
                                      gravity: e.const('w'),
                                      targetClickBehavior: e.const('stick')
                                    },
                                    o.createElement(
                                        'div', {
                                          class: o.const(
                                              'dcg-basic-expression-error')
                                        },
                                        o.createElement('i', {
                                          class: o.const('dcg-icon-error')
                                        })))
                              }),
                          o.createElement(
                              y, {
                                predicate: function() {
                                  return e.getShowEvaluation()
                                }
                              },
                              function() {
                                return o.createElement(
                                    'div', {
                                      class: function() {
                                        return {
                                          'dcg-basic-expression-value': !0,
                                              'dcg-basic-evaluation-gray':
                                                  Array.isArray(e.getValue())
                                        }
                                      }
                                    },
                                    o.createElement(l.default, {
                                      latex: function() {
                                        return e.getEvaluationLatex()
                                      }
                                    }),
                                    o.createElement(
                                        y, {
                                          predicate: e.bindFn(
                                              e.canDisplayEvaluationAsFraction)
                                        },
                                        function() {
                                          return o.createElement(
                                              h.Tooltip, {
                                                tooltip: e.bindFn(
                                                    e.getFractionMessage),
                                                gravity: e.const('sw'),
                                                offset: e.const({left: -5})
                                              },
                                              o.createElement(
                                                  'span', {
                                                    role: o.const('button'),
                                                    tabindex: o.const('0'),
                                                    'aria-label': e.bindFn(
                                                        e.getFractionDisplayAriaLabel),
                                                    class: function() {
                                                      return {
                                                        'dcg-basic-fraction-toggle':
                                                            !0,
                                                            'dcg-selected': e
                                                                .isFractionEvaluation()
                                                      }
                                                    },
                                                    onTap: e.bindFn(
                                                        e.toggleFractionEvaluation)
                                                  },
                                                  o.createElement('i', {
                                                    class: o.const(
                                                        'dcg-icon-fraction')
                                                  })))
                                        }))
                              })))
                }, t.prototype.getMQConfig = function() {
                  var e = this.controller, t = e.getAdditionalFunctions(),
                      r = !0;
                  return e.isFourFunctionCalc() && t &&
                             t.indexOf('fraction') > -1 && (r = !1),
                  {
                    typingAsteriskWritesTimesSymbol:
                        e.getTypingAsteriskWritesTimesSymbol(),
                        typingSlashWritesDivisionSymbol:
                            e.getTypingSlashWritesDivisionSymbol(),
                        disableCopyPaste: e.getRestrictedEditing(),
                        autoCommands: g.getAutoCommands({disallowFrac: r})
                  }
                }, t
              }(u.DCGViewBasic);
              t.default = x
            });
          r('loadcss!basic/basic-list-view', function() {});
          r('basic/basic-list-view',
            [
              'require', 'exports', 'tslib', 'scroll_helpers', 'dcgview',
              './dcgview-basic', './expression-view', 'jquery',
              'lib/conditional_blur', 'loadcss!./basic-list-view'
            ],
            function(e, t, r, n, i, o, s, a, l) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var c = i.Components, u = c.For, d = c.If, p = function(e) {
                function t() {
                  var t = null !== e && e.apply(this, arguments) || this;
                  return t.didShowAnswerHint = !1, t.didHideAnswerHint = !1, t
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return i.createElement(
                      'div', {
                        class: i.const('dcg-basic-list-container'),
                        role: i.const('complementary'),
                        'aria-label': function() {
                          return e.controller.t('Expression List')
                        },
                        didMount: this.bindFn(this.didMountContainer)
                      },
                      i.createElement(
                          'div', {
                            class: i.const('dcg-basic-list-placeholder'),
                            didMount: this.bindFn(this.didMountPlaceholder)
                          },
                          i.createElement(
                              d, {predicate: this.bindFn(this.showAnswerHint)},
                              function() {
                                return i.createElement(
                                    'div', {class: i.const('dcg-answer-hint')},
                                    function() {
                                      return e.controller.t(
                                          'Your answers show up on this side.')
                                    })
                              })),
                      i.createElement(
                          u, {
                            each: function() {
                              return e.model.getExpressionOrder()
                            }
                          },
                          i.createElement(
                              'div', {
                                class: function() {
                                  return {
                                    'dcg-basic-list': !0,
                                        'dcg-projector-mode':
                                            e.controller.isProjectorMode()
                                  }
                                }
                              },
                              function(t) {
                                return i.createElement(s.default, {
                                  controller: e.props.controller,
                                  id: e.const(t)
                                })
                              })))
                }, t.prototype.didMountPlaceholder = function(e) {
                  a(e).on('dcg-tap', l.default)
                }, t.prototype.showAnswerHint = function() {
                  if (this.didHideAnswerHint) return !1;
                  var e = this.model.getExpressionOrder()[0];
                  return !(!this.model.shouldShowEvaluationForExpression(e) &&
                           !this.didShowAnswerHint) &&
                      (this.didShowAnswerHint = !0,
                       !(this.model.getNumberOfExpressions() > 1 ||
                         '' === this.model.getExpressionLatex(e)) ||
                           (this.didHideAnswerHint = !0, !1))
                }, t.prototype.didUpdate = function() {
                  if (this.$container) {
                    var e = this.$container.find('.dcg-focused');
                    e.length > 0 && n.scrollVisible(e, this.$container, 50)
                  }
                }, t.prototype.didMountContainer = function(e) {
                  this.$container = a(e)
                }, t
              }(o.DCGViewBasic);
              t.default = p
            });
          r('loadcss!basic/main', function() {});
          r('basic/main',
            [
              'require',
              'exports',
              'tslib',
              'browser',
              'keys',
              'dcgview',
              './dcgview-basic',
              'jquery',
              './keypad/fourfunction-control-bar',
              './keypad/single-expression-fourfunction-control-bar',
              './keypad/scientific-control-bar',
              './keypad/single-expression-scientific-control-bar',
              './keypad/fourfunction-keypad',
              './keypad/single-expression-fourfunction-keypad',
              './keypad/single-expression-scientific-keypad',
              './keypad/scientific-keypad',
              './keypad/braille-keypad',
              './basic-list-view',
              'lib/aria',
              'touchtracking',
              'loadcss!desmos-icons',
              'loadcss!./main',
              'loadcss!dcg-normalize'
            ],
            function(
                e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g, m, y, v, b) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var x = o.Components, w = x.If, _ = x.IfElse, E = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return o.createElement(
                      w, {
                        predicate: function() {
                          return e.controller.shouldRender()
                        }
                      },
                      function() {
                        return o.createElement(
                            'div', {
                              class: o.const('dcg-calculator-api-container'),
                              style: o.const(
                                  'width: 100%; height: 100%; position: relative;')
                            },
                            o.createElement(
                                'div', {
                                  class: function() {
                                    return {
                                      'dcg-calc-basic-main-wrapper': !0,
                                          'dcg-narrow':
                                              e.controller.containerSize.width <
                                          570,
                                          'dcg-short': e.controller
                                              .containerSize.height <= 540,
                                          'dcg-scientific-calculator':
                                              e.controller.isScientificCalc(),
                                          'dcg-four-function-calculator':
                                              e.controller.isFourFunctionCalc(),
                                          'dcg-container': !0
                                    }
                                  },
                                  onKeydown: e.bindFn(e.handleRootKeydown),
                                  didMount: e.bindFn(e.didMountRoot),
                                  'x-ms-format-detection': o.const('none')
                                },
                                o.createElement(
                                    'div', {
                                      role: o.const('application'),
                                      'aria-label': function() {
                                        return e.controller.isScientificCalc() ?
                                            e.controller.t(
                                                'Desmos Scientific Calculator') :
                                            e.controller.isFourFunctionCalc() ?
                                            e.controller.t(
                                                'Desmos Four-Function Calculator') :
                                            ''
                                      },
                                      class: function() {
                                        return {
                                          'dcg-calc-basic-main': !0,
                                              'dcg-inverted-colors':
                                                  e.controller
                                                      .getInvertedColors(),
                                              'dcg-projector-mode': e.controller
                                                  .isProjectorMode(),
                                              'dcg-ipad': n.IS_IPAD,
                                              'dcg-has-background-color':
                                                  e.controller
                                                      .hasBackgroundColor(),
                                              'dcg-no-hyperlinks':
                                                  !e.controller.getAllowLinks()
                                        }
                                      },
                                      style: function() {
                                        return {
                                          'font-size':
                                                  e.controller.getFontSize() +
                                              'px',
                                              background: e.controller
                                                  .getBackgroundColor(),
                                              color:
                                                  e.controller.getTextColor(),
                                              filter: e.controller
                                                  .getInvertedColors() ?
                                              'invert(100%)' :
                                              'none'
                                        }
                                      }
                                    },
                                    o.createElement(
                                        y.default,
                                        {controller: e.props.controller}),
                                    o.createElement(
                                        w, {
                                          predicate: function() {
                                            return e.controller
                                                       .isScientificCalc() &&
                                                e.model.isSingleExpression()
                                          }
                                        },
                                        function() {
                                          return o.createElement(
                                              'div', null,
                                              o.createElement(d.default, {
                                                controller: e.props.controller
                                              }),
                                              o.createElement(
                                                  'div', {
                                                    class: o.const(
                                                        'dcg-basic-keypad-container')
                                                  },
                                                  _(function() {
                                                    return e.controller
                                                        .renderAsBraille()
                                                  }, {
                                                    true: function() {
                                                      return o.createElement(
                                                          m.default, {
                                                            controller:
                                                                e.props
                                                                    .controller
                                                          })
                                                    },
                                                    false: function() {
                                                      return o.createElement(
                                                          f.default, {
                                                            controller:
                                                                e.props
                                                                    .controller
                                                          })
                                                    }
                                                  })))
                                        }),
                                    o.createElement(
                                        w, {
                                          predicate: function() {
                                            return e.controller
                                                       .isScientificCalc() &&
                                                !e.model.isSingleExpression()
                                          }
                                        },
                                        function() {
                                          return o.createElement(
                                              'div', null,
                                              o.createElement(u.default, {
                                                controller: e.props.controller
                                              }),
                                              o.createElement(
                                                  'div', {
                                                    class: o.const(
                                                        'dcg-basic-keypad-container')
                                                  },
                                                  _(function() {
                                                    return e.controller
                                                        .renderAsBraille()
                                                  }, {
                                                    true: function() {
                                                      return o.createElement(
                                                          m.default, {
                                                            controller:
                                                                e.props
                                                                    .controller
                                                          })
                                                    },
                                                    false: function() {
                                                      return o.createElement(
                                                          g.default, {
                                                            controller:
                                                                e.props
                                                                    .controller
                                                          })
                                                    }
                                                  })))
                                        }),
                                    o.createElement(
                                        w, {
                                          predicate: function() {
                                            return e.controller
                                                       .isFourFunctionCalc() &&
                                                e.model.isSingleExpression()
                                          }
                                        },
                                        function() {
                                          return o.createElement(
                                              'div', null,
                                              o.createElement(c.default, {
                                                controller: e.props.controller
                                              }),
                                              o.createElement(
                                                  'div', {
                                                    class: o.const(
                                                        'dcg-basic-keypad-container')
                                                  },
                                                  _(function() {
                                                    return e.controller
                                                        .renderAsBraille()
                                                  }, {
                                                    true: function() {
                                                      return o.createElement(
                                                          m.default, {
                                                            controller:
                                                                e.props
                                                                    .controller
                                                          })
                                                    },
                                                    false: function() {
                                                      return o.createElement(
                                                          h.default, {
                                                            controller:
                                                                e.props
                                                                    .controller
                                                          })
                                                    }
                                                  })))
                                        }),
                                    o.createElement(
                                        w, {
                                          predicate: function() {
                                            return e.controller
                                                       .isFourFunctionCalc() &&
                                                !e.model.isSingleExpression()
                                          }
                                        },
                                        function() {
                                          return o.createElement(
                                              'div', null,
                                              o.createElement(l.default, {
                                                controller: e.props.controller
                                              }),
                                              o.createElement(
                                                  'div', {
                                                    class: o.const(
                                                        'dcg-basic-keypad-container')
                                                  },
                                                  _(function() {
                                                    return e.controller
                                                        .renderAsBraille()
                                                  }, {
                                                    true: function() {
                                                      return o.createElement(
                                                          m.default, {
                                                            controller:
                                                                e.props
                                                                    .controller
                                                          })
                                                    },
                                                    false: function() {
                                                      return o.createElement(
                                                          p.default, {
                                                            controller:
                                                                e.props
                                                                    .controller
                                                          })
                                                    }
                                                  })))
                                        }))))
                      })
                }, t.prototype.didMountRoot = function(e) {
                  b.monitor(e)
                }, t.prototype.handleRootKeydown = function(e) {
                  if (i.isUndo(e))
                    return this.dispatch(
                               {type: 'undo', source: 'keyboard-shortcut'}),
                           !1;
                  if (i.isRedo(e))
                    return this.dispatch(
                               {type: 'redo', source: 'keyboard-shortcut'}),
                           !1;
                  if (!e.metaKey && !e.shiftKey)
                    if (e.ctrlKey || e.altKey || i.lookup(e) !== i.BACKSPACE) {
                      if (e.ctrlKey === n.IS_APPLE &&
                          e.altKey === !n.IS_APPLE) {
                        var t = i.lookupChar(e);
                        if ('N' === t) {
                          if (!this.controller.getBrailleControls()) return;
                          return this.dispatch({
                            type: 'set-braille-mode',
                            mode: 'nemeth'
                          }),
                                 v.alert(
                                     this.controller.t('Braille mode Nemeth')),
                                 !1
                        }
                        if ('U' === t) {
                          if (!this.controller.getBrailleControls()) return;
                          return this.dispatch(
                                     {type: 'set-braille-mode', mode: 'ueb'}),
                                 v.alert(this.controller.t('Braille mode UEB')),
                                 !1
                        }
                        if ('Q' === t || 'X' === t) {
                          if (!this.controller.getBrailleControls()) return;
                          return this.dispatch(
                                     {type: 'set-braille-mode', mode: 'none'}),
                                 v.alert(this.controller.t('Braille mode off')),
                                 !1
                        }
                        if ('6' === t) {
                          if (!this.controller.getBrailleControls()) return;
                          var r = !this.controller.getSixKeyInput();
                          return this.dispatch(
                                     {type: 'set-six-key-input', mode: r}),
                                 v.alert(
                                     r ? this.controller.t(
                                             'Six Key Braille Input on') :
                                         this.controller.t(
                                             'Six Key Braille Input off')),
                                 !1
                        }
                      }
                    } else if (
                        !document.activeElement ||
                        b.elIsFocusable(a(document.activeElement)))
                      return !1;
                  return !0
                }, t
              }(s.DCGViewBasic);
              t.default = E
            });
          r('api/basic',
            [
              'require', 'exports', 'tslib', 'dcgview', './abstract',
              'main/shared-worker-pool', 'basic/controller', 'basic/main',
              'core/lib/color-helpers', 'underscore_model', 'core/lib/deepCopy',
              'lib/console'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var p = function(e) {
                function t(t) {
                  return e.call(this, t) || this
                }
                return r.__extends(t, e), t.prototype.init = function(e) {
                  var t = this;
                  e = u.default(e),
                  e.backgroundColor && !l.isValidHexColor(e.backgroundColor) &&
                      (d.warn(
                           'Invalid backgroundColor. Background color must be a 3- or 6-character hex color (e.g. #cde or #ffaaaa)'),
                       delete e.backgroundColor),
                  e.textColor && !l.isValidHexColor(e.textColor) &&
                      (d.warn(
                           'Invalid textColor. Text color must be a 3- or 6-character hex color (e.g. #000 or #001111)'),
                       delete e.textColor);
                  var n = r.__assign(
                      {
                        language: 'en',
                        qwertyKeyboard: !0,
                        links: !0,
                        degreeMode: !1,
                        settingsMenu: !0,
                        invertedColors: !1,
                        backgroundColor: '#fff',
                        textColor: '#000',
                        brailleMode: 'none',
                        sixKeyInput: !1,
                        brailleControls: !0,
                        brailleExpressionDownload: !0,
                        projectorMode: !1,
                        capExpressionSize: !1,
                        functionDefinition: !0,
                        autosize: !0,
                        evaluationMode: 'scientific',
                        restrictedEditing: !1,
                        additionalFunctions: ['sqrt'],
                        typingSlashWritesDivisionSymbol: !1,
                        typingAsteriskWritesTimesSymbol: !1,
                        decimalToFraction: !0,
                        replaceCommaWith10Exp: !1,
                        replaceRoundWithReciprocal: !1
                      },
                      e);
                  this.settings = new c.UnderscoreModel;
                  var i = {workerPool: o.default, settingsProxy: this.settings};
                  this.controller = new s.default(n, i),
                  this.controller.onEventEmitted = function(e) {
                    'render' === e && t.updateView(), t.triggerEvent(e, void 0)
                  }, this.setupDomChangeDetector(n.autosize)
                }, t.prototype.onCreateView = function() {
                  return n.mountToNode(
                      a.default, this.rootElt,
                      {controller: n.const(this.controller)})
                }, t.prototype.setState = function(e, t) {
                  t || (t = {}), this.controller.dispatch({
                    type: 'set-state-from-api',
                    state: e,
                    opts: {allowUndo: !!t.allowUndo}
                  })
                }, t.prototype.getState = function() {
                  return u.default(this.controller.model.getPersistedState())
                }, t.prototype.undo = function() {
                  this.controller.dispatch({type: 'undo', source: 'api'})
                }, t.prototype.redo = function() {
                  this.controller.dispatch({type: 'redo', source: 'api'})
                }, t.prototype.clearHistory = function() {
                  this.controller.dispatch({type: 'clear-history'})
                }, t.prototype.setBlank = function(e) {
                  e || (e = {}),
                      this.controller.dispatch(
                          {type: 'set-blank', opts: {allowUndo: !!e.allowUndo}})
                }, t.prototype.updateSettings = function(e) {
                  if (null != e)
                    for (var t in e) switch (t) {
                        case 'fontSize':
                          var r = e[t];
                          if (void 0 === r) continue;
                          this.controller.dispatch(
                              {type: 'update-font-size', size: r});
                          break;
                        case 'invertedColors':
                          var n = e[t];
                          if (void 0 === n) continue;
                          this.controller.dispatch(
                              {type: 'update-inverted-colors', mode: n});
                          break;
                        case 'backgroundColor':
                          var i = e[t];
                          if (void 0 === i || !l.isValidHexColor(i)) {
                            d.warn(
                                'Invalid backgroundColor. Background color must be a 3- or 6-character hex color (e.g. #cde or #ffaaaa)');
                            continue
                          }
                          this.controller.dispatch(
                              {type: 'update-background-color', color: i});
                          break;
                        case 'textColor':
                          var o = e[t];
                          if (void 0 === o || !l.isValidHexColor(o)) {
                            d.warn(
                                'Invalid textColor. Text color must be a 3- or 6-character hex color (e.g. #000 or #001111)');
                            continue
                          }
                          this.controller.dispatch(
                              {type: 'update-text-color', color: o});
                          break;
                        case 'degreeMode':
                          var s = e[t];
                          if (void 0 === s) continue;
                          this.controller.dispatch(
                              {type: 'update-degree-mode', mode: s});
                          break;
                        case 'brailleMode':
                          var a = e[t];
                          this.controller.dispatch(
                              {type: 'set-braille-mode', mode: a});
                          break;
                        case 'sixKeyInput':
                          var c = e[t];
                          if (void 0 === c) continue;
                          this.controller.dispatch(
                              {type: 'set-six-key-input', mode: c});
                          break;
                        case 'brailleControls':
                          var u = e[t];
                          if (void 0 === u) continue;
                          this.controller.dispatch(
                              {type: 'set-braille-controls', value: u});
                          break;
                        case 'brailleExpressionDownload':
                          var p = e[t];
                          if (void 0 === p) continue;
                          this.controller.dispatch({
                            type: 'set-braille-expression-download',
                            mode: p
                          });
                          break;
                        case 'projectorMode':
                          var h = e[t];
                          if (void 0 === h) continue;
                          this.controller.dispatch(
                              {type: 'update-projector-mode', mode: h});
                          break;
                        case 'capExpressionSize':
                          var f = e[t];
                          if (void 0 === f) continue;
                          this.controller.dispatch(
                              {type: 'update-cap-expression-size', mode: f});
                          break;
                        case 'language':
                          var g = e[t];
                          if (void 0 === g) continue;
                          this.controller.dispatch(
                              {type: 'update-language', language: g});
                          break;
                        case 'settingsMenu':
                          e.settingsMenu ? this.controller.dispatch(
                                               {type: 'enable-settings-menu'}) :
                                           this.controller.dispatch(
                                               {type: 'disable-settings-menu'});
                          break;
                        case 'qwertyKeyboard':
                          this.controller.dispatch({
                            type: 'update-options',
                            options: {qwertyKeyboard: !!e.qwertyKeyboard}
                          });
                          var m = this.controller.getKeyboardMode();
                          'qwerty' !== m && 'letters' !== m ||
                              this.controller.dispatch({type: 'ABC'});
                          break;
                        case 'functionDefinition':
                          e.functionDefinition ?
                              this.controller.model.enableFunctionDefinition() :
                              this.controller.model.disableFunctionDefinition();
                          break;
                        case 'links':
                          this.controller.dispatch({
                            type: 'update-options',
                            options: {links: !!e.links}
                          });
                          break;
                        case 'decimalToFraction':
                          var y = e[t];
                          if (void 0 === y) continue;
                          this.controller.dispatch(
                              {type: 'update-decimal-to-fraction', mode: y});
                          break;
                        case 'replaceCommaWith10Exp':
                          var v = e[t];
                          if (void 0 === v) continue;
                          this.controller.dispatch({
                            type: 'set-replace-comma-with-10-exp',
                            replace: v
                          });
                          break;
                        case 'replaceRoundWithReciprocal':
                          var b = e[t];
                          if (void 0 === b) continue;
                          this.controller.dispatch({
                            type: 'set-replace-round-with-reciprocal',
                            replace: b
                          });
                          break;
                        case 'restrictedEditing':
                          this.controller.dispatch({
                            type: 'update-options',
                            options: {restrictedEditing: !!e.restrictedEditing}
                          });
                          break;
                        case 'typingAsteriskWritesTimesSymbol':
                          var x = e[t];
                          if (void 0 === x) continue;
                          this.controller.dispatch({
                            type: 'set-typing-asterisk-writes-times-symbol',
                            mode: x
                          })
                      }
                }, t.prototype.focusFirstExpression = function() {
                  this.controller.dispatch({type: 'focus-first-expression'})
                }, t.prototype.onResizeView = function(e) {
                  this.controller.dispatch(
                      {type: 'ui/container-resized', size: e})
                }, t.prototype.onDestroyView = function() {
                  n.unmountFromNode(this.rootElt)
                }, t.prototype.destroy = function() {
                  this.controller.model.destroy(),
                      e.prototype.destroy.call(this)
                }, t
              }(i.default);
              t.BasicCalculator = p
            });
          r('api/fourfunction',
            [
              'require', 'exports', 'tslib', './basic', 'core/lib/deepCopy',
              'lib/console'
            ],
            function(e, t, r, n, i, o) {
              'use strict';
              function s(e) {
                if (e = i.default(e),
                    e.hasOwnProperty('typingSlashWritesDivisionSymbol') ||
                        (e.typingSlashWritesDivisionSymbol = !0),
                    e.hasOwnProperty('typingAsteriskWritesTimesSymbol') ||
                        (e.typingAsteriskWritesTimesSymbol = !0),
                    e.exponentButtonForSquareRoot &&
                        (o.warn(
                             'As of API version 1.0, the \'exponentButtonForSquareRoot\' option is deprecated.Use \'additionalFunctions: "exponent"\' instead.'),
                         e.additionalFunctions = ['exponent']),
                    e.additionalFunctions) {
                  var t = e.additionalFunctions;
                  'string' == typeof t && (t = [t]),
                      t.length > 2 &&
                      (o.warn(
                           'additionalFunctions can only take up to 2 new functions. Using the first two.'),
                       t = t.slice(0, 2));
                  for (var r = !0, n = 0; n < t.length; n++)
                    -1 ===
                            ['sqrt', 'exponent', 'percent', 'fraction'].indexOf(
                                t[n]) &&
                        (o.warn(
                             'Unrecognized value: \'' + t[n] +
                             '\' for \'additionalFunction\'. Valid values are \'sqrt\', \'percent\', \'exponent\', or \'fraction\'. Using default ("sqrt")'),
                         r = !1);
                  e.additionalFunctions = r ? t : ['sqrt']
                }
                return e.additionalFunctions && e.additionalFunctions.length ||
                           (e.additionalFunctions = ['sqrt']),
                       e.singleExpression ?
                           e.evaluationMode = 'singleExpressionFourFunction' :
                           e.evaluationMode = 'fourFunction',
                           delete e.singleExpression,
                           e.hasOwnProperty('decimalToFraction') ||
                           (e.decimalToFraction = !1),
                           e
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = function(e) {
                function t(r, n) {
                  var i = e.call(this, r) || this;
                  return i instanceof t ? (i.init(s(n || {})), i) : new t(r, n)
                }
                return r.__extends(t, e), t
              }(n.BasicCalculator);
              t.default = a
            });
          r('api/scientific',
            ['require', 'exports', 'tslib', './basic', 'core/lib/deepCopy'],
            function(e, t, r, n, i) {
              'use strict';
              function o(e) {
                return e = i.default(e),
                       e.singleExpression ?
                           e.evaluationMode = 'singleExpressionScientific' :
                           e.evaluationMode = 'scientific',
                       delete e.singleExpression, e
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var s = function(e) {
                function t(r, n) {
                  var i = e.call(this, r) || this;
                  return i instanceof t ? (i.init(o(n || {})), i) : new t(r, n)
                }
                return r.__extends(t, e), t
              }(n.BasicCalculator);
              t.default = s
            });
          r('pillow-keypad/controller',
            ['require', 'exports', 'flux', 'keypad/mq-commands', 'lib/i18n'],
            function(e, t, r, n, i) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var o = function() {
                function e() {
                  var e = this;
                  this.keyboardMode = 'main',
                  this.dispatcher = new r.Dispatcher,
                  this.t =
                      function(e, t) {
                    return i.t(e, t)
                  },
                  this.dispatch =
                      function(t) {
                    e.dispatcher.dispatch(t);
                    for (var r; r = e._queuedCallbacks.shift();) r()
                  },
                  this._queuedCallbacks = [],
                  this.dispatcher = new r.Dispatcher, this.hookUpDispatcher()
                }
                return e.prototype.getBackgroundColor = function() {
                  return 'does-not-matter'
                }, e.prototype.runAfterDispatch = function(e) {
                  this._queuedCallbacks.push(e)
                }, e.prototype.enqueueEvent = function(e) {
                  var t = this;
                  this.runAfterDispatch(function() {
                    t.onEventEmitted && t.onEventEmitted(e)
                  })
                }, e.prototype.getKeyboardMode = function() {
                  return this.keyboardMode
                }, e.prototype.updateKeyboardMode = function(e) {
                  this.keyboardMode = e
                }, e.prototype.typeIntoFocusedMathquill = function(e) {
                  e = e.replace(/\r|\n/g, '');
                  var t = this.activeMQ;
                  t && t.typedText(e)
                }, e.prototype.pressKeyInFocusedMathquill = function(e, t) {
                  var r = this.activeMQ;
                  if (r)
                    return 'Enter' === e ?
                        (t && (t.preventDefault(), t.stopPropagation()),
                         void this.enqueueEvent('enter')) :
                        void r.keystroke(e, t)
                }, e.prototype.executeCommandInFocusedMathquill = function(e) {
                  var t = this.activeMQ;
                  t && n.execute(t, e)
                }, e.prototype.hookUpDispatcher = function() {
                  var e = this;
                  this.dispatcher.register(function(t) {
                    switch (e.enqueueEvent('render'), t.type) {
                      case 'hide-keypad':
                        e.enqueueEvent('hide-keypad');
                        break;
                      case 'set-active-mq':
                        e.activeMQ = t.mq;
                        break;
                      case 'keypad/shift':
                        e.updateKeyboardMode(
                            'capitalQwerty' === e.keyboardMode ?
                                'qwerty' :
                                'capitalQwerty');
                        break;
                      case 'main':
                        e.updateKeyboardMode('main');
                        break;
                      case 'ABC':
                        e.updateKeyboardMode('qwerty');
                        break;
                      case 'functions':
                        e.updateKeyboardMode('functions');
                        break;
                      case 'keypad/type-text':
                        e.typeIntoFocusedMathquill(t.text);
                        break;
                      case 'keypad/press-key':
                        e.pressKeyInFocusedMathquill(t.key, t.evt);
                        break;
                      case 'keypad/custom-command':
                        e.executeCommandInFocusedMathquill(t.command);
                        break;
                      case 'keypad/123':
                      case 'keypad/abc':
                        break;
                      default:
                        return t
                    }
                  })
                }, e
              }();
              t.default = o
            });
          r('pillow-keypad/dcgview-pillow-keypad',
            ['require', 'exports', 'tslib', 'dcgview'], function(e, t, r, n) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var i = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  this.controller = this.props.controller(),
                  this.dispatch = this.controller.dispatch,
                  this.t = this.controller.t
                }, t
              }(n.Class);
              t.DCGViewPillowKeypad = i
            });
          r('pillow-keypad/main-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'keypad/keys',
              'keypad/keypad', 'keypad/row', './dcgview-pillow-keypad'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  return n.createElement(
                      o.default, {controller: this.props.controller},
                      n.createElement(
                          s.default, null,
                          i.view(this, 'left', {style: 'highlight'}),
                          i.view(this, 'right', {style: 'highlight'}),
                          i.view(this, 'x'), i.view(this, 'y'),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          i.view(this, '7', {style: 'highlight'}),
                          i.view(this, '8', {style: 'highlight'}),
                          i.view(this, '9', {style: 'highlight'}),
                          i.view(this, '/'),
                          i.view(this, 'backspace', {style: 'highlight'})),
                      n.createElement(
                          s.default, null, i.view(this, '('), i.view(this, ')'),
                          i.view(this, '<'), i.view(this, '>'),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          i.view(this, '4', {style: 'highlight'}),
                          i.view(this, '5', {style: 'highlight'}),
                          i.view(this, '6', {style: 'highlight'}),
                          i.view(this, '*'), i.view(this, 'pi')),
                      n.createElement(
                          s.default, null, i.view(this, 'sqrt'),
                          i.view(this, ','), i.view(this, '<='),
                          i.view(this, '>='), n.createElement('div', {
                            class: n.const('dcg-partition-placeholder')
                          }),
                          i.view(this, '1', {style: 'highlight'}),
                          i.view(this, '2', {style: 'highlight'}),
                          i.view(this, '3', {style: 'highlight'}),
                          i.view(this, '-'),
                          i.view(this, 'enter', {style: 'tall-blue'})),
                      n.createElement(
                          s.default, null, i.view(this, 'a^2'),
                          i.view(this, 'a^b'), i.view(this, '|a|'),
                          i.view(this, 'a/b'), n.createElement('div', {
                            class: n.const('dcg-partition-placeholder')
                          }),
                          i.view(this, '0', {style: 'highlight'}),
                          i.view(this, '.', {style: 'highlight'}),
                          i.view(this, '='), i.view(this, '+'), i.spacer(1)))
                }, t
              }(a.DCGViewPillowKeypad);
              t.default = l
            });
          r('pillow-keypad/qwerty-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'keypad/keys',
              'keypad/keypad', 'keypad/row', './dcgview-pillow-keypad'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  return n.createElement(
                      o.default, {controller: this.props.controller},
                      n.createElement(
                          s.default, null, i.view(this, 'q'), i.view(this, 'w'),
                          i.view(this, 'e'), i.view(this, 'r'),
                          i.view(this, 't'), i.view(this, 'y'),
                          i.view(this, 'u'), i.view(this, 'i'),
                          i.view(this, 'o'), i.view(this, 'p')),
                      n.createElement(
                          s.default, null, n.createElement('div', {
                            class: n.const('dcg-half-width-placeholder')
                          }),
                          i.view(this, 'a'), i.view(this, 's'),
                          i.view(this, 'd'), i.view(this, 'f'),
                          i.view(this, 'g'), i.view(this, 'h'),
                          i.view(this, 'j'), i.view(this, 'k'),
                          i.view(this, 'l'), n.createElement('div', {
                            class: n.const('dcg-half-width-placeholder')
                          })),
                      n.createElement(
                          s.default, null,
                          i.view(this, 'shift', {style: 'highlight'}),
                          i.view(this, 'z'), i.view(this, 'x'),
                          i.view(this, 'c'), i.view(this, 'v'),
                          i.view(this, 'b'), i.view(this, 'n'),
                          i.view(this, 'm'), i.view(this, ','),
                          i.view(this, 'backspace', {style: 'highlight'})),
                      n.createElement(
                          s.default, null, i.view(this, '='), i.view(this, '{'),
                          i.view(this, '}'), i.view(this, '['),
                          i.view(this, ']'), i.view(this, '!'),
                          i.view(this, '\''), i.view(this, 'pi'),
                          i.view(this, 'enter', {style: 'blue'})))
                }, t
              }(a.DCGViewPillowKeypad);
              t.default = l
            });
          r('pillow-keypad/capital-qwerty-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview',
              './dcgview-pillow-keypad', 'keypad/keys', 'keypad/keypad',
              'keypad/row'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  return n.createElement(
                      s.default, {controller: this.props.controller},
                      n.createElement(
                          a.default, null, o.view(this, 'Q'), o.view(this, 'W'),
                          o.view(this, 'E'), o.view(this, 'R'),
                          o.view(this, 'T'), o.view(this, 'Y'),
                          o.view(this, 'U'), o.view(this, 'I'),
                          o.view(this, 'O'), o.view(this, 'P')),
                      n.createElement(
                          a.default, null, n.createElement('div', {
                            class: n.const('dcg-half-width-placeholder')
                          }),
                          o.view(this, 'A'), o.view(this, 'S'),
                          o.view(this, 'D'), o.view(this, 'F'),
                          o.view(this, 'G'), o.view(this, 'H'),
                          o.view(this, 'J'), o.view(this, 'K'),
                          o.view(this, 'L'), n.createElement('div', {
                            class: n.const('dcg-half-width-placeholder')
                          })),
                      n.createElement(
                          a.default, null,
                          o.view(this, 'shift', {style: 'highlight'}),
                          o.view(this, 'Z'), o.view(this, 'X'),
                          o.view(this, 'C'), o.view(this, 'V'),
                          o.view(this, 'B'), o.view(this, 'N'),
                          o.view(this, 'M'), o.view(this, ','),
                          o.view(this, 'backspace', {style: 'highlight'})),
                      n.createElement(
                          a.default, null, o.view(this, '='), o.view(this, '('),
                          o.view(this, ')'), o.view(this, '['),
                          o.view(this, ']'), o.view(this, '!'),
                          o.view(this, '\''), o.view(this, 'pi'),
                          o.view(this, 'enter', {style: 'blue'})))
                }, t
              }(i.DCGViewPillowKeypad);
              t.default = l
            });
          r('pillow-keypad/functions-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', 'keypad/keys',
              'keypad/keypad', 'keypad/row', './dcgview-pillow-keypad'
            ],
            function(e, t, r, n, i, o, s, a) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var l = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  return n.createElement(
                      o.default, {controller: this.props.controller},
                      n.createElement(
                          s.default, null, i.view(this, 'sin'),
                          i.view(this, 'cos'), i.view(this, 'tan'),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          i.view(this, 'ln'), i.view(this, 'log'),
                          i.view(this, 'backspace', {style: 'highlight'})),
                      n.createElement(
                          s.default, null, i.view(this, 'arcsin'),
                          i.view(this, 'arccos'), i.view(this, 'arctan'),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          i.view(this, 'e^x'), i.view(this, 'abs'),
                          i.view(this, 'round')),
                      n.createElement(
                          s.default, null, i.view(this, 'mean'),
                          i.view(this, 'stdev'), i.view(this, 'stdevp'),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          i.view(this, 'a^b'), i.view(this, 'sqrt'),
                          i.view(this, 'nthroot')),
                      n.createElement(
                          s.default, null, i.view(this, 'nPr'),
                          i.view(this, 'nCr'), i.view(this, '!'),
                          n.createElement(
                              'div',
                              {class: n.const('dcg-partition-placeholder')}),
                          i.view(this, 'e'), i.view(this, '%'),
                          i.view(this, 'enter', {style: 'blue'})))
                }, t
              }(a.DCGViewPillowKeypad);
              t.default = l
            });
          r('pillow-keypad/control-bar',
            [
              'require', 'exports', 'tslib', 'dcgview', 'keypad/control-bar',
              'keypad/control-btn', './dcgview-pillow-keypad'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this.props.controller();
                  return n.createElement(
                      i.default, {controller: this.props.controller},
                      n.createElement(
                          o.default, {
                            command: this.const('main'),
                            selected: function() {
                              return 'main' === e.getKeyboardMode()
                            },
                            ignoreInTabOrder: this.const(!0),
                            selectable: this.const(!0),
                            onTap: function() {
                              return e.dispatch({type: 'main'})
                            }
                          },
                          function() {
                            return e.t('main')
                          }),
                      n.createElement(
                          o.default, {
                            command: this.const('ABC'),
                            selected: function() {
                              return -1 !== [
                                'qwerty', 'capitalQwerty'
                              ].indexOf(e.getKeyboardMode())
                            },
                            ignoreInTabOrder: this.const(!0),
                            selectable: this.const(!0),
                            ariaLabel: function() {
                              return e.t('A B C')
                            },
                            onTap: function() {
                              return e.dispatch({type: 'ABC'})
                            }
                          },
                          function() {
                            return e.t('abc')
                          }),
                      n.createElement(
                          o.default, {
                            command: this.const('functions'),
                            selected: function() {
                              return -1 !== [
                                'functions', 'restrictedFunctions'
                              ].indexOf(e.getKeyboardMode())
                            },
                            ariaLabel: function() {
                              return e.t('Functions')
                            },
                            ignoreInTabOrder: this.const(!0),
                            selectable: this.const(!0),
                            onTap: function() {
                              return e.dispatch({type: 'functions'})
                            }
                          },
                          function() {
                            return e.t('func')
                          }),
                      n.createElement(
                          'div', {
                            class: n.const('dcg-hide-keypad-button'),
                            'dcg-command': n.const('hide-keypad'),
                            onTap: function() {
                              return e.dispatch({type: 'hide-keypad'})
                            }
                          },
                          n.createElement(
                              'i', {class: n.const('dcg-icon-hide')})))
                }, t
              }(s.DCGViewPillowKeypad);
              t.default = a
            });
          r('loadcss!pillow-keypad/main', function() {});
          r('pillow-keypad/main',
            [
              'require', 'exports', 'tslib', 'dcgview',
              './dcgview-pillow-keypad', './main-keypad', './qwerty-keypad',
              './capital-qwerty-keypad', './functions-keypad', './control-bar',
              'touchtracking', 'loadcss!./main'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var d = n.Components.Switch, p = function(e) {
                function t() {
                  return null !== e && e.apply(this, arguments) || this
                }
                return r.__extends(t, e), t.prototype.template = function() {
                  var e = this;
                  return n.createElement(
                      'div', {
                        class: n.const('dcg-calculator-api-container'),
                        style: n.const(
                            'width: 100%; height: 100%; position: relative;')
                      },
                      n.createElement(
                          'div', {
                            class: n.const(
                                'dcg-do-not-blur dcg-container dcg-api-shared-keypad-root'),
                            didMount: this.bindFn(this.didMountRoot)
                          },
                          n.createElement(
                              c.default, {controller: this.props.controller}),
                          n.createElement(
                              'div', {
                                role: n.const('group'),
                                'aria-label': function() {
                                  return e.t('keypad')
                                }
                              },
                              n.createElement(
                                  d, {
                                    key: function() {
                                      return e.controller.getKeyboardMode()
                                    }
                                  },
                                  function(t) {
                                    switch (t) {
                                      case 'qwerty':
                                        return n.createElement(
                                            s.default,
                                            {controller: e.props.controller});
                                      case 'capitalQwerty':
                                        return n.createElement(
                                            a.default,
                                            {controller: e.props.controller});
                                      case 'functions':
                                        return n.createElement(
                                            l.default,
                                            {controller: e.props.controller});
                                      default:
                                        return n.createElement(
                                            o.default,
                                            {controller: e.props.controller})
                                    }
                                  }))))
                }, t.prototype.didMountRoot = function(e) {
                  u.monitor(e)
                }, t
              }(i.DCGViewPillowKeypad);
              t.default = p
            });
          r('api/pillow-keypad',
            [
              'require', 'exports', 'tslib', 'dcgview', './abstract',
              'pillow-keypad/controller', 'pillow-keypad/main'
            ],
            function(e, t, r, n, i, o, s) {
              'use strict';
              Object.defineProperty(t, '__esModule', {value: !0});
              var a = function(e) {
                function t(r) {
                  var n = e.call(this, r) || this;
                  return n instanceof t ? (n.init(), n) : new t(r)
                }
                return r.__extends(t, e), t.prototype.init = function() {
                  var e = this;
                  this.controller = new o.default,
                  this.controller.onEventEmitted = function(t) {
                    'render' === t && e.updateView(), e.triggerEvent(t, void 0)
                  }, this.setupDomChangeDetector(!0)
                }, t.prototype.setActiveMathquill = function(e) {
                  this.controller.dispatch({type: 'set-active-mq', mq: e})
                }, t.prototype.onCreateView = function() {
                  return n.mountToNode(
                      s.default, this.rootElt,
                      {controller: n.const(this.controller)})
                }, t.prototype.onResizeView = function(e) {
                }, t.prototype.onDestroyView = function() {
                  n.unmountFromNode(this.rootElt)
                }, t.prototype.destroy = function() {
                  e.prototype.destroy.call(this)
                }, t
              }(i.default);
              t.default = a
            });
          r('core/cl-calculator',
            [
              'require', 'exports', 'core/graphing-calc/migrate-state',
              'core/graphing-calc/json/expression',
              'core/graphing-calc/json/table'
            ],
            function(e, t, r, n, i) {
              'use strict';
              function o(e) {
                function t(e) {
                  switch (e.type) {
                    case void 0:
                    case 'expression':
                      var t = n.computeParsableState(n.inflateDefaults(e));
                      s[t.id] = t;
                      break;
                    case 'table':
                      var t = i.computeParsableState(i.inflateDefaults(e));
                      s[t.id] = t;
                      break;
                    case 'folder':
                    case 'text':
                    case 'image':
                      break;
                    default:
                      return e
                  }
                }
                for (var o = r.migrateToLatest(e), s = {},
                         a = o.graph.degreeMode, l = o.randomSeed, c = 0,
                         u = o.expressions.list;
                     c < u.length; c++) {
                  t(u[c])
                }
                return {
                  setExpression: function(e) {
                    t(e)
                  }, getChangeSet: function() {
                    return {
                      statements: s, isCompleteState: !0, degreeMode: a,
                          globalRandomSeed: l
                    }
                  }
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.CLCalculator = o
            });
          r('core/math/tree-queries/count-numbers', ['require', 'exports'],
            function(e, t) {
              'use strict';
              function r(e, t) {
                switch (e.type) {
                  case 'Mul':
                  case 'Div':
                  case 'Prime':
                  case 'Call':
                  case 'ImplicitCall':
                  case 'Dot':
                  case 'Pipes':
                  case 'Sqrt':
                  case 'Nthroot':
                  case 'Frac':
                  case 'Derivative':
                  case 'Integral':
                  case 'EmptyIntegral':
                  case 'Sum':
                  case 'Product':
                  case 'Piecewise':
                  case 'Paren':
                  case 'Juxt':
                  case 'Superscript':
                  case 'Bang':
                  case 'Index':
                  case 'Equals':
                  case 'Inequality':
                  case 'Tilde':
                  case 'Pos':
                  case 'Neg':
                  case 'Add':
                  case 'Sub':
                  case 'List':
                  case 'Seq':
                  case 'Colon':
                  case 'Ellipsis':
                  case 'PercentOf':
                    for (var n = 0, i = 0, o = e.args; i < o.length; i++) {
                      n += r(o[i], t)
                    }
                    return n;
                  case 'Decimal':
                    return void 0 === t ? 1 : parseFloat(e.val) === t ? 1 : 0;
                  case 'MixedNumber':
                    if (void 0 === t) return 3;
                    var n = 0;
                    return parseFloat(e.whole) === t && (n += 1),
                           parseFloat(e.num) === t && (n += 1),
                           parseFloat(e.den) === t && (n += 1), n;
                  case 'Letter':
                  case 'EmptyPiecewise':
                  case 'Cmd':
                    return 0;
                  case 'Subscript':
                    return r(e.args[0], t);
                  case 'InequalityChain':
                    var n = 0;
                    n += r(e.first, t);
                    for (var s = 0, a = e.chain; s < a.length; s++) {
                      n += r(a[s].args[0], t)
                    }
                    return n;
                  default:
                    throw 'Unexpected surface node ' + e.type + '.'
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.countNumbers = r
            });
          r('core/mathtools',
            [
              'require', 'exports', 'parser', 'core/math/context',
              'core/math/builtinframe', 'core/math/types', 'parsenodes',
              'core/cl-calculator', 'core/math/parser/latex-parser',
              'core/math/parser/expression-parser',
              'core/math/tree-queries/count-numbers', 'core/lib/color-helpers',
              'core/math/policyGraphing', 'core/math/policyScientific',
              'core/math/policyFourFunction', 'core/lib/label'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g) {
              'use strict';
              function m(e, t) {
                return void 0 !== e && null !== e || (e = ''), r.parse(e, t)
              }
              function y(e) {
                if (void 0 !== e && null !== e) return c.parse(l.parse(e))
              }
              Object.defineProperty(t, '__esModule', {value: !0}),
                  t.CLCalculator = a.CLCalculator, t.colorHelpers = d,
                  t.Label = g, t.parser = {parse: m},
                  t.expressionParser = {parse: y},
                  t.treeQueries = {countNumbers: u.countNumbers}, t.context = n,
                  t.builtInFrame = i, t.types = o, t.parseNodes = s,
                  t.policies = {
                    graphing: p.PolicyGraphing,
                    scientific: h.PolicyScientific,
                    fourFunction: f.PolicyFourFunction
                  }
            });
          r('api/calculator',
            [
              'require', 'exports', 'mathquill', 'tslib', 'graphing/clipping',
              'expressions/colors', 'graphing-calc/api/sanitize-expression',
              'core/graphing-calc/json/graph-settings', 'main/font_sizes',
              'expressions/image_file_to_data_url', './graphing', './headless',
              './fourfunction', './scientific', './pillow-keypad',
              'core/mathtools'
            ],
            function(e, t, r, n, i, o, s, a, l, c, u, d, p, h, f, g) {
              'use strict';
              function m(e) {
                var t = v.enabledFeatures;
                return !t || t[e]
              }
              function y(e) {
                t.DesmosAPI[e] = function() {
                  throw new Error(
                      'The Desmos ' + e + ' is not enabled for this API key.')
                }
              }
              Object.defineProperty(t, '__esModule', {value: !0});
              var v;
              'undefined' != typeof Desmos ?
                  v = Desmos :
                  (v = {}, Desmos = v),
                  t.GraphingCalculator = u.default,
                  t.HeadlessGraphingCalculator = d.default,
                  t.FourFunctionCalculator = p.default,
                  t.ScientificCalculator = h.default,
                  t.PillowKeypad = f.default, t.DesmosAPI = {
                    Colors: {
                      RED: o.RED,
                      BLUE: o.BLUE,
                      GREEN: o.GREEN,
                      ORANGE: o.ORANGE,
                      PURPLE: o.PURPLE,
                      BLACK: o.BLACK
                    },
                    imageFileToDataURL: c.imageFileToDataURL,
                    supportedLanguages: v.locales ? Object.keys(v.locales) : [],
                    Styles: n.__assign(
                        n.__assign({}, s.SanitizedLineStyle),
                        s.SanitizedPointStyle),
                    ColumnModes: s.SanitizedColumnMode,
                    DragModes: s.SanitizedDragMode,
                    AxisArrowModes: a.AxisArrowModes,
                    FontSizes: l,
                    LabelSizes: s.SanitizedLabelSize,
                    LabelOrientations: s.SanitizedLabelOrientation,
                    GraphingCalculator: u.default,
                    Calculator: u.default,
                    FourFunctionCalculator: p.default,
                    ScientificCalculator: h.default,
                    Private: {
                      Mathtools: g,
                      Graphtools: {
                        getClippingGraphType: i.getClippingGraphType,
                        mapSegmentToCanvas: i.mapSegmentToCanvas
                      }
                    },
                    MathQuill: r,
                    PillowKeypad: f.default,
                    HeadlessGraphingCalculator: d.default
                  },
                  m('GraphingCalculator') ||
                  (y('GraphingCalculator'), y('Calculator')),
                  m('FourFunctionCalculator') || y('FourFunctionCalculator'),
                  m('ScientificCalculator') || y('ScientificCalculator');
              for (var b in t.DesmosAPI)
                t.DesmosAPI.hasOwnProperty(b) && (v[b] = t.DesmosAPI[b]);
              t.Calculator = u.default
            });
          r('main/noconflict', ['require', 'jquery', 'underscore'],
            function(e) {
              'use strict';
              var t = e('jquery'), r = e('underscore');
              return 'undefined' == typeof Desmos && (Desmos = {}), function() {
                Desmos.$ = t, Desmos._ = r, Desmos.$.noConflict(!0),
                Desmos._.noConflict()
              }
            });
          'undefined' == typeof Desmos && (Desmos = {});
          Desmos.require = t, Desmos.requirejs = e;
          if (!t.isBrowser) {
            'use strict';
            var n = t('worker_src'), i = {define: r, require: t, requirejs: e};
            new Function('ALMOND_OVERRIDES', n)(i)
          }
          r('toplevel/api', ['require', 'api/calculator', 'main/noconflict'],
            function(e) {
              'use strict';
              e('api/calculator'), e('main/noconflict')()
            })
        }

        Desmos.require('toplevel/api');
      })
      .catch((e) => {
        console.warn(e);
      })
      .finally(()=>{
        isReady = true;
      })

}

main();